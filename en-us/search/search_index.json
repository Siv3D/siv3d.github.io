{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Siv3D: A C++ Framework for Creative Coding","text":"<p>Siv3D is an open-source framework that allows for fun and easy programming of games and applications using modern C++ code, incorporating sound, images, and AI. A wealth of tutorials are available, and you can easily ask questions or seek advice in the online user community. The operating environment is Windows / macOS / Linux / Web.</p>"},{"location":"#download-siv3d--v0612","title":"Download Siv3D | v0.6.12","text":"<p>Windows macOS (Intel / Rosetta) Ubuntu </p> <p>Apple Silicon (M1 / M2) will be natively supported from Siv3D v0.8.0, which is currently under development.</p>"},{"location":"#download-siv3d-for-web-unofficial","title":"Download Siv3D for Web (Unofficial)","text":"<p>for Web (Windows + Visual Studio) for Web (Visual Studio Code) </p>"},{"location":"#bandai-namco-studios-cup-siv3d-game-jam","title":"Bandai Namco Studios Cup Siv3D Game Jam","text":""},{"location":"#exceptional-features-for-efficient-game-and-app-development","title":"Exceptional Features for Efficient Game and App Development","text":"<p>Convenient classes and functions are provided for efficient development of 2D / 3D games, media art, visualizers, simulators, etc.</p> <ul> <li>2D / 3D Graphics (shapes, images, text, icons, videos, 3D models, etc.)</li> <li>Audio (BGM, sound effects, text-to-speech, audio filters, etc.)</li> <li>Input Devices (mouse, keyboard, webcam, microphone, gamepad, etc.)</li> <li>Window, file system, network</li> <li>Image processing, audio processing, physics calculations, pathfinding, geometry, etc.</li> <li>AI (Access to OpenAI API)</li> </ul> <p>Learn more</p>"},{"location":"#the-shortest-path-to-your-works-completion","title":"The Shortest Path to Your Work's Completion","text":"<p>With Siv3D, you can use C++ syntax to get the world moving with just a few lines of code. Let's realize a lot of dreams and ideas with C++.</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 }); // Set the background color\nconst Texture food{ U\"\ud83c\udf7f\"_emoji }; // Create a texture from an emoji\nconst Texture chick{ U\"\ud83d\udc25\"_emoji };\t// Create a texture from an emoji\nwhile (System::Update()) // Main loop\n{\nCircle{ Scene::Center(), 100 }.draw(); // Draw a circle in the center of the scene\nfood.drawAt(Scene::Center()); // Draw the texture at the center of the screen\nchick.drawAt(Cursor::Pos()); // Draw the texture at the mouse cursor position\n}\n}\n</code></pre> See the result <p></p>"},{"location":"#7-reasons-to-use-siv3d","title":"7 Reasons to Use Siv3D","text":"1. Extremely Short Code <p>Siv3D is equipped with a wealth of convenient functions and classes for implementing graphics and I/O, allowing you to complete a simple application with just one .cpp file. Share your source code on code sharing sites like GitHub  or GitHub Gist , and exchange technologies and learn together with Siv3D users around the world.</p> 2. Learn the Latest C++ <p>Siv3D's APIs and samples are written in the latest C++ standard, \"C++20\". Just by using Siv3D, you will naturally pick up a modern style of writing C++. The author of Siv3D has given a lecture on the use of the latest C++  at CEDEC, Japan's largest game development conference, and has also created a C++ information portal . Let's proceed with both game development and C++ learning at the same time.</p> 3. Small Learning, Great Power <p>Behind the scenes, Siv3D is a large-scale engine composed of 2,200 source code files and 90 third-party software. Users can freely handle its powerful features just by learning the user-friendly and consistent API of Siv3D. Keep your learning costs to a minimum and focus on game development.</p> 4. Open Source <p>Siv3D is developed as an open source  under the MIT license, so you can always check the internal code and modify it. There are no conditions, including third-party libraries, that hinder commercial use. You can keep 100% of the profits from the games or applications you develop.</p> 5. Lightweight and Quick Start <p>The OpenSiv3D SDK installer to start Siv3D programming is just 120 MB (for Windows). Installation is completed in a few clicks, and when you start Visual Studio, you will find an item for a Siv3D project in the menu, and you can start programming immediately.</p> 6. Friendly Community <p>If you have any problems with Siv3D, the Siv3D online community such as Discord can be of help. For students interested in open source software development, we offer a support program every year that uses Siv3D as a training ground. Let's create better works with your peers.</p> 7. Running in a Web Browser <p>By using the unofficial Web version (OpenSiv3D for Web ), you can port C++ applications made with Siv3D to run as web applications in a browser. Target smartphones and tablets to deliver your work to more people than ever before.</p>"},{"location":"#corporate-sponsor","title":"Corporate Sponsor","text":""},{"location":"#individual-sponsors","title":"Individual Sponsors","text":""},{"location":"#gold-sponsor","title":"Gold Sponsor","text":"<ul> <li>TOMOAKI12345</li> <li>CubeSoft, Inc.</li> </ul>"},{"location":"#silver-sponsor","title":"Silver Sponsor","text":"<ul> <li>sknjpn</li> </ul>"},{"location":"#bronze-sponsor","title":"Bronze Sponsor","text":"<p>\u30a2\u30b2\u30cf\u30de, Fuyutsubaki, \ud83d\ude0a, \ud83d\udc1d, \u91ce\u83dc\u30b8\u30e5\u30fc\u30b9, jacking75, Chris Ohk, qppon, ysaito, \u304a\u304a\u3084\u307e, \ud83c\udf75, lamuda, \ud83c\udf3b, fal_rnd, As Project, \ud83c\udf51, IZUNA</p> <p>Become a Siv3D Sponsor  Sponsorship Opportunities </p>"},{"location":"acknowledgments/","title":"Acknowledgments","text":"<p>Siv3D \u306e\u958b\u767a\u8005\u306f\u3001\u60c5\u5831\u51e6\u7406\u63a8\u9032\u6a5f\u69cb (IPA) \u306b\u3088\u308b \u672a\u8e0fIT\u4eba\u6750\u767a\u6398\u30fb\u80b2\u6210\u4e8b\u696d \u53ca\u3073 \u672a\u8e0f\u30a2\u30c9\u30d0\u30f3\u30b9\u30c8\u4e8b\u696d \u306e\u652f\u63f4\u3092\u53d7\u3051\u307e\u3057\u305f\u3002Siv3D \u3092\u6d3b\u7528\u3057\u305f\u30d3\u30b8\u30e5\u30a2\u30eb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306e\u958b\u767a\u306f\u3001\u79d1\u5b66\u6280\u8853\u632f\u8208\u6a5f\u69cb (JST) \u6226\u7565\u7684\u5275\u9020\u7814\u7a76\u63a8\u9032\u4e8b\u696d (ACT-I) \u53ca\u3073 \u516c\u76ca\u8ca1\u56e3\u6cd5\u4eba I-O DATA \u8ca1\u56e3 \u306e\u652f\u63f4\u3092\u53d7\u3051\u307e\u3057\u305f\u3002Siv3D \u306f \u65e9\u7a32\u7530\u5927\u5b66\u5b9f\u4f53\u60c5\u5831\u5b66\u535a\u58eb\u30d7\u30ed\u30b0\u30e9\u30e0 \u306b\u3088\u308b\u652f\u63f4\u3092\u53d7\u3051\u307e\u3057\u305f\u3002</p>"},{"location":"features/","title":"Features of Siv3D","text":"<p>Here is a list of the main features provided by Siv3D.</p>"},{"location":"features/#graphics","title":"Graphics","text":"<ul> <li>Advanced 2D graphics</li> <li>Basic 3D graphics (Wavefront OBJ, several basic shapes)</li> <li>Custom vertex &amp; pixel shaders (HLSL, GLSL)</li> <li>Text rendering (Bitmap, SDF, MSDF)</li> <li>Image formats (PNG, JPEG, BMP, SVG, GIF, Animated GIF, TGA, PPM, WebP, TIFF)</li> <li>Over 7,000 icons and Unicode 15.0 emojis</li> <li>Image processing</li> <li>Video rendering</li> </ul>"},{"location":"features/#audio","title":"Audio","text":"<ul> <li>Audio formats (WAVE, MP3, AAC, OggVorbis, Opus, MIDI, WMA, FLAC, AIFF)</li> <li>Volume, pan, speed, and pitch adjustments</li> <li>Streaming playback (WAVE, MP3, OggVorbis)</li> <li>Writing waveforms to the buffer during playback</li> <li>Fade-in, fade-out</li> <li>Looping</li> <li>Mixing bus</li> <li>Filter processing (Low-pass filter, High-pass filter, Echo, Reverb)</li> <li>FFT</li> <li>SoundFont rendering</li> <li>Text-to-speech</li> </ul>"},{"location":"features/#input-devices","title":"Input Devices","text":"<ul> <li>Mouse</li> <li>Keyboard</li> <li>Gamepad</li> <li>Webcam</li> <li>Microphone</li> <li>Joy-Con / Pro Controller</li> <li>XInput Gamepad</li> <li>Pen Tablet</li> <li>Leap Motion</li> </ul>"},{"location":"features/#window","title":"Window","text":"<ul> <li>Full-screen mode</li> <li>High DPI support</li> <li>Window styles (resizeable, frameless)</li> <li>File dialog</li> <li>Drag &amp; drop</li> <li>Message box</li> <li>Toast notifications</li> </ul>"},{"location":"features/#network-and-communication","title":"Network and Communication","text":"<ul> <li>HTTP client</li> <li>Multiplayer (Photon SDK)</li> <li>TCP communication</li> <li>Serial communication</li> <li>Inter-process communication (pipe)</li> <li>OSC (Open Sound Control) communication</li> </ul>"},{"location":"features/#mathematics","title":"Mathematics","text":"<ul> <li>Vector and matrix classes (<code>Point</code>, <code>Float2</code>, <code>Vec2</code>, <code>Float3</code>, <code>Vec3</code>, <code>Float4</code>, <code>Vec4</code>, <code>Mat3x2</code>, <code>Mat3x3</code>, <code>Mat4x4</code>, <code>SIMD_Float4</code>, <code>Quaternion</code>)</li> <li>2D shape classes (<code>Line</code>, <code>Circle</code>, <code>Ellipse</code>, <code>Rect</code>, <code>RectF</code>, <code>Triangle</code>, <code>Quad</code>, <code>RoundRect</code>, <code>Polygon</code>, <code>MultiPolygon</code>, <code>LineString</code>, <code>Spline2D</code>, <code>Bezier2</code>, <code>Bezier3</code>)</li> <li>3D shape classes (<code>Plane</code>, <code>InfinitePlane</code>, <code>Sphere</code>, <code>Box</code>, <code>OrientedBox</code>, <code>Ray</code>, <code>Line3D</code>, <code>Triangle3D</code>, <code>ViewFrustum</code>, <code>Disc</code>, <code>Cylinder</code>, <code>Cone</code>)</li> <li>Color classes (<code>Color</code>, <code>ColorF</code>, <code>HSV</code>)</li> <li>Curvilinear coordinate classes</li> <li>2D / 3D intersection determination and intersection calculations</li> <li>2D / 3D geometric calculations</li> <li>Rectangle packing</li> <li>Planar subdivision</li> <li>Linear color space and gamma color space</li> <li>Pseudo random number generator</li> <li>Interpolation, easing, smoothing</li> <li>Perlin noise</li> <li>Formula parser</li> <li>NavMesh</li> <li>Extended number types (<code>HalfFloat</code>, <code>int128</code>, <code>uint128</code>, <code>BigInt</code>, <code>BigFloat</code>)</li> </ul>"},{"location":"features/#string-processing","title":"String Processing","text":"<ul> <li>String classes (<code>String</code>, <code>StringView</code>)</li> <li>Unicode conversion (UTF-8 / UTF-16 / UTF-32)</li> <li>Regular expressions</li> <li><code>{fmt}</code> style string formatting</li> <li>Reading and writing text files</li> <li>CSV / INI / JSON / XML / TOML parsers</li> <li>CSV / INI / JSON output</li> <li>JSON validation</li> </ul>"},{"location":"features/#other","title":"Other","text":"<ul> <li>Basic GUI (buttons, sliders, radio buttons, checkboxes, text boxes, text areas, list boxes, color pickers, menu bars, tables)</li> <li>Integration of 2D physics engine (Box2D)</li> <li>Array classes (<code>Array</code>, <code>Grid</code>)</li> <li>Kd-tree</li> <li>Disjoint Set Union</li> <li>Asynchronous file loading</li> <li>Data compression (zlib, Zstandard)</li> <li>Scene transition</li> <li>File system</li> <li>Directory monitoring</li> <li>QR code</li> <li>GeoJSON</li> <li>Date and time</li> <li>Time measurement</li> <li>Logging</li> <li>Serialization</li> <li>UUID</li> <li>Child process management</li> <li>Clipboard</li> <li>Power management</li> <li>Scripting (AngelScript)</li> <li>OpenAI API (Chat, Image, Embedding)</li> </ul> <p>(*Some features are supported only on specific platforms)</p>"},{"location":"learn/","title":"Learning Siv3D","text":""},{"location":"learn/#tutorials","title":"Tutorials","text":"Beginner Tutorial 1 Chapter Title Content 1 Your first Siv3D Experience the atmosphere of Siv3D through modifying basic Siv3D samples. 2 Basics of Siv3D Learn about the basic structure of a Siv3D program. 3 Composition of Main Function Learn about the structure of the main loop and the processes executed before and after it. 4 Basic Application Operations Learn about the basic operation methods of a Siv3D application. 5 Simple Data Display Learn how to display text and numbers simply within the program. 6 Basic Data Types Learn about the basic data types used in Siv3D programs. 7 Changing Background Color Learn how to change the color of the screen background. 8 Drawing Circles and Rectangles Learn how to draw circles and rectangles. 9 Drawing Patterns Learn how to draw patterns by arranging circles and rectangles. 10 Drawing Emojis Learn how to draw emojis. 11 Displaying Text Learn how to display numbers and text with specified colors and positions. 12 Variables and Movements Learn how to create movements by changing variables using the passage of time. 13 Handling Keyboard Input Learn how to check keyboard input. 14 Handling Mouse Input Learn how to get mouse clicks and cursor positions. 15 Creating a Button Practice creating a button using what you've learned so far. 16 Creating a Cookie Clicker Style Game Create a Cookie Clicker style game using what you've learned so far. Beginner Tutorial 2 Chapter Title Contents 17 Drawing Shapes Learn about the various 2D shape drawing functions provided by Siv3D. 18 Creating Movements Learn about the Siv3D functions useful for expressing movements. 19 String Class Learn the basics of using the string class <code>String</code>. 20 Dynamic Arrays Explains the basics of using the dynamic array class <code>Array</code>. 21 Two-dimensional Arrays Learn the basics of using the two-dimensional array class <code>Grid</code>. 22 Hash Table Learn the basics of using the hash set <code>HashSet</code> and the hash table <code>HashTable</code>. 23 Type that can Express Invalid Values Learn the basics of using the type <code>Optional</code> that can represent invalid values. 24 Collision Detection Learn how to perform shape intersection detection. 25 Drawing Textures Learn how to create and draw textures from emojis, icons, and image files. 26 Drawing Videos Learn how to draw videos and GIF animations onto scenes. 27 Converting Numbers and Strings Learn how to convert numerical data to strings and convert strings to numerical data. 28 GUI Learn how to use GUI features such as buttons, sliders, and text boxes. 29 Random Learn how to generate random numbers, colors, and coordinates, and how to randomly select elements from multiple options. 30 Date and Time, Timing Learn about timing and functions related to date and time. 31 Displaying Text Learn how to draw various styles of text using fonts. 32 Scene and Window Learn how to customize Siv3D's scenes and windows. 33 Keyboard Input Learn how to process keyboard input. 34 Mouse Input Learn how to process mouse input. 35 Useful Functions Learn about small useful functions and features that are helpful for Siv3D programming. 36 Implementation of Interactions Implement various interactive elements using what you've learned so far. Beginner Tutorial 3 Chapter Title Content 37 Audio Playback Learn how to control the playback of sound effects and music. 38 Asset Management Learn how to access asset data such as <code>Texture</code>, <code>Font</code>, <code>Audio</code> from anywhere in the program. 39 2D Render States Learn how to customize 2D drawing settings to achieve various effects. 40 Effects Learn how to use the <code>Effect</code> class, which is useful for small animations and effect productions. 41 Render Texture Learn how to render shapes, textures, and fonts not to the scene but to the texture. 42 File System Learn about functions related to file and directory information retrieval and operations. 43 Text File Learn how to read the content of a text file and write characters to a text file. 44 Configuration File Learn how to read and write configuration files such as CSV, INI, JSON, TOML, XML. 45 Binary File Learn how to save data to a file in binary format and read it. 46 File Dialog Learn how to open a file dialog to read images and audio, determine the file to open, and determine the name of the file to save. 47 Drag &amp; Drop Learn how to get information about files that have been dragged and dropped. 48 Message Box Learn how to display a message box. 49 Resource File Learn how to embed files such as images and sounds into the executable file of the application and read them in the program. 50 HTTP Client Learn how to make HTTP requests, such as downloading files. 51 Scene Management Learn about the \"Scene Management\" feature that simplifies scene transitions in games and apps. 52 Gamepad Learn how to handle gamepad input. 53 Image Editing Learn about image editing and how to display the results in the scene. 54 Audio Waveform Learn about audio waveform editing and how to play the results. 55 Microphone Input Learn how to obtain audio waveforms from a built-in or connected microphone to a PC and how to utilize them in a program. 56 Webcam Learn how to obtain video from a built-in or connected webcam to a PC and how to utilize it in a program. 57 Advanced Geometry Processing Learn about advanced features of 2D geometry. 58 Profiling and Optimization Learn about features for profiling and optimization. 59 OpenAI API Learn about the generative AI feature that integrates with the OpenAI API. 60 Publishing Your App Learn the steps to distribute the application you have created. Beginner Tutorial 4 Chapter Title Description 61 2D Custom Shader Learn how to perform advanced rendering in 2D using custom shaders. 62 Drawing 3D Shapes Learn basic 3D rendering program. 63 Drawing Advanced 3D Shapes Learn advanced 3D rendering program. 64 3D Intersection Detection Learn about 3D intersection detection functionality. 65 TCP Communication Learn how to communicate between applications using TCP. 66 Multiplayer Learn about the Photon integration feature for creating multiplayer games. 67 Serial Communication Learn how to communicate with devices via serial communication. 68 OSC Communication Learn how to communicate between applications using OSC. 69 Pipe Communication Learn how to communicate between applications using pipes. 70 Text-to-Speech Learn how to use the OS text-to-speech feature. 71 QR Code Learn how to generate and read QR codes. 72 File Compression Learn how to compress and decompress data or files. 73 Video Editing Learn how to read, edit, and save video files. 74 Pen Tablet Learn how to use a pen tablet. 75 Leap Device Learn how to use a Leap device. 76 Navmesh Learn about pathfinding using Navmesh. 77 2D Physics Simulation Learn about the functionality of 2D physics simulation. 78 Math Parser Learn how to evaluate formulas using a math parser. 79 Accessing User Environment Learn how to access user environment information such as usernames. 80 Creating Addons Learn how to create addons and add them to the Siv3D engine."},{"location":"learn/#samples","title":"Samples","text":"<ul> <li>Game Samples</li> <li>Application Samples</li> <li>Web Service Integration Samples</li> <li>Shape Samples</li> <li>2D Drawing Samples</li> <li>Image Samples</li> <li>Text Display Samples</li> <li>UI Samples</li> <li>Data Visualization Samples</li> <li>Motion Graphics Samples</li> <li>Sound Samples</li> <li>2D Physics Simulation Samples</li> <li>3D Drawing Samples</li> <li>Creating a Game Launcher</li> </ul>"},{"location":"learn/#samples-on-github","title":"Samples on GitHub","text":"<p>Siv3D-Sample  \u30b2\u30fc\u30e0\u5178\u578b  </p>"},{"location":"learn/#articles","title":"Articles","text":"<ul> <li>Message Box</li> <li>Asynchronous Processing</li> <li>Connecting Your Class to Siv3D</li> <li>21 Ways to Say Hello World in Siv3D</li> <li>Classes That Shouldn't be Global Variables</li> <li>Implementing Classes Using Polymorphism</li> </ul>"},{"location":"learn/#user-contributed-samples","title":"User-Contributed Samples","text":"<ul> <li>Siv3D Mini Sample Collection </li> <li>Siv3D Petite Samples </li> </ul>"},{"location":"learn/#community-for-questions","title":"Community for Questions","text":"<p> Join the Siv3D Discord Server</p>"},{"location":"mascot/","title":"Siv3D Kun","text":"<p>\"Siv3D Kun\" is the mascot character for the C++ framework Siv3D. The design was open for submissions in 2015, and the design by Haiiro was chosen.</p>"},{"location":"mascot/#character-details","title":"Character Details","text":"<ul> <li>Age: 12 years / Height: 144 cm / Weight: 36 kg</li> <li>A speed type muscular fighter</li> <li>Can move his tail by himself</li> <li>Arms are so long they extend below the hem of his trousers</li> </ul>"},{"location":"mascot/#related-files","title":"Related Files","text":"<p>The following files are included in the Siv3D project:</p> <ul> <li>Official image <code>example/siv3d-kun.png</code></li> <li>3D model <code>example/obj/siv3d-kun.obj</code></li> <li>Pixel art <code>example/spritesheet/siv3d-kun-16.png</code></li> </ul>"},{"location":"mascot/#gallery","title":"Gallery","text":""},{"location":"mascot/#3d-model","title":"3D Model","text":"<ul> <li>Siv3D Kun VRM Model  (Provided by itakawa)</li> </ul>"},{"location":"mascot/#merchandise","title":"Merchandise","text":"<ul> <li>Siv3D Kun LINE Stickers </li> </ul>"},{"location":"mascot/#official-illustrations","title":"Official Illustrations","text":""},{"location":"mascot/#siv3d-advent-calendar-2021-invitation-illustration","title":"Siv3D Advent Calendar 2021 Invitation Illustration","text":""},{"location":"mascot/#siv3d-old-web-site-insert-illustration","title":"Siv3D Old Web Site Insert Illustration","text":""},{"location":"mascot/#siv3d-for-kids-title-screen-illustration","title":"Siv3D for Kids Title Screen Illustration","text":""},{"location":"mascot/#siv3d-game-jam-2016-event-banner","title":"Siv3D Game Jam (2016) Event Banner","text":""},{"location":"releases/","title":"Release Notes","text":""},{"location":"releases/#v06-generation","title":"v0.6 Generation","text":"v0.6.12 | 2023-09-27 v0.6.11 | 2023-08-11 v0.6.10 | 2023-05-17 v0.6.9 | 2023-04-16 v0.6.8 | 2023-04-01 v0.6.7 | 2023-03-18 v0.6.6 | 2022-11-22 v0.6.5 | 2022-08-10 v0.6.4 | 2022-05-21 v0.6.3 | 2021-11-14 v0.6.2 | 2021-09-29 v0.6.1 | 2021-09-21 v0.6.0 | 2021-09-18"},{"location":"releases/#\u65b0\u6a5f\u80fd","title":"\u65b0\u6a5f\u80fd","text":""},{"location":"releases/#\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a","title":"\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a","text":""},{"location":"releases/#\u4ed5\u69d8\u5909\u66f4","title":"\u4ed5\u69d8\u5909\u66f4","text":""},{"location":"releases/#\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a","text":""},{"location":"releases/#\u4e0d\u5177\u5408\u30d0\u30b0\u4fee\u6b63","title":"\u4e0d\u5177\u5408\u30fb\u30d0\u30b0\u4fee\u6b63","text":""},{"location":"releases/#\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3","title":"\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3","text":""},{"location":"releases/#\u65b0\u6a5f\u80fd_1","title":"\u65b0\u6a5f\u80fd","text":"<ul> <li>2D \u306e\u8ecc\u8de1\u3092\u63cf\u753b\u3059\u308b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#1006, #1043)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u300c9 \u30b9\u30e9\u30a4\u30b9\u300d\u3092\u7c21\u5358\u306b\u6271\u3048\u308b\u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#1030, #1036)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u76ee\u6a19\u306b\u8ffd\u5f93\u3059\u308b\u30b7\u30f3\u30d7\u30eb\u306a 3D \u30ab\u30e1\u30e9\u30af\u30e9\u30b9 <code>SimpleFollowCamera3D</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#1048, #1049)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>OpenAI Chat API \u306e\u30e2\u30c7\u30eb\u5b9a\u6570\u306b <code>GPT3_5_Turbo_16K</code>\uff08<code>gpt-3.5-turbo-16k</code>\uff09\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#1050)</li> <li><code>Rect</code>, <code>RectF</code>, <code>RoundRectF</code> \u306e <code>.drawShadow()</code> \u306b\u3001\u5185\u90e8\u3092\u3059\u3079\u3066\u5857\u308a\u3064\u3076\u3055\u306a\u3044\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#1039)</li> <li>\u30d9\u30af\u30c8\u30eb\u306e\u5404\u8981\u7d20\u9593\u3067\u6700\u5927\u5024 / \u6700\u5c0f\u5024\u3092\u8a08\u7b97\u3059\u308b <code>Math::Max()</code>, <code>Math::Min()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#1032)</li> <li><code>Line::normalizedVector()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#1029)</li> <li><code>Triangle::isClockwise()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#1028)</li> <li><code>Transition::reset()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#1025)</li> <li><code>Math::MoveTowards()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#1024)</li> <li>3 \u3064\u306e\u9802\u70b9\u304b\u3089\u6642\u8a08\u56de\u308a\u306e <code>Triangle</code> \u3092\u4f5c\u6210\u3059\u308b <code>Triangle::FromPoints(p0, p1, p2)</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#1015)</li> <li><code>Quaternion::RollPitchYaw()</code> \u306b\u3001<code>Vec3</code> \u3092\u5f15\u6570\u306b\u3068\u308b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#1014)</li> </ul>"},{"location":"releases/#\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a_1","title":"\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a","text":"<ul> <li>\u521d\u5fc3\u8005\u304c\u8e0f\u307f\u3084\u3059\u3044\u30e9\u30f3\u30bf\u30a4\u30e0\u30a8\u30e9\u30fc\u3092\u8e0f\u3093\u3060\u969b\u306b\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u306e Web \u30da\u30fc\u30b8\u3092\u958b\u304f\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#1007, #1034, #1035)</li> <li>\u30a8\u30f3\u30b8\u30f3\u8d77\u52d5\u524d\u306e\u30a2\u30bb\u30c3\u30c8\u30af\u30e9\u30b9\u521d\u671f\u5316\u691c\u77e5\u306e\u5bfe\u8c61\u3092\u62e1\u5927\u3057\u307e\u3057\u305f (#1047)</li> <li><code>SimpleGUI::TextBox()</code> \u306e\u6319\u52d5\u3092\u6539\u5584\u3057\u307e\u3057\u305f (#997)</li> </ul>"},{"location":"releases/#\u4ed5\u69d8\u5909\u66f4_1","title":"\u4ed5\u69d8\u5909\u66f4","text":"<ul> <li><code>Circle::drawPie()</code>, <code>Circle::drawArc()</code>, <code>Circle::drawSegmentFromAngles()</code> \u3067\u8ca0\u306e angle \u3092\u6307\u5b9a\u3057\u305f\u969b\u306b\u3082\u3001\u901a\u5e38\u901a\u308a\u6642\u8a08\u56de\u308a\u306e\u4e09\u89d2\u5f62\u304c\u63cf\u753b\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f (#1042)</li> </ul>"},{"location":"releases/#\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a_1","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a","text":"<ul> <li><code>Circle</code>, <code>Rect</code>, <code>RectF</code>, <code>RoundrRect</code> \u306e <code>.drawShadow()</code> \u306e CPU \u30b3\u30b9\u30c8\u3092 20\uff5e50 % \u524a\u6e1b\u3057\u307e\u3057\u305f (#1037)</li> </ul>"},{"location":"releases/#\u4e0d\u5177\u5408\u30d0\u30b0\u4fee\u6b63_1","title":"\u4e0d\u5177\u5408\u30fb\u30d0\u30b0\u4fee\u6b63","text":"<ul> <li>Windows \u7248\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u7d42\u4e86\u6642\u306b mutex \u306e\u30a8\u30e9\u30fc\u3067\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#1033)</li> <li><code>DrawableText::getXAdvances()</code> \u306e\u7d50\u679c\u306b\u6539\u884c\u6587\u5b57\u306e\u5206\u304c\u542b\u307e\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#1038)</li> <li><code>RoundRect::drawShadow()</code> \u3067 <code>spread</code> \u3092\u6307\u5b9a\u3059\u308b\u3068\u63cf\u753b\u306e r \u304c\u305a\u308c\u3066\u3044\u305f\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#1040)</li> <li><code>Font::renderPolygon()</code> \u3067\u8f2a\u90ed\u3068\u7a74\u304c\u9006\u8ee2\u3059\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#1019, #1027)</li> <li><code>Font</code> \u63cf\u753b\u6642\u306b\u30bf\u30d6\u7a7a\u767d\u306e\u9593\u9694\u304c\u4e71\u308c\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#1002, #1026)</li> <li><code>Circle::pieAsPolygon()</code> \u3068 <code>Circle::arcAsPolygon()</code> \u304c\u53cd\u6642\u8a08\u56de\u308a\u9802\u70b9\u306e <code>Polygon</code> \u3092\u751f\u6210\u3057\u3066\u3044\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#1041)</li> <li>\u4e00\u90e8\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u306e\u30d3\u30eb\u30c9\u306e\u554f\u984c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#1021)</li> <li><code>SimpleGUI::TextBoxAt()</code> \u3067\u306e Home, End \u30ad\u30fc\u306e\u52d5\u4f5c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#999)</li> <li>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3084\u5f15\u6570\u306e\u8aa4\u5b57\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#1016, #1017)</li> </ul>"},{"location":"releases/#\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3_1","title":"\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3","text":"<ul> <li>Raclamusi: <code>Font::renderPolygon()</code> \u306e\u30d0\u30b0\u3092\u4fee\u6b63, <code>Font</code> \u306e\u30bf\u30d6\u7a7a\u767d\u63cf\u753b\u306e\u30d0\u30b0\u3092\u4fee\u6b63</li> <li>yksake: <code>SimpleGUI::TextBoxAt()</code> \u306e\u6319\u52d5\u6539\u5584</li> <li>polyester-CTRL: \u4e00\u90e8\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u306e\u30d3\u30eb\u30c9\u306e\u554f\u984c\u306e\u4fee\u6b63</li> <li>voidproc: \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3084\u5f15\u6570\u306e\u8aa4\u5b57\u4fee\u6b63</li> </ul>"},{"location":"releases/#\u91cd\u8981","title":"\u91cd\u8981","text":"<ul> <li>Visual Studio 2022 17.6 \u3067\u306e\u30d3\u30eb\u30c9\u306e\u554f\u984c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#1011)<ul> <li>v0.6.9 \u4ee5\u524d\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304b\u3089\u300cISO C++23 \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30d3\u30eb\u30c9\u300d\u3092\u7121\u52b9\u306b\u3059\u308b\u3053\u3068\u3067\u89e3\u6c7a\u3057\u307e\u3059\u3002</li> </ul> </li> </ul>"},{"location":"releases/#\u65b0\u6a5f\u80fd_2","title":"\u65b0\u6a5f\u80fd","text":"<ul> <li><code>JSON</code> \u306b\u304a\u3044\u3066 Binary Values \u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f (#1010)</li> </ul>"},{"location":"releases/#\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a_2","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a","text":"<ul> <li><code>Optional::Optional(Optional&lt;U&gt;&amp;&amp;)</code> \u306e\u5b9f\u88c5\u3092\u6539\u5584\u3057\u307e\u3057\u305f (#1008)</li> </ul>"},{"location":"releases/#\u4e0d\u5177\u5408\u30d0\u30b0\u4fee\u6b63_2","title":"\u4e0d\u5177\u5408\u30fb\u30d0\u30b0\u4fee\u6b63","text":"<ul> <li><code>ParseOr&lt;double&gt;()</code> \u3068 <code>ParseOpt&lt;double&gt;()</code> \u304c <code>float</code> \u7cbe\u5ea6\u3067\u884c\u308f\u308c\u3066\u3044\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#1009)</li> <li>\u30d0\u30a4\u30ca\u30ea\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 (BSON/CBOR/MessagePack) \u304b\u3089\u4f5c\u6210\u3057\u305f JSON \u306e\u8981\u7d20\u3092\u4e00\u90e8\u9069\u5207\u306b\u8aad\u307f\u8fbc\u3081\u306a\u304b\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#1010)</li> </ul>"},{"location":"releases/#\u65b0\u6a5f\u80fd_3","title":"\u65b0\u6a5f\u80fd","text":"<ul> <li>\u8868\u3092\u63cf\u753b\u3059\u308b <code>SimpleTable</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#988, #991, #992)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u8907\u6570\u884c\u306e\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9 <code>SimpleGUI::TextArea()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#789, #994, #996)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> </ul>"},{"location":"releases/#\u4ed5\u69d8\u5909\u66f4_2","title":"\u4ed5\u69d8\u5909\u66f4","text":"<ul> <li><code>Timer::isRunnning()</code> \u306f 0 \u306b\u9054\u3057\u305f\u3068\u304d\u306b <code>false</code> \u3092\u8fd4\u3059\u3088\u3046\u4ed5\u69d8\u5909\u66f4\u3057\u307e\u3057\u305f (#987)</li> <li><code>Grid::resize(w, 0)</code> \u304a\u3088\u3073 <code>Grid::resize(0, h)</code> \u306f <code>w</code> \u3068 <code>h</code> \u3092\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f (#989)</li> </ul>"},{"location":"releases/#\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a_3","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a","text":"<ul> <li><code>Array::fetch()</code> \u7b49\u306e\u5b9f\u88c5\u3092\u6539\u5584\u3057\u307e\u3057\u305f (#990)</li> </ul>"},{"location":"releases/#\u4e0d\u5177\u5408\u30d0\u30b0\u4fee\u6b63_3","title":"\u4e0d\u5177\u5408\u30fb\u30d0\u30b0\u4fee\u6b63","text":"<ul> <li><code>Array::fetch()</code> \u7b49\u306e\u672a\u5b9a\u7fa9\u52d5\u4f5c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#990)</li> <li><code>Grid::assign()</code> \u306e\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#995)</li> </ul>"},{"location":"releases/#\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3_2","title":"\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3","text":"<ul> <li>tomolatoon: <code>Array::fetch()</code> \u7b49\u306e\u4fee\u6b63\u30fb\u6539\u5584</li> <li>m4saka: SimpleTable \u306e typo \u4fee\u6b63</li> </ul>"},{"location":"releases/#\u65b0\u6a5f\u80fd_4","title":"\u65b0\u6a5f\u80fd","text":"<ul> <li>\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u958b\u304f <code>System::LaunchFile(fileName)</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#888, #981)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u3067\u958b\u304f <code>System::LaunchFileWithTextEditor(fileName)</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#888, #981)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u540c\u68b1\u30ab\u30e9\u30fc\u7d75\u6587\u5b57\u3092 Unicode 14.0 \u304b\u3089 Unicode 15.0 \u306b\u66f4\u65b0\u3057\u307e\u3057\u305f (#980)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u540c\u68b1 Material Design Icons \u3092 v6.5.95 \u304b\u3089 v7.2.96 \u306b\u66f4\u65b0\u3057\u307e\u3057\u305f\uff08700 \u7a2e\u985e\u306e\u30a2\u30a4\u30b3\u30f3\u304c\u8ffd\u52a0\uff09 (#980)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>OpenAI \u306e Embeddings API \u3092\u6271\u3046\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#982)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u30e6\u30fc\u30b6\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u540d\u3084\u540d\u524d\u3001\u8a00\u8a9e\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#678, #968, #974)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u30c9\u30e9\u30a4\u30d6\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\uff08Windows \u7248\uff09(#709, #978)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u8fd4\u3059 <code>Network::IsConnected()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#975, #976)</li> </ul>"},{"location":"releases/#\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a_2","title":"\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a","text":"<ul> <li><code>SimpleGUI::ListBox()</code> \u306e\u9805\u76ee\u3092\u4e0a\u4e0b\u30ad\u30fc\u3067\u9078\u629e\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f (#984)</li> </ul>"},{"location":"releases/#\u4e0d\u5177\u5408\u30d0\u30b0\u4fee\u6b63_4","title":"\u4e0d\u5177\u5408\u30fb\u30d0\u30b0\u4fee\u6b63","text":"<ul> <li>\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u306b\u8a2d\u5b9a\u3057\u305f\u7d75\u6587\u5b57\u304c\u7279\u5b9a\u6761\u4ef6\u4e0b\u3067\u6b63\u3057\u304f\u8868\u793a\u3055\u308c\u306a\u304b\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#971, #973)</li> <li><code>SimpleGUI::ListBox()</code> \u306e\u9805\u76ee\u6570\u304c\u591a\u3044\u3068\u304d\u306b\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u30d0\u30fc\u306e\u3064\u307e\u307f\u304c\u7d30\u304f\u306a\u308b / \u6d88\u5931\u3057\u3066\u3044\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#985)</li> </ul>"},{"location":"releases/#\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3_3","title":"\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3","text":"<ul> <li>Raclamusi: \u7d75\u6587\u5b57\u30d5\u30a9\u30f3\u30c8\u306e\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u30d0\u30b0\u3092\u4fee\u6b63</li> </ul>"},{"location":"releases/#\u65b0\u6a5f\u80fd_5","title":"\u65b0\u6a5f\u80fd","text":"<ul> <li>OpenAI API (Chat, Image) \u3092\u6271\u3046\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#957)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>OSC \u901a\u4fe1\u3092\u6271\u3046\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#515, #919, #922)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u5186\u3092\u5272\u7dda\u3067\u5207\u308a\u53d6\u3063\u305f\u5f62\u3092\u63cf\u304f\u95a2\u6570 <code>Circle::drawSegment()</code>, <code>Circle::drawSegmentFromAngles()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#956)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u9577\u65b9\u5f62\u3092\u659c\u3081\u65b9\u5411\u306e\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u63cf\u304f\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#955)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>SimpleMenuBar \u304c\u9805\u76ee\u306e\u30c1\u30a7\u30c3\u30af\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f (#948)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>JSON \u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\u30af\u30e9\u30b9 <code>JSONValidator</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#931, #959)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u76f4\u63a5\u53d6\u5f97\u3059\u308b\u95a2\u6570 <code>System::GetArgc()</code>, <code>System::GetArgv()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#964)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u30a2\u30c9\u30aa\u30f3\u306e\u5b9f\u884c\u512a\u5148\u5ea6\u3092 <code>update()</code> \u3068 <code>draw()</code> \u3092\u500b\u5225\u306b\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f (#949)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>SimpleHTTP \u306e\u975e\u540c\u671f\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u95a2\u3059\u308b\u95a2\u6570\u3092\u62e1\u5145\u3057\u307e\u3057\u305f (#911, #962)</li> <li>\u89d2\u5ea6\u3092 <code>[0, TwoPi)</code> \u307e\u305f\u306f <code>[-Pi, Pi)</code> \u306e\u7bc4\u56f2\u306b\u6b63\u898f\u5316\u3059\u308b <code>Math::NormalizeAngle()</code> \u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#927)</li> <li>\u6642\u9593\u306b\u5bfe\u3057\u3066\u3001\u30c7\u30e5\u30fc\u30c6\u30a3\u30fc\u6bd4\u3092\u6307\u5b9a\u3057\u305f\u77e9\u5f62\u6ce2\u3092\u8fd4\u3059 <code>Periodic::Pulse0_1()</code> / <code>Periodic::Pulse1_1()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#966, #967)</li> <li><code>Input</code> \u3092\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3059\u308b <code>Input::Serialize()</code>, <code>Input::Deserialize()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#920)</li> <li><code>IAddon</code> \u306b <code>postPresent()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#942)</li> <li><code>TextEditState</code> \u304c\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f\uff08\u6587\u5b57\u5217\u306e\u307f\u4fdd\u5b58\uff09 (#930)</li> <li>Base64 \u306e\u30c7\u30b3\u30fc\u30c9\u306b\u59a5\u5f53\u6027\u30c1\u30a7\u30c3\u30af\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#845, #961)</li> <li><code>Math::Damp()</code>, <code>Math::SmoothDamp()</code> \u304c <code>ColorF</code> \u578b\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f (#947)</li> <li>C++23 \u3068\u306e\u4e00\u8cab\u6027\u306e\u305f\u3081\u3001<code>StringView</code>, <code>String</code>, <code>Array</code> \u306b\u3001<code>.includes()</code>, <code>.includes_if()</code> \u3068\u540c\u6a5f\u80fd\u306e <code>.contains()</code>, <code>.contains_if()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#944)</li> <li><code>JSON</code> \u306e\u6a5f\u80fd\u3092\u5f37\u5316\u3057\u307e\u3057\u305f (#925, #931, #959)</li> </ul>"},{"location":"releases/#\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a_3","title":"\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a","text":"<ul> <li>\u30a2\u30bb\u30c3\u30c8\u306e\u6bce\u30d5\u30ec\u30fc\u30e0\u4f5c\u6210\u30fb\u7834\u68c4\u306e\u554f\u984c\u3092\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3067\u901a\u77e5\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f (#926)</li> </ul>"},{"location":"releases/#\u4ed5\u69d8\u5909\u66f4_3","title":"\u4ed5\u69d8\u5909\u66f4","text":"<ul> <li>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0 Hello, Siv3D \u3092\u30ea\u30cb\u30e5\u30fc\u30a2\u30eb\u3057\u307e\u3057\u305f (#940)</li> <li>Photon \u30a2\u30c9\u30aa\u30f3\u3092\u6700\u65b0\u306e Photon SDK \u306b\u5bfe\u5fdc\u3055\u305b\u307e\u3057\u305f (#954)</li> </ul>"},{"location":"releases/#\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a_4","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a","text":"<ul> <li>Base64 \u306e\u30c7\u30b3\u30fc\u30c9\u3092\u9ad8\u901f\u5316\u3057\u307e\u3057\u305f (#845, #961)</li> <li><code>Array</code> \u3084 <code>MultiPolygon</code> \u306a\u3069\u306e\u4e00\u90e8\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u6539\u5584\u3057\u307e\u3057\u305f (#948)</li> <li><code>Array::includes()</code>, <code>Array::contains()</code> \u3092\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u6539\u5584\u3057\u307e\u3057\u305f (#945)</li> </ul>"},{"location":"releases/#\u4e0d\u5177\u5408\u30d0\u30b0\u4fee\u6b63_5","title":"\u4e0d\u5177\u5408\u30fb\u30d0\u30b0\u4fee\u6b63","text":"<ul> <li>macOS \u3067\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3067\u304d\u306a\u3044\u3053\u3068\u304c\u3042\u3063\u305f\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#963)</li> <li><code>Optional</code> \u306e\u6319\u52d5\u304c <code>std::optional</code> \u3068\u7570\u306a\u3063\u3066\u3044\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#938, #939)</li> <li><code>HTTPResponse</code> \u306e\u5185\u5bb9\u304c\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u524d\u306e\u30c7\u30fc\u30bf\u306b\u306a\u3063\u3066\u3044\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#958)</li> <li><code>IReader</code> \u3092\u5f15\u6570\u306b\u53d6\u308b <code>JSON::Load()</code> \u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#937)</li> <li><code>Polygon::calculateBuffer()</code>, <code>Polygon::calculateRoundBuffer()</code> \u304c\u5931\u6557\u3059\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#965)</li> <li><code>SimpleMenuBar</code> \u4e0a\u3067\u306e\u30de\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u6319\u52d5\u3092\u6539\u5584\u3057\u307e\u3057\u305f (#950)</li> <li><code>App/example/script/piano.as</code> \u30b9\u30af\u30ea\u30d7\u30c8\u3067\u97f3\u304c\u9cf4\u3089\u306a\u304b\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#935)</li> <li><code>PlayingCard::Pack</code> \u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u69cb\u7bc9\u3057\u3066\u30b8\u30e7\u30fc\u30ab\u30fc\u306e\u30ab\u30fc\u30c9\u3092\u63cf\u753b\u3059\u308b\u3068\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#921)</li> <li><code>GeoJSONGeometry::get()</code> \u304c\u4f7f\u3048\u306a\u304b\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#933, #934)</li> <li>\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306e\u4e00\u90e8\u30de\u30af\u30ed\u306e\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#923)</li> <li>Arch Linux \u3067\u306e\u30d3\u30eb\u30c9\u306e\u554f\u984c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#917, #918)</li> </ul>"},{"location":"releases/#\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3_4","title":"\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3","text":"<ul> <li>nokotan: Web \u7248\u3092\u66f4\u65b0</li> <li>tomolatoon: <code>JSONValidator</code> \u3092\u8ffd\u52a0, <code>JSON</code> \u306e\u6a5f\u80fd\u5f37\u5316</li> <li>m4saka: <code>Optional</code> \u306e\u30d0\u30b0\u3092\u4fee\u6b63</li> <li>Raclamusi: Base64 \u306e\u30c7\u30b3\u30fc\u30c9\u306e\u6539\u5584, <code>Array</code> \u7b49\u306e\u6027\u80fd\u6539\u5584</li> <li>voidproc: Periodic \u95a2\u6570\u306e\u8ffd\u52a0</li> <li>yksake: SimpleMenuBar \u306e\u6319\u52d5\u6539\u5584\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u6539\u5584</li> <li>sthairno: <code>GeoJSONGeometry</code> \u306e\u30d0\u30b0\u3092\u4fee\u6b63</li> <li>Aikawa3311: \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4fee\u6b63</li> <li>sfpgmr: \u30b7\u30ea\u30a2\u30e9\u30a4\u30ba API \u306e\u30d0\u30b0\u3092\u4fee\u6b63</li> <li>hashitaku Arch Linux \u3067\u306e\u30d3\u30eb\u30c9\u3092\u4fee\u6b63</li> </ul>"},{"location":"releases/#\u65b0\u6a5f\u80fd_6","title":"\u65b0\u6a5f\u80fd","text":"<ul> <li>\u30b7\u30f3\u30d7\u30eb\u306a\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u3092\u6271\u3046\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#898)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u5165\u529b\u51e6\u7406\u3092\u6253\u3061\u5207\u308b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#897)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li><code>std::map</code> \u306e\u7f6e\u304d\u63db\u3048\u3068\u306a\u308b <code>OrderedTable</code> \u578b\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#909)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li><code>RoundRect::draw()</code> \u306b\u304a\u3044\u3066\u3001\u4e0a\u4e0b\u306e\u8272\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f (#906)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li><code>Rect::drawFrame()</code>, <code>RectF::drawFrame()</code>, <code>RoundRect::draw()</code>, <code>RoundRect::drawFrame()</code> \u306b\u304a\u3044\u3066\u3001\u4e0a\u4e0b\u306e\u8272\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f (#906)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\uff08Windows \u7248\uff09\u30bf\u30b9\u30af\u30d0\u30fc\u306b\u30bf\u30b9\u30af\u306e\u9032\u6357\u72b6\u6cc1\u3092\u8868\u793a\u3059\u308b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#904)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>2 \u3064\u306e\u9577\u65b9\u5f62\u306e\u91cd\u306a\u308b\u9818\u57df\u3092\u9577\u65b9\u5f62\u3067\u8fd4\u3059\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#872)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li><code>P2Body</code> \u306b\u5f3e\u4e38\u30e2\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#901)</li> <li>\u6642\u9593\u578b\u304c <code>_fmt()</code> \u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f (#894, #895)</li> <li>\u7a7a\u306e\u9577\u65b9\u5f62\u3092\u4f5c\u6210\u3059\u308b <code>Rect::Empty()</code>, <code>RectF::Empty()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#881)</li> <li>\u9577\u65b9\u5f62\u304c\u7a7a\u3067\u3042\u308b\u304b\u3092\u8fd4\u3059 <code>Rect::isEmpty()</code>, <code>Rect::operator bool()</code>, <code>RectF::isEmpty()</code>, <code>RectF::operator bool()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#879, #880)</li> <li><code>Array::partition()</code>, <code>Array::stable_partition()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#869)</li> <li><code>Camera2DParameters</code>, <code>LicenseManager</code>, <code>LicenseInfo</code>, <code>XInput</code> \u304c\u30b9\u30af\u30ea\u30d7\u30c8\u5185\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f (#868)</li> </ul>"},{"location":"releases/#\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a_4","title":"\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a","text":"<ul> <li>\u30d8\u30c3\u30c0\u306e\u8efd\u91cf\u5316\u306e\u305f\u3081\u306e\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3092\u884c\u3044\u307e\u3057\u305f (#883, #886)</li> <li>Windows \u7248\u306b\u304a\u3051\u308b\u3001\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u6642\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3059\u308b\u3068\u64cd\u4f5c\u4e0d\u80fd\u306b\u306a\u308b\u554f\u984c\u3092\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\u30b7\u30fc\u30f3\u5185\u306b\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u304c\u8868\u793a\u3055\u308c\u307e\u3059 (#915)</li> <li><code>Array</code> \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u63a8\u8ad6\u3092\u6539\u5584\u3057\u307e\u3057\u305f (#887)</li> <li><code>CITATION.cff</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#882)</li> <li><code>Grid::resize()</code> \u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#876)</li> </ul>"},{"location":"releases/#\u4ed5\u69d8\u5909\u66f4_4","title":"\u4ed5\u69d8\u5909\u66f4","text":"<ul> <li>\u5404\u7a2e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f (#914) </li> <li><code>PlayingCard</code> \u306e\u30c7\u30b6\u30a4\u30f3\u3092\u5fae\u4fee\u6b63\u3057\u307e\u3057\u305f (#905)</li> <li><code>PlayingCard.hpp</code> \u306f experimental \u304b\u3089\u6b63\u5f0f\u306a\u6a5f\u80fd\u306b\u306a\u308a\u307e\u3057\u305f (#885)</li> </ul>"},{"location":"releases/#\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a_5","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a","text":"<ul> <li><code>DisjointSet</code> \u306e\u30e1\u30e2\u30ea\u6d88\u8cbb\u3092\u524a\u6e1b\u3057\u307e\u3057\u305f (#878)</li> </ul>"},{"location":"releases/#\u4e0d\u5177\u5408\u30d0\u30b0\u4fee\u6b63_6","title":"\u4e0d\u5177\u5408\u30fb\u30d0\u30b0\u4fee\u6b63","text":"<ul> <li>Web \u7248\u306e\u4e0d\u5177\u5408\u4fee\u6b63\u3001\u4e92\u63db\u6027\u5411\u4e0a\u3092\u884c\u3044\u307e\u3057\u305f</li> <li><code>XMLReader</code> \u306e\u4e00\u90e8\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u4f7f\u3048\u306a\u304b\u3063\u305f\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#896) </li> <li>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#871, #903)</li> <li>\u6b63\u898f\u8868\u73fe\u306b\u304a\u3051\u308b\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u4ed5\u69d8\u306e\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#893)</li> <li><code>String::removed(StringView)</code> \u306b\u7a7a\u306e\u6587\u5b57\u5217\u3092\u6e21\u3059\u3068\u7121\u9650\u30eb\u30fc\u30d7\u306b\u306a\u308b\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#892)</li> <li><code>Allocator</code> \u306e\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#889, #891)</li> <li><code>DisjointSet::operator bool()</code> \u306e\u623b\u308a\u5024\u306e <code>true</code>, <code>false</code> \u304c\u9006\u3060\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#877)</li> <li>\u5404\u7a2e\u30af\u30e9\u30b9\u306e <code>_fmt()</code> \u5bfe\u5fdc\u306e\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#873)</li> <li><code>LineString::calculateBufferClosed()</code>, <code>LineString::calculateRoundBufferClosed()</code> \u304c\u9589\u3058\u306a\u3044\u3053\u3068\u304c\u3042\u3063\u305f\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#870)</li> </ul>"},{"location":"releases/#\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3_5","title":"\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3","text":"<ul> <li>nokotan: Web \u7248\u3092\u66f4\u65b0</li> <li>MayFlyOvO: <code>OrderedTable</code> \u306e\u8ffd\u52a0</li> <li>Raclamusi: <code>Array</code>, <code>Allocator</code>, \"fmt\" \u306e\u6539\u5584\u30fb\u30d0\u30b0\u4fee\u6b63</li> <li>AngelCase: <code>String::removed()</code> \u306e\u30d0\u30b0\u4fee\u6b63</li> <li>yunba28: \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u6539\u5584</li> <li>sknjpn: \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u6539\u5584</li> </ul>"},{"location":"releases/#\u65b0\u6a5f\u80fd_7","title":"\u65b0\u6a5f\u80fd","text":"<ul> <li>Visual Studio 2022 17.3 \u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f (#859)</li> <li><code>LineString::extractLineString(double, CloseRing)</code> \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#866)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li><code>JSON</code> \u304c\u30d0\u30a4\u30ca\u30ea\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 (BSON/CBOR/MessagePack) \u3068\u306e\u76f8\u4e92\u5909\u63db\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f (#842)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u7d50\u5408\u3059\u308b <code>FileSystem::PathAppend()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#825)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li><code>TextEditState</code> \u306b\u3001Tab \u30ad\u30fc\u3084 Enter \u30ad\u30fc\u306b\u3088\u308b\u5165\u529b\u5b8c\u4e86\u3092\u53d6\u5f97\u3067\u304d\u308b\u30e1\u30f3\u30d0\u5909\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#808)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u5e95\u8fba\u306e\u4e2d\u5fc3\u3001\u9802\u70b9\u3001\u5e95\u8fba\u306e\u9577\u3055\u304b\u3089\u4e8c\u7b49\u8fba\u4e09\u89d2\u5f62\u3092\u4f5c\u6210\u3059\u308b <code>Triangle::FromPoints()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#865)</li> <li>\u6587\u5b57\u5217\u3092\u30d1\u30fc\u30bb\u30f3\u30c8\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b <code>PercentEncode()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#864)</li> <li><code>NavMesh::query()</code> \u306b\u3001\u7d50\u679c\u306e\u683c\u7d0d\u5148\u3092\u53c2\u7167\u3067\u6e21\u3059\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#861)</li> <li><code>Math::</code> \u306b <code>Dot()</code> \u3068 <code>Cross()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u307e\u3067\u306f <code>Vec2, Vec3</code> \u306a\u3069\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f (#848)</li> <li>\u9577\u65b9\u5f62\u306e\u5404\u8fba\u30fb\u4e2d\u5fc3\u306e X \u5ea7\u6a19\u3001Y \u5ea7\u6a19\u3060\u3051\u3092\u8fd4\u3059\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#853)</li> <li>\u9577\u65b9\u5f62\u306e\u5de6\u4e0a\u3092 (0 ,0), \u53f3\u4e0b\u3092 (1, 1) \u3068\u3057\u305f\u3068\u304d\u306e (relativeX, relativeY) \u306e\u5ea7\u6a19\u3092\u8fd4\u3059\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#850)</li> <li>\u540c\u68b1\u3059\u308b Font Awesome \u3092 5.15.2 \u2192 6.1.1 \u306b\u66f4\u65b0\u3057\u307e\u3057\u305f (#846)</li> <li><code>Blob</code> \u306b\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#843)</li> <li><code>Font::height(double size)</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#830)</li> <li>\u540c\u68b1\u3059\u308b\u30e2\u30ce\u30af\u30ed Noto Emoji \u3092\u66f4\u65b0\u3057\u307e\u3057\u305f (#816)</li> <li>\u6c34\u5e73\u65b9\u5411\u306e\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u3092\u8fd4\u3059 <code>.horizontalAspectRatio()</code> \u95a2\u6570\u3092 <code>Point</code>, <code>Float2</code>, <code>Vec2</code>, <code>Rect</code>, <code>RectF</code>, <code>Image</code>, <code>Texture</code>, <code>Emoji</code>, <code>Scene::</code>, <code>RoundRect</code> \u306b\u8ffd\u52a0\u3057\u307e\u3057\u305f (#810), (#812)</li> <li><code>Multiplayer_Photon</code> \u306b\u3001\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u95a2\u9023\u306e\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#807)</li> <li><code>Multiplayer_Photon</code> \u306b <code>.joinRandomRoomOrCreate()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#806)</li> <li><code>NotImplementedError</code> \u4f8b\u5916\u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#787)</li> </ul>"},{"location":"releases/#\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a_5","title":"\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a","text":"<ul> <li>Linux \u7248\u306e CMake \u3092\u6539\u5584\u3057\u307e\u3057\u305f (#829)</li> <li>Linux \u7248\u306e CMakeLists.txt \u306b\u304a\u3044\u3066\u3001boost \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u7bc4\u56f2\u6307\u5b9a\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f (#847)</li> <li><code>SimpleGUI::TextBox()</code> \u306e\u6319\u52d5\u3092\u6539\u5584\u3057\u307e\u3057\u305f (#832), (#804)</li> <li>\u8aa4\u7528\u9632\u6b62\u306e\u305f\u3081 <code>BigInt operator \"\"_big(long double x)</code> \u3092 <code>= delete</code> \u6307\u5b9a\u3057\u307e\u3057\u305f (#826)</li> <li>\u3044\u304f\u3064\u304b\u306e\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3067\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> </ul>"},{"location":"releases/#\u4ed5\u69d8\u5909\u66f4_5","title":"\u4ed5\u69d8\u5909\u66f4","text":"<ul> <li><code>BigFloat</code> \u306e\u6587\u5b57\u5217\u5909\u63db\u3092\u6539\u5584\u3057\u307e\u3057\u305f (#839)</li> <li><code>Multiplayer_Photon::getLocalPlayerID()</code> \u306e\u623b\u308a\u5024\u3092 <code>LocalPlayerID</code> \u306b\u5909\u66f4\u3057\u307e\u3057\u305f (#809)</li> <li><code>AsyncHTTPTask::isReady</code> \u3092 const \u30e1\u30f3\u30d0\u95a2\u6570\u306b\u5909\u66f4\u3057\u307e\u3057\u305f (#805)</li> <li>\u5404\u7a2e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f (#801)</li> <li>engine \u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f (#817)</li> </ul>"},{"location":"releases/#\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a_6","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a","text":"<ul> <li><code>NavMesh::query()</code> \u306e\u5b9f\u884c\u6027\u80fd\u3092\u6539\u5584\u3057\u307e\u3057\u305f (#861)</li> <li><code>HLSL</code> \u3084 <code>GLSL</code> \u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u6539\u5584\u3057\u307e\u3057\u305f (#835)</li> <li><code>SimpleGUI</code> \u306e\u6587\u5b57\u5217\u5f15\u6570\u3092 <code>const String&amp;</code> \u2192 <code>StringView</code> \u306b\u5909\u66f4\u3057\u307e\u3057\u305f (#827)</li> <li>\u7b97\u8853\u578b\u304b\u3089 <code>BigInt</code>, <code>BigFloat</code> \u3092\u5f15\u304f\u3068\u304d\u306e\u5b9f\u884c\u6027\u80fd\u3092\u6539\u5584\u3057\u307e\u3057\u305f (#822)</li> <li><code>Rect</code>, <code>RectF</code> \u306e <code>constexpr</code> \u5bfe\u5fdc\u3092\u6539\u5584\u3057\u307e\u3057\u305f (#813)</li> </ul>"},{"location":"releases/#\u4e0d\u5177\u5408\u30d0\u30b0\u4fee\u6b63_7","title":"\u4e0d\u5177\u5408\u30fb\u30d0\u30b0\u4fee\u6b63","text":"<ul> <li><code>LineString::extractLineString()</code> \u304c\u6b63\u3057\u304f\u306a\u3044\u7d50\u679c\u3092\u8fd4\u3059\u3053\u3068\u304c\u3042\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#862)</li> <li>\u59cb\u70b9\u3068\u7d42\u70b9\u304c\u4e00\u81f4\u3059\u308b <code>LineString</code> \u306e <code>.calculateRoundBuffer()</code> \u306b\u5931\u6557\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#860)</li> <li>macOS, Linux \u7248\u3067 NULL \u304c\u30de\u30af\u30ed\u3067\u7a7a\u6587\u5b57\u5217\u306b\u7f6e\u63db\u3055\u308c\u308b\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#858)</li> <li><code>RoundRect::drawFrmae()</code> \u3067\u4e0d\u6b63\u306a\u5024\u3092\u6e21\u3057\u305f\u3068\u304d\u306b\u3001\u63cf\u753b\u304c\u4e71\u308c\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#856)</li> <li><code>BasicCamera3D</code> \u306e\u30e1\u30f3\u30d0\u95a2\u6570\u540d\u3092 <code>.getVerticlaFOV()</code> \u2192 <code>.getVerticalFOV()</code> \u306b\u4fee\u6b63\u3057\u307e\u3057\u305f (#854)</li> <li><code>Grid::choice()</code> \u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u5931\u6557\u3059\u308b\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#840)</li> <li><code>Base64::Decode()</code> \u3067\u3001\u7279\u5b9a\u6761\u4ef6\u306b\u304a\u3044\u3066\u30d0\u30c3\u30d5\u30a1\u30aa\u30fc\u30d0\u30fc\u30e9\u30f3\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#837)</li> <li><code>Parse&lt;double&gt;</code> \u304c <code>float</code> \u578b\u306e\u7cbe\u5ea6\u3067\u884c\u308f\u308c\u3066\u3044\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#831)</li> <li>\u4e00\u90e8\u6761\u4ef6\u3067 Line \u540c\u58eb\u306e Intersect, IntersectAt \u306e\u5224\u5b9a\u304c\u8aa4\u3063\u3066\u3044\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#823)</li> <li><code>BigInt</code>, <code>BigFloat</code> \u306e\u6bd4\u8f03\u6f14\u7b97\u5b50\u306e\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#821)</li> <li>macOS \u7248\u3001Linux \u7248\u306e <code>FileSystem::SelectFolder()</code> \u304c\u7d50\u679c\u306e\u672b\u5c3e\u306b <code>/</code> \u3092\u4ed8\u3051\u306a\u304b\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#824)</li> <li>macOS \u7248\u306e <code>FileSystem::FullPath()</code> \u306e\u7d50\u679c\u304c\u4e0d\u6b63\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#824)</li> <li><code>SFMT</code> \u306e\u30d8\u30c3\u30c0\u30fb\u30d5\u30a9\u30eb\u30c0\u540d\u306e typo \u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#818)</li> <li>macOS \u7248\u3067 <code>TCPClient</code> \u306e\u5207\u65ad\u304c <code>TCPServer</code> \u306b\u4f1d\u308f\u3089\u306a\u304b\u3063\u305f\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#799)</li> </ul>"},{"location":"releases/#\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3_6","title":"\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3","text":"<ul> <li>nokotan: Web \u7248\u3092\u66f4\u65b0</li> <li>MurakamiShun: Linux \u7248\u306e CMake \u3092\u6539\u5584</li> <li>m4saka: Line \u540c\u58eb\u306e Intersect, IntersectAt \u306e\u30d0\u30b0\u3092\u4fee\u6b63</li> <li>Raclamusi: <code>BigInt</code>, <code>BigFloat</code> \u306e\u6539\u5584\u30fb\u30d0\u30b0\u4fee\u6b63\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u6539\u5584</li> <li>kestrel-90r: \u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u540d\u306e typo \u306e\u4fee\u6b63</li> <li>ShivAlley: <code>Math::</code> \u306e\u6570\u5b66\u95a2\u6570\u3092\u8ffd\u52a0</li> <li>tas9n: <code>AsyncHTTPTask</code> \u306e\u6539\u5584</li> <li>ROCKTAKEY: CMakeLists.txt \u306e\u6539\u5584</li> <li>yknishidate: \u30b3\u30fc\u30c9\u306e\u6539\u5584</li> <li>agehama: \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u6539\u5584</li> <li>curay168: \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u6539\u5584</li> </ul>"},{"location":"releases/#\u65b0\u6a5f\u80fd_8","title":"\u65b0\u6a5f\u80fd","text":"<ul> <li>Visual Studio 2022 17.2 \u4ee5\u964d\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f (#790)</li> <li>Xcode 13.3 \u4ee5\u964d\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f (#753)</li> <li>Photon SDK \u3068\u9023\u4fc2\u3059\u308b <code>Multiplayer_Photon</code>\uff08\u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc\u6a5f\u80fd\uff09\u30a2\u30c9\u30aa\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#734)<ul> <li>\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb</li> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>3D \u6a19\u6e96\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306e\u5b9a\u6570\u30d0\u30c3\u30d5\u30a1\u306b UV transform \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#764)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li><code>MeshData::RoundedBox()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#769)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>\u518d\u751f\u4e2d\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u306b\u52d5\u7684\u306b\u6ce2\u5f62\u3092\u66f8\u304d\u8fbc\u3080\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#736)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>Windows \u7248\u306e\u30c8\u30fc\u30b9\u30c8\u901a\u77e5\u306b\u304a\u3051\u308b\u901a\u77e5\u97f3\u306e\u7121\u52b9\u5316\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#748)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li><code>DisjointSet</code> (Union Find) \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#742)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li><code>Shader::LinearToScreen()</code> \u306b\u304a\u3044\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u30d5\u30a3\u30eb\u30bf\u3092\u5909\u66f4\u53ef\u80fd\u306b\u3057\u307e\u3057\u305f (#762)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li><code>Polygon::addHole()</code> \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#786)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li><code>Font</code> \u306b\u5408\u5b57\u3092\u56de\u907f\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#792)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li>-1.0 \uff5e 1.0 \u306e\u7bc4\u56f2\u3092\u8fd4\u3059<code>Periodic::</code> \u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#761)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li><code>ManagedScript</code> \u306b\u3001\u30ea\u30ed\u30fc\u30c9\u3092\u767a\u751f\u3055\u305b\u308b\u30ab\u30b9\u30bf\u30e0\u30c8\u30ea\u30ac\u30fc\u3092\u8a2d\u5b9a\u3059\u308b\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#768)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li><code>Script</code> \u5185\u3067 include \u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\u3059\u308b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#767)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> <li><code>JSON::push_back()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#725)</li> <li><code>String::replace()</code> \u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u5897\u3084\u3057\u307e\u3057\u305f (#729)</li> <li><code>ImageProcessing::GenerateMips()</code> \u3067\u6700\u5927\u30ec\u30d9\u30eb\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f (#763)</li> <li>\u30b9\u30af\u30ea\u30d7\u30c8\u3067 enum \u306e\u5024\u3092\u8868\u793a\u53ef\u80fd\u306b\u3057\u307e\u3057\u305f (#774)</li> <li>\u30b9\u30af\u30ea\u30d7\u30c8\u306b <code>OpenMode</code>, <code>TextEncoding</code>, <code>TextReader</code>, <code>TextWriter</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#775)</li> <li>\u30b9\u30af\u30ea\u30d7\u30c8\u306b <code>Parse</code> \u7cfb\u306e\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#782)</li> <li>\u30b9\u30af\u30ea\u30d7\u30c8\u306b <code>INI</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#783)</li> <li><code>Deserializer&lt;MemoryViewReader&gt;</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#777)</li> <li><code>Serializer&lt;Writer&gt;::operator -&gt;() const</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#776)</li> <li><code>Geometry2D::Or()</code> \u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#793)</li> </ul>"},{"location":"releases/#\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a_6","title":"\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a","text":"<ul> <li>(\u975e\u516c\u5f0f) ARM \u5411\u3051\u306e\u30d3\u30eb\u30c9\u3092\u6539\u5584\u3057\u307e\u3057\u305f (#707)</li> <li><code>SceneManager</code> \u306e\u30b3\u30fc\u30c9\u3092\u6539\u5584\u3057\u307e\u3057\u305f (#750)</li> <li><code>NavMesh</code> \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30de\u30c3\u30d7\u69cb\u7bc9\u3092\u53ef\u80fd\u306b\u3057\u307e\u3057\u305f (#785)<ul> <li>\u30b5\u30f3\u30d7\u30eb</li> </ul> </li> </ul>"},{"location":"releases/#\u4ed5\u69d8\u5909\u66f4_6","title":"\u4ed5\u69d8\u5909\u66f4","text":"<ul> <li>\u5404\u7a2e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f (#726), (#728), (#727), (#731), (#756), (#757), (#758), (#759), (#773), (#760)</li> <li><code>Polygon::addHole()</code> \u306e\u4ed5\u69d8\u3092\u5909\u66f4\u3057\u307e\u3057\u305f (#786)</li> <li>engine / example \u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f (#740)</li> </ul>"},{"location":"releases/#\u4e0d\u5177\u5408\u30d0\u30b0\u4fee\u6b63_8","title":"\u4e0d\u5177\u5408\u30fb\u30d0\u30b0\u4fee\u6b63","text":"<ul> <li><code>Circle::boundingRect()</code> \u306e\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#718)</li> <li><code>SimpleAnimation::isDone()</code> \u306e\u623b\u308a\u5024\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#710)</li> <li><code>TextEditState::TextEditState(String&amp;&amp; defaultText)</code> \u306e use after move \u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#703)</li> <li><code>JSON</code> \u30af\u30e9\u30b9\u3067\u7a7a\u306e\u914d\u5217\u3092\u4f5c\u308c\u306a\u304b\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#723)</li> <li><code>operator&gt;&gt;(basic_istream&amp;, Color&amp;)</code> \u306e\u8b66\u544a\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#720)</li> <li>\u30ea\u30e2\u30fc\u30c8\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u74b0\u5883\u3067 <code>System::EnumActiveMonitors()</code> \u306b\u5931\u6557\u3057\u305f\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#719)</li> <li><code>TOMLReader</code> \u3067\u5b58\u5728\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30c9\u3057\u3066\u3082\u5931\u6557\u5224\u5b9a\u306b\u306a\u3089\u306a\u304b\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#732)</li> <li>Windows \u7248\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u304c\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u80cc\u9762\u306b\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#706)</li> <li>\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30d0\u30a4\u30f3\u30c9\u306e\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#741)</li> <li><code>Shape2D::Stairs()</code> \u306e\u7b2c 5 \u5f15\u6570\u304c <code>false</code> \u3060\u3068\u4e09\u89d2\u5f62\u306e\u5411\u304d\u304c\u9006\u306b\u306a\u3063\u3066\u3044\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#708)</li> <li>macOS \u7248\u3067 <code>RectanglePacking</code> \u304c\u5229\u7528\u3067\u304d\u306a\u304b\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#754)</li> <li>ARM \u5411\u3051\u30d3\u30eb\u30c9\u306b\u304a\u3051\u308b <code>Image</code> \u3068 OpenCV \u306e\u9023\u643a\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#778)</li> <li><code>SimpleGUI::ListBox()</code> \u3067\u7bc4\u56f2\u5916\u30a2\u30af\u30bb\u30b9\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#780)</li> <li><code>WaveSample</code> \u306e\u5909\u63db\u306e\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#795)</li> </ul>"},{"location":"releases/#\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3_7","title":"\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3","text":"<ul> <li>nokotan: Web \u7248\u3092\u66f4\u65b0</li> <li>tana: ARM \u5411\u3051\u30d3\u30eb\u30c9\u306e\u6539\u5584</li> <li>mak1a: Multiplayer_Photon \u306e\u5b9f\u88c5, <code>SimpleAnimation::isDone()</code> \u306e\u4fee\u6b63</li> <li>Ryoga-exe: \u30b3\u30fc\u30c9\u306e\u6539\u5584</li> <li>k-sunako: CMakeLists.txt \u306e\u6539\u5584</li> <li>falrnd: <code>Circle::boundingRect()</code> \u306e\u4fee\u6b63</li> <li>polyester-CTRL: OpenCV_Bridge \u306e\u6539\u5584</li> <li>yaito3014: \u30b3\u30fc\u30c9\u306e\u6539\u5584</li> <li>NachiaVivias: <code>WaveSample</code> \u306e\u6539\u5584</li> </ul>"},{"location":"releases/#opensiv3d-\u30c1\u30e3\u30ec\u30f3\u30b8","title":"OpenSiv3D \u30c1\u30e3\u30ec\u30f3\u30b8","text":"<ul> <li>#12 Photon: mak1a, Luke, sthairno</li> </ul>"},{"location":"releases/#\u65b0\u6a5f\u80fd_9","title":"\u65b0\u6a5f\u80fd","text":"<ul> <li>Visual Studio 2022 \u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f (#683)</li> <li>SimpleGUI \u306b\u30ea\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#659) <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nListBoxState ls1{\n{\nU\"\u5317\u6d77\u9053\", U\"\u9752\u68ee\u770c\", U\"\u5ca9\u624b\u770c\", U\"\u5bae\u57ce\u770c\", U\"\u79cb\u7530\u770c\", U\"\u5c71\u5f62\u770c\", U\"\u798f\u5cf6\u770c\", U\"\u8328\u57ce\u770c\",\nU\"\u6803\u6728\u770c\", U\"\u7fa4\u99ac\u770c\", U\"\u57fc\u7389\u770c\", U\"\u5343\u8449\u770c\", U\"\u6771\u4eac\u90fd\", U\"\u795e\u5948\u5ddd\u770c\", U\"\u65b0\u6f5f\u770c\", U\"\u5bcc\u5c71\u770c\",\nU\"\u77f3\u5ddd\u770c\", U\"\u798f\u4e95\u770c\", U\"\u5c71\u68a8\u770c\", U\"\u9577\u91ce\u770c\", U\"\u5c90\u961c\u770c\", U\"\u9759\u5ca1\u770c\", U\"\u611b\u77e5\u770c\", U\"\u4e09\u91cd\u770c\",\nU\"\u6ecb\u8cc0\u770c\", U\"\u4eac\u90fd\u5e9c\", U\"\u5927\u962a\u5e9c\", U\"\u5175\u5eab\u770c\", U\"\u5948\u826f\u770c\", U\"\u548c\u6b4c\u5c71\u770c\", U\"\u9ce5\u53d6\u770c\", U\"\u5cf6\u6839\u770c\",\nU\"\u5ca1\u5c71\u770c\", U\"\u5e83\u5cf6\u770c\", U\"\u5c71\u53e3\u770c\", U\"\u5fb3\u5cf6\u770c\", U\"\u9999\u5ddd\u770c\", U\"\u611b\u5a9b\u770c\", U\"\u9ad8\u77e5\u770c\", U\"\u798f\u5ca1\u770c\",\nU\"\u4f50\u8cc0\u770c\", U\"\u9577\u5d0e\u770c\", U\"\u718a\u672c\u770c\", U\"\u5927\u5206\u770c\", U\"\u5bae\u5d0e\u770c\", U\"\u9e7f\u5150\u5cf6\u770c\", U\"\u6c96\u7e04\u770c\",\n}\n};\nListBoxState ls2{\n{\nU\"\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\uff081905\u5e741\u6708 - 1906\u5e748\u6708\u3001\u300e\u30db\u30c8\u30c8\u30ae\u30b9\u300f/1905\u5e7410\u6708 - 1907\u5e745\u6708\u3001\u5927\u5009\u66f8\u5e97\u30fb\u670d\u90e8\u66f8\u5e97\uff09\",\nU\"\u574a\u3063\u3061\u3083\u3093\uff081906\u5e744\u6708\u3001\u300e\u30db\u30c8\u30c8\u30ae\u30b9\u300f/1907\u5e74\u3001\u6625\u967d\u5802\u520a\u300e\u9d89\u7c60\u300f\u53ce\u9332\uff09\",\nU\"\u8349\u6795\uff081906\u5e749\u6708\u3001\u300e\u65b0\u5c0f\u8aac\u300f/\u300e\u9d89\u7c60\u300f\u53ce\u9332\uff09\",\nU\"\u4e8c\u767e\u5341\u65e5\uff081906\u5e7410\u6708\u3001\u300e\u4e2d\u592e\u516c\u8ad6\u300f/\u300e\u9d89\u7c60\u300f\u53ce\u9332\uff09\",\nU\"\u91ce\u5206\uff081907\u5e741\u6708\u3001\u300e\u30db\u30c8\u30c8\u30ae\u30b9\u300f/1908\u5e74\u3001\u6625\u967d\u5802\u520a\u300e\u8349\u5408\u300f\u53ce\u9332\uff09\",\nU\"\u865e\u7f8e\u4eba\u8349\uff081907\u5e746\u6708 - 10\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1908\u5e741\u6708\u3001\u6625\u967d\u5802\uff09\",\nU\"\u5751\u592b\uff081908\u5e741\u6708 - 4\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/\u300e\u8349\u5408\u300f\u53ce\u9332\uff09\",\nU\"\u4e09\u56db\u90ce\uff081908\u5e749 - 12\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1909\u5e745\u6708\u3001\u6625\u967d\u5802\uff09\",\nU\"\u305d\u308c\u304b\u3089\uff081909\u5e746 - 10\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1910\u5e741\u6708\u3001\u6625\u967d\u5802\uff09\",\nU\"\u9580\uff081910\u5e743\u6708 - 6\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1911\u5e741\u6708\u3001\u6625\u967d\u5802\uff09\",\nU\"\u5f7c\u5cb8\u904e\u8fc4\uff081912\u5e741\u6708 - 4\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1912\u5e749\u6708\u3001\u6625\u967d\u5802\uff09\",\nU\"\u884c\u4eba\uff081912\u5e7412\u6708 - 1913\u5e7411\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1914\u5e741\u6708\u3001\u5927\u5009\u66f8\u5e97\uff09\",\nU\"\u3053\u309d\u308d\uff081914\u5e744\u6708 - 8\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1914\u5e749\u6708\u3001\u5ca9\u6ce2\u66f8\u5e97\uff09\",\nU\"\u9053\u8349\uff081915\u5e746\u6708 - 9\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1915\u5e7410\u6708\u3001\u5ca9\u6ce2\u66f8\u5e97\uff09\",\nU\"\u660e\u6697\uff081916\u5e745\u6708 - 12\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1917\u5e741\u6708\u3001\u5ca9\u6ce2\u66f8\u5e97\uff09\",\n}\n};\nls2.selectedItemIndex = 3;\nListBoxState ls3 = ls2;\nwhile (System::Update())\n{\nif (SimpleGUI::ListBox(ls1, Vec2{ 20, 20 }, 120, 156) &amp;&amp; ls1.selectedItemIndex)\n{\n}\nif (SimpleGUI::ListBox(ls2, Vec2{ 180, 20 }, 240, 156, false) &amp;&amp; ls2.selectedItemIndex)\n{\n}\nif (SimpleGUI::ListBox(ls3, Vec2{ 20, 200 }, 1020, 480) &amp;&amp; ls3.selectedItemIndex)\n{\n}\n}\n}\n</code></pre></li> <li>\u540c\u68b1\u3059\u308b Color Emoji \u3092\u66f4\u65b0\u3057\u3001Unicode 14.0 \u306e\u7d75\u6587\u5b57\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f (#694) <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.4, 0.5, 0.6 });\nconst Texture e0{ U\"\ud83e\udee0\"_emoji };\nconst Texture e1{ U\"\ud83e\udee3\"_emoji };\nconst Texture e2{ U\"\ud83e\udee1\"_emoji };\nconst Texture e3{ U\"\ud83e\udee5\"_emoji };\nconst Texture e4{ U\"\ud83e\udef5\"_emoji };\nconst Texture e5{ U\"\ud83e\uddcc\"_emoji };\nconst Texture e6{ U\"\ud83e\udeb8\"_emoji };\nconst Texture e7{ U\"\ud83e\udeba\"_emoji };\nconst Texture e8{ U\"\ud83e\uded8\"_emoji };\nconst Texture e9{ U\"\ud83e\uded9\"_emoji };\nconst Texture e10{ U\"\ud83e\udee7\"_emoji };\nconst Texture e11{ U\"\ud83d\udede\"_emoji };\nwhile (System::Update())\n{\ne0.drawAt(100, 100);\ne1.drawAt(300, 100);\ne2.drawAt(500, 100);\ne3.drawAt(700, 100);\ne4.drawAt(100, 300);\ne5.drawAt(300, 300);\ne6.drawAt(500, 300);\ne7.drawAt(700, 300);\ne8.drawAt(100, 500);\ne9.drawAt(300, 500);\ne10.drawAt(500, 500);\ne11.drawAt(700, 500);\n}\n}\n</code></pre></li> <li>GUI \u30d5\u30a9\u30f3\u30c8\u306b\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30a2\u30a4\u30b3\u30f3\u30d5\u30a9\u30f3\u30c8\u3078\u306e\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002SimpleGUI \u306e\u30c6\u30ad\u30b9\u30c8\u3067 <code>U\"\\U000F0493 Setting\"</code> \u306e\u3088\u3046\u306b\u30a2\u30a4\u30b3\u30f3\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u30a2\u30a4\u30b3\u30f3\u3092\u8868\u793a\u3067\u304d\u307e\u3059 (#698) <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\ndouble volume = 1.0;\nwhile (System::Update())\n{\nSimpleGUI::Button(U\"\\U000F1677 \u3086\u3063\u304f\u308a\", Vec2{ 20, 20 }, 160);\nSimpleGUI::Button(U\"\\U000F0907 \u3044\u305d\u3044\u3067\", Vec2{ 20, 60 }, 160);\nSimpleGUI::Button(U\"\\U000F0493 \u8a2d\u5b9a\", Vec2{ 20, 100 }, 160);\nSimpleGUI::Slider(0.5 &lt; volume ? U\"\\U000F057E\"\n: 0.0 &lt; volume ? U\"\\U000F0580\" : U\"\\U000F0581\", volume, Vec2{ 20, 140 }, 30, 130);\n}\n}\n</code></pre></li> <li>Windows \u7248\u306e <code>System::EnumerateMonitors()</code> \u306b\u304a\u3044\u3066\u3001\u3088\u308a\u533a\u5225\u3057\u3084\u3059\u3044\u30e2\u30cb\u30bf\u30fc\u306e\u540d\u524d\u3092\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f (#695)</li> <li>\u6587\u5b57\u3092 3D \u306e Mesh \u3067\u8868\u73fe\u3059\u308b\u305f\u3081\u306e <code>MeshGlyph</code> \u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#680) <pre><code># include &lt;Siv3D.hpp&gt;\nclass Font3D\n{\npublic:\nFont3D() = default;\nSIV3D_NODISCARD_CXX20\nexplicit Font3D(const Font&amp; font)\n: m_font{ font } {}\n[[nodiscard]]\nArray&lt;MeshGlyph&gt; getGlyphs(StringView s) const\n{\nArray&lt;MeshGlyph&gt; results;\nfor (auto ch : s)\n{\nauto it = m_table.find(ch);\nif (it == m_table.end())\n{\nit = m_table.emplace(ch, m_font.createMesh(ch)).first;\n}\nresults &lt;&lt; it-&gt;second;\n}\nreturn results;\n}\nvoid drawCylindricalInner(StringView s, const Vec3&amp; center, double r, double scale, double startAngle, const ColorF&amp; color) const\n{\nconst double perimeter = (r * Math::TwoPi);\ndouble penPosX = 0.0;\nstartAngle += 90_deg;\nfor (auto meshGlyph : getGlyphs(s))\n{\npenPosX += (meshGlyph.xOffset * scale);\nif (meshGlyph.mesh)\n{\nconst double angle = (penPosX / perimeter) * 360_deg;\nconst Quaternion q = Quaternion::RotateY(-90_deg + angle - startAngle);\nconst Vec3 pos = Cylindrical{ r, (-180_deg - angle + startAngle), 0.0 } + center;\nconst Mat4x4 mat = Mat4x4::Translate(-meshGlyph.xOffset, 0, 0)\n.scaled(scale)\n.rotated(q)\n.translated(pos);\nmeshGlyph.mesh.draw(mat, color);\n}\npenPosX += (meshGlyph.xAdvance - meshGlyph.xOffset) * scale;\n}\n}\nvoid drawCylindricalOuter(StringView s, const Vec3&amp; center, double r, double scale, double startAngle, const ColorF&amp; color) const\n{\nconst double perimeter = (r * Math::TwoPi);\ndouble penPosX = 0.0;\nstartAngle += 90_deg;\nfor (auto meshGlyph : getGlyphs(s))\n{\npenPosX += (meshGlyph.xOffset * scale);\nif (meshGlyph.mesh)\n{\nconst double angle = (penPosX / perimeter) * 360_deg;\nconst Quaternion q = Quaternion::RotateY(90_deg - angle - startAngle);\nconst Vec3 pos = Cylindrical{ r, (180_deg + angle + startAngle), 0.0 } + center;\nconst Mat4x4 mat = Mat4x4::Translate(-meshGlyph.xOffset, 0, 0)\n.scaled(scale)\n.rotated(q)\n.translated(pos);\nmeshGlyph.mesh.draw(mat, color);\n}\npenPosX += (meshGlyph.xAdvance - meshGlyph.xOffset) * scale;\n}\n}\nprivate:\nFont m_font;\nmutable HashTable&lt;char32, MeshGlyph&gt; m_table;\n};\nvoid Main()\n{\nWindow::Resize(1280, 720);\nconst ColorF backgroundColor = ColorF{ 0.5, 0.6, 0.6 }.removeSRGBCurve();\nconst Texture uvChecker{ U\"example/texture/uv.png\", TextureDesc::MippedSRGB };\nconst MSRenderTexture renderTexture{ Scene::Size(), TextureFormat::R8G8B8A8_Unorm_SRGB, HasDepth::Yes };\nDebugCamera3D camera{ renderTexture.size(), 30_deg, Vec3{ 10, 16, -32 } };\nconst Font3D font3D{ Font{ 60 } };\nwhile (System::Update())\n{\nconst double t = Scene::Time();\ncamera.update(2.0);\nGraphics3D::SetCameraTransform(camera);\n// 3D \u63cf\u753b\n{\nGraphics3D::SetGlobalAmbientColor(Graphics3D::DefaultGlobalAmbientColor);\nGraphics3D::SetSunColor(ColorF{ 0.75 });\nconst ScopedRenderTarget3D target{ renderTexture.clear(backgroundColor) };\nPlane{ 64 }.draw(uvChecker);\nCylinder{ Vec3{0,0,0}, Vec3{0, 16, 0}, 5.6 }.draw(ColorF{ 0.25 }.removeSRGBCurve());\n// 3D Text Circle\n{\n// \u4e21\u9762\u63cf\u753b\u3001\u30e9\u30a4\u30c6\u30a3\u30f3\u30b0\u7121\u52b9\u5316\nconst ScopedRenderStates3D rasterizer{ RasterizerState::SolidCullNone, BlendState::Additive };\nGraphics3D::SetGlobalAmbientColor(ColorF{ 1.0 });\nGraphics3D::SetSunColor(ColorF{ 0.0 });\nfont3D.drawCylindricalOuter(DateTime::Now().format(U\"HH:mm:ss\"), Vec3{ 0, 11.5, 0 }, 6 * 1.2, 3.0 * 1.2, (t * -25_deg), ColorF{ 1.0, 0.98, 0.9 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(DateTime::Now().format(U\"HH:mm:ss\"), Vec3{ 0, 11.5, 0 }, 6 * 1.2, 3.0 * 1.2, (t * -25_deg) + 180_deg, ColorF{ 1.0, 0.98, 0.9 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"Monday, September 27, 2021\", Vec3{ 0, 10, 0 }, 6 * 1.2, 1.2 * 1.2, (t * -50_deg), ColorF{ 1.0, 0.98, 0.9 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"NIKKEI 225 30,248.81 +609.41\", Vec3{ 0, 8, 0 }, 6, 1.0, (t * -72_deg), ColorF{ 0.6, 1.0, 0.8 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"HANG SENG 24,192,16 -318.82\", Vec3{ 0, 7, 0 }, 6, 1.0, (t * -62_deg), ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"SHANGHAI 3,613.07 -29.15\", Vec3{ 0, 6, 0 }, 6, 1.0, (t * -58_deg), ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"FTSE 7,051.48 -26.87\", Vec3{ 0, 5, 0 }, 6, 1.0, (t * -70_deg), ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"CAC 6,638.46 -63.52\", Vec3{ 0, 4, 0 }, 6, 1.0, (t * -60_deg), ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"DAX 15,531.75 -112.22\", Vec3{ 0, 3, 0 }, 6, 1.0, (t * -66_deg), ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"NASDAQ 15,047.70 -4.54\", Vec3{ 0, 2, 0 }, 6, 1.0, (t * -68_deg), ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"NIKKEI 225 30,248.81 +609.41\", Vec3{ 0, 8, 0 }, 6, 1.0, (t * -72_deg) + 180_deg, ColorF{ 0.6, 1.0, 0.8 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"HANG SENG 24,192,16 -318.82\", Vec3{ 0, 7, 0 }, 6, 1.0, (t * -62_deg) + 180_deg, ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"SHANGHAI 3,613.07 -29.15\", Vec3{ 0, 6, 0 }, 6, 1.0, (t * -58_deg) + 180_deg, ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"FTSE 7,051.48 -26.87\", Vec3{ 0, 5, 0 }, 6, 1.0, (t * -70_deg) + 180_deg, ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"CAC 6,638.46 -63.52\", Vec3{ 0, 4, 0 }, 6, 1.0, (t * -60_deg) + 180_deg, ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"DAX 15,531.75 -112.22\", Vec3{ 0, 3, 0 }, 6, 1.0, (t * -66_deg) + 180_deg, ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"NASDAQ 15,047.70 -4.54\", Vec3{ 0, 2, 0 }, 6, 1.0, (t * -68_deg) + 180_deg, ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\n}\n}\n// 3D \u30b7\u30fc\u30f3\u3092 2D \u30b7\u30fc\u30f3\u306b\u63cf\u753b\n{\nGraphics3D::Flush();\nrenderTexture.resolve();\nShader::LinearToScreen(renderTexture);\n}\n}\n}\n</code></pre></li> <li>Windows \u7248\u306b\u304a\u3044\u3066\u3001Leap Motion \u30c7\u30d0\u30a4\u30b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3057\u305f (#677) <pre><code>// Ultraleap SDK \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\n// 1. \u30a4\u30f3\u30af\u30eb\u30fc\u30c9 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\n// C:\\Program Files\\Ultraleap\\LeapSDK\\include \u3092\u8ffd\u52a0\u3002\n// 2. \u30e9\u30a4\u30d6\u30e9\u30ea \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\n// C:\\Program Files\\Ultraleap\\LeapSDK\\lib\\x64 \u3092\u8ffd\u52a0\u3002\n// 3. App \u30d5\u30a9\u30eb\u30c0\u306b LeapC.dll \u3092\u30b3\u30d4\u30fc\u3002\n# include &lt;Siv3D.hpp&gt;\ninline constexpr double HandScale = 0.08;\nvoid DrawSphere(uint32 handID, const Vec3&amp; pos)\n{\nSphere{ (pos * HandScale), (6 * HandScale) }\n.draw(HSV{ handID * 60 }.removeSRGBCurve());\n}\nvoid DrawCylinder(const Vec3&amp; from, const Vec3&amp; to)\n{\nCylinder{ (from * HandScale), (to * HandScale), (3 * HandScale) }.draw();\n}\nvoid Main()\n{\nWindow::Resize(1280, 720);\nconst ColorF backgroundColor = ColorF{ 0.4, 0.6, 0.8 }.removeSRGBCurve();\nconst Texture uvChecker{ U\"example/texture/uv.png\", TextureDesc::MippedSRGB };\nconst MSRenderTexture renderTexture{ Scene::Size(), TextureFormat::R8G8B8A8_Unorm_SRGB, HasDepth::Yes };\nDebugCamera3D camera{ renderTexture.size(), 30_deg, Vec3{ 0, 32, -32 } };\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nsize_t trackingModeIndex = 0;\nbool showInfo = true;\nLeap::Connection leap{ Leap::TrackingMode::Desktop };\nif (not leap)\n{\nthrow Error{ U\"Leap device not found\" };\n}\nwhile (System::Update())\n{\nleap.update();\ncamera.update(2.0);\nGraphics3D::SetCameraTransform(camera);\n// 3D \u63cf\u753b\n{\nconst ScopedRenderTarget3D target{ renderTexture.clear(backgroundColor) };\nif (trackingModeIndex == 0)\n{\nPlane{ 64 }.draw(uvChecker);\nconst double z = 6;\nfor (auto x : Range(-2, 2))\n{\nCylinder{ (x * 6.0), 4, z, 2, 8 }.draw(ColorF{ 0.8 }.removeSRGBCurve());\n}\nfor (auto x : Range(-8, 8))\n{\nconst Box box{ (x * 2), 10, z, 1.8, 1, 10 };\nbool intersect = false;\nfor (const auto&amp; hand : leap.getHands())\n{\nfor (auto fingerIndex : step(5))\n{\nfor (auto boneIndex : Range(1, 3))\n{\nconst Vec3 to = hand.fingerBone(fingerIndex, boneIndex).to;\nconst Sphere sphere{ (to * HandScale), (6 * HandScale) };\nif (sphere.intersects(box))\n{\nintersect = true;\nbreak;\n}\n}\nif (intersect)\n{\nbreak;\n}\n}\nif (intersect)\n{\nbreak;\n}\n}\nbox.draw(HSV{ (x * 40), (intersect ? 0.8 : 0.15), 1.0 }.removeSRGBCurve());\n}\n}\nfor (const auto&amp; hand : leap.getHands())\n{\nconst auto handID = hand.id();\nfor (auto fingerIndex : step(5))\n{\nfor (auto boneIndex : step(4))\n{\nconst Vec3 from = hand.fingerBone(fingerIndex, boneIndex).from;\nconst Vec3 to = hand.fingerBone(fingerIndex, boneIndex).to;\nif (fingerIndex == 4 &amp;&amp; boneIndex == 0)\n{\nDrawSphere(handID, from);\n}\nDrawSphere(handID, to);\nif ((fingerIndex != 0 &amp;&amp; fingerIndex != 4) &amp;&amp; boneIndex == 0)\n{\ncontinue;\n}\nDrawCylinder(from, to);\n}\n}\nDrawSphere(handID, hand.palmPosition());\nDrawCylinder(hand.fingerBone(0, 0).from, hand.fingerBone(1, 1).from);\nDrawCylinder(hand.fingerBone(1, 1).from, hand.fingerBone(2, 1).from);\nDrawCylinder(hand.fingerBone(2, 1).from, hand.fingerBone(3, 1).from);\nDrawCylinder(hand.fingerBone(3, 1).from, hand.fingerBone(4, 1).from);\nDrawCylinder(hand.fingerBone(0, 0).from, hand.fingerBone(4, 0).from);\n}\n}\n{\nGraphics3D::Flush();\nrenderTexture.resolve();\nShader::LinearToScreen(renderTexture);\n}\nif (SimpleGUI::RadioButtons(trackingModeIndex, { U\"Desktop\", U\"Head-mounted\", U\"Screentop\" }, Vec2{ 20,20 }))\n{\nleap.setTrackingMode(static_cast&lt;Leap::TrackingMode&gt;(trackingModeIndex));\nif (trackingModeIndex == 0)\n{\ncamera = DebugCamera3D{ renderTexture.size(), 30_deg, Vec3{ 0, 32, -32 } };\n}\nelse if (trackingModeIndex == 1)\n{\ncamera = DebugCamera3D{ renderTexture.size(), 30_deg, Vec3{ 0, 32, -24 }, Vec3{ 0, 0, 8 } };\n}\nelse\n{\ncamera = DebugCamera3D{ renderTexture.size(), 30_deg, Vec3{ 0, 32, -56 }, Vec3{ 0, 0, -24 } };\n}\n}\nSimpleGUI::CheckBox(showInfo, U\"showInfo\", Vec2{ 20, 140 });\nif (showInfo)\n{\nfor (const auto&amp; hand : leap.getHands())\n{\nconst Vec2 palmPos = camera.worldToScreenPoint(hand.palmPosition() * HandScale).xy();\nString ext;\nfor (auto fingerIndex : step(5))\n{\next &lt;&lt; (hand.isExtended(fingerIndex) ? U'1' : U'0');\n}\nconst String state = U\"pinchDistance: {:.2f}\\ngrabAngle: {:.2f}\\npinchStrength: {:.2f}\\ngrabStrength: {:.2f}\\nfingers:{}\"_fmt(\nhand.pinchDistance(), hand.grabAngle(), hand.pinchStrength(), hand.grabStrength(), ext);\nfont(hand.isLeftHand() ? U\"L\" : U\"R\")\n.draw(TextStyle::Outline(0.15, ColorF{ 0.0 }), 100, Arg::rightCenter = palmPos.movedBy(-20, 0));\nfont(state)\n.draw(30, Arg::leftCenter = palmPos, ColorF{ 0.15 });\n}\n}\n}\n}\n</code></pre></li> <li><code>Math::Tau</code> \u3084 <code>0.5_tau</code> \u306a\u3069\u30012\u03c0 \u3092\u8868\u3059\u5b9a\u6570 \u03c4 \u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f (#673) <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nPrint &lt;&lt; Math::Pi;\nPrint &lt;&lt; Math::Tau;\nPrint &lt;&lt; Math::PiF;\nPrint &lt;&lt; Math::TauF;\nPrint &lt;&lt; 0.5_pi;\nPrint &lt;&lt; 0.5_tau;\nwhile (System::Update())\n{\n}\n}\n</code></pre></li> <li>\u7570\u306a\u308b\u7a2e\u985e\u3069\u3046\u3057\u306e <code>Optional</code> \u306e\u6bd4\u8f03\u6f14\u7b97\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f (#670)</li> <li><code>BigFloat</code> \u306b <code>.isNan()</code>, <code>.isInf()</code> \u30e1\u30f3\u30d0\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#669)</li> <li><code>Array</code>, <code>Optional</code>, <code>BigInt</code>, <code>BigFloat</code> \u306b\u4e09\u65b9\u6bd4\u8f03\u6f14\u7b97\u5b50\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f (#658)</li> <li><code>String</code>, <code>StringView</code>, <code>UUIDValue</code> \u306b\u4e09\u65b9\u6bd4\u8f03\u6f14\u7b97\u5b50\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f (#664)</li> <li><code>DrawableText::regionBase()</code> \u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#666)</li> <li>Windows \u7248\u306b\u304a\u3044\u3066\u3001\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30ec\u30fc\u30c8\u4ee5\u4e0a\u306e\u983b\u5ea6\u3067\u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u3092\u53d6\u5f97\u3067\u304d\u308b\u95a2\u6570 <code>Platform::Windows::Keyboard::GetEvents()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#662) <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nuint64 eventIndex = 0;\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Clear\", Vec2{ 680, 20 }))\n{\nClearPrint();\n}\nfor (const auto&amp; event : Platform::Windows::Keyboard::GetEvents())\n{\nif (eventIndex &lt; event.eventIndex)\n{\nPrint &lt;&lt; event.timeMillisec &lt;&lt; U\": \" &lt;&lt; Input { InputDeviceType::Keyboard, event.code }.name() &lt;&lt; (event.down ? U\" down (event)\" : U\" up (event)\");\neventIndex = event.eventIndex;\n}\n}\n/*\n\t\tfor (const auto&amp; key : Keyboard::GetAllInputs())\n\t\t{\n\t\t\tif (key.down())\n\t\t\t{\n\t\t\t\tPrint &lt;&lt; Time::GetMillisec() &lt;&lt; U\": \" &lt;&lt; key.name() &lt;&lt; U\" down\";\n\t\t\t}\n\t\t\telse if (key.up())\n\t\t\t{\n\t\t\t\tPrint &lt;&lt; Time::GetMillisec() &lt;&lt; U\": \" &lt;&lt; key.name() &lt;&lt; U\" up\";\n\t\t\t}\n\t\t}\n\t\t*/\n}\n}\n</code></pre></li> </ul>"},{"location":"releases/#\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a_7","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a","text":"<ul> <li>\u30b9\u30af\u30ea\u30d7\u30c8\u30a8\u30f3\u30b8\u30f3\u306e\u521d\u671f\u5316\u3092\u9045\u5ef6\u3055\u305b\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u6a5f\u80fd\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u521d\u671f\u5316\u306b\u304b\u304b\u308b\u6642\u9593\u3092\u77ed\u7e2e\u3057\u307e\u3057\u305f\uff08\u6570\u5341\u30df\u30ea\u79d2\uff09 (#657)</li> <li>GLSL \u30b7\u30a7\u30fc\u30c0\u30d5\u30a1\u30a4\u30eb\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u8a18\u8ff0\u3092\u7c21\u7d20\u5316\u3057\u3001\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\u3092\u5c11\u3057\u524a\u6e1b\u3057\u307e\u3057\u305f (#687)</li> <li><code>HalfFloat</code> \u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3092 constexpr \u306b\u3057\u307e\u3057\u305f (#689)</li> </ul>"},{"location":"releases/#\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a_7","title":"\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a","text":"<ul> <li><code>NotoEmoji-Regular.ttf</code> \u3092\u30a8\u30f3\u30b8\u30f3\u30ea\u30bd\u30fc\u30b9\u306b\u542b\u307e\u306a\u304f\u3066\u3082\u30a8\u30f3\u30b8\u30f3\u3092\u521d\u671f\u5316\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f (#684)</li> <li><code>NotoSansCJK-Regular.ttc.zstdcmp</code> \u3084 <code>NotoSansJP-Regular.otf.zstdcmp</code> \u306e\u4ee3\u66ff\u306b\u3067\u304d\u308b\u3001\u6700\u4f4e\u9650\u5fc5\u8981\u306a\u30b0\u30ea\u30d5\u3092\u683c\u7d0d\u3057\u305f\u30d5\u30a9\u30f3\u30c8 <code>engine/font/min/siv3d-min.woff</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#682)</li> <li>Windows \u7248\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u306e\u5bfe\u5fdc\u8a00\u8a9e\u3092\u5897\u3084\u3057\u307e\u3057\u305f (#671)</li> </ul>"},{"location":"releases/#\u4ed5\u69d8\u5909\u66f4_7","title":"\u4ed5\u69d8\u5909\u66f4","text":"<ul> <li>Web \u7248\u3067\u901a\u5e38\u3068\u540c\u3058\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u304c\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u305f\u3081\u3001<code>SIV3D_MAINLOOP_BEGIN</code> \u3092\u524a\u9664\u3057\u307e\u3057\u305f (#674)</li> <li>macOS \u7248\u3068 Linux \u7248\u306b\u304a\u3044\u3066\u3001\u30ed\u30b0\u306f <code>std::cout</code> \u3067\u306f\u306a\u304f <code>std::clog</code> \u304a\u3088\u3073 <code>std::cerr</code> \u306b\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f (#630)</li> <li><code>engine</code> \u304a\u3088\u3073 <code>example</code> \u30d5\u30a9\u30eb\u30c0\u306e\u66f4\u65b0 (#686)</li> </ul>"},{"location":"releases/#\u4e0d\u5177\u5408\u30d0\u30b0\u4fee\u6b63_9","title":"\u4e0d\u5177\u5408\u30fb\u30d0\u30b0\u4fee\u6b63","text":"<ul> <li><code>DrawableText::draw(double, Arg:: ...)</code> \u3084 <code>DrawableText::region(double, Arg ...)</code> \u306e\u4f4d\u7f6e\u304c\u6b63\u3057\u304f\u306a\u304b\u3063\u305f\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#665)</li> <li>Windows \u7248\u306b\u304a\u3044\u3066<code>Window::IsToggleFullscreenEnabled()</code> \u304c\u5e38\u306b <code>false</code> \u3092\u8fd4\u3059\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#699)</li> <li><code>HalfFloat{ 0.0f } == HalfFloat{ -0.0f }</code> \u304c <code>false</code> \u306b\u306a\u308b\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#660)</li> <li><code>CircularBase&lt;float, Oclock&gt;</code> \u4f7f\u7528\u6642\u306b\u767a\u751f\u3059\u308b\u8b66\u544a\u3092\u89e3\u6d88\u3057\u307e\u3057\u305f (#667)</li> </ul>"},{"location":"releases/#\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3_8","title":"\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3","text":"<ul> <li>nokotan: Web \u7248\u3092\u66f4\u65b0</li> <li>tetsurom: <code>HalfFloat</code> \u306e\u5b9f\u88c5\u6539\u5584, <code>Optional</code> \u306e\u5b9f\u88c5\u6539\u5584, <code>BigFloat</code> \u306e\u5b9f\u88c5\u6539\u5584, \u5404\u7a2e\u30af\u30e9\u30b9\u3078\u306e\u4e09\u65b9\u6bd4\u8f03\u6f14\u7b97\u5b50\u306e\u5b9f\u88c5</li> </ul>"},{"location":"releases/#\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a_8","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a","text":"<ul> <li>Windows \u7248\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8d77\u52d5\u3092\u9ad8\u901f\u5316\u3057\u307e\u3057\u305f (#650, #651)</li> <li>\u30e1\u30e2\u30ea / VRAM \u306e\u6d88\u8cbb\u91cf\u3092\u524a\u6e1b\u3057\u307e\u3057\u305f (#648)</li> </ul>"},{"location":"releases/#\u4e0d\u5177\u5408\u30d0\u30b0\u4fee\u6b63_10","title":"\u4e0d\u5177\u5408\u30fb\u30d0\u30b0\u4fee\u6b63","text":"<ul> <li>Windows \u7248\u3067\u91cd\u3044\u63cf\u753b\u51e6\u7406\u3092\u884c\u3063\u305f\u3068\u304d\u306b v0.4.3 \u3088\u308a\u3082\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u304c\u4f4e\u4e0b\u3059\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u554f\u984c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#652)</li> <li>Windows \u7248\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e stdafx.h \u3092 Header Files \u30d5\u30a3\u30eb\u30bf\u306b\u79fb\u52d5\u3057\u307e\u3057\u305f (#653)</li> </ul>"},{"location":"releases/#\u65b0\u6a5f\u80fd_10","title":"\u65b0\u6a5f\u80fd","text":"<ul> <li>SDF / MSDF \u30c6\u30af\u30b9\u30c1\u30e3\u63cf\u753b\u6642\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7c21\u5358\u306b\u6307\u5b9a\u3067\u304d\u308b <code>Graphics2D::SetSDFParameters(const TextStyle&amp;)</code>, <code>Graphics2D::SetMSDFParameters(const TextStyle&amp;)</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (#647)</li> </ul>"},{"location":"releases/#\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a_8","title":"\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a","text":"<ul> <li>Windows \u7248\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u767a\u751f\u3057\u3066\u3044\u305f\u30d3\u30eb\u30c9\u6642\u306e IntelliSense \u306e\u8b66\u544a\u3092 2 \u4ef6\u6291\u5236\u3057\u307e\u3057\u305f (#643)</li> <li>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> </ul>"},{"location":"releases/#\u4ed5\u69d8\u5909\u66f4_8","title":"\u4ed5\u69d8\u5909\u66f4","text":"<ul> <li><code>Monitor</code> \u306f <code>MonitorInfo</code> \u306b\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f (#649)</li> <li><code>UUID</code> \u306f <code>UUIDValue</code> \u306b\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f</li> </ul>"},{"location":"releases/#\u4e0d\u5177\u5408\u30d0\u30b0\u4fee\u6b63_11","title":"\u4e0d\u5177\u5408\u30fb\u30d0\u30b0\u4fee\u6b63","text":"<ul> <li>v0.6.0 \u306b\u304a\u3044\u3066\u3001Windows \u7248\u3067\u30bf\u30c3\u30c1\u64cd\u4f5c\u3092\u3057\u305f\u3068\u304d\u306b\u5de6\u30af\u30ea\u30c3\u30af\u3068\u5224\u5b9a\u3055\u308c\u306b\u304f\u304f\u306a\u3063\u3066\u3044\u305f\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#645)</li> <li>v0.6.0 \u306b\u304a\u3044\u3066\u3001<code>&lt;Siv3D/Windows/Windows.hpp&gt;</code> \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3044\u305f\u554f\u984c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#644)</li> <li>v0.6.0 \u306b\u304a\u3044\u3066\u3001<code>Platform::Windows::GetHWND()</code> \u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u554f\u984c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f (#646)</li> <li><code>MathParser</code> \u306b\u7a7a\u306e\u6587\u5b57\u5217\u3092\u6e21\u3057\u305f\u3068\u304d\u306b\u4f8b\u5916\u3092\u6295\u3052\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u305f (#641)</li> </ul>"},{"location":"releases/#\u65b0\u6a5f\u80fd_11","title":"\u65b0\u6a5f\u80fd","text":"<ul> <li>\u57fa\u672c\u7684\u306a 3D \u63cf\u753b\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f</li> <li>C++20 \u306b\u5bfe\u5fdc\u3057\u3001Concepts \u3084 Designated initialization, \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3078\u306e <code>[[nodiscard]]</code>, \u5b87\u5b99\u8239\u6f14\u7b97\u5b50\u3001\u3088\u308a\u591a\u304f\u306e <code>constexpr</code>, \u65b0\u3057\u3044\u6a19\u6e96\u6a5f\u80fd\u30e9\u30a4\u30d6\u30e9\u30ea\u6a5f\u80fd\u306a\u3069\u304c\u6d3b\u7528\u3055\u308c\u3066\u3044\u307e\u3059</li> <li>\u8a66\u9a13\u7684\u306a Web \u7248\u306e\u5b9f\u88c5\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f (\u8a73\u3057\u304f\u306f OpenSiv3D for Web)</li> <li>Windows \u3067 OpenGL \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304c\u5229\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f (\u8a73\u3057\u304f\u306f \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 35)</li> <li>\u30d5\u30a1\u30a4\u30eb\u306e\u975e\u540c\u671f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306a\u3069\u3092\u884c\u3046 HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 HighDPI \u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f</li> <li>SVG \u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f</li> <li>MIDI \u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f</li> <li>\u52d5\u753b\u3092\u30c6\u30af\u30b9\u30c1\u30e3\u3068\u3057\u3066\u6271\u3048\u308b <code>VideoTexture</code> \u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>Windows \u3067\u30da\u30f3\u30bf\u30d6\u30ec\u30c3\u30c8\u306e\u5165\u529b\uff08\u7b46\u5727\u30fb\u50be\u304d\uff09\u3092\u53d6\u5f97\u3059\u308b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>2D \u63cf\u753b\u3067\u30ab\u30b9\u30bf\u30e0\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u30023D \u3067\u3082\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3001\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u307e\u3059</li> <li>\u3059\u3079\u3066\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u30d5\u30a7\u30fc\u30c9\u30a4\u30f3\u30fb\u30d5\u30a7\u30fc\u30c9\u30a2\u30a6\u30c8\uff08\u518d\u751f\u3001\u505c\u6b62\u3001\u97f3\u91cf\u3001\u30d1\u30f3\u3001\u30b9\u30d4\u30fc\u30c9\uff09\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3057\u305f</li> <li>HPF, LPF, \u30d4\u30c3\u30c1\u30b7\u30d5\u30c8\u306a\u3069\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u97f3\u58f0\u30d5\u30a3\u30eb\u30bf\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u6587\u5b57\u306e\u8f2a\u90ed\u3084 Polygon \u3092\u6b63\u78ba\u306b\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f</li> <li><code>Font</code> \u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u5f62\u5f0f\u306b SDF / MSDF \u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f</li> <li><code>Font</code> \u306e\u62e1\u5927\u7e2e\u5c0f\u63cf\u753b\u3001\u8f2a\u90ed\u3001\u30b7\u30e3\u30c9\u30a6\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f</li> <li>\u30aa\u30fc\u30c7\u30a3\u30aa\u30d5\u30a1\u30a4\u30eb\u306e\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f</li> <li><code>String</code> \u578b\u306b\u5bfe\u5fdc\u3057\u305f\u3001\u6b63\u898f\u8868\u73fe\u3092\u6271\u3046\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306b\u57cb\u3081\u308b\u6587\u5b57\u5217\u306e\u96e3\u8aad\u5316\u3092\u3059\u308b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u30c7\u30de\u30f3\u30b0\u30eb\u3092\u884c\u3046\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>Kahan \u306e\u52a0\u7b97\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u884c\u3046\u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>128-bit \u6574\u6570\u578b\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li><code>Stopwatch</code> \u3084 <code>Timer</code> \u304c\u30e6\u30fc\u30b6\u5b9a\u7fa9\u306e\u57fa\u6e96\u6642\u523b\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9 <code>ISteadyClock</code> \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u8907\u6570\u306e <code>Stopwatch</code> \u3084 <code>Timer</code> \u3092\u4e00\u62ec\u3057\u3066\u4e00\u6642\u505c\u6b62\u3055\u305b\u305f\u308a\u3001\u9045\u304f/\u65e9\u304f\u9032\u884c\u3055\u305b\u308b\u3053\u3068\u304c\u5bb9\u6613\u306b\u306a\u308a\u307e\u3057\u305f</li> <li><code>TimeProfiler</code> \u304c\u3088\u308a\u8a73\u7d30\u306a\u7d71\u8a08\u60c5\u5831\u3092\u63d0\u4f9b\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f</li> <li>\u5730\u7406\u7a7a\u9593\u30c7\u30fc\u30bf\u306e\u4ea4\u63db\u5f62\u5f0f\u3067\u3042\u308b GeoJSON \u3092\u8aad\u307f\u8fbc\u3080\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u591a\u304f\u306e\u6570\u5b66\u5b9a\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li><code>JSONReader</code>, <code>JSONWriter</code> \u3092\u7d71\u5408\u3057\u305f <code>JSON</code> \u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u7c21\u6613\u7684\u306a\u30ad\u30fc\u30d5\u30ec\u30fc\u30e0\u306b\u3088\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046 <code>SimpleAnimation</code> \u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u7d71\u8a08\u51e6\u7406\u3092\u884c\u3046\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u6570\u5024\u306b\u5fdc\u3058\u305f\u30ab\u30e9\u30fc\u30de\u30c3\u30d7\u3092\u884c\u3046\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u30d9\u30af\u30c8\u30eb\u30af\u30e9\u30b9\u306b\u591a\u6570\u306e\u4fbf\u5229\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u56f3\u5f62\u30af\u30e9\u30b9\u306b\u591a\u6570\u306e\u4fbf\u5229\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li><code>Shape2D</code> \u306b\u30cf\u30fc\u30c8\u5f62\u3001\u4e21\u65b9\u5411\u77e2\u5370\u3001Squircle \u5f62\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f </li> <li><code>Polygon</code> \u306b\u67d4\u8edf\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u9577\u65b9\u5f62\u8a70\u8fbc\u307f\u306b 90\u00b0 \u56de\u8ee2\u3092\u8a31\u53ef\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u30db\u30e2\u30b0\u30e9\u30d5\u30a3\u5909\u63db\u3092\u884c\u3046\u305f\u3081\u306e\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u5404\u7a2e\u4e71\u6570\u95a2\u6570\u304c\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u3092\u5f15\u6570\u306b\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f</li> <li>UUID \u751f\u6210\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u74b0\u5883\u5909\u6570\u306e\u53d6\u5f97\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306e\u53d6\u5f97\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u30e2\u30cb\u30bf\u30fc\u306e\u7269\u7406\u30b5\u30a4\u30ba\u306a\u3069\u3001\u8a73\u7d30\u306a\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f</li> <li>\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u306e\u8a73\u7d30\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>Klat \u65b9\u5f0f\u306b\u3088\u308b\u97f3\u58f0\u8aad\u307f\u4e0a\u3052\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u753b\u50cf\u5f62\u5f0f WebP, TIFF \u306e\u8aad\u307f\u8fbc\u307f\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f</li> <li>\u97f3\u58f0\u5f62\u5f0f Opus, AIFF, FLAC, MIDI, WMA \u306e\u8aad\u307f\u8fbc\u307f\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f</li> <li>\u753b\u50cf\u306e\u4e00\u90e8\u5206\u306b\u753b\u50cf\u51e6\u7406\u3092\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f</li> <li>GrabCut \u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>QR \u30b3\u30fc\u30c9\u751f\u6210\u6a5f\u80fd\u3092\u6539\u5584\u3057\u307e\u3057\u305f</li> <li><code>VideoWriter</code> \u3092\u6539\u5584\u3057\u307e\u3057\u305f</li> <li>\u30b5\u30a6\u30f3\u30c9\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f</li> <li>\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u5168\u3066\u306e\u30ad\u30fc\u5165\u529b\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u30a2\u30bb\u30c3\u30c8\u7ba1\u7406\u306b\u304a\u3051\u308b\u975e\u540c\u671f\u30ed\u30fc\u30c9\u304c\u3088\u308a\u4fbf\u5229\u306b\u306a\u308a\u307e\u3057\u305f</li> <li>example \u30d5\u30a1\u30a4\u30eb\u3092\u591a\u6570\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u30ca\u30d3\u30e1\u30c3\u30b7\u30e5\u304c\u3088\u308a\u7c21\u5358\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f</li> <li><code>Spline2D</code> \u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u56f3\u5f62\u306e\u8f2a\u90ed\u306e\u4e00\u90e8\u306e\u53d6\u5f97\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f</li> <li>\u56f3\u5f62\u306e Lerp \u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f</li> <li>GPU \u3060\u3051\u3067\u306e\u4e09\u89d2\u5f62\u63cf\u753b\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f</li> <li>\u30ab\u30b9\u30bf\u30e0\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f</li> <li>\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3001\u30b0\u30eb\u30fc\u30d7\u3054\u3068\u306b\u97f3\u91cf\u3092\u8abf\u6574\u3067\u304d\u308b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>Ogg Vorbis \u306e\u30eb\u30fc\u30d7\u30bf\u30b0\u53d6\u5f97\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f</li> <li>\u30ec\u30fc\u30d9\u30f3\u30b7\u30e5\u30bf\u30a4\u30f3\u8ddd\u96e2\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u51f9\u5305 (Concave hull) \u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u67d4\u8edf\u306a\u753b\u50cf\u30c7\u30b3\u30fc\u30c0\u3001\u30a8\u30f3\u30b3\u30fc\u30c0\u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f</li> <li>\u9589 / \u958b\u533a\u9593\u3092\u6307\u5b9a\u3057\u305f\u4e71\u6570\u751f\u6210\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>SIV3D_SET() \u306b\u3088\u308b\u30d3\u30eb\u30c9\u6642\u306e\u30a8\u30f3\u30b8\u30f3\u8a2d\u5b9a\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>Effect \u306e\u518d\u5e30\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f</li> <li>CJK \u30d5\u30a9\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u3001<code>Print</code> \u304c\u4e2d\u56fd\u8a9e\u3001\u97d3\u56fd\u8a9e\u306e\u8868\u793a\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f</li> <li>\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080 <code>VideoReader</code> \u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>2D \u7269\u7406\u6f14\u7b97\u306e\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>Siv3D \u304f\u3093\u30c9\u30c3\u30c8\u7d75\u7d20\u6750\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f</li> <li>Siv3D \u304f\u3093 .obj 3D \u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f</li> <li><code>Image::stamp()</code> \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f</li> <li><code>Line::drawDoubleHeadedArrow()</code> \u3067\u4e21\u65b9\u5411\u77e2\u5370\u3092\u63cf\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f</li> <li>\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u4fdd\u5b58\u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30ad\u30fc\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f</li> <li>\u30b9\u30af\u30ea\u30d7\u30c8\u6a5f\u80fd\u3092\u5927\u5e45\u306b\u6539\u5584\u3057\u307e\u3057\u305f</li> <li>2D \u56f3\u5f62\u306e\u4ea4\u5dee\u5224\u5b9a\u3092\u3088\u308a\u591a\u304f\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f</li> <li>\u591a\u304f\u306e 3D \u5f62\u72b6\u306e\u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>Linux \u7248\u306e IME\u306e\u6319\u52d5\u3092\u6539\u5584\u3057\u307e\u3057\u305f</li> <li>\u30e6\u30fc\u30b6\u30a2\u30c9\u30aa\u30f3\u306e\u8ffd\u52a0\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li>\u305d\u306e\u4ed6\u591a\u6570\u306e\u65b0\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059</li> </ul>"},{"location":"releases/#\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a_9","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5411\u4e0a","text":"<ul> <li>Windows \u7248\u306e\u30a2\u30d7\u30ea\u306e\u8d77\u52d5\u6642\u9593\u304c\u6570\u767e\u30df\u30ea\u79d2\u524d\u5f8c\u77ed\u7e2e\u3057\u307e\u3057\u305f</li> <li><code>Heterogeneous lookup</code> \u306b\u3088\u308a\u3001\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3084 <code>StringView</code> \u3067 <code>HashTable</code> \u3084 <code>HashSet</code> \u306e\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u3059\u308b\u969b\u306e\u5b9f\u884c\u6642\u6027\u80fd\u304c\u5411\u4e0a\u3057\u307e\u3057\u305f</li> <li>\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u66f8\u304d\u3001\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3084\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u306e\u30ed\u30fc\u30c9\u304c\u9ad8\u901f\u306b\u306a\u308a\u307e\u3057\u305f</li> <li><code>Parse</code> / <code>ParseOpt</code> / <code>ParseOr</code> \u306e\u901f\u5ea6\u3092\u6539\u5584\u3057\u307e\u3057\u305f</li> </ul>"},{"location":"releases/#\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a_9","title":"\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u5411\u4e0a","text":"<ul> <li>\u30a4\u30f3\u30e9\u30a4\u30f3\u95a2\u6570\u304c .hpp \u30d5\u30a1\u30a4\u30eb\u304b\u3089 .ipp \u30d5\u30a1\u30a4\u30eb\u306b\u79fb\u3055\u308c\u3001\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u304c\u8aad\u307f\u3084\u3059\u304f\u306a\u308a\u307e\u3057\u305f</li> <li>Windows \u7248\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30d7\u30ea\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u30d3\u30eb\u30c9\u304c\u9ad8\u901f\u5316\u3057\u307e\u3057\u305f</li> </ul>"},{"location":"releases/#\u4ed5\u69d8\u5909\u66f4_9","title":"\u4ed5\u69d8\u5909\u66f4","text":"<ul> <li>bool \u578b\u306e\u95a2\u6570\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u591a\u304f\u304c\u3001\u540d\u524d\u306e\u4ed8\u3044\u305f YesNo \u578b\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u3001\u30b3\u30fc\u30c9\u306e\u53ef\u8aad\u6027\u304c\u5411\u4e0a\u3057\u307e\u3057\u305f</li> <li><code>Optional</code> \u578b\u304c C++ \u6a19\u6e96\u306e <code>std::optional</code> \u306b\u8fd1\u3044\u52d5\u4f5c\u3092\u3059\u308b\u3088\u3046\u6539\u5584\u3055\u308c\u307e\u3057\u305f</li> <li><code>HashTable</code> \u578b\u304c C++ \u6a19\u6e96\u306e <code>std::unordered_map</code> \u306b\u8fd1\u3044\u52d5\u4f5c\u3092\u3059\u308b\u3088\u3046\u6539\u5584\u3055\u308c\u307e\u3057\u305f</li> <li><code>KDTree</code> \u304c\u3088\u308a\u77ed\u3044\u8a18\u8ff0\u3067\u5229\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f</li> <li><code>Concurrenttask</code> \u306f <code>AsyncTask</code> \u306b\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f</li> <li>\u5b50\u30d7\u30ed\u30bb\u30b9\u4f5c\u6210\u95a2\u6570\u306f <code>ChildProcess</code> \u30af\u30e9\u30b9\u306b\u7d71\u5408\u3055\u308c\u307e\u3057\u305f</li> <li><code>Unicode::FromWString()</code> \u306f <code>Unicode::FromWstring()</code> \u306b\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f</li> <li>\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b\u306e <code>U\"{}\"_fmt(x)</code> \u306f\u3001\u6709\u52b9\u6841\u6570\u3059\u3079\u3066\u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f</li> <li><code>Time::Get\uff5e</code> \u306f\u30b7\u30b9\u30c6\u30e0\u8d77\u52d5\u6642\u9593\u3067\u306f\u306a\u304f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u304b\u3089\u306e\u6642\u9593\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f</li> <li><code>CustomStopwatch</code> \u306f <code>VariableSpeedStopwatch</code> \u306b\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f</li> <li><code>FileSystem::SpecialFolderPath()</code> \u306f <code>FileSystem::GetFolderPath()</code> \u306b\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f</li> <li><code>FileSystem::UniqueFilePath()</code> \u306f UUID \u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u540d\u524d\u3092\u4f5c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f</li> <li><code>ByteArray</code> \u306f <code>Blob</code> \u304a\u3088\u3073 <code>MemoryReader</code> \u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u307e\u3057\u305f</li> <li><code>CSVData</code> \u306f <code>CSV</code> \u306b\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f</li> <li><code>INIData</code> \u306f <code>INI</code> \u306b\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f</li> <li><code>JSONReader</code>, <code>JSONWriter</code> \u306f <code>JSON</code> \u306b\u7d71\u5408\u3055\u308c\u307e\u3057\u305f</li> <li><code>EasingController</code> \u306f <code>EasingAB</code> \u306b\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f</li> <li><code>Sprite</code> \u306f <code>Buffer2D</code> \u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u307e\u3057\u305f</li> <li>\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u914d\u5217\u306f <code>TriangleIndex</code> \u3092\u4f7f\u3046\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f</li> <li><code>MessageBox</code> \u306e\u4ed5\u69d8\u304c\u5909\u308f\u308a\u307e\u3057\u305f</li> <li>\u30c8\u30fc\u30b9\u30c8\u901a\u77e5\u306e\u4ed5\u69d8\u304c\u5909\u308f\u308a\u307e\u3057\u305f</li> <li>\u7269\u4f53\u691c\u51fa\u6a5f\u80fd\u306f <code>CascadeClassifier</code> \u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u307e\u3057\u305f</li> <li><code>Key</code> \u306f <code>Input</code> \u306b\u306a\u308a\u307e\u3057\u305f</li> <li>\u7d75\u6587\u5b57\u3068\u30a2\u30a4\u30b3\u30f3\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u66f4\u65b0\u3057\u4f7f\u3048\u308b\u7d75\u6587\u5b57\u3084\u30a2\u30a4\u30b3\u30f3\u306e\u7a2e\u985e\u304c\u5927\u5e45\u306b\u5897\u3048\u307e\u3057\u305f</li> <li><code>Image</code> \u306e\u6700\u5927\u30b5\u30a4\u30ba\u3092 1 \u8fba 8192px \u2192 16384px \u306b\u62e1\u5f35\u3057\u307e\u3057\u305f</li> <li>ConstantBuffer \u30b5\u30a4\u30ba 16 \u00d7 N \u30d0\u30a4\u30c8\u5236\u7d04\u304c\u64a4\u5ec3\u3055\u308c\u307e\u3057\u305f</li> <li>\u4e26\u5217\u5b9f\u884c\u306b\u95a2\u3059\u308b\u6a5f\u80fd\u306f <code>SIV3D_CONCURRENT</code> \u30de\u30af\u30ed\u3092\u5b9a\u7fa9\u3057\u306a\u304f\u3066\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f</li> <li>High DPI \u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u306a\u308a\u3001<code>SIV3D_WINDOWS_HIGH_DPI</code> \u30de\u30af\u30ed\u306f\u5ec3\u6b62\u3055\u308c\u307e\u3057\u305f</li> </ul>"},{"location":"releases/#\u4e0d\u5177\u5408\u30d0\u30b0\u4fee\u6b63_12","title":"\u4e0d\u5177\u5408\u30fb\u30d0\u30b0\u4fee\u6b63","text":"<ul> <li><code>Array</code> \u306e\u4e26\u5217\u95a2\u6570\u306e\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f</li> <li><code>AsyncTask</code> \u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u9593\u306b\u3088\u308b\u5dee\u7570\u3092\u89e3\u6d88\u3057\u307e\u3057\u305f</li> <li>Windows \u306e <code>MakeDragDrop()</code> \u306e\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f</li> <li>PPM \u753b\u50cf\u8aad\u307f\u8fbc\u307f\u306e\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f</li> <li>\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3054\u3068\u306e\u4e71\u6570\u306e\u518d\u73fe\u6027\u306e\u6539\u5584\u3057\u307e\u3057\u305f</li> <li>QR \u30b3\u30fc\u30c9\u751f\u6210\u306e\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f</li> </ul>"},{"location":"releases/#\u6ce8\u610f\u70b9","title":"\u6ce8\u610f\u70b9","text":"<ul> <li><code>Math::SmoothDmap()</code> \u306e\u5f15\u6570\u9806\u304c\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3067\u767a\u898b\u3067\u304d\u307e\u305b\u3093</li> <li>\u30d5\u30a9\u30f3\u30c8\u306e\u7e26\u66f8\u304d\u6a5f\u80fd\u306f\u4e00\u6642\u7684\u306b\u975e\u642d\u8f09\u306b\u306a\u308a\u307e\u3057\u305f</li> <li>\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u6a5f\u80fd\u306f\u4e00\u6642\u7684\u306b\u975e\u642d\u8f09\u306b\u306a\u308a\u307e\u3057\u305f</li> <li><code>SimpleGUIManager</code> \u6a5f\u80fd\u306f\u30ad\u30e3\u30f3\u30bb\u30eb\u3055\u308c\u307e\u3057\u305f</li> <li><code>NoiseGenerator</code> \u30af\u30e9\u30b9\u306f\u4e00\u6642\u7684\u306b\u975e\u642d\u8f09\u306b\u306a\u308a\u307e\u3057\u305f</li> <li>Shift_JIS \u5f62\u5f0f\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306f\u30b5\u30dd\u30fc\u30c8\u3057\u306a\u304f\u306a\u308a\u307e\u3057\u305f</li> <li>\u30b7\u30fc\u30f3\u306e\u30ea\u30b5\u30a4\u30ba\u306b\u3064\u3044\u3066\u3001\u4ed5\u7d44\u307f\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f (\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 15 \u53c2\u7167)</li> <li>\u7d75\u6587\u5b57\u306e\u30c7\u30b6\u30a4\u30f3\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f</li> <li>\u4e71\u6570\u306e\u518d\u73fe\u6027\u304c v0.4.3 \u3068\u4e92\u63db\u304c\u3042\u308a\u307e\u305b\u3093</li> <li>2D \u7269\u7406\u6f14\u7b97\u306f cm \u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5358\u4f4d\u306b\u5909\u66f4\u3057\u307e\u3057\u305f</li> <li><code>Glyph</code> \u5358\u4f4d\u3067\u306e\u63cf\u753b\u306e\u65b9\u6cd5\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f</li> <li>Windows \u7248\u306f <code>&lt;Siv3D.hpp&gt;</code> \u306e\u30d7\u30ea\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u3092\u5168\u3066\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3067\u81ea\u52d5\u3067\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002Main.cpp \u306b\u3042\u308b <code># include &lt;Siv3D.hpp&gt;</code> \u306f\u5b9f\u8cea\u7684\u306b\u306f\u7121\u610f\u5473\u3067\u3059\u3002<code># define NO_S3D_USING</code> \u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u30d7\u30ea\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u30d8\u30c3\u30c0\u4f5c\u6210\u7528\u30d8\u30c3\u30c0 <code>stdafx.h</code> \u3067\u884c\u3063\u3066\u304f\u3060\u3055\u3044</li> <li><code>Audio</code> \u306f <code>Wave</code> \u3068\u4e92\u63db\u306e\u5f62\u5f0f\u3067\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3057\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002<code>.getWave()</code> \u306f <code>.getSamples()</code> \u306b\u7f6e\u304d\u63db\u308f\u308a\u307e\u3057\u305f\u3002<code>GlobalAudio::BusGetSamples()</code> \u3082\u5229\u7528\u3067\u304d\u307e\u3059</li> </ul>"},{"location":"releases/#\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3_9","title":"\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3","text":"<ul> <li>nokotan: Web \u7248\u958b\u767a\u3092\u5168\u9762\u7684\u306b\u62c5\u5f53</li> <li>Ebishu-0309: <code>Geometry2D::</code> \u306b\u591a\u6570\u306e\u95a2\u6570\u3092\u5b9f\u88c5, <code>Shape2D::Squircle()</code> \u306e\u5b9f\u88c5, <code>Bezier2</code>, <code>Bezier3</code> \u306e <code>.boundingRect()</code> \u3092\u5b9f\u88c5, \u30b3\u30fc\u30c9\u306e\u6539\u5584</li> <li>taotao54321: <code>Grid</code> \u306e\u4fee\u6b63, \u30b3\u30fc\u30c9\u306e\u6539\u5584</li> <li>sthairno: Linux \u7248\u306e IME \u51e6\u7406\u6539\u5584</li> <li>itakawa : Siv3D \u304f\u3093 .obj \u30d5\u30a1\u30a4\u30eb\u63d0\u4f9b</li> <li>take-cheeze: GitHub Actions \u3092\u4f7f\u3063\u305f CI \u306e\u6574\u5099</li> <li>Luke256: \u30b3\u30fc\u30c9\u306e\u6539\u5584</li> <li>YASAI03: HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u6a5f\u80fd <code>SimpleHTTP</code> \u306e\u63d0\u6848\u30fb\u5b9f\u88c5</li> <li>falrnd: <code>Geometry2D</code> \u306e\u4ea4\u5dee\u5224\u5b9a\u306e\u6539\u5584</li> <li>yurkth: <code>GeoJSON</code> \u95a2\u9023\u306e\u6a5f\u80fd\u3092\u63d0\u6848\u30fb\u5b9f\u88c5</li> <li>ianCK: \u30b3\u30fc\u30c9\u306e\u6539\u5584</li> <li>lriki: Siv3D \u304f\u3093\u30c9\u30c3\u30c8\u7d75\u7d20\u6750\u306e\u63d0\u4f9b</li> <li>Ryoga-exe: <code>Color::gamma()</code> \u306e\u30d0\u30b0\u4fee\u6b63</li> <li>sivboard: \u30b9\u30af\u30ea\u30d7\u30c8\u6a5f\u80fd\u306e\u5b9f\u88c5\u8ffd\u52a0\u3068\u30d0\u30b0\u4fee\u6b63</li> <li>agehama: PPM \u753b\u50cf\u8aad\u307f\u8fbc\u307f\u306e\u30d0\u30b0\u4fee\u6b63</li> <li>kurokoji: Linux \u7248 MessageBox \u306e\u8ffd\u52a0</li> <li>ichi-raven: \u30b3\u30fc\u30c9\u306e\u6539\u5584</li> <li>azaika: <code>JSON</code> \u30af\u30e9\u30b9\u306e\u8a2d\u8a08\u30fb\u5b9f\u88c5</li> </ul>"},{"location":"releases/#opensiv3d-\u30c1\u30e3\u30ec\u30f3\u30b8_1","title":"OpenSiv3D \u30c1\u30e3\u30ec\u30f3\u30b8","text":"<ul> <li>#01 \u7d71\u8a08\u95a2\u6570: \u767d\u5742, \u30de\u30ad\u30a2, fal_rnd</li> <li>#03 <code>Shape2D::Heart</code>: \u91ce\u83dc\u30b8\u30e5\u30fc\u30b9, \u3066\u3083\u3044\u306e</li> <li>#04 2D \u56f3\u5f62\u306e\u4ea4\u5dee\u5224\u5b9a: Ebishu, fal_rnd, \u304d\u3064\u306d\u3073</li> <li>#05 Squircle: Ebishu, Ryoga.exe</li> <li>#07 \u56fd\u3068\u90fd\u5e02: torin (yurkth)</li> <li>#10 <code>OutlineGlyph</code> to <code>Array&lt;Polygon&gt;</code>: Ebishu, fal_rnd</li> </ul>"},{"location":"releases/#v04-generation","title":"v0.4 Generation","text":"v0.4.3 | 2020-04-11 v0.4.2 | 2019-12-01 v0.4.1 | 2019-07-20"},{"location":"releases/#1-\u30c9\u30ed\u30cd\u30fc\u56f3\u30dc\u30ed\u30ce\u30a4\u56f3\u306e\u4f5c\u6210","title":"1. \u30c9\u30ed\u30cd\u30fc\u56f3\u3001\u30dc\u30ed\u30ce\u30a4\u56f3\u306e\u4f5c\u6210","text":"<p>\u30c9\u30ed\u30cd\u30fc\u56f3\u3001\u30dc\u30ed\u30ce\u30a4\u56f3\u306e\u8a08\u7b97\u3092\u884c\u3046 <code>Subdivision2D</code> \u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 </p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF(0.99));\nconst Rect rect(50, 50, Scene::Size() - Size(100, 100));\nSubdivision2D subdiv(rect);\n// \u30c9\u30ed\u30cd\u30fc\u4e09\u89d2\u5f62\u5206\u5272\u306e\u4e09\u89d2\u5f62\u30ea\u30b9\u30c8\nArray&lt;Triangle&gt; triangles;\n// \u30dc\u30ed\u30ce\u30a4\u56f3\u306e\u60c5\u5831\u306e\u30ea\u30b9\u30c8\nArray&lt;VoronoiFacet&gt; facets;\n// facets \u3092\u9577\u65b9\u5f62\u3067\u30af\u30ea\u30c3\u30d7\u3057 Polygon \u306b\u5909\u63db\u3057\u305f\u30ea\u30b9\u30c8\nArray&lt;Polygon&gt; facetPolygons;\nwhile (System::Update())\n{\nconst Vec2 pos = Cursor::Pos();\n// \u9577\u65b9\u5f62\u4e0a\u3092\u30af\u30ea\u30c3\u30af\u3057\u305f\u3089\nif (rect.leftClicked())\n{\n// \u70b9\u3092\u8ffd\u52a0\nsubdiv.addPoint(pos);\n// \u30c9\u30ed\u30cd\u30fc\u4e09\u89d2\u5f62\u5206\u5272\u306e\u8a08\u7b97\nsubdiv.calculateTriangles(triangles);\n// \u30dc\u30ed\u30ce\u30a4\u56f3\u306e\u8a08\u7b97\nsubdiv.calculateVoronoiFacets(facets);\n// \u9577\u65b9\u5f62\u306e\u7bc4\u56f2\u5916\u3092\u30af\u30ea\u30c3\u30d7\nfacetPolygons = facets.map([rect = rect.asPolygon()](const VoronoiFacet&amp; f)\n{\nreturn Geometry2D::And(Polygon(f.points), rect).front();\n});\n}\nrect.draw(ColorF(0.75));\nfor (auto [i, facetPolygon] : Indexed(facetPolygons))\n{\nfacetPolygon.draw(HSV(i * 25.0, 0.65, 0.8)).drawFrame(3, ColorF(0.25));\n}\nfor (const auto&amp; triangle : triangles)\n{\ntriangle.drawFrame(2.5, ColorF(0.9));\n}\nfor (const auto&amp; facet : facets)\n{\nCircle(facet.center, 6).drawFrame(5).draw(ColorF(0.25));\n}\n// \u73fe\u5728\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304b\u3089\u6700\u77ed\u8ddd\u96e2\u306b\u3042\u308b\u70b9\u3092\u63a2\u3059\nif (const auto nearestVertexID = subdiv.findNearest(pos))\n{\nconst Vec2 nearestVertex = subdiv.getVertex(nearestVertexID.value());\nLine(pos, nearestVertex).draw(LineStyle::RoundDot, 5, ColorF(0.6));\nCircle(nearestVertex, 16).drawFrame(3.5);\n}\n}\n}\n</code></pre>"},{"location":"releases/#2-\u9577\u65b9\u5f62\u8a70\u8fbc\u307f","title":"2. \u9577\u65b9\u5f62\u8a70\u8fbc\u307f","text":"<p>\u9577\u65b9\u5f62\u306e\u96c6\u5408\u3092\u3001\u5225\u306e\u5927\u304d\u306a\u9577\u65b9\u5f62\u306b\u52b9\u7387\u7684\u306b\u8a70\u3081\u8fbc\u3080\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b <code>std::pair&lt;Array&lt;Rect&gt;, Size&gt;  RectanglePacking::Pack(const Array&lt;Rect&gt;&amp; rects, int32 maxSide)</code> \u95a2\u6570\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u8a70\u3081\u8fbc\u307f\u5f8c\u306e\u9577\u65b9\u5f62\u306e\u30ea\u30b9\u30c8\u3068\u3001\u305d\u308c\u3089\u3092\u8a70\u3081\u8fbc\u3081\u308b\u6700\u5c0f\u306e\u9577\u65b9\u5f62\u306e\u30b5\u30a4\u30ba\u306e\u30da\u30a2\u3092\u8fd4\u3057\u307e\u3059\u3002\u5165\u529b\u306e <code>rects</code> \u306e\u4f4d\u7f6e\u60c5\u5831\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002<code>maxSide</code> \u306f\u5e45\u307e\u305f\u306f\u9ad8\u3055\u306e\u6700\u5927\u5024\u3067\u3001\u3053\u308c\u306b\u53ce\u307e\u3089\u306a\u3044\u5834\u5408\u306f\u7a7a\u306e\u914d\u5217\u3068 <code>Size(0, 0)</code> \u306e\u30da\u30a2\u3092\u8fd4\u3057\u307e\u3059\u3002\u914d\u5217\u306b\u542b\u307e\u308c\u308b\u9577\u65b9\u5f62\u306e\u9806\u756a\u306f\u3001\u5165\u529b\u3068\u51fa\u529b\u3067\u5909\u308f\u308a\u307e\u305b\u3093\u3002 </p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF(0.99));\n// \u8a70\u3081\u8fbc\u3080\u9577\u65b9\u5f62\nconst Array&lt;Rect&gt; input =\n{\nRect(240, 210), Rect(500, 30), Rect(150, 120),\nRect(60, 120), Rect(180, 60), Rect(120, 240)\n};\n// \u8a70\u3081\u8fbc\u307f\u3092\u8a08\u7b97\nconst std::pair&lt;Array&lt;Rect&gt;, Size&gt; result = RectanglePacking::Pack(input, 600);\nwhile (System::Update())\n{\nRect(result.second).draw(ColorF(0.7));\nfor (auto [i, rect] : Indexed(result.first))\n{\nrect.draw(HSV(i * 40.0));\n}\n}\n}\n</code></pre> <p>\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30e9\u30f3\u30c0\u30e0\u306a\u9577\u65b9\u5f62\u306e\u914d\u5217\u3092\u4f5c\u6210\nArray&lt;Rect&gt; GenerateRandomRects()\n{\nArray&lt;Rect&gt; rects(Random(4, 32));\nfor (auto&amp; rect : rects)\n{\nconst Point pos = RandomPoint(Rect(0, 0, Scene::Size() - Size(150, 150)));\nrect.set(pos, Random(20, 150), Random(20, 150));\n}\nreturn rects;\n}\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF(0.99));\nArray&lt;Rect&gt; input, output;\nSize size(0, 0);\nPoint offset(0, 0);\nStopwatch s;\nwhile (System::Update())\n{\nif (!s.isStarted() || s &gt; 1.8s)\n{\ninput = GenerateRandomRects();\nstd::tie(output, size) = RectanglePacking::Pack(input, 1024);\n// \u753b\u9762\u4e2d\u592e\u306b\u8868\u793a\u3059\u308b\u3088\u3046\u4f4d\u7f6e\u3092\u8abf\u6574\noffset = (Scene::Size() - size) / 2;\nfor (auto&amp; rect : output)\n{\nrect.moveBy(offset);\n}\ns.restart();\n}\n// \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\nconst double k = Min(s.sF() * 10, 1.0);\nconst double t = Saturate(s.sF() - 0.2);\nconst double e = EaseInOutExpo(t);\nRect(offset, size).draw(ColorF(0.7, e));\nfor (auto i : step(input.size()))\n{\nconst auto&amp; in = input[i];\nconst auto&amp; out = output[i];\nconst Vec2 pos = in.pos.lerp(out.pos, e);\nconst RectF rect(pos, out.size);\nrect.scaledAt(rect.center(), k)\n.draw(HSV(i * 25.0, 0.65, 0.9))\n.drawFrame(2, 0, ColorF(0.25));\n}\n}\n}\n</code></pre>"},{"location":"releases/#3-gif-\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u8aad\u307f\u8fbc\u307f","title":"3. GIF \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u8aad\u307f\u8fbc\u307f","text":"<p>GIF \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u3001\u4e00\u9023\u306e\u30d5\u30ec\u30fc\u30e0\u306e Image \u3068\u3001\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306e\u8868\u793a\u6642\u9593\u3092\u53d6\u5f97\u3059\u308b <code>AnimatedGIFReader</code> \u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 </p> <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9\nstruct AnimationTexture\n{\nArray&lt;Texture&gt; textures;\n// \u30d5\u30ec\u30fc\u30e0\u306e\u6642\u9593\nArray&lt;int32&gt; delays;\nint32 duration = 0;\nexplicit operator bool() const noexcept\n{\nreturn !textures.isEmpty();\n}\nSize size() const noexcept\n{\nif (!textures)\n{\nreturn Size(0, 0);\n}\nreturn textures.front().size();\n}\nsize_t frames() const noexcept\n{\nreturn textures.size();\n}\nsize_t getFrameIndex(int32 timeMillisec) const noexcept\n{\nreturn AnimatedGIFReader::MillisecToIndex(timeMillisec, delays, duration);\n}\nconst Texture&amp; getTexture(int32 timeMillisec) const noexcept\n{\nreturn textures[getFrameIndex(timeMillisec)];\n}\n};\nvoid Main()\n{\nAnimationTexture animation;\n{\n// GIF \u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\nconst AnimatedGIFReader gif(U\"example/test.gif\");\nif (!gif)\n{\nthrow Error(U\"Failed to open a gif file\");\n}\nArray&lt;Image&gt; images;\n// GIF \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u8aad\u307f\u8fbc\u307f\nif (gif.read(images, animation.delays, animation.duration))\n{\n// Image \u3092 Texture \u306b\u5909\u63db\nanimation.textures = images.map([](const Image&amp; i) { return Texture(i); });\n}\nelse\n{\nthrow Error(U\"Failed to load a gif animation\");\n}\n}\n// \u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3001\u30d5\u30ec\u30fc\u30e0\u6570\u3001\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u9577\u3055\uff08\u30df\u30ea\u79d2\uff09\nPrint &lt;&lt; U\"{}, {} frames ({} ms)\"_fmt(animation.size(), animation.frames(), animation.duration);\nconst Point pos(10, 90);\nwhile (System::Update())\n{\nconst int32 timeMillisec = static_cast&lt;int32&gt;(Scene::Time() * 1000);\nanimation.getTexture(timeMillisec).draw(pos);\n}\n}\n</code></pre>"},{"location":"releases/#4-rectrounded-\u3067-4-\u3064\u306e\u89d2\u306b\u7570\u306a\u308b\u5024\u3092\u6307\u5b9a\u53ef\u80fd\u306b","title":"4. Rect::rounded() \u3067 4 \u3064\u306e\u89d2\u306b\u7570\u306a\u308b\u5024\u3092\u6307\u5b9a\u53ef\u80fd\u306b","text":"<p><code>Rect::rounded()</code> \u306b\u3001\u9577\u65b9\u5f62\u306e\u5de6\u4e0a\u3001\u53f3\u4e0a\u3001\u53f3\u4e0b\u3001\u5de6\u4e0b\u3067\u7570\u306a\u308b\u5024\u3092\u6307\u5b9a\u3059\u308b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 </p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF(0.3));\nArray&lt;Rect&gt; rects;\nfor (auto p : step(Size(3, 4)))\n{\nrects &lt;&lt; Rect(p * Size(220, 140), 180, 100).movedBy(80, 40);\n}\nwhile (System::Update())\n{\nrects[0].rounded(30, 0, 0, 0).draw(HSV(20, 0.75, 1.0));\nrects[1].rounded(30, 30, 0, 0).draw(HSV(40, 0.75, 1.0));\nrects[2].rounded(0, 30, 0, 0).draw(HSV(60, 0.75, 1.0));\nrects[3].rounded(30, 0, 0, 30).draw(HSV(80, 0.75, 1.0));\nrects[4].rounded(10, 20, 30, 40).draw(HSV(100, 0.75, 1.0));\nrects[5].rounded(0, 30, 30, 0).draw(HSV(120, 0.75, 1.0));\nrects[6].rounded(100, 0, 0, 0).draw(HSV(140, 0.75, 1.0));\nrects[7].rounded(100, 0, 100, 0).draw(HSV(160, 0.75, 1.0));\nrects[8].rounded(0, 0, 100, 0).draw(HSV(180, 0.75, 1.0));\nrects[9].rounded(100, 0, 0, 20).draw(HSV(200, 0.75, 1.0));\nrects[10].rounded(100, 20, 100, 20).draw(HSV(220, 0.75, 1.0));\nrects[11].rounded(0, 20, 100, 0).draw(HSV(240, 0.75, 1.0));\n}\n}\n</code></pre>"},{"location":"releases/#5-simpleguihorizontalradiobuttons","title":"5. SimpleGUI::HorizontalRadioButtons()","text":"<p>\u6c34\u5e73\u306b\u4e26\u3093\u3060\u30e9\u30b8\u30aa\u30dc\u30bf\u30f3 <code>SimpleGUI::HorizontalRadioButtons()</code> \u304c SimpleGUI \u306b\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 </p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF(0.8, 0.9, 1.0));\nconst Array&lt;String&gt; options = { U\"Windows\", U\"macOS\", U\"Linux\" };\nsize_t indexA = 0;\nsize_t indexB = 0;\nwhile (System::Update())\n{\n// \u6c34\u5e73\nSimpleGUI::HorizontalRadioButtons(indexA, options, Vec2(20, 20));\n// \u7e26\nSimpleGUI::RadioButtons(indexB, options, Vec2(20, 60));\n}\n}\n</code></pre>"},{"location":"releases/#6-mathinvlerp","title":"6. Math::InvLerp()","text":"<ul> <li><code>Math::Lerp(begin, end, t) == value</code></li> <li><code>Math::InvLerp(begin, end, value) == t</code></li> </ul> <p>\u3068\u306a\u308b\u3088\u3046\u306a\u5024 <code>t</code> \u3092\u6c42\u3081\u308b <code>Math::InvLerp()</code> \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 </p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF(0.6, 0.8, 0.7));\nconst Font font(40, Typeface::Bold);\nconst double begin = 240.0;\nconst double end = 450.0;\nwhile (System::Update())\n{\nconst double value = Cursor::Pos().y;\n// Math::Lerp(begin, end, t) == value \u306b\u306a\u308b\u5024 t \u3092\u6c42\u3081\u308b\nconst double t = Math::InvLerp(begin, end, value);\n// \u5024\u3092 [0.0, 1.0] \u306e\u7bc4\u56f2\u306b\u53ce\u3081\u308b\nconst double st = Saturate(t);\nfont(st).draw(20, 20);\nLine(Vec2(0, begin), Arg::direction(Scene::Width(), 0)).draw(2, ColorF(0.5));\nLine(Vec2(0, end), Arg::direction(Scene::Width(), 0)).draw(2, ColorF(0.5));\nCircle(Cursor::Pos(), 50).draw(ColorF(st));\n}\n}\n</code></pre>"},{"location":"releases/#7-line-\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u8ffd\u52a0","title":"7. Line \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u8ffd\u52a0","text":"<p>\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3092\u4f7f\u3063\u305f <code>Line</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c 2 \u7a2e\u985e\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002<code>Line(pos, pos + dir)</code> \u306e\u3088\u3046\u306b <code>pos</code> \u3092 2 \u56de\u66f8\u304f\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002 </p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u59cb\u70b9\u306e\u4f4d\u7f6e\u3001\u59cb\u70b9\u304b\u3089\u898b\u305f\u7d42\u70b9\u306e\u65b9\u5411\u3001\u7d42\u70b9\u307e\u3067\u306e\u8ddd\u96e2\nLine(Scene::Center(), Arg::angle = 45_deg, 200)\n.draw(LineStyle::RoundCap, 10);\n// \u59cb\u70b9\u306e\u4f4d\u7f6e\u3001\u7d42\u70b9\u307e\u3067\u306e\u30d9\u30af\u30c8\u30eb\nLine(Scene::Center(), Arg::direction = Vec2(0, 200))\n.draw(LineStyle::RoundCap, 10, Palette::Orange);\n}\n}\n</code></pre>"},{"location":"releases/#8-rectdrawframe-circledrawpie-circledrawarc-\u306e-2-\u8272\u6307\u5b9a","title":"8. Rect::drawFrame(), Circle::drawPie(), Circle::drawArc() \u306e 2 \u8272\u6307\u5b9a","text":"<p><code>Rect::drawFrame()</code>, <code>Circle::drawPie()</code>, <code>Circle::drawArc()</code> \u306b\u3001\u5185\u5074\u306e\u8272\u3068\u5916\u5074\u306e\u8272\u3092\u5225\u3005\u306b\u6307\u5b9a\u3059\u308b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 </p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nwhile (System::Update())\n{\n// \u5185\u5074 ColorF(0.1, 0.6, 0.3), \u5916\u5074 ColorF(0.6, 1.0, 0.8)\nRect(50, 50, 300)\n.drawFrame(30, ColorF(0.1, 0.6, 0.3), ColorF(0.6, 1.0, 0.8));\n// \u5185\u5074 HSV(50), \u5916\u5074 HSV(0)\nCircle(200, 200, 100)\n.drawPie(0_deg, 120_deg, HSV(50), HSV(0));\n// \u5185\u5074 Palette::White, \u5916\u5074 Palette::Black\nCircle(200, 200, 100)\n.drawArc(180_deg, 120_deg, 10, 10, Palette::White, Palette::Black);\n}\n}\n</code></pre>"},{"location":"releases/#9-zip-\u30a2\u30fc\u30ab\u30a4\u30d6\u306e\u8aad\u307f\u8fbc\u307f","title":"9. ZIP \u30a2\u30fc\u30ab\u30a4\u30d6\u306e\u8aad\u307f\u8fbc\u307f","text":"<p>ZIP \u30a2\u30fc\u30ab\u30a4\u30d6 (.zip) \u306e\u4e2d\u8eab\u306e\u53d6\u5f97\u3084\u5c55\u958b\u3092\u884c\u3046 <code>ZIPReader</code> \u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002<code>ZIPReader::extractToMemory()</code> \u3092\u4f7f\u3046\u3068\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u30e1\u30e2\u30ea\u4e0a\u3067\u5c55\u958b\u3057\u3066 <code>Texture</code> \u3084 <code>Audio</code> \u306a\u3069\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 - Windows \u3067\u4f5c\u6210\u3055\u308c\u305f Shift-JIS \u30a8\u30f3\u30b3\u30fc\u30c9\u306e ZIP \u30a2\u30fc\u30ab\u30a4\u30d6\u306b\u542b\u307e\u308c\u308b\u65e5\u672c\u8a9e\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u3001Windows \u4ee5\u5916\u306e\u74b0\u5883\u3067\u306f\u6b63\u3057\u304f\u6271\u3048\u307e\u305b\u3093 - \u65e5\u672c\u8a9e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u3042\u3089\u3086\u308b\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u6b63\u3057\u304f\u6271\u3044\u305f\u3044\u5834\u5408\u3001<code>UTF-8</code> \u30a8\u30f3\u30b3\u30fc\u30c9\u3067 ZIP \u30a2\u30fc\u30ab\u30a4\u30d6\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044 (7-zip \u306e\u5834\u5408\u306f <code>cu=on</code> \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\uff09</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst ZIPReader zip(U\"example/zip/zip_test.zip\");\n// \u542b\u307e\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u5217\u6319\nfor (const auto&amp; path : zip.enumPaths())\n{\nPrint &lt;&lt; path;\n}\n// `zip_test/loremipsum.txt` \u3092 `unzipped1/` \u30d5\u30a9\u30eb\u30c0\u306b\u5c55\u958b\nzip.extract(U\"zip_test/loremipsum.txt\", U\"unzipped1/\");\n// `zip_test/image/` \u306b\u542b\u307e\u308c\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30eb\u3092 `unzipped2/` \u30d5\u30a9\u30eb\u30c0\u306b\u5c55\u958b\nzip.extract(U\"zip_test/image/*\", U\"unzipped2/\");\n// \u3059\u3079\u3066\u3092 `unzipped3/` \u30d5\u30a9\u30eb\u30c0\u306b\u5c55\u958b\nzip.extractAll(U\"unzipped3/\");\n// `zip_test/image/windmill.png` \u3092\u30e1\u30e2\u30ea\u4e0a\u3067\u5c55\u958b\u3057\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\nconst Texture textureA(zip.extractToMemory(U\"zip_test/image/windmill.png\"));\n// `zip_test/image/siv3d-kun.png` \u3092\u30e1\u30e2\u30ea\u4e0a\u3067\u5c55\u958b\u3057\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\nconst Texture textureB(zip.extractToMemory(U\"zip_test/image/siv3d-kun.png\"));\nwhile (System::Update())\n{\ntextureA.draw();\ntextureB.draw();\n}\n}\n</code></pre>"},{"location":"releases/#10-\u4e0d\u6b63\u306a-polygon-\u9802\u70b9\u306e\u81ea\u52d5\u4fee\u6b63","title":"10. \u4e0d\u6b63\u306a Polygon \u9802\u70b9\u306e\u81ea\u52d5\u4fee\u6b63","text":"<p>\u624b\u5165\u529b\u306a\u3069\u306b\u3088\u308b\u4e0d\u6b63\u306a <code>Polygon</code> \u306e\u9802\u70b9\u3092\u4fee\u6b63\u3057\u3001\u59a5\u5f53\u306a <code>Array&lt;Polygon&gt;</code> \u306b\u5909\u63db\u3059\u308b\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 </p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nconst Font font(20, Typeface::Bold);\nArray&lt;Vec2&gt; points;\nArray&lt;Polygon&gt; solvedPolygons;\nwhile (System::Update())\n{\nif (MouseL.down())\n{\npoints &lt;&lt; Cursor::Pos();\n// \u9802\u70b9\u5217\u304b\u3089\u9069\u5207\u306a Polygon \u3092\u4f5c\u6210\nsolvedPolygons = Polygon::Correct(points, {});\n}\nelse if (MouseR.down())\n{\npoints.clear();\nsolvedPolygons.clear();\n}\nfor (auto [i, point] : Indexed(points))\n{\nCircle(point, 5).draw();\nLine(points[i], points[(i + 1) % points.size()])\n.drawArrow(2, Vec2(20, 20), Palette::Orange);\n}\nfont(points).draw(Rect(20, 20, 600, 720));\n{\nTransformer2D trans(Mat3x2::Translate(640, 0));\nfont(solvedPolygons).draw(Rect(20, 20, 600, 720));\nfor (auto [i, solvedPolygon] : Indexed(solvedPolygons))\n{\nconst HSV color(i * 40.0, 0.7, 1.0);\nsolvedPolygon.draw(color);\nconst auto&amp; outer = solvedPolygon.outer();\nfor (auto [k, point] : Indexed(outer))\n{\nconst Vec2 begin = outer[k];\nconst Vec2 end = outer[(k + 1) % outer.size()];\nconst Vec2 v = (end - begin).normalized();\nconst Vec2 c = (begin + end) / 2;\nconst Vec2 oc = c + v.rotated(-90_deg) * 10;\nLine(oc - v * 20, oc + v * 20)\n.drawArrow(2, Vec2(10, 10), color);\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"releases/#11-direct3d-\u30c9\u30e9\u30a4\u30d0--\u30c7\u30d0\u30a4\u30b9\u306e\u7a2e\u985e\u306e\u5909\u66f4","title":"11. Direct3D \u30c9\u30e9\u30a4\u30d0 / \u30c7\u30d0\u30a4\u30b9\u306e\u7a2e\u985e\u306e\u5909\u66f4","text":"<p>Windows \u7248\u3067 <code>#include &lt;Siv3D.hpp&gt;</code> \u306e\u524d\u306b\u7279\u5225\u306a\u30de\u30af\u30ed\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u4f7f\u7528\u3059\u308b Direct3D \u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u7a2e\u985e\u3092 WARP, Reference \u306a\u3069\u306b\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002GPU \u306e\u30c9\u30e9\u30a4\u30d0\u306e\u554f\u984c\u3067\u6b63\u5e38\u306a\u63cf\u753b\u304c\u3067\u304d\u306a\u3044\u5834\u5408\u306b WARP \u306b\u3088\u308b\u305f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u63cf\u753b\u8ca0\u8377\u304c\u8efd\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3042\u308c\u3070\u3001WARP \u3067\u52d5\u304b\u3059\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30ea\u30ea\u30fc\u30b9\u3059\u308b\u3053\u3068\u3082\u9078\u629e\u80a2\u3068\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30d5\u30e9\u30b0\u306f\u91cd\u8907\u3057\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002</p> <ul> <li>\u30c7\u30d5\u30a9\u30eb\u30c8 \u2192 dGPU (GeForce \u306a\u3069) \u512a\u5148</li> <li><code>SIV3D_WINDOWS_D3D_DRIVER_TYPE_HARDWARE_FAVOR_INTEGRATED</code> \u2192 iGPU (Intel UHD Graphics \u306a\u3069) \u512a\u5148</li> <li><code>SIV3D_WINDOWS_D3D_DRIVER_TYPE_WARP</code> \u2192 \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30e9\u30b9\u30bf\u30e9\u30a4\u30b6</li> <li><code>SIV3D_WINDOWS_D3D_DRIVER_TYPE_REFERENCE</code> \u2192 \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30c9\u30e9\u30a4\u30d0</li> <li>\u53c2\u8003: https://docs.microsoft.com/en-us/windows/win32/api/d3dcommon/ne-d3dcommon-d3d_driver_type</li> </ul> <pre><code>// \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30ec\u30f3\u30c0\u30e9\u2015\u3092\u4f7f\u7528 (Windows \u3067\u306e\u307f\u6709\u52b9\uff09\n# define SIV3D_WINDOWS_D3D_DRIVER_TYPE_WARP\n// iGPU (Intel UHD Graphics \u306a\u3069) \u512a\u5148 (Windows \u3067\u306e\u307f\u6709\u52b9\uff09\n//# define SIV3D_WINDOWS_D3D_DRIVER_TYPE_HARDWARE_FAVOR_INTEGRATED\n// \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30c9\u30e9\u30a4\u30d0\u3092\u4f7f\u7528 (Windows \u3067\u306e\u307f\u6709\u52b9\uff09\n//# define SIV3D_WINDOWS_D3D_DRIVER_TYPE_REFERENCE\n// Siv3D.hpp \u3088\u308a\u3082\u524d\u3067\u5b9a\u7fa9\n# include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF(0.8, 0.9, 1.0));\nconst Texture texture(U\"example/windmill.png\");\nwhile (System::Update())\n{\ntexture.draw();\n}\n}\n</code></pre>"},{"location":"releases/#12-\u305d\u306e\u4ed6","title":"12. \u305d\u306e\u4ed6","text":"<ul> <li>Image to Polygon \u306e\u5805\u7262\u6027\u304c\u5411\u4e0a\u3057\u3001\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u306a\u304f\u306a\u308a\u307e\u3057\u305f</li> <li>Linux \u7248\u306e\u30d3\u30eb\u30c9\u3067 AngelScript \u306e\u30ea\u30f3\u30af\u304c\u4e0d\u8981\u306b\u306a\u308a\u307e\u3057\u305f</li> <li>macOS \u3068 Linux \u306e\u4e00\u90e8\u74b0\u5883\u3067 <code>Microphone</code> \u306e\u521d\u671f\u5316\u306b\u5931\u6557\u3059\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u554f\u984c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f</li> <li><code>isOpened()</code> \u3068\u3044\u3046\u30e1\u30f3\u30d0\u95a2\u6570\u306f <code>isOpen()</code> \u306b\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f</li> <li>zlib \u306e\u5727\u7e2e\u5c55\u958b\u3092\u884c\u3046 <code>Zlib::Compress()</code>, <code>Zlib:: Decompress()</code> \u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f</li> <li><code>ParseOpt&lt;float&gt;()</code> \u304c\u4f8b\u5916\u3092\u6295\u3052\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u554f\u984c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f</li> <li><code>Math::InvSqrt2_v</code> \u304c\u6b63\u3057\u304f\u306a\u304b\u3063\u305f\u306e\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f</li> <li>Visual Studio \u7528\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u30bf\u30b0\u3092\u6307\u5b9a\u3057\u307e\u3057\u305f</li> <li>Visual Studio \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u6642\u306b Main.cpp \u304c\u81ea\u52d5\u3067\u958b\u304f\u3088\u3046\u306b\u3057\u307e\u3057\u305f</li> <li>Windows \u7528\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e Icon.ico \u3092 icon.ico \u306b\u30ea\u30cd\u30fc\u30e0\u3057\u307e\u3057\u305f</li> <li><code>Camera2D</code> \u306e <code>Scene::Size()</code> \u4f9d\u5b58\u3092\u89e3\u6d88\u3057\u307e\u3057\u305f</li> <li><code>ParticleSystem2DParameters</code> \u306e\u4ed5\u69d8\u3092\u6539\u5584\u3057\u307e\u3057\u305f</li> <li>\u5404\u7a2e RNG \u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3001\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f</li> <li><code>Serial</code> \u304c\u5207\u65ad\u3055\u308c\u3066\u3082 <code>isOpen()</code> \u304c <code>true</code> \u3092\u8fd4\u3057\u3066\u3044\u305f\u554f\u984c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f</li> <li><code>RoundRect</code> \u306e\u9802\u70b9\u751f\u6210\u54c1\u8cea\u306e\u554f\u984c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f</li> <li><code>DynamicTexture</code> \u3067\u30b5\u30a4\u30ba\u3068\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u307f\u6307\u5b9a\u3057\u305f\u969b\u306e\u30a8\u30e9\u30fc\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f</li> <li>macOS \u3067\u65e5\u672c\u8a9e\u30d1\u30b9\u3092\u6271\u3046\u3068\u4e00\u90e8\u306e\u95a2\u6570\u304c\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u554f\u984c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f</li> <li>Windows \u3067 <code>Graphics::SetTargetFrameRateHz()</code> \u304c\u5927\u304d\u304f\u4e0d\u6b63\u78ba\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u554f\u984c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f</li> <li><code>RenderTexture</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u306f\u3001\u7279\u306b\u660e\u793a\u3057\u306a\u3051\u308c\u3070 <code>ColorF(0.0, 1.0)</code> \u3067\u4e2d\u8eab\u3092\u30af\u30ea\u30a2\u3059\u308b\u3088\u3046\u4ed5\u69d8\u5909\u66f4\u3057\u307e\u3057\u305f</li> <li><code>JSONWriter::write(bool)</code> \u306e\u6319\u52d5\u304c\u6b63\u3057\u304f\u306a\u304b\u3063\u305f\u554f\u984c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f</li> <li><code>BasicCamera3D</code> \u306e <code>experimental::</code> \u3092\u5916\u3057\u307e\u3057\u305f</li> <li>\u305d\u306e\u4ed6\u8efd\u5fae\u306a\u4fee\u6b63\u591a\u6570</li> </ul>"},{"location":"releases/#1-sdffont","title":"1. SDFFont","text":"<p><code>SDFFont</code> \u306f\u3001\u30b0\u30ea\u30d5\u306e\u753b\u50cf\u3092 Distance field \u5f62\u5f0f\u3067\u6301\u3064 <code>Font</code> \u30af\u30e9\u30b9\u3067\u3059\u3002 \u3053\u308c\u307e\u3067\u306e <code>Font</code> \u30af\u30e9\u30b9\u306f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u6307\u5b9a\u3057\u305f\u56fa\u5b9a\u30b5\u30a4\u30ba\u3067\u30b0\u30ea\u30d5\u3054\u3068\u306e\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u753b\u50cf\u3092\u751f\u6210\u3057\u3001\u305d\u308c\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u3001\u62e1\u5927\u63cf\u753b\u6642\u306b\u307c\u3084\u3051\u308b\u306a\u3069\u3001\u30b5\u30a4\u30ba\u306e\u5909\u66f4\u306b\u5f31\u304f\u3001\u7e01\u53d6\u308a\u306e\u3088\u3046\u306a\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u3082\u56f0\u96e3\u3067\u3057\u305f\u3002 <code>SDFFont</code> \u30af\u30e9\u30b9\u306f\u3001\u30b0\u30ea\u30d5\u3054\u3068\u306e Distance Field \u3092\u751f\u6210\u3057\u3001\u62e1\u5927\u3057\u3066\u3082\u307c\u3084\u3051\u306a\u3044\u624b\u6cd5\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u307e\u3059\u3002<code>draw()</code> \u3054\u3068\u306b\u7b2c\u4e00\u5f15\u6570\u3067\u30d5\u30a9\u30f3\u30c8\u306e\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3067\u304d\u3001\u5927\u304d\u306a\u5024\u3092\u5165\u308c\u3066\u3082\u7d50\u679c\u304c\u307c\u3084\u3051\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u307e\u305f\u3001<code>Garphics2D::SetSDFParameters()</code> \u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u6574\u3059\u308b\u3053\u3068\u3067\u3001\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u6642\u306b\u6587\u5b57\u3092\u592a\u3089\u305b\u3089\u308c\u307e\u3059\u3002\u592a\u3055\u3068\u8272\u3092\u5909\u3048\u3066 2 \u56de\u4ee5\u4e0a\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u753b\u3059\u308b\u3053\u3068\u3067\u3001\u7e01\u53d6\u308a\u306e\u8868\u73fe\u3082\u53ef\u80fd\u3067\u3059\u3002 \u305f\u3060\u3057\u3001<code>SDFFont</code> \u306e\u751f\u6210\u3084\u63cf\u753b\u306e\u30b3\u30b9\u30c8\u306f <code>Font</code> \u306b\u6bd4\u3079\u3066\u5927\u304d\u3044\u305f\u3081\u3001<code>Font</code> \u3067\u5341\u5206\u306a\u30b1\u30fc\u30b9\u3067\u306f\u5f93\u6765\u901a\u308a <code>Font</code> \u3092\u4f7f\u3046\u3079\u304d\u3067\u3059\u3002 <code>SDFFont</code> \u306e\u54c1\u8cea\u306f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u6307\u5b9a\u3059\u308b\u30b0\u30ea\u30d5\u306e Distance Field \u306e\u30b5\u30a4\u30ba\u3068\u3001\u63cf\u753b\u3059\u308b\u5b57\u5f62\u306e\u8907\u96d1\u3055\u306b\u5f71\u97ff\u3055\u308c\u307e\u3059\u3002\u753b\u6570\u306e\u5c11\u306a\u3044\u6570\u5b57\u3084\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3001\u66f2\u7dda\u7684\u3067\u30b7\u30f3\u30d7\u30eb\u306a\u5b57\u5f62\u3067\u3042\u308c\u3070\u300140 \u30d4\u30af\u30bb\u30eb\u4ee5\u4e0b\u306e Distance Field \u3067\u3082\u304d\u308c\u3044\u306a\u30c6\u30ad\u30b9\u30c8\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3067\u304d\u307e\u3059\u304c\u3001\u8907\u96d1\u306a\u5b57\u5f62\u306b\u306a\u308b\u307b\u3069\u3001\u5c0f\u3055\u306a Distance Field \u3067\u306f\u63cf\u753b\u7d50\u679c\u304c\u4e71\u308c\u305f\u308a\u3001\u30ce\u30a4\u30ba\u304c\u76ee\u7acb\u3064\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u6587\u5b57\u306e\u592a\u3089\u305b\u306b\u3064\u3044\u3066\u3082\u3001\u5927\u304d\u3044\u5024\u3067\u306f\u30ce\u30a4\u30ba\u304c\u76ee\u7acb\u3064\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002<code>SDFFont</code> \u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u4f7f\u7528\u3059\u308b\u969b\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u306e\u63cf\u753b\u7d50\u679c\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3001\u9069\u5207\u306a Distance Field \u30b5\u30a4\u30ba\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"releases/#sdffont-\u306e\u57fa\u672c","title":"SDFFont \u306e\u57fa\u672c","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF(0.4, 0.5, 0.6));\n// \u30b0\u30ea\u30d5\u3054\u3068\u306e Distance field \u306e\u30b5\u30a4\u30ba\nconst int32 distanceFieldSize = 60;\n// SDFFont\nconst SDFFont sdfFont(distanceFieldSize, Typeface::Bold);\nconst String text = U\"OpenSiv3D\";\nwhile (System::Update())\n{\n// SDF \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a2d\u5b9a\nGraphics2D::SetSDFParameters(sdfFont.pixelRange());\nsdfFont(text).draw(40, Vec2(20, 20));\nsdfFont(text).draw(80, Vec2(20, 80));\nsdfFont(text).draw(120, Vec2(20, 180));\n// SDF \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a2d\u5b9a\u3001\u592a\u3089\u305b\u3092 0.2 \u306b\nGraphics2D::SetSDFParameters(sdfFont.pixelRange(), 0.2);\nsdfFont(text).draw(120, Vec2(20, 320), Palette::Black);\n// SDF \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a2d\u5b9a\u3001\u592a\u3089\u305b\u3092 0.0 \u306b\nGraphics2D::SetSDFParameters(sdfFont.pixelRange(), 0.0);\nsdfFont(text).draw(120, Vec2(20, 320));\n}\n}\n</code></pre>"},{"location":"releases/#sdffont-\u306e\u4e8b\u524d\u751f\u6210","title":"SDFFont \u306e\u4e8b\u524d\u751f\u6210","text":"<p><code>SDFFont</code> \u306e\u5404\u30b0\u30ea\u30d5\u306e Distance field \u306f\u3001\u751f\u6210\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u305f\u3081\u3001\u4f7f\u7528\u3059\u308b\u30b0\u30ea\u30d5\u3092\u3042\u3089\u304b\u3058\u3081\u751f\u6210\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u901f\u5ea6\u4f4e\u4e0b\u304c\u9632\u3052\u307e\u3059\u3002<code>SDFFont::preload(s)</code> \u3067\u3001\u6587\u5b57\u5217 <code>s</code> \u542b\u307e\u308c\u308b\u30b0\u30ea\u30d5\u306e Distance field \u3092\u751f\u6210\u3001<code>SDFFont::preload(imagePath, jsonPath)</code> \u3067 2 \u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u751f\u6210\u7d50\u679c\u3092\u4fdd\u5b58\u3057\u3001<code>SDFFont</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u3053\u308c\u3089\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\u4e8b\u524d\u751f\u6210\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u30b0\u30ea\u30d5\u306f\u5b9f\u884c\u6642\u306b\u751f\u6210\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF(0.4, 0.5, 0.6));\n// \u30b0\u30ea\u30d5\u3054\u3068\u306e Distance field \u306e\u30b5\u30a4\u30ba\nconst int32 distanceFieldSize = 60;\n//////////////////////////////////////////\n//\n// SDFFont Distance field \u306e\u4e8b\u524d\u751f\u6210\n//\n// \u203b \u4fdd\u5b58\u3067\u304d\u305f\u3089\u4e0d\u8981\u306a\u306e\u3067\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\n{\nString s;\nfor (auto i : Range(32, 126))\n{\ns &lt;&lt; char32(i);\n}\n// SDF \u306e\u4f5c\u6210\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u3001\n// ASCII \u6587\u5b57\u3092\u3042\u3089\u304b\u3058\u3081 SDF \u5316\u3057\u3066\u3001\u30d5\u30a9\u30f3\u30c8\u60c5\u5831\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304f\nSDFFont(distanceFieldSize, Typeface::Bold)\n.preload(s)\n.saveGlyphs(U\"sdf-font/bold_60.png\", U\"sdf-font/bold_60.json\");\n}\n//\n//////////////////////////////////////////\n// SDFFont \u3092\u4f5c\u6210\u3057\u3001\u4e8b\u524d\u751f\u6210\u3057\u305f Distance field \u3092\u30ed\u30fc\u30c9\n// \u30d5\u30a9\u30f3\u30c8\u306e\u7a2e\u985e\u3084 Distance field \u304c\u4e00\u81f4\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\nconst SDFFont sdfFont({ U\"sdf-font/bold_60.png\", U\"sdf-font/bold_60.json\" }, distanceFieldSize, Typeface::Bold);\nif (!sdfFont) // \u30ed\u30fc\u30c9\u306b\u5931\u6557\u3057\u305f\u3089\n{\nthrow Error(U\"Failed to load SDFFont\");\n}\nconst String text = U\"OpenSiv3D\";\nwhile (System::Update())\n{\n// SDF \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a2d\u5b9a\nGraphics2D::SetSDFParameters(sdfFont.pixelRange());\nsdfFont(text).draw(120, Vec2(20, 20));\n}\n}\n</code></pre>"},{"location":"releases/#\u6bd4\u8f03\u7528\u30b5\u30f3\u30d7\u30eb","title":"\u6bd4\u8f03\u7528\u30b5\u30f3\u30d7\u30eb","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF(0.4, 0.5, 0.6));\nconstexpr Vec2 pos(0, 0);\nconst String text = U\"OpenSiv3D\\n\u3042\u3044\u3046\u3048\u304a\";\n//////////////////////////////////////////\n//\n// SDFFont Distance field \u306e\u4e8b\u524d\u751f\u6210\n//\n// \u203b \u4fdd\u5b58\u3067\u304d\u305f\u3089\u4e0d\u8981\u306a\u306e\u3067\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\n{\nString s;\nfor (auto i : Range(32, 126))\n{\ns &lt;&lt; char32(i);\n}\ns += text;\n// SDF \u306e\u4f5c\u6210\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u3001\n// ASCII \u6587\u5b57\u3068 text \u3092\u3042\u3089\u304b\u3058\u3081 SDF \u5316\u3057\u3066\u3001\u30d5\u30a9\u30f3\u30c8\u60c5\u5831\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304f\nSDFFont(60, Typeface::Light).preload(s).saveGlyphs(U\"sdf-font/light_60.png\", U\"sdf-font/light_60.json\");\nSDFFont(60, Typeface::Heavy).preload(s).saveGlyphs(U\"sdf-font/heavy_60.png\", U\"sdf-font/heavy_60.json\");\nSDFFont(50, U\"example/font/LogoTypeGothic/LogoTypeGothic.otf\").preload(s).saveGlyphs(U\"sdf-font/logo_50.png\", U\"sdf-font/logo_50.json\");\n}\n//\n//////////////////////////////////////////\n// SDFFont \u3092\u4f5c\u6210\u3057\u3001\u4e8b\u524d\u751f\u6210\u3057\u305f Distance field \u3092\u30ed\u30fc\u30c9\nconst Array&lt;SDFFont&gt; sdfFonts =\n{\nSDFFont({ U\"sdf-font/light_60.png\", U\"sdf-font/light_60.json\" }, 60, Typeface::Light),\nSDFFont({ U\"sdf-font/heavy_60.png\", U\"sdf-font/heavy_60.json\" }, 60, Typeface::Heavy),\nSDFFont({ U\"sdf-font/logo_50.png\", U\"sdf-font/logo_50.json\" }, 50, U\"example/font/LogoTypeGothic/LogoTypeGothic.otf\"),\n};\nfor (const auto&amp; sdfFont : sdfFonts)\n{\nif (!sdfFont) // \u30ed\u30fc\u30c9\u306b\u5931\u6557\u3057\u305f\u3089\n{\nthrow Error(U\"Failed to load SDFFont\");\n}\n}\n// \u6bd4\u8f03\u7528\u306e\u901a\u5e38 Font\nconst Array&lt;Font&gt; fonts =\n{\nFont(60, Typeface::Light),\nFont(60, Typeface::Heavy),\nFont(50, U\"example/font/LogoTypeGothic/LogoTypeGothic.otf\"),\n};\nsize_t fontIndex = 0, method = 0;\ndouble fontSize = 80, outline1 = 0.0, outline2 = 0.0;\nHSV innerColor = Palette::Black, outlineColor = Palette::White;\nwhile (System::Update())\n{\nconst auto&amp; sdfFont = sdfFonts[fontIndex];\nconst auto&amp; font = fonts[fontIndex];\nif (method == 0)\n{\nGraphics2D::SetSDFParameters(sdfFont.pixelRange(), outline2);\nsdfFont(text).draw(fontSize, pos, innerColor);\nGraphics2D::SetSDFParameters(sdfFont.pixelRange(), outline1);\nsdfFont(text).draw(fontSize, pos, outlineColor);\nGraphics2D::SetSDFParameters(sdfFont.pixelRange());\nsdfFont(text).draw(fontSize, pos, innerColor);\n}\nelse if (method == 1)\n{\nTransformer2D tr(Mat3x2::Scale(fontSize / font.fontSize()));\nfont(text).draw(pos, innerColor);\n}\nSimpleGUI::RadioButtons(fontIndex, { U\"Light 60\", U\"Heavy 60\", U\"Logo 50\" }, Vec2(20, 360), 150);\nSimpleGUI::RadioButtons(method, { U\"SDFFont\", U\"Font\" }, Vec2(20, 480), 150);\nSimpleGUI::Slider(U\"size: {:.0f}\"_fmt(fontSize), fontSize, 15, 550, Vec2(20, 560), 150, 200);\nSimpleGUI::Slider(U\"outline1: {:.2f}\"_fmt(outline1), outline1, 0.0, 0.49, Vec2(20, 600), 150, 200, (method == 0));\nSimpleGUI::Slider(U\"outline2: {:.2f}\"_fmt(outline2), outline2, 0.0, 0.49, Vec2(20, 640), 150, 200, (method == 0));\nSimpleGUI::ColorPicker(innerColor, Vec2(400, 560));\nSimpleGUI::ColorPicker(outlineColor, Vec2(580, 560));\n}\n}\n</code></pre>"},{"location":"releases/#2-\u96c6\u4e2d\u7dda\u63cf\u753b","title":"2. \u96c6\u4e2d\u7dda\u63cf\u753b","text":"<p>\u5b9f\u9a13\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u7fa4 HamFramework \u306b\u8ffd\u52a0\u3055\u308c\u305f <code>SaturatedLinework</code> \u30af\u30e9\u30b9\u306b\u3088\u3063\u3066\u3001\u30b3\u30df\u30ab\u30eb\u306a\u52b9\u679c\u3084\u75be\u8d70\u611f\u3092\u6f14\u51fa\u3059\u308b\u305f\u3081\u306e\u96c6\u4e2d\u7dda\u3092\u7c21\u5358\u306b\u63cf\u753b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u8a2d\u5b9a\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u56f3\u5f62\u3001\u5916\u5468\u306e\u9577\u65b9\u5f62\u3001\u7dda\u306e\u672c\u6570\u3001\u7dda\u306e\u592a\u3055\u3001\u9577\u3055\u306e\u3070\u3089\u3064\u304d\u3001\u4e71\u6570\u30b7\u30fc\u30c9\u306a\u3069\u304c\u3042\u308a\u3001<code>.draw()</code> \u306e\u5f15\u6570\u3067\u8272\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u591a\u6570\u306e\u4e09\u89d2\u5f62\u3092\u751f\u6210\u3057\u3066\u63cf\u753b\u3059\u308b\u65b9\u6cd5\u3067\u8868\u73fe\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u66f4\u3057\u306a\u3051\u308c\u3070\u3001\u751f\u6210\u3057\u305f\u4e09\u89d2\u5f62\u306f\u518d\u5229\u7528\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\n# include &lt;HamFramework.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF(0.98, 0.96, 0.94));\n// \u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u56f3\u5f62\nEllipse target(400, 300, 180, 120);\n// \u5916\u5468\u306e\u9577\u65b9\u5f62\nRect outer = Scene::Rect();\n// \u7dda\u306e\u592a\u3055\ndouble minThickness = 3.0, maxThickness = 10.0;\n// \u7dda\u306e\u672c\u6570\ndouble lineCount = 150;\n// \u7dda\u306e\u9577\u3055\u306e\u3070\u3089\u3064\u304d\ndouble offsetRange = 60.0;\n// \u4e71\u6570\u30b7\u30fc\u30c9\nuint64 seed = 12345;\nSaturatedLinework&lt;Ellipse&gt; linework(target, outer);\nlinework\n.setThickness(minThickness, maxThickness)\n.setLineCount(static_cast&lt;size_t&gt;(lineCount))\n.setOffsetRange(offsetRange);\nconst Texture texture(Emoji(U\"\ud83e\udd80\"));\nwhile (System::Update())\n{\nif (MouseR.down())\n{\ntarget.setCenter(Cursor::Pos());\nlinework.setTargetShape(target);\n}\ntexture.scaled(1.6).drawAt(target.center);\n// \u96c6\u4e2d\u7dda\u3092\u63cf\u753b\nlinework.draw(ColorF(0.1));\nif (SimpleGUI::Slider(U\"lineCount\", lineCount, 0.0, 400.0, Vec2(20, 20), 150))\n{\nlinework.setLineCount(static_cast&lt;size_t&gt;(lineCount));\n}\nif (SimpleGUI::Slider(U\"offsetRange\", offsetRange, 0.0, 100.0, Vec2(20, 60), 150))\n{\nlinework.setOffsetRange(offsetRange);\n}\nif (SimpleGUI::Button(U\"Change seed\", Vec2(20, 100)))\n{\nseed = RandomUint64();\nlinework.setSeed(seed);\n}\n}\n}\n</code></pre>"},{"location":"releases/#3-\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1","title":"3. \u30b7\u30ea\u30a2\u30eb\u901a\u4fe1","text":"<p>\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3092\u4f7f\u3063\u3066\u3001\u5916\u90e8\u30c7\u30d0\u30a4\u30b9\u3068\u30c7\u30fc\u30bf\u306e\u9001\u53d7\u4fe1\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4ee5\u4e0b\u3067\u306f Arduino UNO \u3067 LED \u306e\u70b9\u706f/\u6d88\u706f\u3092 PC \u304b\u3089\u5236\u5fa1\u3057\u3001\u5408\u308f\u305b\u3066 1 \u30d0\u30a4\u30c8\u306e\u6570\u5024\u30c7\u30fc\u30bf\u3092\u3084\u308a\u53d6\u308a\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u793a\u3057\u307e\u3059\u3002</p>"},{"location":"releases/#arduino-\u306e\u30b3\u30fc\u30c9","title":"Arduino \u306e\u30b3\u30fc\u30c9","text":"<pre><code>void setup()\n{\npinMode(13, OUTPUT); // 13 \u30d4\u30f3 - LED - \u62b5\u6297 - GND\n// 9600bps \u3067\u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u3092\u958b\u304f\nSerial.begin(9600);\n}\nunsigned char i = 0; // \u30c6\u30b9\u30c8\u7528\u306b PC \u5074\u306b\u9001\u308b\u5024\nvoid loop()\n{\n// 250 \u30df\u30ea\u79d2\u6b62\u3081\u308b\ndelay(250);\n// \u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u306b 1 \u30d0\u30a4\u30c8\u51fa\u529b\nSerial.write(i);\n++i;\n// \u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3067\u53d7\u4fe1\u3057\u305f\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\nconst int val = Serial.read();\nif (val == -1) // \u53d7\u4fe1\u3057\u305f\u30c7\u30fc\u304c\u7121\u3044\n{\nreturn;\n}\nif (val == 0)\n{\ndigitalWrite(13, LOW); // LOW \u3092\u51fa\u529b\n}\nelse if (val == 1)\n{\ndigitalWrite(13, HIGH); // HIGH \u3092\u51fa\u529b\n}\nelse if (val == 2)\n{\ni = 0;\n}\n}\n</code></pre>"},{"location":"releases/#pc-\u5074\u306e\u30b3\u30fc\u30c9","title":"PC \u5074\u306e\u30b3\u30fc\u30c9","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u306e\u4e00\u89a7\u3092\u53d6\u5f97\nconst Array&lt;SerialPortInfo&gt; infos = System::EnumerateSerialPorts();\nconst Array&lt;String&gt; options = infos.map([](const SerialPortInfo&amp; info)\n{\nreturn U\"{} ({})\"_fmt(info.port, info.description);\n}) &lt;&lt; U\"none\";\nSerial serial;\nsize_t index = (options.size() - 1);\nwhile (System::Update())\n{\nconst bool isOpen = serial.isOpen(); // OpenSiv3D v0.4.2 \u4ee5\u524d\u306f serial.isOpened()\nif (SimpleGUI::Button(U\"Write 0\", Vec2(200, 20), 120, isOpen))\n{\n// 1 \u30d0\u30a4\u30c8\u306e\u30c7\u30fc\u30bf (0) \u3092\u66f8\u304d\u8fbc\u3080\nserial.writeByte(0);\n}\nif (SimpleGUI::Button(U\"Write 1\", Vec2(340, 20), 120, isOpen))\n{\n// 1 \u30d0\u30a4\u30c8\u306e\u30c7\u30fc\u30bf (1) \u3092\u66f8\u304d\u8fbc\u3080\nserial.writeByte(1);\n}\nif (SimpleGUI::Button(U\"Write 2\", Vec2(480, 20), 120, isOpen))\n{\n// 1 \u30d0\u30a4\u30c8\u306e\u30c7\u30fc\u30bf (2) \u3092\u66f8\u304d\u8fbc\u3080\nserial.writeByte(2);\n}\nif (SimpleGUI::RadioButtons(index, options, Vec2(200, 60)))\n{\nClearPrint();\nif (index == (options.size() - 1))\n{\nserial = Serial();\n}\nelse\n{\nPrint &lt;&lt; U\"Open {}\"_fmt(infos[index].port);\n// \u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u3092\u30aa\u30fc\u30d7\u30f3\nif (serial.open(infos[index].port))\n{\nPrint &lt;&lt; U\"Succeeded\";\n}\nelse\n{\nPrint &lt;&lt; U\"Failed\";\n}\n}\n}\nif (const size_t available = serial.available())\n{\n// \u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3067\u53d7\u4fe1\u3057\u305f\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u8868\u793a\nPrint &lt;&lt; U\"READ: \" &lt;&lt; serial.readBytes();\n}\n}\n}\n</code></pre>"},{"location":"releases/#4-poissondisk2d","title":"4. PoissonDisk2D","text":"<p>\u307b\u3069\u3088\u3044\u8ddd\u96e2\u3067\u91cd\u306a\u3089\u306a\u3044\u70b9\u7fa4\u3092\u751f\u6210\u3059\u308b <code>PoissonDisk2D</code> \u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF(0.2, 0.3, 0.4));\nconst Rect rect(100, 100, 600, 400);\ndouble r = 15.0;\n// \u70b9\u7fa4\u3092\u751f\u6210\nPoissonDisk2D pd(rect.size, r);\nwhile (System::Update())\n{\nrect.drawFrame(1, 1, ColorF(0.2));\nfor (const auto&amp; point : pd.getPoints())\n{\nCircle(point, r / 4).movedBy(rect.pos).draw();\n}\nif (SimpleGUI::Slider(r, 5.0, 40.0, Vec2(10, 10)))\n{\npd = PoissonDisk2D(rect.size, r);\n}\n}\n}\n</code></pre>"},{"location":"releases/#5-jsonwriter","title":"5. JSONWriter","text":"<p>\u6210\u5f62\u3055\u308c\u305f JSON \u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3059\u308b\u30d8\u30eb\u30d1\u30fc\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u9806\u6b21\u51fa\u529b\u306e\u305f\u3081\u3001\u5b9f\u969b\u306b\u4fdd\u5b58\u3055\u308c\u308b\u306e\u3068\u540c\u3058\u9806\u756a\u3067\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nJSONWriter json;\njson.startObject();\n{\njson.key(U\"Window\").startObject();\n{\njson.key(U\"title\").write(U\"My application\");\njson.key(U\"width\").write(800);\njson.key(U\"height\").write(600);\njson.key(U\"sizable\").write(false);\n}\njson.endObject();\njson.key(U\"Scene\").startObject();\n{\njson.key(U\"background\").write(ColorF(0.8, 0.9, 1.0));\n}\njson.endObject();\njson.key(U\"Array\").startObject();\n{\njson.key(U\"values\").writeArray({ 11, 22, 33, 44, 55 });\n}\njson.endObject();\njson.key(U\"Items\").startArray();\n{\njson.startObject();\n{\njson.key(U\"label\").write(U\"Forest\");\njson.key(U\"pos\").startObject();\n{\njson.key(U\"x\").write(100);\njson.key(U\"y\").write(100);\n}\njson.endObject();\n}\njson.endObject();\njson.startObject();\n{\njson.key(U\"label\").write(U\"Ocean\");\njson.key(U\"pos\").startObject();\n{\njson.key(U\"x\").write(300);\njson.key(U\"y\").write(200);\n}\njson.endObject();\n}\njson.endObject();\njson.startObject();\n{\njson.key(U\"label\").write(U\"Mountain\");\njson.key(U\"pos\").startObject();\n{\njson.key(U\"x\").write(500);\njson.key(U\"y\").write(100);\n}\njson.endObject();\n}\njson.endObject();\n}\njson.endArray();\n}\njson.endObject();\n// \u3053\u3053\u307e\u3067\u306e\u5185\u5bb9\u3092\u4fdd\u5b58\njson.save(U\"test.json\");\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p>\u51fa\u529b\u3055\u308c\u308b JSON \u30d5\u30a1\u30a4\u30eb <pre><code>{\n\"Window\": {\n\"title\": \"My application\",\n\"width\": 800,\n\"height\": 600,\n\"sizable\": \"false\"\n},\n\"Scene\": {\n\"background\": \"(0.8, 0.9, 1, 1)\"\n},\n\"Array\": {\n\"values\": [\n11,\n22,\n33,\n44,\n55\n]\n},\n\"Items\": [\n{\n\"label\": \"Forest\",\n\"pos\": {\n\"x\": 100,\n\"y\": 100\n}\n},\n{\n\"label\": \"Ocean\",\n\"pos\": {\n\"x\": 300,\n\"y\": 200\n}\n},\n{\n\"label\": \"Mountain\",\n\"pos\": {\n\"x\": 500,\n\"y\": 100\n}\n}\n]\n}\n</code></pre></p>"},{"location":"releases/#6-geometry2disclockwise","title":"6. Geometry2D::IsClockwise()","text":"<p>\u9802\u70b9\u306e\u914d\u5217\u304c\u6642\u8a08\u56de\u308a\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF(0.96, 0.98, 1.0));\nArray&lt;Vec2&gt; points;\nwhile (System::Update())\n{\nif (MouseL.down())\n{\npoints &lt;&lt; Cursor::Pos();\n}\nif (MouseR.down())\n{\npoints.clear();\n}\nconst bool isClockwise = Geometry2D::IsClockwise(points);\nClearPrint();\nPrint &lt;&lt; isClockwise;\nfor (const auto&amp; point : points)\n{\nCircle(point, 10).draw(Palette::Orange);\n}\nif (points.size() &gt; 2)\n{\n// \u6642\u8a08\u56de\u308a\u306b\u306a\u308b\u3088\u3046\u306b\u77e2\u5370\u3067\u3064\u306a\u3050\nif (isClockwise)\n{\nfor (size_t i = 0; i &lt; points.size(); ++i)\n{\nLine(points[i], points[(i + 1) % points.size()])\n.stretched(-10)\n.drawArrow(3, Vec2::All(20), ColorF(0.25));\n}\n}\nelse\n{\nfor (size_t i = 0; i &lt; points.size(); ++i)\n{\nLine(points[i], points[(i + 1) % points.size()])\n.reversed()\n.stretched(-10)\n.drawArrow(3, Vec2::All(20), ColorF(0.25));\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"releases/#7-circledrawinnercolor-outercolor","title":"7. Circle::draw(innerColor, outerColor)","text":"<p><code>Circle</code> \u3084 <code>Ellipse</code> \u3067\u4e2d\u5fc3\u306e\u8272\u3068\u5916\u5468\u306e\u8272\u3092\u6307\u5b9a\u3057\u3001\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u63cf\u753b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u4e2d\u5fc3\u304c\u9ec4\u8272\u3001\u5916\u5468\u304c\u9ed2\nCircle(Scene::Center(), 400).draw(Palette::Yellow, Palette::Black);\n}\n}\n</code></pre>"},{"location":"releases/#8-simpleguiheadline--colorpicker","title":"8. SimpleGUI::Headline / ColorPicker","text":"<p>SimpleGUI \u306b\u3001\u898b\u51fa\u3057\u3092\u4ed8\u3051\u308b\u30d8\u30c3\u30c9\u30e9\u30a4\u30f3\u3068\u3001\u8272\u3092\u9078\u629e\u3059\u308b\u30ab\u30e9\u30fc\u30d4\u30c3\u30ab\u30fc\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\ndouble p0 = 1.0, p1 = 0.4, p2 = 0.5;\nHSV hsv = Palette::Gray;\nsize_t index = 0;\nwhile (System::Update())\n{\nScene::SetBackground(hsv);\n// Headline\nSimpleGUI::Headline(U\"Config\", Vec2(20, 20));\n{\nSimpleGUI::Slider(U\"Param1\", p0, Vec2(20, 60));\nSimpleGUI::Slider(U\"Param2\", p1, Vec2(20, 100));\nSimpleGUI::Slider(U\"Param3\", p2, Vec2(20, 140));\n}\nSimpleGUI::Headline(U\"Background\", Vec2(240, 20));\n{\n// \u30ab\u30e9\u30fc\u30d4\u30c3\u30ab\u30fc\nSimpleGUI::ColorPicker(hsv, Vec2(240, 60));\n}\nSimpleGUI::Headline(U\"Terrain\", Vec2(420, 20));\n{\nSimpleGUI::RadioButtons(index, { U\"Plain\", U\"Hill\", U\"Mountain\" }, Vec2(420, 60), 150);\n}\n}\n}\n</code></pre>"},{"location":"releases/#9-toastnotification","title":"9. ToastNotification","text":"<p>Windows \u3067\u30c8\u30fc\u30b9\u30c8\u901a\u77e5\u3092\u51fa\u305b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF(0.9, 0.6, 0.3));\n// \u901a\u77e5\u3054\u3068\u306b\u5272\u308a\u632f\u3089\u308c\u308b ID\nNotificationID latest = -1;\n// \u753b\u50cf\u3092\u4f5c\u6210\u30fb\u4fdd\u5b58\nEmoji::CreateImage(U\"\ud83c\udf55\").save(U\"pizza.png\");\nwhile (System::Update())\n{\nClearPrint();\n// \u901a\u77e5\u306e\u72b6\u614b\nPrint &lt;&lt; (int32)Platform::Windows::ToastNotification::GetState(latest);\n// \u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\u306e\u7d50\u679c\nPrint &lt;&lt; U\"Action: \" &lt;&lt; Platform::Windows::ToastNotification::GetAction(latest);\nif (SimpleGUI::Button(U\"Send a notification\", Vec2(10, 70)))\n{\nToastNotificationProperty toast{\n.title = U\"Title\", // \u901a\u77e5\u306e\u30bf\u30a4\u30c8\u30eb\n.message = U\"Message\", // \u901a\u77e5\u306e\u672c\u6587\n.imagePath = U\"pizza.png\", // \u5927\u304d\u3044\u753b\u50cf\u3060\u3068\u4f7f\u308f\u308c\u306a\u3044\u3053\u3068\u304c\u3042\u308b\n.actions = { U\"Yes\", U\"No\" } // \u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\uff08\u4e0d\u8981\u306a\u5834\u5408\u306f\u8a2d\u5b9a\u3057\u306a\u3044\uff09\n};\n// \u901a\u77e5\u3054\u3068\u306b\u5272\u308a\u632f\u3089\u308c\u308b ID \u3092\u53d6\u5f97\nlatest = Platform::Windows::ToastNotification::Show(toast);\n}\n}\n}\n</code></pre>"},{"location":"releases/#10-simpleguimanager","title":"10. SimpleGUIManager","text":"<p>TOML \u30d5\u30a1\u30a4\u30eb\u306b SimpleGUI \u306e\u5404\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3092\u8a18\u8ff0\u3057\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30ed\u30fc\u30c9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u5b9f\u884c\u4e2d\u306b\u64cd\u4f5c\u3057\u305f\u5024\u3092\u4fdd\u5b58\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// SimpleGUI \u306e\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u60c5\u5831\u3092\u8a18\u8ff0\u3057\u305f\u30d5\u30a1\u30a4\u30eb\nconst FilePath tomlPath = FileSystem::FullPath(U\"example/gui/gui.toml\");\n// \u66f4\u65b0\u3092\u691c\u77e5\nconst DirectoryWatcher watcher(FileSystem::ParentPath(tomlPath));\n// GUI \u3092\u30ed\u30fc\u30c9\nSimpleGUIManager gui(tomlPath);\nwhile (System::Update())\n{\n// TOML \u304c\u66f4\u65b0\u3055\u308c\u305f\u3089 GUI \u3092\u518d\u30ed\u30fc\u30c9\nfor (const auto&amp; change : watcher.retrieveChanges())\n{\nif (change.first == tomlPath &amp;&amp; change.second == FileAction::Modified)\n{\nClearPrint();\ngui.load(tomlPath);\n}\n}\n// GUI \u3092\u66f4\u65b0\u30fb\u63cf\u753b\ngui.draw();\nif (gui.button(U\"bt-OK\")) // \"bt-OK\" \u3068\u3044\u3046\u540d\u524d\u306e\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\n{\nPrint &lt;&lt; U\"OK\";\n}\nelse if (gui.button(U\"bt-Cancel\")) // \"bt-Cancel\" \u3068\u3044\u3046\u540d\u524d\u306e\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\n{\nPrint &lt;&lt; U\"Cancel\";\n}\nScene::SetBackground(gui.colorPicker(U\"cp-Color\")); // \"cp-Color \u3068\u3044\u3046\u540d\u524d\u306e\u30ab\u30e9\u30fc\u30d4\u30c3\u30ab\u30fc\u306e\u5024 \n}\n// \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u60c5\u5831\u3068\u5024\u3092 save.toml \u3068\u3044\u3046\u540d\u524d\u3067\u4fdd\u5b58\u3059\u308b\n// \u3053\u308c\u3092 SimpleGUIManager \u3067\u8aad\u307f\u8fbc\u307e\u305b\u308b\u3053\u3068\u3082\u3067\u304d\u308b\n//gui.save(U\"save.toml\");\n}\n</code></pre>"},{"location":"releases/#11-print-\u306e\u6392\u4ed6\u5236\u5fa1","title":"11. Print \u306e\u6392\u4ed6\u5236\u5fa1","text":"<p>\u30c7\u30d0\u30c3\u30b0\u306a\u3069\u306e\u7528\u9014\u306e\u305f\u3081\u306b\u3001<code>Print</code> \u3092\u8907\u6570\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u540c\u6642\u306b\u547c\u3073\u51fa\u3057\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\u3002</p> <p></p> <pre><code>// Siv3D \u306e\u4e26\u5217\u51e6\u7406\u95a2\u6570\u3092\u6709\u52b9\u5316\u3059\u308b\u30de\u30af\u30ed\n// \u30d8\u30c3\u30c0\u304c\u5897\u3048\u308b\u305f\u3081\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u9593\u304c\u5c11\u3057\u9577\u304f\u306a\u308b\n# define SIV3D_CONCURRENT\n# include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// 0\uff5e15 \u306e\u6570\u306b\u5bfe\u3057\u3066\u3001\u8907\u6570\u30b9\u30ec\u30c3\u30c9\u3067\u51e6\u7406\nRange(0, 15).parallel_each([](int32 i)\n{\n// \u30b9\u30ec\u30c3\u30c9\u8b58\u5225\u5b50\u3092\u5408\u308f\u305b\u3066\u8868\u793a\nPrint &lt;&lt; U\"{}: {}\"_fmt(std::this_thread::get_id(), i);\n});\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"releases/#12-3d-\u5f62\u72b6","title":"12. 3D \u5f62\u72b6","text":"<p><code>Quaternion</code>, <code>OBB</code> \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002<code>Ray</code> \u3068\u5404\u7a2e 3D \u5f62\u72b6\u3068\u306e\u4ea4\u5dee\u5224\u5b9a\u3082\u3044\u304f\u3064\u304b\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002</p> <p>\u305f\u3060\u3057 v0.4.1 \u3068\u540c\u69d8\u30012D \u63cf\u753b\u3067 3D \u3092\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u7c21\u6613\u7684\u306a\u3082\u306e\u306a\u306e\u3067\u3001\u6b21\u306e\u3088\u3046\u306a\u5236\u7d04\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>\u6df1\u5ea6\u30d0\u30c3\u30d5\u30a1\u304c\u7121\u3044\u306e\u3067\u524d\u5f8c\u5224\u5b9a\u304c\u3067\u304d\u306a\u3044</li> <li>\u9060\u8fd1\u30af\u30ea\u30c3\u30d7\u304c\u7121\u3044\u306e\u3067\u30ab\u30e1\u30e9\u306b\u8fd1\u3059\u304e\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6b63\u3057\u304f\u8868\u793a\u3055\u308c\u306a\u3044</li> </ul> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconstexpr double fov = 45_deg;\nconstexpr Vec3 focusPosition(0, 0, 0);\nVec3 eyePosition(0, 10, 0);\nexperimental::BasicCamera3D camera(Scene::Size(), fov, eyePosition, focusPosition);\nArray&lt;OBB&gt; objects;\nfor (auto x : Range(-2, 2))\n{\nfor (auto z : Range(2, -2, -1))\n{\nobjects &lt;&lt; OBB(Vec3(x * 4, 1, z * 4), Vec3(3, 2, 0.5), Quaternion::RollPitchYaw(0, x * 30_deg, 0));\nobjects &lt;&lt; OBB(Vec3(x * 4, 5, z * 4), Vec3(2, 1, 2), Quaternion::RollPitchYaw(x * 30_deg, 0, 0));\n}\n}\nwhile (System::Update())\n{\neyePosition = Cylindrical(20, Scene::Time() * 30_deg, 8 + Periodic::Sine0_1(4s) * 8);\ncamera.setView(eyePosition, focusPosition);\nconst Mat4x4 mat = camera.getMat4x4();\n{\nScopedRenderStates2D culling(RasterizerState::SolidCullBack);\nfor (auto i : Range(-10, 10))\n{\nLine3D(Vec3(-10, 0, i), Vec3(10, 0, i)).draw(mat, ColorF(0.5));\nLine3D(Vec3(i, 0, -10), Vec3(i, 0, 10)).draw(mat, ColorF(0.5));\n}\nconst Vec3 eyePos = camera.getEyePosition();\nconst Vec3 rayEnd = camera.screenToWorldPoint(Cursor::Pos(), 0.5f);\nconst Ray cursorRay(eyePos, (rayEnd - eyePos).normalized());\nobjects.sort_by([&amp;](const OBB&amp; a, const OBB&amp; b)\n{\nreturn (eyePos.distanceFromSq(a.center)) &gt; (eyePos.distanceFromSq(b.center));\n});\nOptional&lt;size_t&gt; intersectionIndex;\nfor (auto [i, object] : IndexedReversed(objects))\n{\nif (cursorRay.intersects(object))\n{\nintersectionIndex = i;\nCursor::RequestStyle(CursorStyle::Hand);\nbreak;\n}\n}\nfor (auto [i, object] : Indexed(objects))\n{\nconst HSV color((object.center.x * 50 + object.center.z * 10), 1.0, (i == intersectionIndex) ? 1.0 : 0.3);\nobject.draw(mat, color);\n}\n}\n}\n}\n</code></pre>"},{"location":"releases/#v041-\u30b5\u30f3\u30d7\u30eb\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8","title":"v0.4.1 \u30b5\u30f3\u30d7\u30eb\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8","text":"<p><code>AABB</code>, <code>Triangle3D</code>, <code>Line3D</code> \u306a\u3069\u304c\u3001<code>s3d::experimental</code> \u540d\u524d\u7a7a\u9593\u304b\u3089 <code>s3d</code> \u540d\u524d\u7a7a\u9593\u306b\u79fb\u52d5\u3057\u307e\u3057\u305f\u3002</p>"},{"location":"releases/#3d-triangles","title":"3D Triangles","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconstexpr std::array&lt;Vec3, 8&gt; vertices =\n{\nVec3(-1, 1, -1),\nVec3(1, 1, -1),\nVec3(-1, -1, -1),\nVec3(1, -1, -1),\nVec3(1, 1, 1),\nVec3(-1, 1, 1),\nVec3(1, -1, 1),\nVec3(-1, -1, 1),\n};\nconstexpr std::array&lt;uint32, 36&gt; indices =\n{\n0, 1, 2, 2, 1, 3,\n5, 4, 0, 0, 4, 1,\n1, 4, 3, 3, 4, 6,\n5, 0, 7, 7, 0, 2,\n4, 5, 6, 6, 5, 7,\n2, 3, 7, 7, 3, 6,\n};\nconstexpr double fov = 45_deg;\nconstexpr Vec3 focusPosition(0, 0, 0);\nVec3 eyePosition(0, 4, 0);\nexperimental::BasicCamera3D camera(Scene::Size(), fov, eyePosition, focusPosition);\nwhile (System::Update())\n{\neyePosition = Cylindrical(8, Scene::Time() * 30_deg, Math::Sin(Scene::Time()) * 4);\ncamera.setView(eyePosition, focusPosition);\nconst Mat4x4 mat = camera.getMat4x4();\n{\nScopedRenderStates2D culling(RasterizerState::SolidCullBack);\nfor (auto i : step(12))\n{\nconst Vec3 p0(vertices[indices[i * 3 + 0]]);\nconst Vec3 p1(vertices[indices[i * 3 + 1]]);\nconst Vec3 p2(vertices[indices[i * 3 + 2]]);\nTriangle3D(p0, p1, p2).draw(mat, HSV(i * 30));\n}\n}\n}\n}\n</code></pre>"},{"location":"releases/#3d-aabb","title":"3D AABB","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconstexpr double fov = 45_deg;\nconstexpr Vec3 focusPosition(0, 0, 0);\nVec3 eyePosition(0, 10, 0);\nexperimental::BasicCamera3D camera(Scene::Size(), fov, eyePosition, focusPosition);\nwhile (System::Update())\n{\neyePosition = Cylindrical(20, Scene::Time() * 30_deg, 8 + Periodic::Sine0_1(4s) * 8);\ncamera.setView(eyePosition, focusPosition);\nconst Mat4x4 mat = camera.getMat4x4();\n{\nScopedRenderStates2D culling(RasterizerState::SolidCullBack);\nfor (auto i : Range(-10, 10))\n{\nLine3D(Vec3(-10, 0, i), Vec3(10, 0, i)).draw(mat, ColorF(0.5));\nLine3D(Vec3(i, 0, -10), Vec3(i, 0, 10)).draw(mat, ColorF(0.5));\n}\nAABB(Vec3(0, 1, 0), Vec3(2, 2, 2)).draw(mat, Palette::White);\nAABB(Vec3(-8, 1, 8), Vec3(2, 2, 2)).draw(mat, HSV(0));\nAABB(Vec3(8, 1, 8), Vec3(2, 2, 2)).draw(mat, HSV(90));\nAABB(Vec3(8, 1, -8), Vec3(2, 2, 2)).draw(mat, HSV(270));\nAABB(Vec3(-8, 1, -8), Vec3(2, 2, 2)).draw(mat, HSV(180));\n}\n}\n}\n</code></pre>"},{"location":"releases/#3d-terrain","title":"3D Terrain","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF(0.05, 0.3, 0.7));\nRenderTexture rt(100, 100, ColorF(0.0), TextureFormat::R32_Float);\nGrid&lt;float&gt; heightMap;\nGrid&lt;Float3&gt; positions;\nconstexpr double fov = 45_deg;\nconstexpr Vec3 focusPosition(50, 0, -50);\nVec3 eyePosition(0, 100, 0);\nexperimental::BasicCamera3D camera(Scene::Size(), fov, eyePosition, focusPosition);\nwhile (System::Update())\n{\neyePosition = Cylindrical(Arg::r = 80, Arg::phi = Scene::Time() * 30_deg, Arg::y = 50) + Vec3(50, 0, -50);\ncamera.setView(eyePosition, focusPosition);\nconst Mat4x4 mat = camera.getMat4x4();\nrt.read(heightMap);\n{\npositions.resize(heightMap.size());\nfor (auto p : step(heightMap.size()))\n{\npositions[p] = Float3(p.x, heightMap[p], -p.y);\n}\n}\n{\nScopedRenderTarget2D target(rt);\nScopedRenderStates2D blend(BlendState::Additive);\nif (MouseL.pressed())\n{\nCircle(Cursor::Pos(), 8).draw(ColorF(Scene::DeltaTime() * 24.0));\n}\n}\nif (positions)\n{\nScopedRenderStates2D culling(RasterizerState::SolidCullBack);\nfor (auto x : step(positions.width() - 1))\n{\nfor (auto y : step(positions.height()))\n{\nconst Float3 begin = positions[{x, y}];\nconst Float3 end = positions[{x + 1, y}];\nconst ColorF color = HSV(120 - (begin.y + end.y) * 3, 0.75, 0.7);\nLine3D(begin, end).draw(mat, color);\n}\n}\nfor (auto x : step(positions.width()))\n{\nfor (auto y : step(positions.height() - 1))\n{\nconst Float3 begin = positions[{x, y}];\nconst Float3 end = positions[{x, y + 1}];\nconst ColorF color = HSV(120 - (begin.y + end.y) * 3, 0.75, 0.7);\nLine3D(begin, end).draw(mat, color);\n}\n}\n}\nrt.draw(ColorF(0.1));\n}\n}\n</code></pre>"},{"location":"releases/#13-microphone-\u4e0d\u5177\u5408\u4fee\u6b63","title":"13. Microphone \u4e0d\u5177\u5408\u4fee\u6b63","text":"<p>macOS \u306a\u3069\u4e00\u90e8\u306e\u74b0\u5883\u3067\u30de\u30a4\u30af\u304c\u4f7f\u3048\u306a\u304b\u3063\u305f\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30de\u30a4\u30af\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nMicrophone mic(unspecified); // unspecified \u3092\u6307\u5b9a\u3059\u308b\u3068\u65e2\u5b9a\u306e\u97f3\u58f0\u5165\u529b\u30c7\u30d0\u30a4\u30b9\u3092\u9078\u629e\nif (!mic)\n{\n// \u30de\u30a4\u30af\u3092\u5229\u7528\u3067\u304d\u306a\u3044\u5834\u5408\u3001\u7d42\u4e86\nthrow Error(U\"Microphone not available\");\n}\n// \u9332\u97f3\u3092\u30b9\u30bf\u30fc\u30c8\nmic.start();\nLineString points(800);\nFFTResult fft;\nwhile (System::Update())\n{\n// \u6ce2\u5f62\u3092\u53ef\u8996\u5316\n{\nconst size_t pos = mic.posSample();\nconst Array&lt;WaveSampleS16&gt;&amp; buffer = mic.getBuffer();\nconst size_t bufferLength = buffer.size();\nfor (size_t i = 0; i &lt; points.size(); ++i)\n{\nconst size_t bufferPos = (pos + bufferLength - (800 - i)) % bufferLength;\nconst double value = buffer[bufferPos].left / 32768.0;\npoints[i].set(i, 300 - value * 300);\n}\npoints.draw(2);\n}\n// \u5468\u6ce2\u6570\u30b9\u30da\u30af\u30c8\u30e9\u30e0\u3092\u53d6\u5f97\nmic.fft(fft);\n// \u5468\u6ce2\u6570\u30b9\u30da\u30af\u30c8\u30e9\u30e0\u7d50\u679c\u3092\u53ef\u8996\u5316\nfor (auto i : step(800))\n{\nconst double size = Pow(fft.buffer[i], 0.6f) * 1200;\nRectF(Arg::bottomLeft(i, 600), 1, size).draw(HSV(240 - i));\n}\n// \u5468\u6ce2\u6570\u30b9\u30da\u30af\u30c8\u30e9\u30e0\u4e0a\u306b\u5468\u6ce2\u6570\u3092\u8868\u793a\nRect(Cursor::Pos().x, 0, 1, Scene::Height()).draw();\nClearPrint();\nPrint &lt;&lt; U\"{} Hz\"_fmt(Cursor::Pos().x * fft.resolution);\n}\n}\n</code></pre>"},{"location":"releases/#14-qrdecoder-\u4e0d\u5177\u5408\u4fee\u6b63","title":"14. QRDecoder \u4e0d\u5177\u5408\u4fee\u6b63","text":"<p>\u8907\u6570\u306e QR \u30b3\u30fc\u30c9\u306e\u691c\u51fa\u306e\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\n// Web \u30ab\u30e1\u30e9\u3092\u8d77\u52d5\nWebcam webcam(0);\nwebcam.setResolution(1280, 720);\nif (!webcam.start())\n{\nthrow Error(U\"\");\n}\nImage image;\nDynamicTexture texture;\nQRDecoder qrDecoder;\nArray&lt;std::pair&lt;Quad, bool&gt;&gt; quads;\nwhile (System::Update())\n{\n// \u65b0\u3057\u3044\u64ae\u5f71\u30d5\u30ec\u30fc\u30e0\u3092\u53d6\u5f97\nif (webcam.hasNewFrame())\n{\nwebcam.getFrame(image);\nArray&lt;QRContent&gt; qrs;\n// QR \u30b3\u30fc\u30c9\u3092\u691c\u51fa\nqrDecoder.decode(image, qrs);\nquads.clear();\nfor (const auto&amp; qr : qrs)\n{\nquads.emplace_back(qr.quad, qr.isValid());\n// \u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u306b\u6210\u529f\u3057\u305f\u5834\u5408\u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a\nif (qr.isValid())\n{\nPrint &lt;&lt; qr.text;\n}\n}\ntexture.fill(image);\n}\ntexture.draw();\n// QR \u30b3\u30fc\u30c9\u306e\u9818\u57df\u3092\u8868\u793a\n// \u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u306b\u6210\u529f\u3057\u305f\u5834\u5408\u8d64\u8272\nfor (const auto&amp; quad : quads)\n{\nquad.first.drawFrame(6, quad.second ? Palette::Red : Palette::Gray);\n}\n}\n}\n</code></pre>"},{"location":"releases/#15-rendertexture-msrendertexture-\u6539\u5584","title":"15. RenderTexture, MSRenderTexture \u6539\u5584","text":"<p><code>RenderTexture</code> \u3084 <code>MSRenderTexture</code> \u306e <code>.clear()</code>, <code>.read()</code>, <code>.resolve()</code> \u304c const \u30e1\u30f3\u30d0\u95a2\u6570\u306b\u4fee\u6b63\u3055\u308c\u3001\u4f7f\u3044\u3084\u3059\u304f\u306a\u308a\u307e\u3057\u305f\u3002</p>"},{"location":"releases/#1-\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3","title":"1. \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3","text":"<p>\u3053\u308c\u307e\u3067\u3001\u56f3\u5f62\u3084\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u30b7\u30fc\u30f3\u306b\u3057\u304b\u63cf\u753b\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u7528\u610f\u3057\u305f\u5225\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u3082\u63cf\u753b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002<code>RenderTexture</code> \u3092\u4f5c\u6210\u3057\u3001<code>ScopedRenderTarget2D</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u6e21\u3059\u3068\u3001<code>ScopedRenderTarget2D</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30b3\u30fc\u30d7\u304c\u6709\u52b9\u306a\u9593\u3001\u56f3\u5f62\u3084\u30c6\u30af\u30b9\u30c1\u30e3\u304c\u305d\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u63cf\u753b\u3055\u308c\u307e\u3059\uff08\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u5909\u66f4\uff09\u3002\u63cf\u753b\u3055\u308c\u305f\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u3001\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u89e3\u9664\u3055\u308c\u305f\u3042\u3068\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3068\u3057\u3066\u63cf\u753b\u306b\u8ee2\u7528\u3067\u304d\u307e\u3059\u3002</p> <p>\u6ce8\u610f: \u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u3057\u3066\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6700\u4e2d\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u3001\u63cf\u753b\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30b7\u30fc\u30f3\u306e\u80cc\u666f\u8272\u3092\u6de1\u3044\u6c34\u8272\u306b\u8a2d\u5b9a\nScene::SetBackground(ColorF(0.8, 0.9, 1.0));\n// \u7d75\u6587\u5b57\nconst Texture emoji(Emoji(U\"\ud83d\ude07\"));\n// \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\nRenderTexture rt(600, 600, Palette::White);\nwhile (System::Update())\n{\n// \u30de\u30a6\u30b9\u306e\u5de6\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\nif (MouseL.pressed())\n{\n// \u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 rt \u306b\u8a2d\u5b9a\nScopedRenderTarget2D target(rt);\nemoji.drawAt(Cursor::Pos());\n}\nrt.draw();\nemoji.drawAt(Cursor::Pos());\n// Clear \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089\nif (SimpleGUI::Button(U\"Clear\", Vec2(650, 20)))\n{\n// \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u767d\u3067\u30af\u30ea\u30a2\nrt.clear(Palette::White);\n}\n}\n}\n</code></pre>"},{"location":"releases/#2-\u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3","title":"2. \u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30fb\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3","text":"<p>\u901a\u5e38\u306e <code>RenderTexture</code> \u3078\u306e\u63cf\u753b\u3067\u306f\u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30fb\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b7\u30f3\u30b0\u304c\u6709\u52b9\u306b\u306a\u3089\u306a\u3044\u306e\u3067\u3001\u56f3\u5f62\u3092\u63cf\u753b\u3057\u305f\u969b\u306b\u30b8\u30e3\u30ae\u30fc\u304c\u751f\u3058\u307e\u3059\u3002<code>MSRenderTexture</code> \u3092\u4f7f\u3046\u3068\u3001\u901a\u5e38\u306e\u30b7\u30fc\u30f3\u3078\u306e\u63cf\u753b\u3068\u540c\u3058\u3088\u3046\u306b\u3001\u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30fb\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b7\u30f3\u30b0\u3092\u6709\u52b9\u306b\u3057\u3066\u63cf\u753b\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001<code>MSRenderTexture</code> \u306b\u63cf\u753b\u3055\u308c\u305f\u7d50\u679c\u3092\u3001\u5225\u306e\u63cf\u753b\u3067\u4f7f\u3046\u969b\u306b\u306f\u3001<code>Graphics2D::Flush()</code> \u306b\u3088\u3063\u3066\u305d\u306e\u6642\u70b9\u307e\u3067\u306e\u63cf\u753b\u51e6\u7406\u3092\u3059\u3079\u3066\u5b9f\u884c\uff08\u30d5\u30e9\u30c3\u30b7\u30e5\uff09\u3057\u3066 <code>MSRenderTexture</code> \u306b\u78ba\u5b9f\u306b\u63cf\u753b\u3057\u305f\u3042\u3068\u306b\u3001<code>MSRenderTexture::resolve()</code> \u3092\u884c\u3044\u3001<code>MSRenderTexture</code> \u5185\u306e\u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30fb\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u3001\u63cf\u753b\u3067\u4f7f\u7528\u53ef\u80fd\u306a\u901a\u5e38\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u5909\u63db\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF(0.8, 0.9, 1.0));\n// \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\nRenderTexture rt(200, 200);\n// \u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30fb\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\nMSRenderTexture msrt(200, 200);\nwhile (System::Update())\n{\nrt.clear(ColorF(0.0, 1.0));\n{\nScopedRenderTarget2D target(rt);\nRect(Arg::center(100, 100), 80)\n.rotated(Scene::Time() * 30_deg).draw();\n}\nmsrt.clear(ColorF(0.0, 1.0));\n{\n{\nScopedRenderTarget2D target(msrt);\nRect(Arg::center(100, 100), 80)\n.rotated(Scene::Time() * 30_deg).draw();\n}\n// 2D \u63cf\u753b\u3092\u30d5\u30e9\u30c3\u30b7\u30e5\nGraphics2D::Flush();\n// \u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u53ef\u80fd\u306a\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u5909\u63db\nmsrt.resolve();\n}\nrt.draw(100, 0);\nmsrt.draw(400, 0);\n}\n}\n</code></pre>"},{"location":"releases/#3-\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3078\u306e\u30b7\u30a7\u30fc\u30c0\u51e6\u7406","title":"3. \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3078\u306e\u30b7\u30a7\u30fc\u30c0\u51e6\u7406","text":"<p>\u30c6\u30af\u30b9\u30c1\u30e3\u304b\u3089\u5225\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3078\u306e\u69d8\u3005\u306a\u5909\u63db\u51e6\u7406\u3092\u95a2\u6570 1 \u3064\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\u30ec\u30f3\u30c0\u30fc\u30b9\u30c6\u30fc\u30c8\u306e\u5909\u66f4\u3082\u4e0d\u8981\u3067\u3059\u3002\u63d0\u4f9b\u3055\u308c\u308b\u95a2\u6570\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002</p>"},{"location":"releases/#void-copyconst-textureregion-from-rendertexture-to","title":"<code>void Copy(const TextureRegion&amp; from, RenderTexture&amp; to);</code>","text":"<ul> <li>from: \u5165\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> <li>to: \u51fa\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> </ul> <p><code>from</code> \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5185\u5bb9\u3092 <code>to</code> \u306b\u63cf\u753b\u3057\u307e\u3059\u3002<code>from</code> \u3068 <code>to</code> \u306f\u3068\u3082\u306b\u6709\u52b9\u306a\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u3001\u4e92\u3044\u306b\u7570\u306a\u308a\u3001\u9818\u57df\u306e\u30b5\u30a4\u30ba\u304c\u540c\u3058\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"releases/#void-downsampleconst-textureregion-from-rendertexture-to","title":"<code>void Downsample(const TextureRegion&amp; from, RenderTexture&amp; to);</code>","text":"<ul> <li>from: \u5165\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> <li>to: \u51fa\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> </ul> <p><code>from</code> \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5185\u5bb9\u3092\u7e2e\u5c0f\u3057\u3066 <code>to</code> \u306b\u63cf\u753b\u3057\u307e\u3059\u3002<code>from</code> \u3068 <code>to</code> \u306f\u3068\u3082\u306b\u6709\u52b9\u306a\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u3001\u4e92\u3044\u306b\u7570\u306a\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"releases/#void-gaussianblurhconst-textureregion-from-rendertexture-to","title":"<code>void GaussianBlurH(const TextureRegion&amp; from, RenderTexture&amp; to);</code>","text":"<ul> <li>from: \u5165\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> <li>to: \u51fa\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> </ul> <p><code>from</code> \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5185\u5bb9\u306b\u6a2a\u65b9\u5411\u306e\u30ac\u30a6\u30b9\u30d6\u30e9\u30fc\u3092\u304b\u3051\u3066 <code>to</code> \u306b\u63cf\u753b\u3057\u307e\u3059\u3002<code>from</code> \u3068 <code>to</code> \u306f\u3068\u3082\u306b\u6709\u52b9\u306a\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u3001\u4e92\u3044\u306b\u7570\u306a\u308a\u3001\u9818\u57df\u306e\u30b5\u30a4\u30ba\u304c\u540c\u3058\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"releases/#void-gaussianblurvconst-textureregion-from-rendertexture-to","title":"<code>void GaussianBlurV(const TextureRegion&amp; from, RenderTexture&amp; to);</code>","text":"<ul> <li>from: \u5165\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> <li>to: \u51fa\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> </ul> <p><code>from</code> \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5185\u5bb9\u306b\u7e26\u65b9\u5411\u306e\u30ac\u30a6\u30b9\u30d6\u30e9\u30fc\u3092\u304b\u3051\u3066 <code>to</code> \u306b\u63cf\u753b\u3057\u307e\u3059\u3002<code>from</code> \u3068 <code>to</code> \u306f\u3068\u3082\u306b\u6709\u52b9\u306a\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u3001\u4e92\u3044\u306b\u7570\u306a\u308a\u3001\u9818\u57df\u306e\u30b5\u30a4\u30ba\u304c\u540c\u3058\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"releases/#void-gaussianblurconst-textureregion-from-rendertexture-to-const-vec2-direction","title":"<code>void GaussianBlur(const TextureRegion&amp; from, RenderTexture&amp; to, const Vec2&amp; direction);</code>","text":"<ul> <li>from: \u5165\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> <li>to: \u51fa\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> <li>direction: \u30d6\u30e9\u30fc\u306e\u65b9\u5411</li> </ul> <p><code>from</code> \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5185\u5bb9\u306b\u6307\u5b9a\u3057\u305f\u65b9\u5411\u306e\u30ac\u30a6\u30b9\u30d6\u30e9\u30fc\u3092\u304b\u3051\u3066 <code>to</code> \u306b\u63cf\u753b\u3057\u307e\u3059\u3002<code>from</code> \u3068 <code>to</code> \u306f\u3068\u3082\u306b\u6709\u52b9\u306a\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u3001\u4e92\u3044\u306b\u7570\u306a\u308a\u3001\u9818\u57df\u306e\u30b5\u30a4\u30ba\u304c\u540c\u3058\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"releases/#void-gaussianblurconst-textureregion-from-rendertexture-internalbuffer-rendertexture-to","title":"<code>void GaussianBlur(const TextureRegion&amp; from, RenderTexture&amp; internalBuffer, RenderTexture&amp; to);</code>","text":"<ul> <li>from: \u5165\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> <li>internalBuffer: \u4e2d\u9593\u30c6\u30af\u30b9\u30c1\u30e3</li> <li>to: \u51fa\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> </ul> <p><code>from</code> \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5185\u5bb9\u3092\u306b\u7e26\u65b9\u5411\u3068\u6a2a\u65b9\u5411\u306e\u30ac\u30a6\u30b9\u30d6\u30e9\u30fc\u3092\u304b\u3051\u3066 <code>to</code> \u306b\u63cf\u753b\u3057\u307e\u3059\u3002<code>from</code>, <code>internalBuffer</code>, <code>to</code> \u306f\u3044\u305a\u308c\u3082\u6709\u52b9\u306a\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u3001\u96a3\u308a\u5408\u3046\u3082\u306e\u540c\u58eb\u306f\u7570\u306a\u308a\u3001\u9818\u57df\u306e\u30b5\u30a4\u30ba\u304c\u540c\u3058\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 <code>GaussianBlurH(from, internalBuffer); GaussianBlurV(internalBuffer, to);</code> \u3068\u7b49\u4fa1\u3067\u3059\u3002</p>"},{"location":"releases/#\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0","title":"\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Texture texture(U\"example/windmill.png\");\n// \u7e26\u3001\u6a2a\u304c 4 \u5206\u306e 1 \u30b5\u30a4\u30ba\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\nRenderTexture rt(texture.size() / 4);\n// \u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\nShader::Downsample(texture, rt);\nwhile (System::Update())\n{\nrt.draw();\n}\n}\n</code></pre>"},{"location":"releases/#\u30ac\u30a6\u30b9\u307c\u304b\u3057","title":"\u30ac\u30a6\u30b9\u307c\u304b\u3057","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092 1280x720 \u306b\u30ea\u30b5\u30a4\u30ba\nWindow::Resize(1280, 720);\n// bay.jpg \u306f 2560x1440 \u306a\u306e\u3067\u30b5\u30a4\u30ba\u3092\u5c0f\u3055\u304f\u3057\u3066\u30ed\u30fc\u30c9\nconst Texture texture(Image(U\"example/bay.jpg\").scale(1280, 720));\n// \u307c\u304b\u3057\u3092\u9069\u7528\u3059\u308b\u9818\u57df\u306e\u30b5\u30a4\u30ba\nconstexpr Size blurAreaSize(480, 320);\n// \u30ac\u30a6\u30b9\u307c\u304b\u3057\u306e\u4e2d\u9593\u3067\u4f7f\u3046\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u7528\u610f\nRenderTexture rtA(blurAreaSize), rtB(blurAreaSize);\nRenderTexture rtA4(blurAreaSize / 4), rtB4(blurAreaSize / 4);\nRenderTexture rtA8(blurAreaSize / 8), rtB8(blurAreaSize / 8);\nwhile (System::Update())\n{\nconst Point cursorPos = Cursor::Pos();\n// \u80cc\u666f\u753b\u50cf\u306e\u3046\u3061\u307c\u304b\u3057\u3092\u9069\u7528\u3059\u308b\u9818\u57df\nconst Rect blurArea(cursorPos, blurAreaSize);\n// [\u30aa\u30ea\u30b8\u30ca\u30eb]-&gt;[\u30ac\u30a6\u30b9\u307c\u304b\u3057]-&gt;[1/4\u30b5\u30a4\u30ba]-&gt;[\u30ac\u30a6\u30b9\u307c\u304b\u3057]-&gt;[1/8\u30b5\u30a4\u30ba]-&gt;[\u30ac\u30a6\u30b9\u307c\u304b\u3057]\nShader::GaussianBlur(texture(blurArea), rtB, rtA);\nShader::Downsample(rtA, rtA4);\nShader::GaussianBlur(rtA4, rtB4, rtA4);\nShader::Downsample(rtA4, rtA8);\nShader::GaussianBlur(rtA8, rtB8, rtA8);\n// \u80cc\u666f\u3092\u63cf\u753b\ntexture.draw();\n// \u30ac\u30a6\u30b9\u307c\u304b\u3057\u5f8c\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092 RoundRect \u306b\u8cbc\u308a\u4ed8\u3051\u3066\u63cf\u753b\nRoundRect(cursorPos, blurAreaSize, 40)(rtA8.resized(blurAreaSize)).draw();\n}\n}\n</code></pre>"},{"location":"releases/#4-\u30ab\u30b9\u30bf\u30e0\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0","title":"4. \u30ab\u30b9\u30bf\u30e0\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0","text":"<p>2D \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3084\u56f3\u5f62\u304c\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u63cf\u304b\u308c\u308b\u3068\u304d\u3001\u3069\u306e\u3088\u3046\u306a\u8272\u3092\u51fa\u529b\u3059\u308b\u304b\u306f\u3001\u300c\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u2015\u30c0\u300d\u3068\u547c\u3070\u308c\u308b\u3001\u30d4\u30af\u30bb\u30eb\u3054\u3068\u306b GPU \u4e0a\u3067\u5b9f\u884c\u3055\u308c\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u901a\u3057\u3066\u6c7a\u5b9a\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002</p>"},{"location":"releases/#5-\u5b50\u30d7\u30ed\u30bb\u30b9\u306e\u4f5c\u6210","title":"5. \u5b50\u30d7\u30ed\u30bb\u30b9\u306e\u4f5c\u6210","text":"<p>\u5225\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u300c\u5b50\u30d7\u30ed\u30bb\u30b9\u300d\u3068\u3057\u3066\u8d77\u52d5\u3001\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u5225\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\u3057\u305f\u308a\u3001\u5225\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u60c5\u5831\u3092\u3084\u308a\u53d6\u308a\u3059\u308b\u969b\u306b\u4f7f\u3048\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n# if SIV3D_PLATFORM(WINDOWS)\n// \u5b50\u30d7\u30ed\u30bb\u30b9\u3067\u5b9f\u884c\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\nconst FilePath path = U\"C:/Windows/System32/notepad.exe\";\n# elif SIV3D_PLATFORM(MACOS)\n// \u5b50\u30d7\u30ed\u30bb\u30b9\u3067\u5b9f\u884c\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\nconst FilePath path = U\"/System/Applications/Calculator.app/Contents/MacOS/Calculator\";\n# endif\n// \u5b50\u30d7\u30ed\u30bb\u30b9\u3092\u4f5c\u6210\nChildProcess child = Process::Spawn(path);\nif (!child)\n{\nthrow Error(U\"Failed to create a process\");\n}\nwhile (System::Update())\n{\nClearPrint();\n// \u30d7\u30ed\u30bb\u30b9\u304c\u5b9f\u884c\u4e2d\u304b\u3092\u53d6\u5f97\nPrint &lt;&lt; child.isRunning();\n// \u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3057\u305f\u5834\u5408\u3001\u305d\u306e\u7d42\u4e86\u30b3\u30fc\u30c9\nPrint &lt;&lt; child.getExitCode();\nif (child.isRunning())\n{\nif (SimpleGUI::Button(U\"Terminate\", Vec2(100, 20)))\n{\n// \u30d7\u30ed\u30bb\u30b9\u3092\u5f37\u5236\u7d42\u4e86\nchild.terminate();\n}\n}\n}\n}\n</code></pre>"},{"location":"releases/#\u5b50\u30d7\u30ed\u30bb\u30b9\u3068\u306e\u6a19\u6e96\u5165\u51fa\u529b\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u51e6\u7406","title":"\u5b50\u30d7\u30ed\u30bb\u30b9\u3068\u306e\u6a19\u6e96\u5165\u51fa\u529b\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u51e6\u7406","text":"<p>\u5b50\u30d7\u30ed\u30bb\u30b9\u3068\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u51e6\u7406\u306b\u3088\u3063\u3066\u3001\u4e00\u65b9\u306e\u6a19\u6e96\u51fa\u529b\u3092\u4ed6\u65b9\u306e\u6a19\u6e96\u5165\u529b\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\"Console\" \u306f\u901a\u5e38\u306e C++ \u30b3\u30f3\u30bd\u30fc\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;iostream&gt;\nint main()\n{\nint a, b;\nstd::cin &gt;&gt; a &gt;&gt; b;\nstd::cout &lt;&lt; (a + b) &lt;&lt; std::endl;\n}\n</code></pre> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n# if SIV3D_PLATFORM(WINDOWS)\n// \u5b50\u30d7\u30ed\u30bb\u30b9\u3067\u5b9f\u884c\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\nconst FilePath path = U\"Console.exe\";\n# else\n// \u5b50\u30d7\u30ed\u30bb\u30b9\u3067\u5b9f\u884c\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\nconst FilePath path = U\"Console\";\n# endif\n// \u5b50\u30d7\u30ed\u30bb\u30b9\u3092\u4f5c\u6210\uff08\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u51e6\u7406\uff09\nChildProcess child = Process::Spawn(path, Pipe::StdInOut);\nif (!child)\n{\nthrow Error(U\"Failed to create a process\");\n}\nchild.ostream() &lt;&lt; 10 &lt;&lt; std::endl;\nchild.ostream() &lt;&lt; 20 &lt;&lt; std::endl;\nint32 result;\nchild.istream() &gt;&gt; result;\nPrint &lt;&lt; U\"result: \" &lt;&lt; result;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"releases/#6-\u5b9f\u9a13\u7684\u306a-3d-\u63cf\u753b\u5bfe\u5fdc","title":"6. \u5b9f\u9a13\u7684\u306a 3D \u63cf\u753b\u5bfe\u5fdc","text":"<p>\u5b9f\u9a13\u7684\u306a 3D \u6a5f\u80fd\u304c\u5b9f\u88c5\u3055\u308c\u307e\u3057\u305f\u3002\u305f\u3060\u3057\u30012D \u63cf\u753b\u3067 3D \u3092\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u7c21\u6613\u7684\u306a\u3082\u306e\u306a\u306e\u3067\u3001\u6b21\u306e\u3088\u3046\u306a\u5236\u7d04\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>\u6df1\u5ea6\u30d0\u30c3\u30d5\u30a1\u304c\u7121\u3044\u306e\u3067\u524d\u5f8c\u5224\u5b9a\u304c\u3067\u304d\u306a\u3044</li> <li>\u9060\u8fd1\u30af\u30ea\u30c3\u30d7\u304c\u7121\u3044\u306e\u3067\u30ab\u30e1\u30e9\u306b\u8fd1\u3059\u304e\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6b63\u3057\u304f\u8868\u793a\u3055\u308c\u306a\u3044</li> </ul>"},{"location":"releases/#3d-triangles_1","title":"3D Triangles","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconstexpr std::array&lt;Vec3, 8&gt; vertices =\n{\nVec3(-1, 1, -1),\nVec3(1, 1, -1),\nVec3(-1, -1, -1),\nVec3(1, -1, -1),\nVec3(1, 1, 1),\nVec3(-1, 1, 1),\nVec3(1, -1, 1),\nVec3(-1, -1, 1),\n};\nconstexpr std::array&lt;uint32, 36&gt; indices =\n{\n0, 1, 2, 2, 1, 3,\n5, 4, 0, 0, 4, 1,\n1, 4, 3, 3, 4, 6,\n5, 0, 7, 7, 0, 2,\n4, 5, 6, 6, 5, 7,\n2, 3, 7, 7, 3, 6,\n};\nconstexpr double fov = 45_deg;\nconstexpr Vec3 focusPosition(0, 0, 0);\nVec3 eyePosition(0, 4, 0);\nexperimental::BasicCamera3D camera(Scene::Size(), fov, eyePosition, focusPosition);\nwhile (System::Update())\n{\neyePosition = Cylindrical(8, Scene::Time() * 30_deg, Math::Sin(Scene::Time()) * 4);\ncamera.setView(eyePosition, focusPosition);\nconst Mat4x4 mat = camera.getMat4x4();\n{\nScopedRenderStates2D culling(RasterizerState::SolidCullBack);\nfor (auto i : step(12))\n{\nconst Vec3 p0(vertices[indices[i * 3 + 0]]);\nconst Vec3 p1(vertices[indices[i * 3 + 1]]);\nconst Vec3 p2(vertices[indices[i * 3 + 2]]);\nexperimental::Triangle3D(p0, p1, p2).draw(mat, HSV(i * 30));\n}\n}\n}\n}\n</code></pre>"},{"location":"releases/#3d-aabb_1","title":"3D AABB","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconstexpr double fov = 45_deg;\nconstexpr Vec3 focusPosition(0, 0, 0);\nVec3 eyePosition(0, 10, 0);\nexperimental::BasicCamera3D camera(Scene::Size(), fov, eyePosition, focusPosition);\nwhile (System::Update())\n{\neyePosition = Cylindrical(20, Scene::Time() * 30_deg, 8 + Periodic::Sine0_1(4s) * 8);\ncamera.setView(eyePosition, focusPosition);\nconst Mat4x4 mat = camera.getMat4x4();\n{\nScopedRenderStates2D culling(RasterizerState::SolidCullBack);\nfor (auto i : Range(-10, 10))\n{\nexperimental::Line3D(Vec3(-10, 0, i), Vec3(10, 0, i)).draw(mat, ColorF(0.5));\nexperimental::Line3D(Vec3(i, 0, -10), Vec3(i, 0, 10)).draw(mat, ColorF(0.5));\n}\nexperimental::AABB(Vec3(0, 1, 0), Vec3(2, 2, 2)).draw(mat, Palette::White);\nexperimental::AABB(Vec3(-8, 1, 8), Vec3(2, 2, 2)).draw(mat, HSV(0));\nexperimental::AABB(Vec3(8, 1, 8), Vec3(2, 2, 2)).draw(mat, HSV(90));\nexperimental::AABB(Vec3(8, 1, -8), Vec3(2, 2, 2)).draw(mat, HSV(270));\nexperimental::AABB(Vec3(-8, 1, -8), Vec3(2, 2, 2)).draw(mat, HSV(180));\n}\n}\n}\n</code></pre>"},{"location":"releases/#3d-terrain_1","title":"3D Terrain","text":"<p>\u30de\u30a6\u30b9\u30af\u30ea\u30c3\u30af\u3067\u3001\u5de6\u4e0a\u306e\u9ad8\u3055\u30de\u30c3\u30d7\u306b\u5c71\u3092\u63cf\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF(0.05, 0.3, 0.7));\nRenderTexture rt(100, 100, ColorF(0.0), TextureFormat::R32_Float);\nGrid&lt;float&gt; heightMap;\nGrid&lt;Float3&gt; positions;\nconstexpr double fov = 45_deg;\nconstexpr Vec3 focusPosition(50, 0, -50);\nVec3 eyePosition(0, 100, 0);\nexperimental::BasicCamera3D camera(Scene::Size(), fov, eyePosition, focusPosition);\nwhile (System::Update())\n{\neyePosition = Cylindrical(Arg::r = 80, Arg::phi = Scene::Time() * 30_deg, Arg::y = 50) + Vec3(50, 0, -50);\ncamera.setView(eyePosition, focusPosition);\nconst Mat4x4 mat = camera.getMat4x4();\nrt.read(heightMap);\n{\npositions.resize(heightMap.size());\nfor (auto p : step(heightMap.size()))\n{\npositions[p] = Float3(p.x, heightMap[p], -p.y);\n}\n}\n{\nScopedRenderTarget2D target(rt);\nScopedRenderStates2D blend(BlendState::Additive);\nif (MouseL.pressed())\n{\nCircle(Cursor::Pos(), 8).draw(ColorF(Scene::DeltaTime() * 24.0));\n}\n}\nif (positions)\n{\nScopedRenderStates2D culling(RasterizerState::SolidCullBack);\nfor (auto x : step(positions.width() - 1))\n{\nfor (auto y : step(positions.height()))\n{\nconst Float3 begin = positions[{x, y}];\nconst Float3 end = positions[{x + 1, y}];\nconst ColorF color = HSV(120 - (begin.y + end.y) * 3, 0.75, 0.7);\nexperimental::Line3D(begin, end).draw(mat, color);\n}\n}\nfor (auto x : step(positions.width()))\n{\nfor (auto y : step(positions.height() - 1))\n{\nconst Float3 begin = positions[{x, y}];\nconst Float3 end = positions[{x, y + 1}];\nconst ColorF color = HSV(120 - (begin.y + end.y) * 3, 0.75, 0.7);\nexperimental::Line3D(begin, end).draw(mat, color);\n}\n}\n}\nrt.draw(ColorF(0.1));\n}\n}\n</code></pre>"},{"location":"releases/#v00v03-generation","title":"v0.0\uff5ev0.3 Generation","text":""},{"location":"releases/#old-siv3d","title":"Old Siv3D","text":"<ul> <li>Old Siv3D Change Log </li> </ul>"},{"location":"api/classes/","title":"Siv3D \u306e\u30af\u30e9\u30b9\u4e00\u89a7","text":"<p>\u3088\u304f\u4f7f\u3046\u91cd\u8981\u306a\u3082\u306e\u306b \u2605 \u3092\u4ed8\u3051\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"api/classes/#\u6570\u5024","title":"\u6570\u5024","text":"\u578b\u540d \u8aac\u660e bool \u2605 \u30d6\u30fc\u30ea\u30a2\u30f3\u578b\uff08<code>false</code> \u307e\u305f\u306f <code>true</code>\uff09 int8 \u7b26\u53f7\u4ed8\u304d 8-bit \u6574\u6570\u578b\uff08-128 \uff5e 127\uff09 uint8 \u7b26\u53f7\u7121\u3057 8-bit \u6574\u6570\u578b\uff080 \uff5e 255\uff09 int16 \u7b26\u53f7\u4ed8\u304d 16-bit \u6574\u6570\u578b\uff08-32,768 \uff5e 32,767\uff09 uint16 \u7b26\u53f7\u7121\u3057 16-bit \u6574\u6570\u578b\uff080 \uff5e 65,535\uff09 int32 \u2605 \u7b26\u53f7\u4ed8\u304d 32-bit \u6574\u6570\u578b\uff08-2,147,483,648 \uff5e 2,147,483,647\uff09 uint32 \u2605 \u7b26\u53f7\u7121\u3057 32-bit \u6574\u6570\u578b\uff080 \uff5e 4,294,967,295\uff09 int64 \u7b26\u53f7\u4ed8\u304d 64-bit \u6574\u6570\u578b\uff08-9,223,372,036,854,775,808 \uff5e 9,223,372,036,854,775,807\uff09 uint64 \u7b26\u53f7\u7121\u3057 64-bit \u6574\u6570\u578b\uff080 \uff5e 18,446,744,073,709,551,615\uff09 int128 \u7b26\u53f7\u4ed8\u304d 128-bit \u6574\u6570\u578b uint128 \u7b26\u53f7\u7121\u3057 128-bit \u6574\u6570\u578b float \u5358\u7cbe\u5ea6\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b double \u2605 \u500d\u7cbe\u5ea6\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b size_t \u2605 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b5\u30a4\u30ba\u3092\u8868\u73fe\u3059\u308b\u7b26\u53f7\u7121\u3057 64-bit \u6574\u6570\u578b\uff080 \uff5e 18,446,744,073,709,551,615\uff09 BigInt \u4efb\u610f\u7cbe\u5ea6\u591a\u500d\u9577\u6574\u6570\u578b HalfFloat \u534a\u7cbe\u5ea6\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b BigFloat \u6709\u52b9\u6570\u5b57 100 \u6841\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b"},{"location":"api/classes/#\u6587\u5b57\u3084\u6587\u5b57\u5217","title":"\u6587\u5b57\u3084\u6587\u5b57\u5217","text":"\u578b\u540d \u8aac\u660e char8 UTF-8 \u306e 1 \u8981\u7d20\uff08<code>char</code> \u306e\u5225\u540d\uff09 char16 UTF-16 \u306e 1 \u8981\u7d20\uff08<code>char16_t</code> \u306e\u5225\u540d\uff09 char32 \u2605 UTF-32 \u306e 1 \u8981\u7d20\uff08<code>char32_t</code> \u306e\u5225\u540d\uff09 String \u2605 \u6587\u5b57\u5217\u30af\u30e9\u30b9\u3002\u8981\u7d20\u306f <code>char32</code> StringView \u6587\u5b57\u5217\u306e\u30d3\u30e5\u30fc\u30af\u30e9\u30b9 FilePath \u2605 \u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u6587\u5b57\u5217\uff08<code>String</code> \u306e\u5225\u540d\uff09 FilePathView \u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u6587\u5b57\u5217\u306e\u30d3\u30e5\u30fc\uff08<code>StringView</code> \u306e\u5225\u540d\uff09 URL URL \u6587\u5b57\u5217\uff08<code>String</code> \u306e\u5225\u540d\uff09 URLView URL \u6587\u5b57\u5217\u306e\u30d3\u30e5\u30fc\uff08<code>StringView</code> \u306e\u5225\u540d\uff09"},{"location":"api/classes/#\u30c7\u30fc\u30bf\u69cb\u9020","title":"\u30c7\u30fc\u30bf\u69cb\u9020","text":"\u578b\u540d \u8aac\u660e Array&lt;Type, Allocator&gt; \u2605 \u52d5\u7684\u914d\u5217\uff08C++ \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e <code>std::vector</code> \u306e\u7f6e\u304d\u63db\u3048\uff09 DisjointSet&lt;IndexType&gt; Union-Find \u6728 Grid&lt;Type, Allocator&gt; \u2605 \u52d5\u7684\u306a\u4e8c\u6b21\u5143\u914d\u5217 HashSet&lt;Type, Hash, Eq, Alloc&gt; \u2605 \u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u306b\u3088\u308b Set\uff08C++ \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e <code>std::unordered_set</code> \u306e\u7f6e\u304d\u63db\u3048\uff09 HashTable&lt;Key, Value, Hash, Eq, Alloc&gt; \u2605 \u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u306b\u3088\u308b Map\uff08C++ \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e <code>std::unordered_map</code> \u306e\u7f6e\u304d\u63db\u3048\uff09 KDTree&lt;DatasetAdapter&gt; KD \u6728 KDTreeAdapter&lt;Dataset, PointType, ElementType, Dim&gt; KD \u6728 \u306e\u60c5\u5831 None_t <code>Optional</code> \u578b\u3067\u7121\u52b9\u5024\u3092\u8868\u73fe\u3059\u308b\u578b\uff08<code>std::nullopt_t</code> \u306e\u5225\u540d\uff09 NonNull&lt;Pointer&gt; \u30cc\u30eb\u30dd\u30a4\u30f3\u30bf\u3092\u6301\u305f\u306a\u3044\u30dd\u30a4\u30f3\u30bf\u3092\u7ba1\u7406\u3059\u308b\u30af\u30e9\u30b9 Optional&lt;Type&gt; \u2605 \u7121\u52b9\u5024\u3092\u8868\u73fe\u3067\u304d\u308b\u578b\uff08C++ \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e <code>std::optional</code> \u306e\u7f6e\u304d\u63db\u3048\uff09 std::array&lt;Type, size_t&gt; \u2605 \u56fa\u5b9a\u9577\u914d\u5217 StringCompare \u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u3067\u6587\u5b57\u5217\u3092\u30ad\u30fc\u306b\u3059\u308b\u969b\u306e\u88dc\u52a9\u30af\u30e9\u30b9 StringHash \u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u3067\u6587\u5b57\u5217\u3092\u30ad\u30fc\u306b\u3059\u308b\u969b\u306e\u88dc\u52a9\u30af\u30e9\u30b9"},{"location":"api/classes/#2d-\u56f3\u5f62","title":"2D \u56f3\u5f62","text":"\u578b\u540d \u8aac\u660e Bezier2 \u2605 \u4e8c\u6b21\u30d9\u30b8\u30a7\u66f2\u7dda Bezier3 \u2605 \u4e09\u6b21\u30d9\u30b8\u30a7\u66f2\u7dda Circle \u2605 \u5186 Circular \u2605 \u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;double, 0&gt;</code> \u306e\u5225\u540d\uff09 Circular0 \u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;double, 0&gt;</code> \u306e\u5225\u540d\uff09 Circular0F \u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;float, 0&gt;</code> \u306e\u5225\u540d\uff09 Circular3 \u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;double, 3&gt;</code> \u306e\u5225\u540d\uff09 Circular3F \u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;float, 3&gt;</code> \u306e\u5225\u540d\uff09 Circular6 \u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;double, 6&gt;</code> \u306e\u5225\u540d\uff09 Circular6F \u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;float, 6&gt;</code> \u306e\u5225\u540d\uff09 Circular9 \u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;double, 9&gt;</code> \u306e\u5225\u540d\uff09 Circular9F \u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;float, 9&gt;</code> \u306e\u5225\u540d\uff09 CircularBase&lt;Float, int32&gt; \u5186\u5ea7\u6a19 CircularF \u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;float, 0&gt;</code> \u306e\u5225\u540d\uff09 Ellipse \u2605 \u6955\u5186 Float2 2 \u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\uff08\u8981\u7d20\u306f <code>float</code>\uff09 FloatQuad \u51f8\u56db\u89d2\u5f62\uff08\u8981\u7d20\u306f <code>float</code>\uff09 FloatRect \u4e0a\u4e0b\u5de6\u53f3\u3067\u5b9a\u7fa9\u3059\u308b\u9577\u65b9\u5f62\uff08\u8981\u7d20\u306f <code>float</code>\uff09 Line \u2605 \u7dda\u5206 LineString \u2605 \u9023\u7d9a\u3059\u308b\u7dda\u5206\uff08<code>Array&lt;Vec2&gt;</code> \u306e\u7f6e\u304d\u63db\u3048\uff09 Mat3x2 \u2605 \u30a2\u30d5\u30a3\u30f3\u5909\u63db\u7528\u306e 3x2 \u884c\u5217 Mat3x3 \u30db\u30e2\u30b0\u30e9\u30d5\u30a3\u5909\u63db\u7528\u306e 3x3 \u884c\u5217 MultiPolygon \u591a\u89d2\u5f62\u306e\u96c6\u5408\uff08<code>Array&lt;Polygon&gt;</code> \u306e\u7f6e\u304d\u63db\u3048\uff09 OffsetCircular \u2605 \u30aa\u30d5\u30bb\u30c3\u30c8\u4ed8\u304d\u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;double, 0&gt;</code> \u306e\u5225\u540d\uff09 OffsetCircular0 \u30aa\u30d5\u30bb\u30c3\u30c8\u4ed8\u304d\u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;double, 0&gt;</code> \u306e\u5225\u540d\uff09 OffsetCircular0F \u30aa\u30d5\u30bb\u30c3\u30c8\u4ed8\u304d\u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;float, 0&gt;</code> \u306e\u5225\u540d\uff09 OffsetCircular3 \u30aa\u30d5\u30bb\u30c3\u30c8\u4ed8\u304d\u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;double, 3&gt;</code> \u306e\u5225\u540d\uff09 OffsetCircular3F \u30aa\u30d5\u30bb\u30c3\u30c8\u4ed8\u304d\u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;float, 3&gt;</code> \u306e\u5225\u540d\uff09 OffsetCircular6 \u30aa\u30d5\u30bb\u30c3\u30c8\u4ed8\u304d\u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;double, 6&gt;</code> \u306e\u5225\u540d\uff09 OffsetCircular6F \u30aa\u30d5\u30bb\u30c3\u30c8\u4ed8\u304d\u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;float, 6&gt;</code> \u306e\u5225\u540d\uff09 OffsetCircular9 \u30aa\u30d5\u30bb\u30c3\u30c8\u4ed8\u304d\u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;double, 9&gt;</code> \u306e\u5225\u540d\uff09 OffsetCircular9F \u30aa\u30d5\u30bb\u30c3\u30c8\u4ed8\u304d\u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;float, 9&gt;</code> \u306e\u5225\u540d\uff09 OffsetCircularBase \u30aa\u30d5\u30bb\u30c3\u30c8\u4ed8\u304d\u5186\u5ea7\u6a19 OffsetCircularF \u30aa\u30d5\u30bb\u30c3\u30c8\u4ed8\u304d\u5186\u5ea7\u6a19\uff08<code>CircularBase&lt;float, 0&gt;</code> \u306e\u5225\u540d\uff09 Point \u2605 2 \u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\uff08\u8981\u7d20\u306f <code>int32</code>\uff09 Polygon \u2605 \u591a\u89d2\u5f62\uff08\u7a74\u3082\u6301\u3066\u308b\uff09 Quad \u2605 \u51f8\u56db\u89d2\u5f62 Rect \u2605 \u9577\u65b9\u5f62\uff08\u8981\u7d20\u306f <code>int32</code>\uff09 RectF \u2605 \u9577\u65b9\u5f62\uff08\u8981\u7d20\u306f <code>double</code>\uff09 RoundRect \u2605 \u89d2\u4e38\u9577\u65b9\u5f62 Shape2D \u2605 \u591a\u89d2\u5f62\u4f5c\u6210\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3 Size \u2605 \u6a2a\u3001\u7e26\u306e\u5927\u304d\u3055\uff08\u8981\u7d20\u306f <code>int32</code>\uff09 \uff08<code>Point</code> \u306e\u5225\u540d\uff09 SizeF \u2605 \u6a2a\u3001\u7e26\u306e\u5927\u304d\u3055\uff08\u8981\u7d20\u306f <code>double</code>\uff09 \uff08<code>Vec2</code> \u306e\u5225\u540d\uff09 Spline2D \u30b9\u30d7\u30e9\u30a4\u30f3\u66f2\u7dda Triangle \u2605 \u4e09\u89d2\u5f62 Vec2 \u2605 2 \u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\uff08\u8981\u7d20\u306f <code>double</code>\uff09"},{"location":"api/classes/#3d-\u5f62\u72b6","title":"3D \u5f62\u72b6","text":"\u578b\u540d \u8aac\u660e Box \u2605 \u5404\u8fba\u304c XYZ \u8ef8\u306b\u5e73\u884c\u306a\u76f4\u65b9\u4f53 Cone \u5186\u9310 Cylinder \u2605 \u5186\u67f1 Cylindrical \u2605 \u5186\u67f1\u5ea7\u6a19\uff08<code>CylindricalBase&lt;double&gt;</code> \u306e\u5225\u540d\uff09 CylindricalBase&lt;Float&gt; \u5186\u67f1\u5ea7\u6a19 CylindricalF \u5186\u67f1\u5ea7\u6a19\uff08<code>CylindricalBase&lt;float&gt;</code> \u306e\u5225\u540d\uff09 Disc \u5186\u76e4 Float3 3 \u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\uff08\u8981\u7d20\u306f <code>float</code>\uff09 Float4 4 \u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\uff08\u8981\u7d20\u306f <code>float</code>\uff09 InfinitePlane \u5e73\u9762 Line3D \u2605 3D \u7dda\u5206 Mat4x4 \u2605 4x4 \u884c\u5217 OrientedBox \u2605 \u5411\u304d\u306e\u3042\u308b\u76f4\u65b9\u4f53 Plane \u2605 \u5927\u304d\u3055\u304c\u6709\u9650\u306e XZ \u5e73\u9762 Quaternion \u2605 \u30af\u30a9\u30fc\u30bf\u30cb\u30aa\u30f3 Ray \u2605 \u30ec\u30a4 Sphere \u2605 \u7403 Spherical \u2605 \u7403\u9762\u5ea7\u6a19\uff08<code>SphericalBase&lt;double&gt;</code> \u306e\u5225\u540d\uff09 SphericalBase&lt;Float&gt; \u7403\u9762\u5ea7\u6a19 SphericalF \u7403\u9762\u5ea7\u6a19\uff08<code>SphericalBase&lt;float&gt;</code> \u306e\u5225\u540d\uff09 Triangle3D 3D \u4e09\u89d2\u5f62 Vec3 \u2605 3 \u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\uff08\u8981\u7d20\u306f <code>double</code>\uff09 Vec4 4 \u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\uff08\u8981\u7d20\u306f <code>double</code>\uff09 ViewFrustum \u8996\u9310\u53f0"},{"location":"api/classes/#\u8272","title":"\u8272","text":"\u578b\u540d \u8aac\u660e Color \u2605 RGBA \u30ab\u30e9\u30fc\uff08\u8981\u7d20\u306f <code>uint8</code>\uff09 ColorF \u2605 RGBA \u30ab\u30e9\u30fc\uff08\u8981\u7d20\u306f <code>double</code>\uff09 ColormapType \u30ab\u30e9\u30fc\u30de\u30c3\u30d7\u306e\u7a2e\u985e ColorOption \u8272\u7a7a\u9593\u306e\u8a2d\u5b9a HSV \u2605 HSVA \u30ab\u30e9\u30fc"},{"location":"api/classes/#\u6642\u9593\u306e\u5358\u4f4d","title":"\u6642\u9593\u306e\u5358\u4f4d","text":"\u578b\u540d \u8aac\u660e Days \u6642\u9593\uff08\u65e5\uff09\uff08\u6574\u6570\uff09 DaysF \u6642\u9593\uff08\u65e5\uff09\uff08\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\uff09 Hours \u6642\u9593\uff08\u6642\uff09\uff08\u6574\u6570\uff09 HoursF \u6642\u9593\uff08\u6642\uff09\uff08\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\uff09 Minutes \u6642\u9593\uff08\u5206\uff09\uff08\u6574\u6570\uff09 MinutesF \u6642\u9593\uff08\u5206\uff09\uff08\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\uff09 Seconds \u6642\u9593\uff08\u79d2\uff09\uff08\u6574\u6570\uff09 SecondsF \u6642\u9593\uff08\u79d2\uff09\uff08\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\uff09 Milliseconds \u6642\u9593\uff08\u30df\u30ea\u79d2\uff09\uff08\u6574\u6570\uff09 MillisecondsF \u6642\u9593\uff08\u30df\u30ea\u79d2\uff09\uff08\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\uff09 Microseconds \u6642\u9593\uff08\u30de\u30a4\u30af\u30ed\u79d2\uff09\uff08\u6574\u6570\uff09 MicrosecondsF \u6642\u9593\uff08\u30de\u30a4\u30af\u30ed\u79d2\uff09\uff08\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\uff09 Nanoseconds \u6642\u9593\uff08\u30ca\u30ce\u79d2\uff09\uff08\u6574\u6570\uff09 NanosecondsF \u6642\u9593\uff08\u30ca\u30ce\u79d2\uff09\uff08\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\uff09 Duration \u2605 \u6642\u9593\uff08\u79d2\uff09\uff08\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\uff09\uff08<code>SecondsF</code> \u306e\u5225\u540d\uff09"},{"location":"api/classes/#\u30a8\u30e9\u30fc","title":"\u30a8\u30e9\u30fc","text":"\u578b\u540d \u8aac\u660e BadOptionalAccess \u7121\u52b9\u306a <code>Optional</code> \u3078\u306e\u30a2\u30af\u30bb\u30b9\u30a8\u30e9\u30fc EngineError \u30a8\u30f3\u30b8\u30f3\u5185\u90e8\u306e\u30a8\u30e9\u30fc Error \u2605 \u30a8\u30e9\u30fc NotImplementedError \u672a\u5b9f\u88c5\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3057\u305f\u30a8\u30e9\u30fc ParseError \u30d1\u30fc\u30b9\u95a2\u6570\u306e\u30a8\u30e9\u30fc"},{"location":"api/classes/#\u69d8\u3005\u306a\u30af\u30e9\u30b9","title":"\u69d8\u3005\u306a\u30af\u30e9\u30b9","text":"\u578b\u540d \u8aac\u660e ACLineStatus \u96fb\u6e90\u306e\u63a5\u7d9a\u72b6\u614b\u3092\u8868\u3059\u5217\u6319\u578b AdaptiveThresholdMethod \u9069\u5fdc\u7684\u95be\u5024\u51e6\u7406\u306b\u304a\u3044\u3066\u95be\u5024\u3092\u8a08\u7b97\u3059\u308b\u65b9\u6cd5\u3092\u8868\u3059\u5217\u6319\u578b aligned_float4 \u30cd\u30a4\u30c6\u30a3\u30d6\u306e SIMD Float4 \u578b Allocator&lt;Type, size_t&gt; \u30e1\u30e2\u30ea\u30a2\u30e9\u30a4\u30e1\u30f3\u30c8\u5bfe\u5fdc\u30a2\u30ed\u30b1\u30fc\u30bf AnimatedGIFReader GIF \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u8aad\u307f\u8fbc\u307f\u3092\u884c\u3046\u30af\u30e9\u30b9 AnimatedGIFWriter GIF \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u66f8\u304d\u51fa\u3057\u3092\u884c\u3046\u30af\u30e9\u30b9 ArcEmitter2D 2D \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u653e\u51fa\u5668\uff08\u5186\u5f27\u5f62\u72b6\uff09 AssetHandle&lt;AssetType&gt; \u30a2\u30bb\u30c3\u30c8\u30cf\u30f3\u30c9\u30eb AssetID&lt;AssetTag&gt; \u30a2\u30bb\u30c3\u30c8 ID AssetIDWrapper&lt;AssetTag&gt; \u30a2\u30bb\u30c3\u30c8 ID AssetState \u30a2\u30bb\u30c3\u30c8\u306e\u30ed\u30fc\u30c9\u72b6\u6cc1\u3092\u8868\u3059\u5217\u6319\u578b AsyncHTTPTask \u975e\u540c\u671f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3092\u7ba1\u7406\u3059\u308b\u30af\u30e9\u30b9 AsyncTask&lt;Type&gt; \u975e\u540c\u671f\u51e6\u7406\u30af\u30e9\u30b9\uff08C++ \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e <code>std::future</code> \u306e\u7f6e\u304d\u63db\u3048\uff09 Audio \u2605 \u30aa\u30fc\u30c7\u30a3\u30aa\u30af\u30e9\u30b9 AudioAsset \u2605 \u30aa\u30fc\u30c7\u30a3\u30aa\u30a2\u30bb\u30c3\u30c8 AudioAssetData \u30aa\u30fc\u30c7\u30a3\u30aa\u30a2\u30bb\u30c3\u30c8\u306e\u5b9a\u7fa9 AudioFormat \u97f3\u58f0\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u8868\u3059\u5217\u6319\u578b AudioGroup \u30b0\u30eb\u30fc\u30d7\u5316\u3057\u305f\u30aa\u30fc\u30c7\u30a3\u30aa AudioLoopTiming \u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u30eb\u30fc\u30d7\u4f4d\u7f6e\u6307\u5b9a BasicCamera2D 2D \u30ab\u30e1\u30e9\u306e\u57fa\u672c\u30af\u30e9\u30b9 BasicCamera3D 3D \u30ab\u30e1\u30e9\u306e\u57fa\u672c\u30af\u30e9\u30b9 BasicPerlinNoise&lt;Float&gt; Perlin \u30ce\u30a4\u30ba BatteryStatus \u30d0\u30c3\u30c6\u30ea\u30fc\u306e\u6b8b\u91cf\u3092\u8868\u3059\u5217\u6319\u578b BinaryReader \u2605 \u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u30af\u30e9\u30b9 BinaryWriter \u2605 \u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\u30af\u30e9\u30b9 BitmapGlyph \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30b0\u30ea\u30d5 Blend \u30d6\u30ec\u30f3\u30c9\u30e2\u30fc\u30c9\u3092\u8868\u3059\u5217\u6319\u578b BlendOp \u30d6\u30ec\u30f3\u30c9\u5f0f\u3092\u8868\u3059\u5217\u6319\u578b BlendState \u2605 \u30d6\u30ec\u30f3\u30c9\u30b9\u30c6\u30fc\u30c8 Blob \u2605 \u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf BorderType \u753b\u50cf\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u6642\u306e\u5883\u754c\u7dda\u306e\u6271\u3044\u3092\u8868\u3059\u5217\u6319\u578b Buffer2D 2D \u63cf\u753b\u30d0\u30c3\u30d5\u30a1 Byte 1 \u30d0\u30a4\u30c8\u3092\u8868\u73fe\u3059\u308b\u578b Camera2D \u2605 2D \u30ab\u30e1\u30e9 Camera2DParameters 2D \u30ab\u30e1\u30e9\u306e\u8a2d\u5b9a CameraControl \u30ab\u30e1\u30e9\u306e\u64cd\u4f5c\u65b9\u6cd5\u3092\u8868\u3059\u5217\u6319\u578b CascadeClassifier Cascade \u306b\u3088\u308b\u753b\u50cf\u5206\u985e\u5668 ChildProcess \u5b50\u30d7\u30ed\u30bb\u30b9\u306e\u4f5c\u6210\u3068\u7ba1\u7406\u30af\u30e9\u30b9 CircleEmitter2D 2D \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u653e\u51fa\u5668\uff08\u5186\u5f62\u72b6\uff09 CommonFloat&lt;T, U&gt; \u7570\u306a\u308b\u6570\u5024\u578b\u3069\u3046\u3057\u306e\u8a08\u7b97\u7d50\u679c\u3068\u3057\u3066\u4f7f\u3046\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b CommonFloat_t&lt;T, U&gt; \u7570\u306a\u308b\u6570\u5024\u578b\u3069\u3046\u3057\u306e\u8a08\u7b97\u7d50\u679c\u3068\u3057\u3066\u4f7f\u3046\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b CommonVector&lt;T, U, bool&gt; \u7570\u306a\u308b\u6570\u5024\u578b\u30d9\u30af\u30c8\u30eb\u3069\u3046\u3057\u306e\u8a08\u7b97\u7d50\u679c\u3068\u3057\u3066\u4f7f\u3046\u30d9\u30af\u30c8\u30eb\u578b CommonVector_t&lt;T, U, bool&gt; \u7570\u306a\u308b\u6570\u5024\u578b\u30d9\u30af\u30c8\u30eb\u3069\u3046\u3057\u306e\u8a08\u7b97\u7d50\u679c\u3068\u3057\u3066\u4f7f\u3046\u30d9\u30af\u30c8\u30eb\u578b ConstantBuffer&lt;Type&gt; \u2605 \u30b7\u30a7\u30fc\u30c0\u5b9a\u6570\u30d0\u30c3\u30d5\u30a1 ConstantBufferBase \u30b7\u30a7\u30fc\u30c0\u5b9a\u6570\u30d0\u30c3\u30d5\u30a1\u306e\u8a73\u7d30\u60c5\u5831 ConstantBufferBinding \u30b7\u30a7\u30fc\u30c0\u5b9a\u6570\u30d0\u30c3\u30d5\u30a1\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0 CopyOption \u30d5\u30a1\u30a4\u30eb\u30b3\u30d4\u30fc\u6642\u306e\u52d5\u4f5c\u3092\u8868\u3059\u5217\u6319\u578b CPUInfo CPU \u60c5\u5831 CSV \u2605 CSV \u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u66f8\u304d\u30af\u30e9\u30b9 CursorStyle \u2605 \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u5f62\u72b6\u3092\u8868\u3059\u5217\u6319\u578b Date \u2605 \u65e5\u4ed8 DateTime \u2605 \u65e5\u4ed8\u3068\u6642\u523b DayOfWeek \u66dc\u65e5\u3092\u8868\u3059\u5217\u6319\u578b DeadZone \u30c7\u30c3\u30c9\u30be\u30fc\u30f3\u306e\u8a2d\u5b9a DeadZoneType \u30c7\u30c3\u30c9\u30be\u30fc\u30f3\u306e\u8a08\u7b97\u65b9\u5f0f\u3092\u8868\u3059\u5217\u6319\u578b DebugCamera3D \u2605 \u30c7\u30d0\u30c3\u30b0\u7528\u306e 3D \u30ab\u30e1\u30e9 DefaultAllocator&lt;Type&gt; \u30e1\u30e2\u30ea\u30a2\u30e9\u30a4\u30e1\u30f3\u30c8\u3092\u8003\u616e\u3057\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a2\u30ed\u30b1\u30fc\u30bf DepthFunc \u30c7\u30d7\u30b9\u30c6\u30b9\u30c8\u95a2\u6570\u3092\u8868\u3059\u5217\u6319\u578b DepthStencilState \u30c7\u30d7\u30b9\u30fb\u30b9\u30c6\u30f3\u30b7\u30eb\u30b9\u30c6\u30fc\u30c8 Deserializer&lt;Reader&gt; \u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u5b9a\u7fa9\u7528\u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 detail::Gamepad_impl \u2605 \u30b2\u30fc\u30e0\u30d1\u30c3\u30c9\u3002<code>Gamepad(\u2026)</code> \u306e\u623b\u308a\u5024 detail::XInput_impl \u2605 Xinput \u30b2\u30fc\u30e0\u30d1\u30c3\u30c9\u3002<code>XInput(\u2026)</code> \u306e\u623b\u308a\u5024 DirectoryWatcher \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3067\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u64cd\u4f5c\u306e\u76e3\u8996\u30af\u30e9\u30b9 DragItemType \u30c9\u30e9\u30c3\u30b0\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u7a2e\u985e\u3092\u8868\u3059\u5217\u6319\u578b DragStatus \u30c9\u30e9\u30c3\u30b0\u306e\u72b6\u614b DrawableText \u2605 \u63cf\u753b\u30c6\u30ad\u30b9\u30c8\u3002<code>font(\u2026)</code> \u306e\u623b\u308a\u5024 DroppedFilePath \u30c9\u30ed\u30c3\u30d7\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u306e\u60c5\u5831 DroppedText \u30c9\u30ed\u30c3\u30d7\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u306e\u60c5\u5831 DynamicMesh \u4e2d\u8eab\u3092\u66f4\u65b0\u3067\u304d\u308b\u3001\u52d5\u7684\u30e1\u30c3\u30b7\u30e5 DynamicTexture \u2605 \u4e2d\u8eab\u3092\u66f4\u65b0\u3067\u304d\u308b\u3001\u52d5\u7684\u30c6\u30af\u30b9\u30c1\u30e3 EdgePreservingFilterType EdgePreservingFilter \u306e\u7a2e\u985e\u3092\u8868\u3059\u5217\u6319\u578b Effect \u2605 \u30a8\u30d5\u30a7\u30af\u30c8 Emission2D 2D \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u306b\u304a\u3051\u308b\u653e\u51fa Emoji \u6a19\u6e96\u7d75\u6587\u5b57 EngineOption \u30a8\u30f3\u30b8\u30f3\u306e\u8a2d\u5b9a ESSL OpenGL ES Shading Language \u30d5\u30a1\u30a4\u30eb Exif Exif \u30c7\u30fc\u30bf FFTResult \u2605 FFT \u306e\u7d50\u679c FFTSampleLength FFT \u30b5\u30f3\u30d7\u30eb\u6570\u3092\u8868\u3059\u5217\u6319\u578b FileAction \u30d5\u30a1\u30a4\u30eb\u306e\u64cd\u4f5c\u3092\u8868\u3059\u5217\u6319\u578b FileChange \u30d5\u30a1\u30a4\u30eb\u306e\u64cd\u4f5c\u3068\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9 FileFilter \u30d5\u30a1\u30a4\u30eb\u62e1\u5f35\u5b50\u30d5\u30a3\u30eb\u30bf FloodFillConnectivity \u753b\u50cf\u5857\u308a\u3064\u3076\u3057\u306e\u9023\u7d50\u6027\u3092\u8868\u3059\u5217\u6319\u578b Font \u2605 \u30d5\u30a9\u30f3\u30c8 FontAsset \u2605 \u30d5\u30a9\u30f3\u30c8\u30a2\u30bb\u30c3\u30c8 FontAssetData \u30d5\u30a9\u30f3\u30c8\u30a2\u30bb\u30c3\u30c8\u306e\u5b9a\u7fa9 FontMethod \u2605 \u30d5\u30a9\u30f3\u30c8\u306e\u63cf\u753b\u65b9\u5f0f\u3092\u8868\u3059\u5217\u6319\u578b FontStyle \u30d5\u30a9\u30f3\u30c8\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u8868\u3059\u5217\u6319\u578b FormatData \u6587\u5b57\u5217\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u60c5\u5831\u683c\u7d0d\u30d0\u30c3\u30d5\u30a1 GamepadInfo \u30b2\u30fc\u30e0\u30d1\u30c3\u30c9\u306e\u60c5\u5831 GeoJSONBase GeoJSON \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u57fa\u672c\u30af\u30e9\u30b9 GeoJSONFeature GeoJSON Feature \u30aa\u30d6\u30b8\u30a7\u30af\u30c8 GeoJSONFeatureCollection GeoJSON FeatureCollection \u30aa\u30d6\u30b8\u30a7\u30af\u30c8 GeoJSONGeometry GeoJSON Geometry \u30aa\u30d6\u30b8\u30a7\u30af\u30c8 GeoJSONType GeoJSON\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u578b\u3092\u8868\u3059\u5217\u6319\u578b GLSL \u2605 GLSL \u30d5\u30a1\u30a4\u30eb Glyph \u30b0\u30ea\u30d5 GlyphCluster \u30b0\u30ea\u30d5\u30af\u30e9\u30b9\u30bf GlyphIndex \u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u5185\u306e\u30b0\u30ea\u30d5\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff08<code>uint32</code> \u306e\u5225\u540d\uff09 GlyphInfo \u30b0\u30ea\u30d5\u60c5\u5831 GMInstrument \u2605 General MIDI (GM) \u306b\u304a\u3051\u308b\u697d\u5668\u3092\u8868\u3059\u5217\u6319\u578b GrabCut \u753b\u50cf\u304b\u3089\u306e\u80cc\u666f\u62bd\u51fa GrabCutClass \u753b\u50cf\u304b\u3089\u306e\u80cc\u666f\u62bd\u51fa\u306b\u304a\u3051\u308b\u80cc\u666f\u3068\u524d\u666f\u3092\u8868\u3059\u5217\u6319\u578b HLSL \u2605 HLSL \u30d5\u30a1\u30a4\u30eb HTMLWriter HTML \u6587\u66f8\u306e\u66f8\u304d\u51fa\u3057\u30af\u30e9\u30b9 HTTPAsyncStatus \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306e\u9032\u884c\u72b6\u6cc1\u3092\u8868\u3059\u5217\u6319\u578b HTTPProgress HTTP \u901a\u4fe1\u306e\u9032\u6357 HTTPResponse HTTP \u30ec\u30b9\u30dd\u30f3\u30b9 HTTPStatusCode HTTP \u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u8868\u3059\u5217\u6319\u578b IAddon \u30a2\u30c9\u30aa\u30f3\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9 IAsset \u30a2\u30bb\u30c3\u30c8\u306e\u57fa\u672c\u30af\u30e9\u30b9 IAudioDecoder \u97f3\u58f0\u30c7\u30b3\u30fc\u30c0\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9 IAudioEncoder \u97f3\u58f0\u30a8\u30f3\u30b3\u30fc\u30c0\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9 IAudioStream \u52d5\u7684\u66f4\u65b0\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9 Icon \u6a19\u6e96\u30a2\u30a4\u30b3\u30f3 IEffect \u2605 \u30a8\u30d5\u30a7\u30af\u30c8\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9 IEmitter2D 2D \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u653e\u51fa\u5668\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9 IImageDecoder \u753b\u50cf\u30c7\u30b3\u30fc\u30c0\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9 IImageEncoder \u753b\u50cf\u30a8\u30f3\u30b3\u30fc\u30c0\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9 Image \u2605 \u753b\u50cf\u30c7\u30fc\u30bf ImageAddressMode \u753b\u50cf\u30a2\u30c9\u30ec\u30b9\u30e2\u30fc\u30c9\u3092\u8868\u3059\u5217\u6319\u578b ImageFormat \u753b\u50cf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u8868\u3059\u5217\u6319\u578b ImageInfo \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306e\u60c5\u5831 ImagePixelFormat \u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u8868\u3059\u5217\u6319\u578b ImageROI \u753b\u50cf\u30c7\u30fc\u30bf\u5185\u306e\u9818\u57df InfiniteList&lt;Type&gt; \u7121\u9650\u30ea\u30b9\u30c8 INI \u2605 INI \u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u66f8\u304d INIKey INI \u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u306e\u30ad\u30fc INISection INI \u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u306e\u30bb\u30af\u30b7\u30e7\u30f3 INIValueWrapper INI \u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u306e\u30d8\u30eb\u30d1\u30fc\u30af\u30e9\u30b9 Input \u2605 \u5165\u529b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 InputCombination <code>Input</code> \u306e\u7d44\u307f\u5408\u308f\u305b InputDeviceType \u5165\u529b\u30c7\u30d0\u30a4\u30b9\u306e\u7a2e\u985e\u3092\u8868\u3059\u5217\u6319\u578b InputGroup <code>Input</code> \u306e\u7d44\u307f\u5408\u308f\u305b InterpolationAlgorithm \u753b\u50cf\u62e1\u5927\u7e2e\u5c0f\u306e\u624b\u6cd5\u3092\u8868\u3059\u5217\u6319\u578b IPv4Address IPv4 \u30a2\u30c9\u30ec\u30b9 IReader Reader \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9 IScene&lt;State, Data&gt; \u2605 \u30b7\u30fc\u30f3\u7ba1\u7406\u7528\u306e\u30b7\u30fc\u30f3\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9 ISteadyClock \u6642\u523b\u63d0\u4f9b\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9 IWriter Writer \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9 JoyCon Joy-Con KahanSummation&lt;Float&gt; \u30ab\u30cf\u30f3\u306e\u52a0\u7b97\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u7528\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3 KeyEvent \u30ad\u30fc\u5165\u529b\u306e\u8a73\u7d30 KlattTTSParameters Klatt \u65b9\u5f0f\u306b\u3088\u308b\u30c6\u30ad\u30b9\u30c8\u8aad\u307f\u4e0a\u3052\u306e\u8a2d\u5b9a KlattWaveform Klatt \u65b9\u5f0f\u306b\u3088\u308b\u30c6\u30ad\u30b9\u30c8\u8aad\u307f\u4e0a\u3052\u306e\u6ce2\u5f62\u7a2e\u985e\u3092\u8868\u3059\u5217\u6319\u578b LanguageCode \u8a00\u8a9e\u30b3\u30fc\u30c9\u3092\u8868\u3059\u5217\u6319\u578b Leap::Bone Leap Motion \u306b\u304a\u3051\u308b\u30dc\u30fc\u30f3\u306e\u60c5\u5831 Leap::Connection \u63a5\u7d9a\u3055\u308c\u305f Leap \u30c7\u30d0\u30a4\u30b9\u306e\u30cf\u30f3\u30c9\u30eb Leap::Hand Leap Motion \u306b\u304a\u3051\u308b\u624b\u306e\u60c5\u5831 Leap::TrackingMode Leap Motion \u306b\u304a\u3051\u308b\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u30e2\u30fc\u30c9\u3092\u8868\u3059\u5217\u6319\u578b LetterCase \u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\u5927\u6587\u5b57\u30fb\u5c0f\u6587\u5b57\u3092\u8868\u3059\u5217\u6319\u578b LicenseInfo \u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831 LineStyle \u7dda\u306e\u30b9\u30bf\u30a4\u30eb ListBoxState \u2605 \u30ea\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306e\u72b6\u614b LogLevel \u51fa\u529b\u3055\u308c\u308b\u30ed\u30b0\u306e\u8a73\u7d30\u5ea6\u3092\u8868\u3059\u5217\u6319\u578b LogType \u30ed\u30b0\u51fa\u529b\u306e\u7a2e\u985e\u3092\u8868\u3059\u5217\u6319\u578b ManagedScript \u81ea\u52d5\u7ba1\u7406\u3055\u308c\u305f\u30b9\u30af\u30ea\u30d7\u30c8 MatchResults \u6b63\u898f\u8868\u73fe\u306e\u30de\u30c3\u30c1\u7d50\u679c Material 3D \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30de\u30c6\u30ea\u30a2\u30eb MathParser \u6570\u5f0f\u30d1\u30fc\u30b5 MD5Value MD5 MemoryMappedFile \u30e1\u30e2\u30ea\u30de\u30c3\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb\u30af\u30e9\u30b9 MemoryMappedFileView \u30e1\u30e2\u30ea\u30de\u30c3\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb\u30d3\u30e5\u30fc\u30af\u30e9\u30b9 MemoryReader \u30e1\u30e2\u30ea\u306e\u8aad\u307f\u8fbc\u307f\u30af\u30e9\u30b9 MemoryViewReader \u30e1\u30e2\u30ea\u30d3\u30e5\u30fc\u306e\u8aad\u307f\u8fbc\u307f\u30af\u30e9\u30b9 MemoryWriter \u30e1\u30e2\u30ea\u3078\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u66f8\u304d\u51fa\u3057\u30af\u30e9\u30b9 Mesh \u2605 3D \u30e1\u30c3\u30b7\u30e5 MeshData \u2605 3D \u30e1\u30c3\u30b7\u30e5\u306e\u9802\u70b9\u30d0\u30c3\u30d5\u30a1\u3068\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30d0\u30c3\u30d5\u30a1 MeshGlyph \u30e1\u30c3\u30b7\u30e5\u30b0\u30ea\u30d5 MessageBoxResult \u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306e\u7d50\u679c\u3092\u8868\u3059\u5217\u6319\u578b MessageBoxStyle \u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u8868\u3059\u5217\u6319\u578b Microphone \u2605 \u30de\u30a4\u30af MicrophoneInfo \u30de\u30a4\u30af\u306e\u60c5\u5831 MicrosecClock \u30de\u30a4\u30af\u30ed\u79d2\u30ab\u30a6\u30f3\u30bf\u30fc MIDINote MIDI \u30ce\u30fc\u30c8 MillisecClock \u30df\u30ea\u79d2\u30ab\u30a6\u30f3\u30bf\u30fc MiniScene&lt;State&gt; \u7c21\u6613\u7248\u306e\u30b7\u30fc\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u30fc MixBus \u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u30df\u30c3\u30af\u30b9\u30d0\u30b9\u756a\u53f7\u3092\u8868\u3059\u5217\u6319\u578b MMFOpenMode_if_Exists \u30e1\u30e2\u30ea\u30de\u30c3\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30aa\u30fc\u30d7\u30f3\u30e2\u30fc\u30c9\u3092\u8868\u3059\u5217\u6319\u578b MMFOpenMode_if_NotFound \u30e1\u30e2\u30ea\u30de\u30c3\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30aa\u30fc\u30d7\u30f3\u30e2\u30fc\u30c9\u3092\u8868\u3059\u5217\u6319\u578b Model \u2605 3D \u30e2\u30c7\u30eb ModelMeshPart 3D \u30e2\u30c7\u30eb\u3092\u69cb\u6210\u3059\u308b\u30e2\u30c7\u30eb\u306e\u30d1\u30fc\u30c4\u306e\u69cb\u6210\u8981\u7d20 ModelObject 3D \u30e2\u30c7\u30eb\u3092\u69cb\u6210\u3059\u308b\u30e2\u30c7\u30eb\u306e\u30d1\u30fc\u30c4 MonitorInfo \u30e2\u30cb\u30bf\u30fc\u306e\u60c5\u5831 MSDFGlyph MSDF \u65b9\u5f0f\u306e\u30b0\u30ea\u30d5 MSL Metal Shading Language \u30d5\u30a1\u30a4\u30eb\uff08\u672a\u5b9f\u88c5\uff09 MSRenderTexture \u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\uff08\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\u4ed8\u304d\uff09\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3 NamedParameter&lt;Tag, Type&gt; \u540d\u524d\u4ed8\u304d\u5f15\u6570\u7528\u306e\u30d8\u30eb\u30d1\u30fc\u30af\u30e9\u30b9 NamedParameterHelper&lt;Tag&gt; \u540d\u524d\u4ed8\u304d\u5f15\u6570\u7528\u306e\u30d8\u30eb\u30d1\u30fc\u30af\u30e9\u30b9 NativeFilePath OS \u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u8868\u73fe\u578b NavMesh \u30ca\u30d3\u30e1\u30c3\u30b7\u30e5 NavMeshConfig \u30ca\u30d3\u30e1\u30c3\u30b7\u30e5\u306e\u8a2d\u5b9a NormalComputation \u6cd5\u7dda\u306e\u8a08\u7b97\u65b9\u5f0f\u3092\u8868\u3059\u5217\u6319\u578b OpenMode \u30d5\u30a1\u30a4\u30eb\u306e\u30aa\u30fc\u30d7\u30f3\u30e2\u30fc\u30c9\u3092\u8868\u3059\u5217\u6319\u578b OutlineGlyph \u8f2a\u90ed\u30b0\u30ea\u30d5 Particle2D 2D \u30d1\u30fc\u30c6\u30a3\u30af\u30eb ParticleSystem2D 2D \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u30b7\u30b9\u30c6\u30e0 ParticleSystem2DParameters 2D \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u5b9a PerlinNoise Perlin \u30ce\u30a4\u30ba\uff08<code>BasicPerlinNoise&lt;double&gt;</code> \u306e\u5225\u540d\uff09 PerlinNoiseF Perlin \u30ce\u30a4\u30ba\uff08<code>BasicPerlinNoise&lt;float&gt;</code> \u306e\u5225\u540d\uff09 PhongMaterial Phong \u30e2\u30c7\u30eb\u306e Material PhongMaterialInternal Phong \u30e2\u30c7\u30eb\u306e Material \u306e\u5185\u90e8\u5f62\u5f0f PianoKey \u2605 \u97f3\u540d\u3092\u8868\u3059\u5217\u6319\u578b Pipe \u30d1\u30a4\u30d7\u901a\u4fe1\u306e\u8a2d\u5b9a\u3092\u8868\u3059\u5217\u6319\u578b PixelShader \u2605 \u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0 PixelShaderAsset \u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u30a2\u30bb\u30c3\u30c8 PixelShaderAssetData \u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u30a2\u30bb\u30c3\u30c8\u306e\u5b9a\u7fa9 PlaceHolder_t \u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u578b Platform::Windows::HLSLCompileOption HLSL \u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3 PlayingCard::Card \u30c8\u30e9\u30f3\u30d7\u30ab\u30fc\u30c9\u306e\u756a\u53f7\u3001\u30b9\u30fc\u30c8\u3001\u88cf\u8868\u306a\u3069\u306e\u30c7\u30fc\u30bf PlayingCard::CardInfo \u30c8\u30e9\u30f3\u30d7\u30ab\u30fc\u30c9\u306e\u63cf\u753b\u7528\u306e\u60c5\u5831 PlayingCard::Pack \u30c8\u30e9\u30f3\u30d7\u30ab\u30fc\u30c9\u3092\u4f5c\u6210\u3059\u308b\u30af\u30e9\u30b9 PlayingCard::Suit \u30c8\u30e9\u30f3\u30d7\u30ab\u30fc\u30c9\u306e\u30b9\u30fc\u30c8\uff08\u7d75\u67c4\u306e\u30de\u30fc\u30af\uff09\u3092\u8868\u3059\u5217\u6319\u578b PoissonDisk2D 2D \u30dd\u30ef\u30bd\u30f3\u5206\u5e03\u30af\u30e9\u30b9 PolygonEmitter2D 2D \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u653e\u51fa\u5668\uff08\u591a\u89d2\u5f62\uff09 PolygonFailureType Polygon \u306e\u5165\u529b\u9802\u70b9\u306e\u691c\u8a3c\u7d50\u679c PolygonGlyph \u591a\u89d2\u5f62\u306b\u3088\u308b\u30b0\u30ea\u30d5 PowerStatus \u30b7\u30b9\u30c6\u30e0\u306e\u96fb\u6e90\u306e\u72b6\u614b ProController Pro \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u7528\u306e Gamepad \u30a2\u30c0\u30d7\u30bf ProfilerStat \u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u60c5\u5831 QRContent QR \u30b3\u30fc\u30c9\u306e\u30b9\u30ad\u30e3\u30f3\u7d50\u679c QRErrorCorrection QR \u30b3\u30fc\u30c9\u306e\u8aa4\u308a\u8a02\u6b63\u30ec\u30d9\u30eb\u3092\u8868\u3059\u5217\u6319\u578b QRMode QR \u30b3\u30fc\u30c9\u306e\u30e2\u30fc\u30c9\u3092\u8868\u3059\u5217\u6319\u578b QRScanner QR \u30b3\u30fc\u30c9\u306e\u8aad\u307f\u53d6\u308a\u30af\u30e9\u30b9 RDTSCClock CPU \u30b5\u30a4\u30af\u30eb\u6570\u30ab\u30a6\u30f3\u30bf\u30fc RectanglePack \u9577\u65b9\u5f62\u8a70\u8fbc\u307f\u7d50\u679c RectEmitter2D 2D \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u653e\u51fa\u5668\uff08\u9577\u65b9\u5f62\uff09 RegExp \u6b63\u898f\u8868\u73fe RenderTexture \u2605 \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3 ResizeMode \u2605 \u30b7\u30fc\u30f3\u306e\u81ea\u52d5\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9\u3092\u8868\u3059\u5217\u6319\u578b ResourceOption \u30ea\u30bd\u30fc\u30b9\u30d1\u30b9\u4f7f\u7528\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8868\u3059\u5217\u6319\u578b SamplerState \u2605 \u30b5\u30f3\u30d7\u30e9\u30fc\u30b9\u30c6\u30fc\u30c8 SaturatedLinework&lt;TargetShape, URNG&gt; \u96c6\u4e2d\u7dda\u63cf\u753b\u30af\u30e9\u30b9 SceneManager&lt;State, Data&gt; \u2605 \u30b7\u30fc\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u30fc ScopedColorAdd2D 2D \u63cf\u753b\u30ab\u30e9\u30fc\u52a0\u7b97\u8a2d\u5b9a\u30b9\u30b3\u30fc\u30d7\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 ScopedColorMul2D 2D \u63cf\u753b\u30ab\u30e9\u30fc\u4e57\u7b97\u8a2d\u5b9a\u30b9\u30b3\u30fc\u30d7\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 ScopedCustomShader2D 2D \u63cf\u753b\u30ab\u30b9\u30bf\u30e0\u30b7\u30a7\u30fc\u30c0\u8a2d\u5b9a\u30b9\u30b3\u30fc\u30d7\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 ScopedCustomShader3D 3D \u63cf\u753b\u30ab\u30b9\u30bf\u30e0\u30b7\u30a7\u30fc\u30c0\u8a2d\u5b9a\u30b9\u30b3\u30fc\u30d7\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 ScopedRenderStates2D \u2605 2D \u63cf\u753b\u30ec\u30f3\u30c0\u30fc\u30b9\u30c6\u30fc\u30c8\u8a2d\u5b9a\u30b9\u30b3\u30fc\u30d7\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 ScopedRenderStates3D 3D \u63cf\u753b\u30ec\u30f3\u30c0\u30fc\u30b9\u30c6\u30fc\u30c8\u8a2d\u5b9a\u30b9\u30b3\u30fc\u30d7\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 ScopedRenderTarget2D \u2605 2D \u63cf\u753b\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u8a2d\u5b9a\u30b9\u30b3\u30fc\u30d7\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 ScopedRenderTarget3D 3D \u63cf\u753b\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u8a2d\u5b9a\u30b9\u30b3\u30fc\u30d7\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 ScopedViewport2D 2D \u63cf\u753b\u30d3\u30e5\u30fc\u30dd\u30fc\u30c8\u8a2d\u5b9a\u30b9\u30b3\u30fc\u30d7\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 ScopedViewport3D 3D \u63cf\u753b\u30d3\u30e5\u30fc\u30dd\u30fc\u30c8\u8a2d\u5b9a\u30b9\u30b3\u30fc\u30d7\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 ScopeGuard&lt;Callback&gt; \u30b9\u30b3\u30fc\u30d7\u30ac\u30fc\u30c9 Script \u30b9\u30af\u30ea\u30d7\u30c8 ScriptCompileOption \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8868\u3059\u5217\u6319\u578b ScriptFunction&lt;Ret(Args\u2026)&gt; \u30b9\u30af\u30ea\u30d7\u30c8\u95a2\u6570 ScriptModule \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30e2\u30b8\u30e5\u30fc\u30eb SDFGlyph SDF \u65b9\u5f0f\u306b\u3088\u308b\u30b0\u30ea\u30d5 Serial \u30b7\u30ea\u30a2\u30eb\u901a\u4fe1 Serializer&lt;Writer&gt; \u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u5b9a\u7fa9\u7528\u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 ShaderGroup \u30b7\u30a7\u30fc\u30c0\u8a00\u8a9e\u306e\u5dee\u3092\u5438\u53ce\u3059\u308b\u30af\u30e9\u30b9 ShaderStage \u30b7\u30a7\u30fc\u30c0\u30b9\u30c6\u30fc\u30b8\u3092\u8868\u3059\u5217\u6319\u578b SIMD_Float4 SIMD \u5bfe\u5fdc Float4 SimpleAnimation \u30ad\u30fc\u30d5\u30ec\u30fc\u30e0\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u88dc\u52a9\u30af\u30e9\u30b9 Sky \u5929\u7a7a\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u30a8\u30f3\u30b8\u30f3\uff08\u5b9f\u9a13\u7684\uff09 SoundFont \u30b5\u30a6\u30f3\u30c9\u30d5\u30a9\u30f3\u30c8 SpecialFolder \u7279\u6b8a\u30d5\u30a9\u30eb\u30c0\u3092\u8868\u3059\u5217\u6319\u578b SplineIndex <code>Spline2D</code> \u4e0a\u306e\u4f4d\u7f6e Step&lt;T, N, S&gt; \u2605 \u30eb\u30fc\u30d7\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3 Step2D \u2605 2D \u30eb\u30fc\u30d7\u306e\u4e00\u5143\u5316\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3 Stopwatch \u2605 \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1 Subdivision2D 2D \u30b5\u30d6\u30c7\u30a3\u30d3\u30b8\u30e7\u30f3\u30af\u30e9\u30b9 Subdivision2DEdgeType 2D \u30b5\u30d6\u30c7\u30a3\u30d3\u30b8\u30e7\u30f3\u306e\u30a8\u30c3\u30b8\u306e\u60c5\u5831 Subdivision2DPointLocation 2D \u30b5\u30d6\u30c7\u30a3\u30d3\u30b8\u30e7\u30f3\u306e\u70b9\u306e\u4f4d\u7f6e\u3092\u8868\u3059\u5217\u6319\u578b SVG SVG \u30c7\u30fc\u30bf TCPClient TCP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8 TCPError TCP \u901a\u4fe1\u306e\u30a8\u30e9\u30fc\u3092\u8868\u3059\u5217\u6319\u578b TCPServer TCP \u30b5\u30fc\u30d0 TCPSessionID TCP \u306e\u30bb\u30c3\u30b7\u30e7\u30f3 ID\uff08<code>uint64</code> \u306e\u5225\u540d\uff09 TextEditState \u2605 \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u5185\u306e\u30c6\u30ad\u30b9\u30c8\u306e\u72b6\u614b TextEncoding \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u5f62\u5f0f TextInputMode \u30c6\u30ad\u30b9\u30c8\u306e\u5165\u529b\u30e2\u30fc\u30c9 TextReader \u2605 \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u30af\u30e9\u30b9 TextStyle \u30c6\u30ad\u30b9\u30c8\u306e\u30b9\u30bf\u30a4\u30eb Texture \u2605 \u30c6\u30af\u30b9\u30c1\u30e3 TextureAddressMode \u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30c9\u30ec\u30b9\u30e2\u30fc\u30c9\u3092\u8868\u3059\u5217\u6319\u578b TextureAsset \u2605 \u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30bb\u30c3\u30c8 TextureAssetData \u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30bb\u30c3\u30c8\u306e\u5b9a\u7fa9 TexturedCircle \u5186\u5f62\u306b\u5207\u308a\u629c\u3044\u305f\u30c6\u30af\u30b9\u30c1\u30e3 TextureDesc \u2605 \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u8a2d\u5b9a\u3092\u8868\u3059\u5217\u6319\u578b TexturedQuad \u51f8\u56db\u89d2\u5f62\u306b\u5207\u308a\u629c\u3044\u305f\u30c6\u30af\u30b9\u30c1\u30e3 TexturedRoundRect \u30c6\u30af\u30b9\u30c1\u30e3\u4e0a\u306e\u89d2\u4e38\u9577\u65b9\u5f62\u306e\u9818\u57df TextureFilter \u2605 \u30c6\u30af\u30b9\u30c1\u30e3\u30d5\u30a3\u30eb\u30bf TextureFormat \u30c6\u30af\u30b9\u30c1\u30e3\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 TexturePixelFormat \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30d4\u30af\u30bb\u30eb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u8868\u3059\u5217\u6319\u578b TextureRegion \u2605 \u30c6\u30af\u30b9\u30c1\u30e3\u4e0a\u306e\u9577\u65b9\u5f62\u306e\u9818\u57df TextWriter \u2605 \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\u30af\u30e9\u30b9 TimeProfiler \u30d7\u30ed\u30d5\u30a1\u30a4\u30e9\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30fc\u30af\u30e9\u30b9 Timer \u30bf\u30a4\u30de\u30fc ToastNotificationID \u30c8\u30fc\u30b9\u30c8\u901a\u77e5\u306e ID\uff08<code>int64</code> \u306e\u5225\u540d\uff09 ToastNotificationItem \u30c8\u30fc\u30b9\u30c8\u901a\u77e5\u306e\u8a2d\u5b9a ToastNotificationState \u30c8\u30fc\u30b9\u30c8\u901a\u77e5\u306e\u72b6\u614b\u3092\u8868\u3059\u5217\u6319\u578b Transformer2D \u2605 2D \u5ea7\u6a19\u5909\u63db\u30b9\u30b3\u30fc\u30d7\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 Transformer3D 3D \u5ea7\u6a19\u5909\u63db\u30b9\u30b3\u30fc\u30d7\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 Transition \u5024\u306e\u9077\u79fb\u30d8\u30eb\u30d1\u30fc\u30af\u30e9\u30b9 TriangleIndex \u4e09\u89d2\u5f62\u3092\u69cb\u6210\u3059\u308b\u9802\u70b9\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff08\u8981\u7d20\u306f <code>uint16</code>\uff09 TriangleIndex32 \u4e09\u89d2\u5f62\u3092\u69cb\u6210\u3059\u308b\u9802\u70b9\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff08\u8981\u7d20\u306f <code>uint32</code>\uff09 Typeface \u2605 \u6a19\u6e96\u30d5\u30a9\u30f3\u30c8\u306e\u7a2e\u985e\u3092\u8868\u3059\u5217\u6319\u578b Uncopyable \u30b3\u30d4\u30fc\u7981\u6b62 Mixin UnderlineStyle \u4e0b\u7dda\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u8868\u3059\u5217\u6319\u578b unique_resource \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7834\u68c4\u6642\u306b\u3001\u6307\u5b9a\u3057\u305f\u30c7\u30ea\u30fc\u30bf\u3092\u547c\u3076 RAII \u30e9\u30c3\u30d1\u30fc UserAction \u2605 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3055\u305b\u308b\u305f\u3081\u306e\u30e6\u30fc\u30b6\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8868\u3059\u5217\u6319\u578b UTF16toUTF32_Converter UTF-8 \u304b\u3089 UTF-32 \u3078\u306e\u9010\u6b21\u5909\u63db\u30af\u30e9\u30b9 UTF32toUTF16_Converter UTF-16 \u304b\u3089 UTF-32 \u3078\u306e\u9010\u6b21\u5909\u63db\u30af\u30e9\u30b9 UTF32toUTF8_Converter UTF-32 \u304b\u3089 UTF-8 \u3078\u306e\u9010\u6b21\u5909\u63db\u30af\u30e9\u30b9 UTF8toUTF32_Converter UTF-32 \u304b\u3089 UTF-16 \u3078\u306e\u9010\u6b21\u5909\u63db\u30af\u30e9\u30b9 UUIDValue UUID VariableSpeedStopwatch \u901f\u5ea6\u3092\u5909\u66f4\u53ef\u80fd\u306a\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1 Vertex2D 2D \u56f3\u5f62\u306e\u57fa\u672c\u9802\u70b9\u30c7\u30fc\u30bf Vertex3D 3D \u56f3\u5f62\u306e\u57fa\u672c\u9802\u70b9\u30c7\u30fc\u30bf VertexShader \u2605 \u9802\u70b9\u30b7\u30a7\u30fc\u30c0 VertexShaderAsset \u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u30a2\u30bb\u30c3\u30c8 VertexShaderAssetData \u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u30a2\u30bb\u30c3\u30c8\u306e\u5b9a\u7fa9 VideoReader \u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u30af\u30e9\u30b9 VideoTexture \u52d5\u753b\u3092 Texture \u306e\u3088\u3046\u306b\u6271\u3048\u308b\u30af\u30e9\u30b9 VideoWriter \u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u51fa\u3057\u30af\u30e9\u30b9 VoronoiFacet \u30dc\u30ed\u30ce\u30a4 Facets Wave \u2605 \u97f3\u58f0\u6ce2\u5f62\u30c7\u30fc\u30bf WaveSample \u5358\u7cbe\u5ea6\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306b\u3088\u308b\u30b9\u30c6\u30ec\u30aa\u306e\u6ce2\u5f62\u30b5\u30f3\u30d7\u30eb WaveSampleS16 \u7b26\u53f7\u4ed8\u304d 16-bit \u6574\u6570\u306b\u3088\u308b\u30b9\u30c6\u30ec\u30aa\u306e\u6ce2\u5f62\u30b5\u30f3\u30d7\u30eb Webcam \u2605 Web \u30ab\u30e1\u30e9 WebcamInfo Web \u30ab\u30e1\u30e9\u306e\u60c5\u5831 WGSL WebGPU Shading Language \u30d5\u30a1\u30a4\u30eb WindowState \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u72b6\u614b WindowStyle \u30a6\u30a3\u30f3\u30c9\u30a6\u30b9\u30bf\u30a4\u30eb\u3092\u8868\u3059\u5217\u6319\u578b X86Features CPU \u306e\u5bfe\u5fdc\u547d\u4ee4\u30bb\u30c3\u30c8 XInputVibration XInput \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u30d0\u30a4\u30d6\u30ec\u30fc\u30b7\u30e7\u30f3\u8a2d\u5b9a XMLElement XML \u306e\u8981\u7d20 XMLReader XML \u306e\u8aad\u307f\u8fbc\u307f\u30af\u30e9\u30b9 YesNo&lt;Tag&gt; YesNo \u7528\u306e\u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 ZIPReader ZIP \u30a2\u30fc\u30ab\u30a4\u30d6\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u30af\u30e9\u30b9"},{"location":"api/classes/#\u4e71\u6570\u3068\u5206\u5e03","title":"\u4e71\u6570\u3068\u5206\u5e03","text":"\u578b\u540d \u8aac\u660e BernoulliDistribution \u30d9\u30eb\u30cc\u30fc\u30a4\u5206\u5e03\u30af\u30e9\u30b9 DefaultRNG \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u4e71\u6570\u751f\u6210\u5668\uff08<code>PRNG::SFMT19937_64</code> \u306e\u5225\u540d\uff09 DiscreteDistribution \u78ba\u7387\u5206\u5e03\u3092\u751f\u6210\u3059\u308b\u30af\u30e9\u30b9 HardwareRNG \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306b\u3088\u308b\u975e\u6c7a\u5b9a\u7684\u4e71\u6570\u751f\u6210\u5668 NormalDistribution \u6b63\u898f\u5206\u5e03\u30af\u30e9\u30b9 PRNG::SFMT19937_64 SIMD-oriented Fast Mersenne Twister \u65b9\u5f0f\u306b\u3088\u308b\u7591\u4f3c\u4e71\u6570\u751f\u6210\u5668 PRNG::SplitMix64 SplitMix64 \u65b9\u5f0f\u306b\u3088\u308b\u7591\u4f3c\u4e71\u6570\u751f\u6210\u5668 PRNG::Xoroshiro128Plus xoshiro128+ \u65b9\u5f0f\u306b\u3088\u308b\u7591\u4f3c\u4e71\u6570\u751f\u6210\u5668 PRNG::Xoroshiro128PlusPlus xoroshiro128++ \u65b9\u5f0f\u306b\u3088\u308b\u7591\u4f3c\u4e71\u6570\u751f\u6210\u5668 PRNG::Xoroshiro128StarStar xoroshiro128** \u65b9\u5f0f\u306b\u3088\u308b\u7591\u4f3c\u4e71\u6570\u751f\u6210\u5668 PRNG::Xoshiro128Plus xoshiro128+ \u65b9\u5f0f\u306b\u3088\u308b\u7591\u4f3c\u4e71\u6570\u751f\u6210\u5668 PRNG::Xoshiro128PlusPlus xoshiro128++ \u65b9\u5f0f\u306b\u3088\u308b\u7591\u4f3c\u4e71\u6570\u751f\u6210\u5668 PRNG::Xoshiro128StarStar xoshiro128** \u65b9\u5f0f\u306b\u3088\u308b\u7591\u4f3c\u4e71\u6570\u751f\u6210\u5668 PRNG::Xoshiro256Plus xoshiro256+ \u65b9\u5f0f\u306b\u3088\u308b\u7591\u4f3c\u4e71\u6570\u751f\u6210\u5668 PRNG::Xoshiro256PlusPlus xoshiro256++ \u65b9\u5f0f\u306b\u3088\u308b\u7591\u4f3c\u4e71\u6570\u751f\u6210\u5668 PRNG::Xoshiro256StarStar xoshiro256** \u65b9\u5f0f\u306b\u3088\u308b\u7591\u4f3c\u4e71\u6570\u751f\u6210\u5668 SmallRNG \u7701\u30b5\u30a4\u30ba\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u4e71\u6570\u751f\u6210\u5668\uff08<code>PRNG::Xoshiro256PlusPlus</code> \u306e\u5225\u540d\uff09 UniformDistribution \u6574\u6570\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306b\u4f7f\u3048\u308b\u4e00\u69d8\u5206\u5e03\u30af\u30e9\u30b9 UniformIntDistribution \u6574\u6570\u306e\u4e00\u69d8\u5206\u5e03\u30af\u30e9\u30b9 UniformRealDistribution \u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u4e00\u69d8\u5206\u5e03\u30af\u30e9\u30b9"},{"location":"api/classes/#2d-\u7269\u7406\u6f14\u7b97","title":"2D \u7269\u7406\u6f14\u7b97","text":"\u578b\u540d \u8aac\u660e P2Body \u2605 \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\u306b\u5b58\u5728\u3059\u308b\u7269\u4f53\u306e 1 \u5358\u4f4d\u30020 \u500b\u4ee5\u4e0a\uff08\u901a\u5e38\u306f 1 \u500b\u4ee5\u4e0a\uff09\u306e\u90e8\u54c1\uff08<code>P2Shape</code>\uff09\u304b\u3089\u69cb\u6210\u3055\u308c\u308b P2BodyID \u7269\u4f53 P2Body \u306b\u4e0e\u3048\u3089\u308c\u308b\u4e00\u610f\u306e ID \u306e\u578b\uff08<code>uint32</code> \u306e\u5225\u540d\uff09 P2BodyType \u2605 \u7269\u4f53\u306e\u7a2e\u985e\u306b\u95a2\u3059\u308b\u5217\u6319\u578b P2Circle \u7269\u4f53\uff08<code>P2Body</code>\uff09\u3092\u69cb\u6210\u3059\u308b\u90e8\u54c1\u3002\u5186\u306e\u5f62\u72b6\u3092\u6301\u3064 P2Collision 2 \u3064\u306e\u7269\u4f53\u306b\u306f\u305f\u3089\u304f\u5168\u3066\u306e\u63a5\u89e6\u306b\u95a2\u3059\u308b\u60c5\u5831\u3067\u3001\u6700\u5927 2 \u3064\u306e <code>P2Contact</code> \u3092\u6301\u3064 P2Contact 2 \u3064\u306e\u7269\u4f53\u306b\u767a\u751f\u3057\u305f\u885d\u7a81\u306b\u95a2\u3059\u308b\u60c5\u5831 P2ContactPair 2 \u3064\u306e\u7269\u4f53\u304c\u63a5\u89e6\u3057\u3066\u3044\u308b\u3068\u304d\u306e\u305d\u308c\u3089\u306e ID (P2BodyID) \u306e\u30da\u30a2 P2DistanceJoint 2 \u3064\u306e\u7269\u4f53\u3092\u3064\u306a\u3050\u8ddd\u96e2\u30b8\u30e7\u30a4\u30f3\u30c8 P2Filter \u90e8\u54c1\uff08<code>P2Shape</code>\uff09\u306b\u30ab\u30c6\u30b4\u30ea\u30d3\u30c3\u30c8\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u3001\u7279\u5b9a\u306e\u30d3\u30c3\u30c8\u30d5\u30e9\u30b0\u3092\u6301\u3064\u90e8\u54c1\u3068\u5e72\u6e09\u3057\u306a\u3044\u3088\u3046\u306b\u3067\u304d\u308b P2Line \u7269\u4f53\uff08<code>P2Body</code>\uff09\u3092\u69cb\u6210\u3059\u308b\u90e8\u54c1\u3002\u7dda\u5206\u306e\u5f62\u72b6\u3092\u6301\u3064 P2LineString \u7269\u4f53\uff08<code>P2Body</code>\uff09\u3092\u69cb\u6210\u3059\u308b\u90e8\u54c1\u3002\u9023\u7d9a\u3057\u305f\u7dda\u5206\u306e\u5f62\u72b6\u3092\u6301\u3064 P2Material \u90e8\u54c1\uff08<code>P2Shape</code>\uff09\u306e\u6750\u8cea\u3092\u5b9a\u7fa9\u3059\u308b P2MouseJoint 2 \u3064\u306e\u7269\u4f53\u3092\u3064\u306a\u3050\u30de\u30a6\u30b9\u30b8\u30e7\u30a4\u30f3\u30c8 P2PivotJoint 2 \u3064\u306e\u7269\u4f53\u3092\u3064\u306a\u3050\u30d4\u30dc\u30c3\u30c8\u30b8\u30e7\u30a4\u30f3\u30c8 P2Polygon \u7269\u4f53\uff08<code>P2Body</code>\uff09\u3092\u69cb\u6210\u3059\u308b\u90e8\u54c1\u3002\u591a\u89d2\u5f62\u306e\u5f62\u72b6\u3092\u6301\u3064 P2Quad \u7269\u4f53\uff08<code>P2Body</code>\uff09\u3092\u69cb\u6210\u3059\u308b\u90e8\u54c1\u3002\u51f8\u56db\u89d2\u5f62\u306e\u5f62\u72b6\u3092\u6301\u3064 P2Rect \u7269\u4f53\uff08<code>P2Body</code>\uff09\u3092\u69cb\u6210\u3059\u308b\u90e8\u54c1\u3002\u9577\u65b9\u5f62\u306e\u5f62\u72b6\u3092\u6301\u3064 P2Shape \u7269\u4f53\uff08<code>P2Body</code>\uff09\u3092\u69cb\u6210\u3059\u308b\u90e8\u54c1\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9 P2ShapeType \u90e8\u54c1\uff08<code>P2Shape</code>\uff09\u306e\u5f62\u72b6\u306e\u7a2e\u985e\u3092\u8868\u3059\u5217\u6319\u578b P2SliderJoint 2 \u3064\u306e\u7269\u4f53\u3092\u3064\u306a\u3050\u30b9\u30e9\u30a4\u30c0\u30fc\u30b8\u30e7\u30a4\u30f3\u30c8 P2Triangle \u7269\u4f53\uff08<code>P2Body</code>\uff09\u3092\u69cb\u6210\u3059\u308b\u90e8\u54c1\u3002\u4e09\u89d2\u5f62\u306e\u5f62\u72b6\u3092\u6301\u3064 P2WheelJoint 2 \u3064\u306e\u7269\u4f53\u3092\u3064\u306a\u3050\u30db\u30a4\u30fc\u30eb\u30b8\u30e7\u30a4\u30f3\u30c8 P2World \u2605 \u7269\u7406\u6f14\u7b97\u3092\u884c\u3046\u30ef\u30fc\u30eb\u30c9"},{"location":"api/classes/#json-\u30c7\u30fc\u30bf","title":"JSON \u30c7\u30fc\u30bf","text":"\u578b\u540d \u8aac\u660e JSON \u2605 JSON \u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u66f8\u304d\u30af\u30e9\u30b9 JSONArrayView JSON \u306e\u914d\u5217\u306e\u30d3\u30e5\u30fc JSONConstIterator JSON const \u30a4\u30c6\u30ec\u30fc\u30bf JSONItem JSON \u306e\u8981\u7d20 JSONIterationProxy JSON \u30a4\u30c6\u30ec\u30fc\u30bf\u88dc\u52a9\u30af\u30e9\u30b9 JSONIterator JSON \u30a4\u30c6\u30ec\u30fc\u30bf JSONValueType JSON \u306e\u8981\u7d20\u306e\u578b\u3092\u8868\u3059\u5217\u6319\u578b"},{"location":"api/classes/#toml-\u30c7\u30fc\u30bf","title":"TOML \u30c7\u30fc\u30bf","text":"\u578b\u540d \u8aac\u660e TOMLArrayIterator TOML \u306e\u914d\u5217\u306e\u30a4\u30c6\u30ec\u30fc\u30bf TOMLArrayView TOML \u306e\u914d\u5217\u306e\u30d3\u30e5\u30fc TOMLReader \u2605 TOML \u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u30af\u30e9\u30b9 TOMLTableArrayIterator TOML \u306e\u30c6\u30fc\u30d6\u30eb\u914d\u5217\u306e\u30a4\u30c6\u30ec\u30fc\u30bf TOMLTableArrayView TOML \u306e\u30c6\u30fc\u30d6\u30eb\u914d\u5217\u306e\u30d3\u30e5\u30fc TOMLTableIterator TOML \u306e\u30c6\u30fc\u30d6\u30eb\u306e\u30a4\u30c6\u30ec\u30fc\u30bf TOMLTableMember TOML \u306e\u30c6\u30fc\u30d6\u30eb\u30e1\u30f3\u30d0 TOMLTableView TOML \u306e\u30c6\u30fc\u30d6\u30eb\u306e\u30d3\u30e5\u30fc TOMLValue TOML \u306e\u8981\u7d20 TOMLValueType TOML \u306e\u8981\u7d20\u306e\u578b\u3092\u8868\u3059\u5217\u6319\u578b"},{"location":"api/classes/#\u753b\u50cf\u30b3\u30fc\u30c7\u30c3\u30af","title":"\u753b\u50cf\u30b3\u30fc\u30c7\u30c3\u30af","text":"\u578b\u540d \u8aac\u660e BMPDecoder BMP \u5f62\u5f0f\u753b\u50cf\u30c7\u30fc\u30bf\u306e\u30c7\u30b3\u30fc\u30c0 BMPEncoder BMP \u5f62\u5f0f\u753b\u50cf\u30c7\u30fc\u30bf\u306e\u30a8\u30f3\u30b3\u30fc\u30c0 GIFDecoder GIF \u5f62\u5f0f\u753b\u50cf\u30c7\u30fc\u30bf\u306e\u30c7\u30b3\u30fc\u30c0 GIFEncoder GIF \u5f62\u5f0f\u753b\u50cf\u30c7\u30fc\u30bf\u306e\u30a8\u30f3\u30b3\u30fc\u30c0 JPEGDecoder JPEG \u5f62\u5f0f\u753b\u50cf\u306e\u30c7\u30b3\u30fc\u30c0 JPEGEncoder JPEG \u5f62\u5f0f\u753b\u50cf\u306e\u30a8\u30f3\u30b3\u30fc\u30c0 PNGDecoder PNG \u5f62\u5f0f\u753b\u50cf\u306e\u30c7\u30b3\u30fc\u30c0 PNGEncoder PNG \u5f62\u5f0f\u753b\u50cf\u306e\u30a8\u30f3\u30b3\u30fc\u30c0 PNGFilter PNG \u5727\u7e2e\u6642\u306e\u30d5\u30a3\u30eb\u30bf\u3092\u8868\u3059\u5217\u6319\u578b PPMDecoder PPM \u5f62\u5f0f\u753b\u50cf\u306e\u30c7\u30b3\u30fc\u30c0 PPMEncoder PPM \u5f62\u5f0f\u753b\u50cf\u306e\u30a8\u30f3\u30b3\u30fc\u30c0 PPMType PPM \u753b\u50cf\u306e\u4fdd\u5b58\u5f62\u5f0f\u3092\u8868\u3059\u5217\u6319\u578b SVGDecoder SVG \u5f62\u5f0f\u753b\u50cf\u306e\u30c7\u30b3\u30fc\u30c0 TGADecoder TGA \u5f62\u5f0f\u753b\u50cf\u306e\u30c7\u30b3\u30fc\u30c0 TGAEncoder TGA \u5f62\u5f0f\u753b\u50cf\u306e\u30a8\u30f3\u30b3\u30fc\u30c0 TIFFDecoder TIFF \u5f62\u5f0f\u753b\u50cf\u306e\u30c7\u30b3\u30fc\u30c0 WebPDecoder WebP \u5f62\u5f0f\u753b\u50cf\u306e\u30c7\u30b3\u30fc\u30c0 WebPEncoder WebP \u5f62\u5f0f\u753b\u50cf\u306e\u30a8\u30f3\u30b3\u30fc\u30c0 WebPMethod WebP \u5f62\u5f0f\u753b\u50cf\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u624b\u6cd5\u3092\u8868\u3059\u5217\u6319\u578b"},{"location":"api/classes/#\u97f3\u58f0\u30b3\u30fc\u30c7\u30c3\u30af","title":"\u97f3\u58f0\u30b3\u30fc\u30c7\u30c3\u30af","text":"\u578b\u540d \u8aac\u660e AACDecoder AAC \u5f62\u5f0f\u97f3\u58f0\u30c7\u30fc\u30bf\u306e\u30c7\u30b3\u30fc\u30c0 AIFFDecoder AIFF \u5f62\u5f0f\u97f3\u58f0\u30c7\u30fc\u30bf\u306e\u30c7\u30b3\u30fc\u30c0 FLACDecoder FLAC \u5f62\u5f0f\u97f3\u58f0\u30c7\u30fc\u30bf\u306e\u30c7\u30b3\u30fc\u30c0 MIDIDecoder MIDI \u5f62\u5f0f\u97f3\u58f0\u30c7\u30fc\u30bf\u306e\u30c7\u30b3\u30fc\u30c0 MP3Decoder MP3 \u5f62\u5f0f\u97f3\u58f0\u30c7\u30fc\u30bf\u306e\u30c7\u30b3\u30fc\u30c0 OggVorbisDecoder OggVorbis \u5f62\u5f0f\u97f3\u58f0\u30c7\u30fc\u30bf\u306e\u30c7\u30b3\u30fc\u30c0 OggVorbisEncoder OggVorbis \u5f62\u5f0f\u97f3\u58f0\u30c7\u30fc\u30bf\u306e\u30a8\u30f3\u30b3\u30fc\u30c0 OpusDecoder Opus \u5f62\u5f0f\u97f3\u58f0\u30c7\u30fc\u30bf\u306e\u30c7\u30b3\u30fc\u30c0 WAVEDecoder WAVE \u5f62\u5f0f\u97f3\u58f0\u30c7\u30fc\u30bf\u306e\u30c7\u30b3\u30fc\u30c0 WAVEEncoder WAVE \u5f62\u5f0f\u97f3\u58f0\u30c7\u30fc\u30bf\u306e\u30a8\u30f3\u30b3\u30fc\u30c0 WAVEFormat WAVE \u306e\u4fdd\u5b58\u5f62\u5f0f\u3092\u8868\u3059\u5217\u6319\u578b WMADecoder WMA \u5f62\u5f0f\u97f3\u58f0\u30c7\u30fc\u30bf\u306e\u30c7\u30b3\u30fc\u30c0"},{"location":"community/community/","title":"Community","text":""},{"location":"community/community/#1-discord","title":"1. Discord","text":"<p>There is a Discord server for Siv3D users (posts in English are also welcome). Specific channels (chat rooms) are available for discussing Siv3D, asking questions, and showcasing your work. There is also a channel for those interested in the development of Siv3D itself, where updates on development progress are shared promptly and collaborative development of new features is undertaken.</p> <p> Join the Siv3D Discord Server</p>"},{"location":"community/community/#2-twitter","title":"2. Twitter","text":"<p>The author of Siv3D checks tweets with the hashtags <code>#Siv3D</code> and <code>#OpenSiv3D</code>. Due to Twitter's system, your tweets may not appear in search results, so if you need a guaranteed response, please reply to @Reputeless. When doing so, to expedite resolution, attach screenshots of the issue or error message, compiler output, etc., and share the section of source code where the issue has occurred using GitHub Gist.</p> <ul> <li>Search tweets related to Siv3D </li> </ul>"},{"location":"community/community/#3-github","title":"3. GitHub","text":"<p>Please post bug reports, new feature requests, and documentation requests to the OpenSiv3D GitHub repository's Issues. You can use any format you want, but if your report lacks information, it may be rejected.</p> <ul> <li>OpenSiv3D Issues </li> </ul>"},{"location":"community/history/","title":"Past Events","text":""},{"location":"community/history/#siv3d-\u52c9\u5f37\u4f1a","title":"Siv3D \u52c9\u5f37\u4f1a","text":"\u5834\u6240 \u958b\u50ac\u65e5 \u4e3b\u50ac \u4f1a\u5834 \u30aa\u30f3\u30e9\u30a4\u30f3 2023-09-09 OECU \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b5\u30fc\u30af\u30eb \u30aa\u30f3\u30e9\u30a4\u30f3 \u4ed9\u53f0 2023-09-04 \u4ed9\u53f0\u9ad8\u5c02\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u90e8 \u4ed9\u53f0\u9ad8\u7b49\u5c02\u9580\u5b66\u6821\u5e83\u702c\u30ad\u30e3\u30f3\u30d1\u30b9 \u6771\u4eac 2023-09-01\uff5e02 \u65e9\u7a32\u7530\u4e2d\u5b66\u6821\u30fb\u9ad8\u7b49\u5b66\u6821 PC \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u90e8 \u65e9\u7a32\u7530\u4e2d\u5b66\u6821 \u5927\u962a 2023-08-24 \u7058\u4e2d\u5b66\u6821\u30fb\u9ad8\u7b49\u5b66\u6821\u30d1\u30bd\u30b3\u30f3\u7814\u7a76\u90e8 (NPCA) \uff08\u975e\u516c\u958b\uff09 \u30aa\u30f3\u30e9\u30a4\u30f3 2023-03-01 / 2022-03-08 \u6771\u4eac\u90fd\u5e02\u5927\u5b66 \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u6280\u8853\u7814\u7a76\u4f1a (CTRL) \u30aa\u30f3\u30e9\u30a4\u30f3 \u4f1a\u6d25 2023-02-22 / 2023-02-23 PandD \u4f1a\u6d25\u5927\u5b66 \u4ed9\u53f0 2022-09-12 \u4ed9\u53f0\u9ad8\u5c02\u5b66\u751f\u6709\u5fd7 \u4ed9\u53f0\u9ad8\u7b49\u5c02\u9580\u5b66\u6821\u5e83\u702c\u30ad\u30e3\u30f3\u30d1\u30b9 \u30aa\u30f3\u30e9\u30a4\u30f3 2022-09-09 \u5927\u962a\u96fb\u6c17\u901a\u4fe1\u5927\u5b66\u5b66\u751f\u6709\u5fd7 \u30aa\u30f3\u30e9\u30a4\u30f3 \u5343\u8449 2022-08-29 \u5c02\u9580\u5b66\u6821\u56fd\u969b\u7406\u5de5\u30ab\u30ec\u30c3\u30b8\u5b66\u751f\u6709\u5fd7 \u5c02\u9580\u5b66\u6821\u56fd\u969b\u7406\u5de5\u30ab\u30ec\u30c3\u30b8 \u6771\u4eac 2022-08-27 \u99d2\u5834\u6771\u90a6 \u7269\u7406\u90e8 \u99d2\u5834\u6771\u90a6\u4e2d\u5b66\u6821\u9ad8\u7b49\u5b66\u6821 \u5927\u962a 2022-08-22 \u7058\u4e2d\u5b66\u6821\u30fb\u9ad8\u7b49\u5b66\u6821\u30d1\u30bd\u30b3\u30f3\u7814\u7a76\u90e8 (NPCA) \uff08\u975e\u516c\u958b\uff09 \u8328\u57ce 2022-08-16 \u53e4\u6cb3\u4e2d\u7b49\u6559\u80b2\u5b66\u6821 \u30d1\u30bd\u30b3\u30f3\u90e8 \uff08\u975e\u516c\u958b\uff09 \u30aa\u30f3\u30e9\u30a4\u30f3 2022-03-28 Siv3D \u30aa\u30f3\u30e9\u30a4\u30f3 \u5343\u8449 2020-02-21 \u5343\u8449\u5927\u5b66\u96fb\u5b50\u8a08\u7b97\u6a5f\u7814\u7a76\u4f1a\uff08CCS\uff09 \u5343\u8449\u5e02\u751f\u6daf\u5b66\u7fd2\u30bb\u30f3\u30bf\u30fc \u4ed9\u53f0 2020-01-25 \u4ed9\u53f0\u9ad8\u7b49\u5c02\u9580\u5b66\u6821\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u7814\u7a76\u90e8\u4f1a \u540d\u53d6\u5e02 \u5897\u7530\u516c\u6c11\u9928 \u6c96\u7e04 2019-08-15 \u6c96\u7e04\u9ad8\u5c02 \u6709\u5fd7 \u6c96\u7e04\u9ad8\u5c02 \u9759\u5ca1 2019-03-03 CoderDojo \u9759\u5ca1 \u9759\u5ca1\u5e02\u756a\u753a\u5e02\u6c11\u6d3b\u52d5\u30bb\u30f3\u30bf\u30fc \u77f3\u5ddd 2018-12-08 Siv3D \u91d1\u6ca2\u5e02 IT \u30d3\u30b8\u30cd\u30b9\u30d7\u30e9\u30b6\u6b66\u8535 \u9577\u91ce 2018-09-30 \u9577\u91ce\u9ad8\u5c02 \u60c5\u5831\u6280\u8853\u7814\u7a76\u90e8 \u9577\u91ce\u9ad8\u5c02 \u7b51\u6ce2 2018-07-07 \u7b51\u6ce2\u5927\u5b66 Amusement Creators \u7b51\u6ce2\u5927\u5b66\u30b5\u30c6\u30e9\u30a4\u30c8\u30aa\u30d5\u30a3\u30b9 \u5e83\u5cf6 2018-05-12 Hiroshima Student Community (HSC) \u30b5\u30c6\u30e9\u30a4\u30c8\u30ad\u30e3\u30f3\u30d1\u30b9\u3072\u308d\u3057\u307e \u77f3\u5ddd 2017-05-01 \u77f3\u5ddd\u9ad8\u5c02 \u96fb\u5b50\u60c5\u5831\u7814\u7a76\u90e8 \u77f3\u5ddd\u9ad8\u5c02 \u6771\u4eac 2014-11-09 Siv3D \u8305\u5834\u753a Co-Edo"},{"location":"community/history/#siv3d-\u5b9f\u88c5\u4f1a\u30aa\u30d5\u30e9\u30a4\u30f3","title":"Siv3D \u5b9f\u88c5\u4f1a\uff08\u30aa\u30d5\u30e9\u30a4\u30f3\uff09","text":"\u56de \u958b\u50ac\u65e5 \u4f1a\u5834 #42 2020-02-16 \u65e9\u7a32\u7530\u5927\u5b66 #41 2020-01-12 \u6771\u4eac\u5de5\u696d\u5927\u5b66 \u5927\u5ca1\u5c71\u30ad\u30e3\u30f3\u30d1\u30b9 Attic Lab #40 2019-12-08 \u65e9\u7a32\u7530\u5927\u5b66 #39 2019-11-24 \u65e9\u7a32\u7530\u5927\u5b66 #38 2019-11-10 \u6771\u4eac\u5de5\u696d\u5927\u5b66 \u5927\u5ca1\u5c71\u30ad\u30e3\u30f3\u30d1\u30b9 Attic Lab #37 2019-10-26 \u65e9\u7a32\u7530\u5927\u5b66 #36 2019-10-20 \u65e9\u7a32\u7530\u5927\u5b66 #35 2019-09-28 \u65e9\u7a32\u7530\u5927\u5b66 #34 2019-09-08 \u5343\u8449\u5de5\u696d\u5927\u5b66 \u6d25\u7530\u6cbc\u30ad\u30e3\u30f3\u30d1\u30b9 #33 2019-08-25 \u65e9\u7a32\u7530\u5927\u5b66 #32 2019-07-06 \u65e9\u7a32\u7530\u5927\u5b66 #31 2019-06-23 \u65e9\u7a32\u7530\u5927\u5b66 #30 2019-05-02 \u65e9\u7a32\u7530\u5927\u5b66 #29 2019-05-01 \u65e9\u7a32\u7530\u5927\u5b66 #28 2019-03-23 \u65e9\u7a32\u7530\u5927\u5b66 #27 2019-02-09 \u65e9\u7a32\u7530\u5927\u5b66 #26 2018-12-22 \u65e9\u7a32\u7530\u5927\u5b66 #25 2018-12-08 \u77f3\u5ddd\u770c \u91d1\u6ca2\u5e02 IT \u30d3\u30b8\u30cd\u30b9\u30d7\u30e9\u30b6\u6b66\u8535 #24 2018-11-10 \u65e9\u7a32\u7530\u5927\u5b66 #23 2018-10-07 \u65e9\u7a32\u7530\u5927\u5b66 #22 2018-09-30 \u9577\u91ce\u9ad8\u5c02 #21 2018-09-16 \u65e9\u7a32\u7530\u5927\u5b66 #20 2018-08-26 \u65e9\u7a32\u7530\u5927\u5b66 #19 2018-07-08 \u65e9\u7a32\u7530\u5927\u5b66 #18 2018-07-07 \u7b51\u6ce2\u5927\u5b66\u30b5\u30c6\u30e9\u30a4\u30c8\u30aa\u30d5\u30a3\u30b9 #17 2018-06-24 \u65e9\u7a32\u7530\u5927\u5b66 #16 2018-05-20 \u65e9\u7a32\u7530\u5927\u5b66 #15 2018-05-12 \u770c\u7acb\u5e83\u5cf6\u5927\u5b66 \u30b5\u30c6\u30e9\u30a4\u30c8\u30ad\u30e3\u30f3\u30d1\u30b9\u3072\u308d\u3057\u307e #14 2018-04-21 \u65e9\u7a32\u7530\u5927\u5b66 #13 2018-03-15 \u65e9\u7a32\u7530\u5927\u5b66 #12 2018-03-13 \u65e9\u7a32\u7530\u5927\u5b66 #11 2018-02-03 \u65e9\u7a32\u7530\u5927\u5b66 #10 2017-08-30 \u65e9\u7a32\u7530\u5927\u5b66 #9 2017-08-16 \u65e9\u7a32\u7530\u5927\u5b66 #8 2017-08-11 \u65e9\u7a32\u7530\u5927\u5b66 #7 2017-08-06 \u65e9\u7a32\u7530\u5927\u5b66 #6 2017-07-22 \u65e9\u7a32\u7530\u5927\u5b66 #5 2017-07-08 \u65e9\u7a32\u7530\u5927\u5b66 #4 2017-06-24 \u65e9\u7a32\u7530\u5927\u5b66 #3 2017-05-21 \u65e9\u7a32\u7530\u5927\u5b66 #2 2017-04-08 \u65e9\u7a32\u7530\u5927\u5b66 #1 2016-12-27 \u65e9\u7a32\u7530\u5927\u5b66"},{"location":"develop/build/","title":"\u81ea\u524d\u30d3\u30eb\u30c9\u306e\u624b\u9806","text":"<p>\u81ea\u524d\u3067 Siv3D \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u30d3\u30eb\u30c9\u3059\u308b\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\u3053\u306e\u30da\u30fc\u30b8\u306f\u6b21\u306e\u3088\u3046\u306a\u7279\u6b8a\u306a\u5229\u7528\u8005\u5411\u3051\u306e\u8aac\u660e\u3067\u3059\u3002</p> <ul> <li>\u958b\u767a\u4e2d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u6700\u65b0\u306e\u30b3\u30fc\u30c9\u3092\u8a66\u3057\u305f\u3044</li> <li>Siv3D \u306e\u5185\u90e8\u3092\u7406\u89e3\u3057\u305f\u3044</li> <li>\u5185\u90e8\u306e\u30b3\u30fc\u30c9\u3092\u6539\u9020\u3057\u305f\u3044</li> </ul>"},{"location":"develop/build/#1-windows-\u306e\u5834\u5408","title":"1. Windows \u306e\u5834\u5408","text":""},{"location":"develop/build/#11-\u8ffd\u52a0\u306e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b","title":"1.1 \u8ffd\u52a0\u306e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b","text":"<p>\u25c6 Siv3D \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u672c\u4f53\u306e\u30d3\u30eb\u30c9\u306b\u5fc5\u8981\u306a C++ \u30e9\u30a4\u30d6\u30e9\u30ea\u300cBoost\u300d\u3092\u6e96\u5099\u3057\u307e\u3059\u3002</p> <p>https://www.boost.org/users/history/version_1_74_0.html  \u304b\u3089 <code>boost_1_74_0</code> \u306e\u5727\u7e2e\u3055\u308c\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u5c55\u958b\u3057\u307e\u3059\u3002\u914d\u5e03\u3055\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u306f <code>.7z</code> \u3068 <code>.zip</code> \u304c\u3042\u308a\u307e\u3059\u3002\u4f7f\u7528\u3057\u3066\u3044\u308b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067 <code>.7z</code> \u306e\u5c55\u958b\u304c\u3067\u304d\u308b\u5834\u5408\u306f <code>.7z</code> \u306e\u307b\u3046\u304c\u5c55\u958b\u306b\u304b\u304b\u308b\u6240\u7528\u6642\u9593\u304c\u77ed\u3044\u3067\u3059\u3002Boost \u306f\u5927\u91cf\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u305f\u3081\u3001Windows OS \u6a19\u6e96\u306e ZIP \u5c55\u958b\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u3068\u5c55\u958b\u306e\u5b8c\u4e86\u307e\u3067\u6570\u5206\u8fd1\u304f\u5f85\u305f\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</p> Boost \u3068\u306f <p>Boost \u306f 20 \u5e74\u4ee5\u4e0a\u306e\u6b74\u53f2\u304c\u3042\u308b\u3001C++ \u3067\u6700\u3082\u6709\u540d\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306e 1 \u3064\u3067\u3059\u3002\u69d8\u3005\u306a\u76ee\u7684\u306e\u305f\u3081\u306b\u4f5c\u3089\u308c\u305f\u5927\u5c0f\u3055\u307e\u3056\u307e\u3001\u4f5c\u8005\u3082\u3055\u307e\u3056\u307e\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u7fa4\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002C++11 \u3067\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u5165\u3063\u305f <code>std::shared_ptr</code>, C++17 \u3067\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u5165\u3063\u305f <code>std::optional</code>, <code>&lt;filesystem&gt;</code> \u306f\u305d\u308c\u305e\u308c Boost.SmartPtr, Boost.Optional, Boost.Fileystem \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d9\u30fc\u30b9\u306b\u8a2d\u8a08\u3055\u308c\u307e\u3057\u305f\u3002Siv3D \u3067\u306f\u3001\u5e7e\u4f55\u554f\u984c\u306e\u8a08\u7b97\u51e6\u7406\u306e\u305f\u3081\u306b Boost.Geometry, C++17 \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u306a\u3044\u74b0\u5883\u306b\u304a\u3051\u308b\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u51e6\u7406\u306e\u305f\u3081\u306b Boost.Filesystem, \u5b50\u30d7\u30ed\u30bb\u30b9\u306e\u4f5c\u6210\u30fb\u901a\u4fe1\u306e\u305f\u3081\u306b Boost.Process, \u591a\u500d\u9577\u8a08\u7b97\u306e\u305f\u3081\u306b Boost.MultiPrecision, CSV \u30d1\u30fc\u30b5\u306e\u305f\u3081\u306b Boost.Tokenizer \u306a\u3069\u3001\u3044\u304f\u3064\u304b\u306e Boost \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002</p> .7z \u306e\u5c55\u958b\u30bd\u30d5\u30c8 <p><code>.7z</code> \u306e\u5c55\u958b\u306b\u4f7f\u3048\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306f 7-Zip  \u304c\u6700\u3082\u6709\u540d\u3067\u3059\u3002</p>"},{"location":"develop/build/#12-siv3d-\u306e\u958b\u767a\u30d6\u30e9\u30f3\u30c1\u304b\u3089\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u5165\u624b\u3059\u308b","title":"1.2 Siv3D \u306e\u958b\u767a\u30d6\u30e9\u30f3\u30c1\u304b\u3089\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u5165\u624b\u3059\u308b","text":"<p>\u25c6 Siv3D \u306e\u6700\u65b0\u30b3\u30fc\u30c9\u3092\u516c\u5f0f\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u5165\u624b\u3057\u307e\u3059\u3002</p> <p>OpenSiv3D \u516c\u5f0f\u30ea\u30dd\u30b8\u30c8\u30ea\u306e main \u30d6\u30e9\u30f3\u30c1  \u304c\u6700\u65b0\u5b89\u5b9a\u7248\u3067\u3059\u3002\u300cCode\u300d\u304b\u3089\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3059\u308b\u304b\u3001ZIP \u30d5\u30a1\u30a4\u30eb\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\uff08\u300cDownload ZIP\u300d\uff09\u3002</p> <p></p>"},{"location":"develop/build/#13-\u8ffd\u52a0\u306e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30b3\u30d4\u30fc\u3057\u3066\u8ffd\u52a0\u3059\u308b","title":"1.3 \u8ffd\u52a0\u306e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30b3\u30d4\u30fc\u3057\u3066\u8ffd\u52a0\u3059\u308b","text":"<p>\u25c6 \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u306b Boost \u306e\u4e00\u90e8\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002</p> <p>1.2 \u3067\u5165\u624b\u3057\u305f OpenSiv3D \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u5185\u306b\u3001<code>Dependencies/boost_1_74_0/</code> \u30d5\u30a9\u30eb\u30c0\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u4e2d\u3078 1.1 \u3067\u6e96\u5099\u3057\u305f Boost \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4e00\u90e8\u3067\u3042\u308b <code>boost_1_74_0/boost/</code> \u30d5\u30a9\u30eb\u30c0 (\u7d04 120 MB) \u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\u30b3\u30d4\u30fc\u5f8c\u306f <code>Dependencies/boost_1_74_0/boost/</code> \u3068\u306a\u308a\u307e\u3059\u3002</p> <p></p>"},{"location":"develop/build/#14-siv3d-\u30e9\u30a4\u30d6\u30e9\u30ea\u3068-siv3d-\u30a2\u30d7\u30ea\u3092\u30d3\u30eb\u30c9\u3059\u308b","title":"1.4 Siv3D \u30e9\u30a4\u30d6\u30e9\u30ea\u3068 Siv3D \u30a2\u30d7\u30ea\u3092\u30d3\u30eb\u30c9\u3059\u308b","text":"<p>\u25c6 Visual Studio \u3067 Siv3D \u30e9\u30a4\u30d6\u30e9\u30ea\u3068 Siv3D \u30a2\u30d7\u30ea\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002</p> <p>1.2 \u3067\u5165\u624b\u3057\u305f OpenSiv3D \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u5185\u306e <code>WindowsDesktop/OpenSiv3D.sln</code> \u3092 Visual Studio \u3067\u958b\u304f\u3068\u3001Siv3D \u30e9\u30a4\u30d6\u30e9\u30ea\u672c\u4f53\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u300cSiv3D\u300d\u3068\u3001\u30c6\u30b9\u30c8\u7528\u306e\u30a2\u30d7\u30ea\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u300cSiv3D-Test\u300d\u3092\u542b\u3080\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u304c\u958b\u304d\u307e\u3059\u3002</p> <p>\u300cSiv3D-Test\u300d\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u521d\u56de\u306e\u30d3\u30eb\u30c9\u3067\u306f\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u305f\u3081\u3001\u5148\u306b\u81ea\u52d5\u7684\u306b Siv3D \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u672c\u4f53\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u300cSiv3D\u300d\u306e\u30d3\u30eb\u30c9\u304c\u59cb\u307e\u308a\u307e\u3059\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d3\u30eb\u30c9\u306b\u306f\u6570\u5206\u304b\u304b\u308a\u307e\u3059\u3002</p> <p>Windows \u7248\u306e Siv3D \u30e9\u30a4\u30d6\u30e9\u30ea\u30d3\u30eb\u30c9\u3067 <code>error C2039: '\u200bCheckForDuplicateEntries': is not a member of 'Microsoft::WRL::Details'</code> \u3068\u3044\u3046\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u5834\u5408\u3001Visual Studio Installer \u3092\u4f7f\u3063\u3066\u65b0\u3057\u3044 Windows 10 SDK (\u30d0\u30fc\u30b8\u30e7\u30f3 10.0.18362.0 \u4ee5\u964d) \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3067\u89e3\u6c7a\u3057\u307e\u3059\u3002</p>"},{"location":"develop/build/#2-macos-\u306e\u5834\u5408","title":"2. macOS \u306e\u5834\u5408","text":""},{"location":"develop/build/#21-\u8ffd\u52a0\u306e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b","title":"2.1 \u8ffd\u52a0\u306e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b","text":"<p>\u25c6 Siv3D \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u672c\u4f53\u306e\u30d3\u30eb\u30c9\u306b\u5fc5\u8981\u306a C++ \u30e9\u30a4\u30d6\u30e9\u30ea\u300cBoost\u300d\u3092\u6e96\u5099\u3057\u307e\u3059\u3002</p> <p>https://www.boost.org/users/history/version_1_74_0.html  \u304b\u3089 <code>boost_1_74_0</code> \u306e\u5727\u7e2e\u3055\u308c\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u5c55\u958b\u3057\u307e\u3059\u3002</p> Boost \u3068\u306f <p>Boost \u306f 20 \u5e74\u4ee5\u4e0a\u306e\u6b74\u53f2\u304c\u3042\u308b\u3001C++ \u3067\u6700\u3082\u6709\u540d\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306e 1 \u3064\u3067\u3059\u3002\u69d8\u3005\u306a\u76ee\u7684\u306e\u305f\u3081\u306b\u4f5c\u3089\u308c\u305f\u5927\u5c0f\u3055\u307e\u3056\u307e\u3001\u4f5c\u8005\u3082\u3055\u307e\u3056\u307e\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u7fa4\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002C++11 \u3067\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u5165\u3063\u305f <code>std::shared_ptr</code>, C++17 \u3067\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u5165\u3063\u305f <code>std::optional</code>, <code>&lt;filesystem&gt;</code> \u306f\u305d\u308c\u305e\u308c Boost.SmartPtr, Boost.Optional, Boost.Fileystem \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d9\u30fc\u30b9\u306b\u8a2d\u8a08\u3055\u308c\u307e\u3057\u305f\u3002Siv3D \u3067\u306f\u3001\u5e7e\u4f55\u554f\u984c\u306e\u8a08\u7b97\u51e6\u7406\u306e\u305f\u3081\u306b Boost.Geometry, C++17 \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u306a\u3044\u74b0\u5883\u306b\u304a\u3051\u308b\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u51e6\u7406\u306e\u305f\u3081\u306b Boost.Filesystem, \u5b50\u30d7\u30ed\u30bb\u30b9\u306e\u4f5c\u6210\u30fb\u901a\u4fe1\u306e\u305f\u3081\u306b Boost.Process, \u591a\u500d\u9577\u8a08\u7b97\u306e\u305f\u3081\u306b Boost.MultiPrecision, CSV \u30d1\u30fc\u30b5\u306e\u305f\u3081\u306b Boost.Tokenizer \u306a\u3069\u3001\u3044\u304f\u3064\u304b\u306e Boost \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"develop/build/#22-siv3d-\u306e\u958b\u767a\u30d6\u30e9\u30f3\u30c1\u304b\u3089\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u5165\u624b\u3059\u308b","title":"2.2 Siv3D \u306e\u958b\u767a\u30d6\u30e9\u30f3\u30c1\u304b\u3089\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u5165\u624b\u3059\u308b","text":"<p>\u25c6 Siv3D \u306e\u6700\u65b0\u30b3\u30fc\u30c9\u3092\u516c\u5f0f\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u5165\u624b\u3057\u307e\u3059\u3002</p> <p>OpenSiv3D \u516c\u5f0f\u30ea\u30dd\u30b8\u30c8\u30ea\u306e main \u30d6\u30e9\u30f3\u30c1  \u304c\u6700\u65b0\u5b89\u5b9a\u7248\u3067\u3059\u3002\u300cCode\u300d\u304b\u3089\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3059\u308b\u304b\u3001ZIP \u30d5\u30a1\u30a4\u30eb\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\uff08\u300cDownload ZIP\u300d\uff09\u3002</p> <p></p>"},{"location":"develop/build/#23-\u8ffd\u52a0\u306e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30b3\u30d4\u30fc\u3057\u3066\u8ffd\u52a0\u3059\u308b","title":"2.3 \u8ffd\u52a0\u306e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30b3\u30d4\u30fc\u3057\u3066\u8ffd\u52a0\u3059\u308b","text":"<p>\u25c6 \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u306b Boost \u306e\u4e00\u90e8\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002</p> <p>2.2 \u3067\u5165\u624b\u3057\u305f OpenSiv3D \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u5185\u306b\u3001<code>Dependencies/boost_1_74_0/</code> \u30d5\u30a9\u30eb\u30c0\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u4e2d\u3078 2.1 \u3067\u6e96\u5099\u3057\u305f Boost \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4e00\u90e8\u3067\u3042\u308b <code>boost_1_74_0/boost/</code> \u30d5\u30a9\u30eb\u30c0 (\u7d04 120 MB) \u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\u30b3\u30d4\u30fc\u5f8c\u306f <code>Dependencies/boost_1_74_0/boost/</code> \u3068\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"develop/build/#24-siv3d-\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d3\u30eb\u30c9\u3059\u308b","title":"2.4 Siv3D \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d3\u30eb\u30c9\u3059\u308b","text":"<p>\u25c6 Xcode \u3067 Siv3D \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002</p> <p>2.2 \u3067\u5165\u624b\u3057\u305f OpenSiv3D \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u5185\u306e <code>macOS/OpenSiv3D.xcodeproj</code> \u3092 Xcode \u3067\u958b\u304d\u3001\u300cSiv3D\u300d\u3068\u3044\u3046 Target \u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u30d5\u30eb\u30d3\u30eb\u30c9\u306b\u306f\u6570\u5206\u524d\u5f8c\u304b\u304b\u308a\u307e\u3059\u3002\u30d3\u30eb\u30c9\u304c\u5b8c\u4e86\u3059\u308b\u3068 <code>libSiv3D.a</code> \u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"develop/build/#25-siv3d-\u30a2\u30d7\u30ea\u3092\u30d3\u30eb\u30c9\u3059\u308b","title":"2.5 Siv3D \u30a2\u30d7\u30ea\u3092\u30d3\u30eb\u30c9\u3059\u308b","text":"<p>\u25c6 Xcode \u3067 Siv3D \u306e\u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002</p> <p>\u6b21\u306b\u300cSiv3D-Test\u300d\u3068\u3044\u3046 Target \u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f 1 \u3064\u3060\u3051\u3067\u3001<code>macOS/Main.cpp</code> \u3067\u3059\u3002\u30d3\u30eb\u30c9\u306b\u306f\u6570\u79d2\u304b\u304b\u308a\u307e\u3059\u3002\u30d3\u30eb\u30c9\u304c\u5b8c\u4e86\u3059\u308b\u3068 <code>Siv3D-Test.app</code> \u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"develop/build/#3-linux-\u306e\u5834\u5408","title":"3. Linux \u306e\u5834\u5408","text":"<p>\u901a\u5e38\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\u304c\u3001\u81ea\u524d\u30d3\u30eb\u30c9\u306e\u624b\u9806\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"develop/coding-style/","title":"\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb","text":"<p>Siv3D \u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002</p>"},{"location":"develop/coding-style/#\u5909\u6570","title":"\u5909\u6570","text":"<ul> <li>\u5909\u6570\u306f camelCase</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nint32 count = 0;\nconst Texture texture{ U\"example/windmill.png\" };\nwhile (System::Update())\n{\n}\n}\n</code></pre> <ul> <li>constexpr \u5b9a\u6570\u306f PascalCase</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconstexpr Size SceneSize{ 640, 480 };\nconstexpr ColorF BackgroundColor{ 0.8, 0.9, 1.0 };\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"develop/coding-style/#\u95a2\u6570","title":"\u95a2\u6570","text":"<ul> <li>\u95a2\u6570\u540d\u306f PascalCase</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\n[[nodiscard]]\nconstexpr int32 Add(const int32 a, const int32 b) noexcept\n{\nreturn (a + b);\n}\nvoid Main()\n{\nPrint &lt;&lt; Add(10, 20);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"develop/coding-style/#\u30af\u30e9\u30b9","title":"\u30af\u30e9\u30b9","text":"<ul> <li>\u30af\u30e9\u30b9\u540d\u306f PascalCase</li> <li><code>public</code>  \u30e1\u30f3\u30d0\u306e\u307f\u3092\u6301\u3064\u5834\u5408\u306f <code>struct</code>, \u305d\u308c\u4ee5\u5916\u306f <code>class</code> \u3092\u4f7f\u3046</li> <li><code>class</code> \u306e\u5834\u5408\u3001\u5fc5\u8981\u3067\u306a\u3044\u9650\u308a <code>public:</code> \u2192 <code>protected:</code> \u2192 <code>private:</code> \u306e\u9806\u306b\u8a18\u8ff0\u3059\u308b</li> <li>\u975e\u9759\u7684 <code>privete</code> \u30e1\u30f3\u30d0\u5909\u6570\u306f <code>m_</code> \u304b\u3089\u59cb\u3081\u3066 camelCase \u3067\u7d9a\u3051\u308b</li> <li>\u975e\u9759\u7684\u30e1\u30f3\u30d0\u95a2\u6570\u306f camelCase </li> <li>\u9759\u7684\u30e1\u30f3\u30d0\u95a2\u6570\u306f PascalCase</li> <li>\u9759\u7684\u30e1\u30f3\u30d0\u5b9a\u6570\u306f PascalCase </li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nclass Button\n{\npublic:\nButton() = default;\nButton(const String&amp; label, const Vec2&amp; pos, const Font&amp; font, double fontSize = 20.0)\n: m_label{ label }\n, m_pos{ pos }\n, m_font{ font }\n, m_fontSize{ fontSize }\n, m_width{ m_font(label).region(fontSize).w + Padding * 2 } {}\n[[nodiscard]]\nRectF getRect() const noexcept\n{\nif (isEmpty())\n{\nreturn Rect::Empty();\n}\nreturn{ m_pos, m_width, ButtonHeight };\n}\n[[nodiscard]]\nbool pushed() const noexcept\n{\nif (isEmpty())\n{\nreturn false;\n}\nreturn getRect().leftClicked();\n}\nvoid draw() const\n{\nif (isEmpty())\n{\nreturn;\n}\nconst RectF rect = getRect();\nconst bool mouseOver = rect.mouseOver();\nrect.rounded(ButtonRadius).draw(mouseOver ? ButtonMouseOverColor : ButtonColor);\nm_font(m_label).drawAt(m_fontSize, rect.center(), ButtonLabelColor);\nif (mouseOver)\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n}\n[[nodiscard]]\nbool isEmpty() const noexcept\n{\nreturn (m_width == EmptyWidth);\n}\nprivate:\nString m_label;\nVec2 m_pos{ 0, 0 };\nFont m_font;\ndouble m_fontSize = 0.0;\ndouble m_width = EmptyWidth;\nstatic constexpr double EmptyWidth = 0.0;\nstatic constexpr double Padding = 20.0;\nstatic constexpr double ButtonRadius = 4.0;\nstatic constexpr int32 ButtonHeight = 40;\nstatic constexpr ColorF ButtonColor{ 0.8, 0.9, 1.0 };\nstatic constexpr ColorF ButtonMouseOverColor{ 0.9, 0.95, 1.0 };\nstatic constexpr ColorF ButtonLabelColor{ 0.11 };\n};\nvoid Main()\n{\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nconst Button button{ U\"OK\", Vec2{ 100, 100 }, font };\nwhile (System::Update())\n{\nif (button.pushed())\n{\nPrint &lt;&lt; U\"OK\";\n}\nbutton.draw();\n}\n}\n</code></pre>"},{"location":"develop/coding-style/#\u5217\u6319\u578b","title":"\u5217\u6319\u578b","text":"<ul> <li>\u5217\u6319\u578b\u540d\u306f PascalCase</li> <li>\u5217\u6319\u5b50\u306f PascalCase</li> <li><code>enum</code> \u3088\u308a <code>enum class</code> \u3092\u4f7f\u3046</li> </ul>"},{"location":"develop/coding-style/#\u30a4\u30f3\u30c7\u30f3\u30c8","title":"\u30a4\u30f3\u30c7\u30f3\u30c8","text":"<ul> <li>\u30bf\u30d6\u7a7a\u767d\u3092\u7528\u3044\u308b</li> </ul>"},{"location":"develop/coding-style/#\u5b57\u4e0b\u3052\u30b9\u30bf\u30a4\u30eb","title":"\u5b57\u4e0b\u3052\u30b9\u30bf\u30a4\u30eb","text":"<ul> <li>\u30aa\u30fc\u30eb\u30de\u30f3\u30b9\u30bf\u30a4\u30eb\u3092\u7528\u3044\u308b</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nif (MouseL.down())\n{\nPrint &lt;&lt; U\"MouseL.down()\";\n}\n}\n}\n</code></pre>"},{"location":"develop/coding-style/#\u6bd4\u8f03\u6f14\u7b97\u5b50","title":"\u6bd4\u8f03\u6f14\u7b97\u5b50","text":"<ul> <li>\u3068\u304f\u306b\u7406\u7531\u304c\u306a\u3044\u5834\u5408 <code>&gt;</code> \u3068 <code>&gt;=</code> \u306f\u4f7f\u308f\u306a\u3044</li> </ul>"},{"location":"develop/coding-style/#\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u30ea\u30c6\u30e9\u30eb","title":"\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u30ea\u30c6\u30e9\u30eb","text":"<ul> <li>\u3064\u306d\u306b . \u306e\u524d\u5f8c\u306b\u6570\u5b57\u3092\u66f8\u304f</li> </ul> <pre><code>double x = 1.0; // OK\ndouble y = 1.; // NG\ndouble z = .1; // NG\n</code></pre>"},{"location":"develop/coding-style/#\u62ec\u5f27","title":"\u62ec\u5f27","text":"<ul> <li>\u7a4d\u6975\u7684\u306b\u4f7f\u3046</li> </ul>"},{"location":"develop/coding-style/#\u4ee3\u66ff\u30c8\u30fc\u30af\u30f3","title":"\u4ee3\u66ff\u30c8\u30fc\u30af\u30f3","text":"<ul> <li>\u8ad6\u7406\u5426\u5b9a\u6f14\u7b97\u5b50 <code>!</code> \u306f <code>not</code> \u306b\u7f6e\u304d\u63db\u3048\u308b</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Texture texture{ U\"example/windmill.png\" };\nif (not texture)\n{\nreturn;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"develop/coding-style/#\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u6f14\u7b97\u5b50","title":"\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u30fb\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u6f14\u7b97\u5b50","text":"<ul> <li>\u3068\u304f\u306b\u7406\u7531\u304c\u306a\u3044\u5834\u5408\u3001\u524d\u7f6e\u6f14\u7b97\u5b50\u3092\u4f7f\u3046</li> </ul>"},{"location":"develop/coding-style/#\u914d\u5217\u540d","title":"\u914d\u5217\u540d","text":"<ul> <li>\u8907\u6570\u5f62\u306b\u3059\u308b</li> <li>\u8907\u6570\u5f62\u304c\u7121\u3044\u8a9e\u306f <code>~List</code> \u3068\u3059\u308b</li> </ul>"},{"location":"develop/coding-style/#include","title":"include","text":"<ul> <li><code># include &lt;...&gt;</code></li> <li><code># include \"...\"</code></li> </ul>"},{"location":"develop/coding-style/#\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30ac\u30fc\u30c9","title":"\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30ac\u30fc\u30c9","text":"<ul> <li><code># pragma once</code></li> </ul>"},{"location":"develop/coding-style/#\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u540d","title":"\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u540d","text":"<ul> <li>PascalCase</li> <li>\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306f <code>.cpp</code></li> <li>\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306f <code>.hpp</code></li> <li>\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3067\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u8a73\u7d30\u5b9f\u88c5\u306e\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306f <code>.ipp</code></li> </ul>"},{"location":"develop/commit/","title":"Contribution Guide for Siv3D","text":"<p>Thank you for considering contributing to Siv3D! We appreciate your efforts and contributions to improve the project. This guide provides information on how to make your contributions as smooth as possible.</p>"},{"location":"develop/commit/#branching-strategy","title":"Branching Strategy","text":"<p>We have two main branches:</p> <ul> <li><code>v6_develop</code>  for development purposes.</li> <li><code>main</code>  for stable releases.</li> </ul> <p>Please fork from the appropriate branch and make your changes there. Submit your pull requests to the <code>v6_develop</code> branch unless advised otherwise.</p>"},{"location":"develop/commit/#making-a-pull-request","title":"Making a Pull Request","text":"<ol> <li>Fork the repository to your GitHub account.</li> <li>Clone the forked repository to your local machine.</li> <li>Create a new branch for your feature or fix.</li> <li>Make your changes, adhering to our coding standards and guidelines.</li> <li>Commit your changes, following our commit guidelines.</li> <li>Push your changes to your fork.</li> <li>Open a pull request, providing enough information to help reviewers understand your changes.</li> </ol>"},{"location":"develop/commit/#commit-guidelines","title":"Commit Guidelines","text":"<ul> <li>It's okay to have multiple commits in a single pull request.</li> <li>Please make your commit messages clear and concise.</li> <li>If possible, reference relevant issue numbers in your commit messages.</li> </ul>"},{"location":"develop/commit/#discussion-and-communication","title":"Discussion and Communication","text":"<ul> <li>For major changes or new features, please consult with the maintainers through the Siv3D Discord server or GitHub Issues  before starting work.</li> <li>Feel free to ask for help or clarification at any stage of your contribution process.</li> </ul>"},{"location":"develop/commit/#building-the-library","title":"Building the Library","text":"<p>For details on how to build the Siv3D library on your own, please refer to our Build Instructions.</p>"},{"location":"develop/commit/#pull-request-examples","title":"Pull Request Examples","text":"<ul> <li>https://github.com/Siv3D/OpenSiv3D/pull/796 </li> <li>https://github.com/Siv3D/OpenSiv3D/pull/805 </li> </ul> <p>For minor changes or fixes that do not affect functionality, you can create a pull request directly without creating an issue.</p>"},{"location":"develop/commit/#opensiv3d-implementation-meeting","title":"OpenSiv3D Implementation Meeting","text":"<p>If you are unfamiliar with GitHub operations, we will support you on the Siv3D Discord server or at the OpenSiv3D Implementation Meeting.</p>"},{"location":"develop/report/","title":"\u5831\u544a\u3084\u63d0\u6848","text":"<p>Siv3D \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3084\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4e0d\u5177\u5408\u3001\u6539\u5584\u70b9\u3001\u6a5f\u80fd\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u304a\u6301\u3061\u306e\u65b9\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u304a\u77e5\u3089\u305b\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"develop/report/#1-siv3d-\u306e\u30d0\u30b0\u3084\u4e0d\u5177\u5408\u3092\u5831\u544a\u3059\u308b","title":"1. Siv3D \u306e\u30d0\u30b0\u3084\u4e0d\u5177\u5408\u3092\u5831\u544a\u3059\u308b","text":"<p>OpenSiv3D \u306e GitHub Issues  \u306b\u3001\u4e0d\u5177\u5408\u306e\u8aac\u660e\u3068\u518d\u73fe\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u6295\u7a3f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u8aa4\u5b57\u4fee\u6b63\u306a\u3069\u4e9b\u7d30\u306a\u5909\u66f4\u3067\u3042\u308b\u5834\u5408\u3001\u76f4\u63a5 Pull Request \u3092\u958b\u767a\u30d6\u30e9\u30f3\u30c1 ( <code>v6_develop</code>) \u306b\u5bfe\u3057\u3066\u9001\u3063\u3066\u3082 OK \u3067\u3059\u3002</p>"},{"location":"develop/report/#\u30d0\u30b0\u3084\u4e0d\u5177\u5408\u3092\u5831\u544a\u3059\u308b-issues-\u306e\u4f8b","title":"\u30d0\u30b0\u3084\u4e0d\u5177\u5408\u3092\u5831\u544a\u3059\u308b Issues \u306e\u4f8b","text":"<ul> <li>https://github.com/Siv3D/OpenSiv3D/issues/558 </li> <li>https://github.com/Siv3D/OpenSiv3D/issues/549 </li> </ul>"},{"location":"develop/report/#2-\u6a5f\u80fd\u306e\u6539\u5584\u3084\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b","title":"2. \u6a5f\u80fd\u306e\u6539\u5584\u3084\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b","text":"<p>OpenSiv3D \u306e GitHub Issues  \u306b\u3001\u63d0\u6848\u306e\u8aac\u660e\u3068\u3001\u6539\u5584\u3084\u8ffd\u52a0\u304c\u5fc5\u8981\u306a\u7406\u7531\u3092\u6295\u7a3f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4e9b\u7d30\u306a\u5909\u66f4\u3067\u3042\u308b\u5834\u5408\u3001\u76f4\u63a5 Pull Request \u3092\u958b\u767a\u30d6\u30e9\u30f3\u30c1 ( <code>v6_develop</code>) \u306b\u5bfe\u3057\u3066\u9001\u3063\u3066\u3082 OK \u3067\u3059\u3002</p>"},{"location":"develop/report/#\u6a5f\u80fd\u306e\u6539\u5584\u3084\u30ea\u30af\u30a8\u30b9\u30c8\u306e-issues-\u306e\u4f8b","title":"\u6a5f\u80fd\u306e\u6539\u5584\u3084\u30ea\u30af\u30a8\u30b9\u30c8\u306e Issues \u306e\u4f8b","text":"<ul> <li>https://github.com/Siv3D/OpenSiv3D/issues/486 </li> <li>https://github.com/Siv3D/OpenSiv3D/issues/630 </li> </ul>"},{"location":"develop/report/#3-\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4e0d\u5177\u5408\u5831\u544a\u3084\u30ea\u30af\u30a8\u30b9\u30c8","title":"3. \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4e0d\u5177\u5408\u5831\u544a\u3084\u30ea\u30af\u30a8\u30b9\u30c8","text":"<p>\u672c Web \u30b5\u30a4\u30c8\u306f Siv3D/siv3d.docs  \u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30ea\u30dd\u30b8\u30c8\u30ea\u306e Issues \u3084 Pull Request \u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"develop/report/#4-\u65b0\u6a5f\u80fd\u3092\u958b\u767a\u3059\u308b","title":"4. \u65b0\u6a5f\u80fd\u3092\u958b\u767a\u3059\u308b","text":""},{"location":"develop/report/#41-siv3d-\u5411\u3051\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u958b\u767a\u3059\u308b","title":"4.1 Siv3D \u5411\u3051\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u958b\u767a\u3059\u308b","text":"<ul> <li>Siv3D Discord \u3084 OpenSiv3D \u5b9f\u88c5\u4f1a\u3067\u76f8\u8ac7\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5b9f\u88c5\u65b9\u91dd\u306a\u3069\u6280\u8853\u7684\u306a\u30b5\u30dd\u30fc\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</li> <li>Siv3D \u30e6\u30fc\u30b6\u304c\u4f7f\u3048\u308b\u5f62\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u958b\u767a\u3057\u3001GitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u516c\u958b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5341\u5206\u306a\u30cb\u30fc\u30ba\u304c\u3042\u308a\u3001\u30b3\u30fc\u30c9\u306e\u54c1\u8cea\u304c\u9ad8\u3044\u5834\u5408\u3001Siv3D \u306e\u516c\u5f0f\u6a5f\u80fd\u306b\u7d44\u307f\u8fbc\u3080\u305f\u3081\u306e\u4f5c\u696d\u3092\u958b\u59cb\u3057\u307e\u3059\u3002</li> </ul>"},{"location":"develop/report/#siv3d-\u5411\u3051\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u958b\u767a\u306e-issues-\u306e\u4f8b","title":"Siv3D \u5411\u3051\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u958b\u767a\u306e Issues \u306e\u4f8b","text":"<ul> <li>https://github.com/Siv3D/OpenSiv3D/issues/482 </li> <li>https://github.com/Siv3D/OpenSiv3D/issues/734 </li> </ul>"},{"location":"develop/report/#42-siv3d-\u306e\u30b3\u30fc\u30c9\u3092\u6539\u5584\u3059\u308b","title":"4.2 Siv3D \u306e\u30b3\u30fc\u30c9\u3092\u6539\u5584\u3059\u308b","text":"<ul> <li>Siv3D Discord \u3084 OpenSiv3D \u5b9f\u88c5\u4f1a\u3067\u76f8\u8ac7\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5b9f\u88c5\u65b9\u91dd\u306a\u3069\u6280\u8853\u7684\u306a\u30b5\u30dd\u30fc\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</li> </ul>"},{"location":"develop/report/#43-siv3d-\u306b\u65b0\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b","title":"4.3 Siv3D \u306b\u65b0\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b","text":"<ul> <li>Siv3D Discord \u3084 OpenSiv3D \u5b9f\u88c5\u4f1a\u3067\u76f8\u8ac7\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5b9f\u88c5\u65b9\u91dd\u306a\u3069\u6280\u8853\u7684\u306a\u30b5\u30dd\u30fc\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</li> <li>OpenSiv3D \u30c1\u30e3\u30ec\u30f3\u30b8\u3067\u306f\u3001\u65b0\u6a5f\u80fd\u5b9f\u88c5\u8ab2\u984c\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002</li> </ul>"},{"location":"develop/report/#5-siv3d-\u306b\u30b5\u30f3\u30d7\u30eb\u7528\u30a2\u30bb\u30c3\u30c8\u3092\u63d0\u4f9b\u3059\u308b","title":"5. Siv3D \u306b\u30b5\u30f3\u30d7\u30eb\u7528\u30a2\u30bb\u30c3\u30c8\u3092\u63d0\u4f9b\u3059\u308b","text":"<p>Siv3D \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u304a\u3044\u3066\u3001\u30e6\u30fc\u30b6\u304c\u81ea\u7531\u306b\u5229\u7528\u3067\u304d\u308b\u753b\u50cf\u3084\u97f3\u58f0\u7d20\u6750\u306e\u63d0\u4f9b\u3067 Siv3D \u306b\u8ca2\u732e\u3067\u304d\u307e\u3059\u3002Siv3D Discord \u3084 OpenSiv3D \u5b9f\u88c5\u4f1a\u3067\u76f8\u8ac7\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"develop/report/#\u30b5\u30f3\u30d7\u30eb\u7528\u30a2\u30bb\u30c3\u30c8\u63d0\u4f9b\u306e-issues-\u306e\u4f8b","title":"\u30b5\u30f3\u30d7\u30eb\u7528\u30a2\u30bb\u30c3\u30c8\u63d0\u4f9b\u306e Issues \u306e\u4f8b","text":"<ul> <li>\u30c9\u30c3\u30c8\u7d75: https://github.com/Siv3D/OpenSiv3D/issues/570 </li> <li>3D \u30e2\u30c7\u30eb: https://github.com/Siv3D/OpenSiv3D/issues/621 </li> </ul>"},{"location":"develop/report/#6-\u30b5\u30f3\u30d7\u30eb\u3084\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u958b\u767a\u3059\u308b","title":"6. \u30b5\u30f3\u30d7\u30eb\u3084\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u958b\u767a\u3059\u308b","text":"<ul> <li>Siv3D \u306e\u30b5\u30f3\u30d7\u30eb\u3084\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u57f7\u7b46\u8005\u3092\u52df\u96c6\u3057\u3066\u3044\u307e\u3059\u3002Siv3D Discord \u3084 OpenSiv3D \u5b9f\u88c5\u4f1a\u3067\u76f8\u8ac7\u3057\u3066\u304f\u3060\u3055\u3044\u3002</li> <li>Scrapbox \u3092\u4f7f\u3063\u3066\u72ec\u81ea\u306b\u30b5\u30f3\u30d7\u30eb\u96c6\u3092\u4f5c\u6210\u30fb\u516c\u958b\u3059\u308b\u4e8b\u3082\u3067\u304d\u307e\u3059\u3002</li> </ul>"},{"location":"develop/report/#7-\u958b\u767a\u306b\u53c2\u52a0\u3059\u308b\u7279\u5178","title":"7. \u958b\u767a\u306b\u53c2\u52a0\u3059\u308b\u7279\u5178","text":"<p>Siv3D \u306f\u591a\u304f\u306e\u4eba\u3068\u5171\u306b\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u958b\u767a\u3092\u9032\u3081\u306a\u304c\u3089\u3001\u4fbf\u5229\u3067\u54c1\u8cea\u306e\u9ad8\u3044\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u7dad\u6301\u30fb\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u3066\u3044\u307e\u3059\u3002\u540c\u6642\u306b\u3001\u5341\u4ee3\u4e8c\u5341\u4ee3\u306e\u82e5\u3044\u4e16\u4ee3\u304c\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\uff08OSS\uff09\u6d3b\u52d5\u306b\u53d6\u308a\u7d44\u3080\u3053\u3068\u3092\u5fdc\u63f4\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>Siv3D \u3067\u306f\u3001\u65b0\u6a5f\u80fd\u3084\u30b3\u30fc\u30c9\u306e\u4fee\u6b63\u306b\u8ca2\u732e\u3057\u3066\u304f\u308c\u305f\u958b\u767a\u8005\u304c OSS \u6d3b\u52d5\u306e\u5b9f\u7e3e\u3092\u6b8b\u305b\u308b\u3088\u3046\u3001\u63d0\u6848\u8005\u304b\u3089\u306e Pull Request \u306b\u3088\u3063\u3066\u6a5f\u80fd\u3092\u30de\u30fc\u30b8\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u63d0\u6848\u8005\u306e\u6210\u679c\u304c Siv3D \u306e GitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30b3\u30df\u30c3\u30c8\u5c65\u6b74\u306b\u8a18\u9332\u3055\u308c\u307e\u3059\u3002\u4e0d\u5177\u5408\u306e\u5831\u544a\u3084\u6a5f\u80fd\u306e\u63d0\u6848\u306b\u95a2\u3057\u3066\u3082\u3001GitHub Issues \u306e\u4f7f\u7528\u3092\u63a8\u5968\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>Siv3D \u672c\u4f53\u304a\u3088\u3073\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30b3\u30df\u30c3\u30c8\u3092\u3055\u308c\u305f\u65b9\u3001\u305d\u306e\u4ed6\u9855\u8457\u306a\u8ca2\u732e\u3092\u3055\u308c\u305f\u65b9\u306b\u306f\u3001GitHub \u306e Siv3D Organization \u30e1\u30f3\u30d0\u30fc  \u3078\u306e\u62db\u5f85\u304c\u9001\u3089\u308c\u307e\u3059 (GitHub \u306b\u767b\u9332\u3057\u3066\u3044\u308b\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306b\u5c4a\u304d\u307e\u3059\uff09\u3002\u62db\u5f85\u3092\u53d7\u8afe\u3057\u3001\u4e0a\u8a18\u30da\u30fc\u30b8\u3067\u81ea\u8eab\u306e\u8868\u793a\u8a2d\u5b9a\u3092\u300cPublic\u300d\u306b\u5909\u66f4\u3059\u308b\u3068\u3001GitHub \u306e\u81ea\u8eab\u306e\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u30da\u30fc\u30b8\u306b Siv3D \u306e\u30a2\u30a4\u30b3\u30f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff08\u8a2d\u5b9a\u304c\u300cPrivate\u300d\u306e\u307e\u307e\u3060\u3068\u3001\u81ea\u8eab\u3068\u4ed6\u306e\u30e1\u30f3\u30d0\u30fc\u306b\u3057\u304b\u30a2\u30a4\u30b3\u30f3\u306f\u8868\u793a\u3055\u308c\u307e\u305b\u3093\uff09\u3002</p> <ul> <li>\u30a2\u30a4\u30b3\u30f3\u8868\u793a\u306e\u4f8b: https://github.com/Ebishu-0309 </li> </ul>"},{"location":"download/macos/","title":"Getting Started with Siv3D on macOS","text":""},{"location":"download/macos/#1-system-requirements","title":"1. System Requirements","text":""},{"location":"download/macos/#11-developer-system-requirements","title":"1.1 Developer System Requirements","text":"<p>The necessary development environment for Siv3D programming on macOS is as follows:</p> OS macOS Big Sur / Monterey / Ventura CPU Intel CPU / Apple Silicon (Rosetta mode)* GPU OpenGL 4.1 compatible hardware Output Devices Monitors IDE Xcode 12.5 or newer <ul> <li>Native support for Apple Silicon (M1 / M2) will be added in the currently under development Siv3D v0.8.0.</li> </ul> If you cannot install Xcode <p>If your macOS OS version is not the latest, you may not be able to install Xcode via the App Store. In that case, please download a previous version of Xcode, such as Xcode 13.2, from the Apple Developer site .</p>"},{"location":"download/macos/#12-system-requirements-for-running-siv3d-application","title":"1.2 System Requirements for Running Siv3D Application","text":"<p>The necessary environment to run applications developed with Siv3D v0.6.12 on macOS is as follows.</p> OS macOS Mojave / Catalina / Big Sur / Monterey / Ventura CPU Intel CPU / Apple Silicon (Rosetta mode)* GPU OpenGL 4.1 compatible hardware Output Devices Monitors <ul> <li>Native support for Apple Silicon (M1 / M2) will be added in the currently under development Siv3D v0.8.0.</li> </ul>"},{"location":"download/macos/#2-downloading-the-siv3d-project-template","title":"2. Downloading the Siv3D Project Template","text":"<ol> <li>Download and extract OpenSiv3D v0.6.12 Project Templates for macOS.</li> <li>If you are on macOS Catalina or later, a dialog box for file access permission appears every time you run the program. To avoid this, move the project folder to <code>(Username)/Applications</code> folder (not the root's Applications folder, but the Applications folder in user's home), rather than <code>(Username)/Desktop</code> or <code>(Username)/Downloads</code> folders.</li> </ol> Previous versions <p>The use of past versions is discouraged. If necessary, download them from the following links. Due to updates to the compiler, etc., you may not be able to use past versions in the latest development environment. If you want to build an old Siv3D project, a good way is to port its source code to a project with the latest version.</p> <ul> <li>OpenSiv3D v0.6.11 Project Templates for macOS</li> <li>OpenSiv3D v0.6.10 Project Templates for macOS</li> <li>OpenSiv3D v0.6.9 Project Templates for macOS</li> <li>OpenSiv3D v0.6.8 Project Templates for macOS</li> <li>OpenSiv3D v0.6.7 Project Templates for macOS</li> <li>OpenSiv3D v0.6.6 Project Templates for macOS</li> <li>OpenSiv3D v0.6.5 Project Templates for macOS</li> <li>OpenSiv3D v0.6.4 Project Templates for macOS</li> <li>OpenSiv3D v0.6.3 Project Templates for macOS</li> <li>OpenSiv3D v0.6.2 Project Templates for macOS</li> </ul>"},{"location":"download/macos/#3-building-a-siv3d-app","title":"3. Building a Siv3D App","text":"<ol> <li>Open the project file <code>examples/empty/empty.xcodeproj</code> in Xcode.</li> <li>Open <code>Main.cpp</code> from the project menu</li> <li>Click Run button \u25b6\ufe0f to build and execute the application.</li> <li>To exit a running program, press Esc or close the window.</li> </ol> Enabling Rosetta mode on M1 / M2 Mac <p>If the Rosetta option is not displayed in Xcode, select Show both from Product &gt; Destination &gt; Destination Architectures.</p> Avoiding file access permission dialog when running the sample program <p>If a file access permission dialog appears every time you run on macOS Catalina or later, you can avoid this by moving the entire project folder to the <code>(Username)/Applications</code> folder (not the root's Applications folder, but the Applications folder in the user's home), rather than the <code>(Username)/Desktop</code> or <code>(Username)/Downloads</code> folders.</p> If you want to create another project <p>Please copy the <code>empty</code> folder located within the project template folder at the same level. A project generator for Xcode is planned for future release.</p>"},{"location":"download/ubuntu/","title":"Getting Started with Siv3D on Ubuntu","text":""},{"location":"download/ubuntu/#1-system-requirements","title":"1. System Requirements","text":"<p>The necessary development environment for Siv3D programming on Ubuntu is as follows:</p> OS Ubuntu 20.04 LTS / Ubuntu 22.04 LTS CPU Intel / AMD CPU GPU OpenGL 4.1 compatible hardware Output Devices Monitors Compilers GCC 9.3.0 (+ Boost 1.71.0) / GCC 11.2 (+ Boost 1.74.0) / Clang 14.0.0 (+ Boost 1.74.0)"},{"location":"download/ubuntu/#2-obtaining-the-latest-code-of-siv3d","title":"2. Obtaining the latest code of Siv3D","text":"<p><code>main</code> branch of the OpenSiv3D official repository  is the latest stable version. You can clone the repository from \"Code\" or download the source code as a ZIP file (\"Download ZIP\").</p> <p></p>"},{"location":"download/ubuntu/#3-building-siv3d","title":"3. BUilding Siv3D","text":"<ol> <li>Install necessary tools and dependency packages. https://github.com/Siv3D/OpenSiv3D/blob/main/.github/workflows/ubuntu.yml#L22-L23</li> <li>Build the Siv3D library and create <code>libSiv3D.a</code>. https://github.com/Siv3D/OpenSiv3D/blob/main/.github/workflows/ubuntu.yml#L25-L34</li> <li>Install Siv3D. https://github.com/Siv3D/OpenSiv3D/blob/main/.github/workflows/ubuntu.yml#L36-L39</li> <li>Build a Siv3D application. https://github.com/Siv3D/OpenSiv3D/blob/main/.github/workflows/ubuntu.yml#L41-L50</li> </ol>"},{"location":"download/ubuntu/#4-sample-program","title":"4. Sample Program","text":"<p>The default code of Main.cpp for the Linux version is a simple program that outputs to the standard output and then terminates immediately. Please overwrite it with the following sample code by changing the comment-out range, etc. The running program will terminate when you press Esc or close the window.</p> sample code <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u80cc\u666f\u306e\u8272\u3092\u8a2d\u5b9a\u3059\u308b | Set the background color\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b | Create a texture from an image file\nconst Texture texture{ U\"example/windmill.png\" };\n// \u7d75\u6587\u5b57\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b | Create a texture from an emoji\nconst Texture emoji{ U\"\ud83e\udd96\"_emoji };\n// \u592a\u6587\u5b57\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b | Create a bold font with MSDF method\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u30c6\u30ad\u30b9\u30c8\u306b\u542b\u307e\u308c\u308b\u7d75\u6587\u5b57\u306e\u305f\u3081\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u3001font \u306b\u8ffd\u52a0\u3059\u308b | Create a font for emojis in text and add it to font as a fallback\nconst Font emojiFont{ 48, Typeface::ColorEmoji };\nfont.addFallback(emojiFont);\n// \u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u56de\u6570 | Number of button presses\nint32 count = 0;\n// \u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u306e\u72b6\u614b | Checkbox state\nbool checked = false;\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u79fb\u52d5\u30b9\u30d4\u30fc\u30c9 | Player's movement speed\ndouble speed = 200.0;\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u306e X \u5ea7\u6a19 | Player's X position\ndouble playerPosX = 400;\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u53f3\u3092\u5411\u3044\u3066\u3044\u308b\u304b | Whether player is facing right\nbool isPlayerFacingRight = true;\nwhile (System::Update())\n{\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304f | Draw the texture\ntexture.draw(20, 20);\n// \u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f | Draw text\nfont(U\"Hello, Siv3D!\ud83c\udfae\").draw(64, Vec2{ 20, 340 }, ColorF{ 0.2, 0.4, 0.8 });\n// \u6307\u5b9a\u3057\u305f\u7bc4\u56f2\u5185\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f | Draw text within a specified area\nfont(U\"Siv3D (\u30b7\u30d6\u30b9\u30ea\u30fc\u30c7\u30a3\u30fc) \u306f\u3001\u30b2\u30fc\u30e0\u3084\u30a2\u30d7\u30ea\u3092\u697d\u3057\u304f\u7c21\u5358\u306a C++ \u30b3\u30fc\u30c9\u3067\u958b\u767a\u3067\u304d\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\")\n.draw(18, Rect{ 20, 430, 480, 200 }, Palette::Black);\n// \u9577\u65b9\u5f62\u3092\u63cf\u304f | Draw a rectangle\nRect{ 540, 20, 80, 80 }.draw();\n// \u89d2\u4e38\u9577\u65b9\u5f62\u3092\u63cf\u304f | Draw a rounded rectangle\nRoundRect{ 680, 20, 80, 200, 20 }.draw(ColorF{ 0.0, 0.4, 0.6 });\n// \u5186\u3092\u63cf\u304f | Draw a circle\nCircle{ 580, 180, 40 }.draw(Palette::Seagreen);\n// \u77e2\u5370\u3092\u63cf\u304f | Draw an arrow\nLine{ 540, 330, 760, 260 }.drawArrow(8, SizeF{ 20, 20 }, ColorF{ 0.4 });\n// \u534a\u900f\u660e\u306e\u5186\u3092\u63cf\u304f | Draw a semi-transparent circle\nCircle{ Cursor::Pos(), 40 }.draw(ColorF{ 1.0, 0.0, 0.0, 0.5 });\n// \u30dc\u30bf\u30f3 | Button\nif (SimpleGUI::Button(U\"count: {}\"_fmt(count), Vec2{ 520, 370 }, 120, (checked == false)))\n{\n// \u30ab\u30a6\u30f3\u30c8\u3092\u5897\u3084\u3059 | Increase the count\n++count;\n}\n// \u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9 | Checkbox\nSimpleGUI::CheckBox(checked, U\"Lock \\U000F033E\", Vec2{ 660, 370 }, 120);\n// \u30b9\u30e9\u30a4\u30c0\u30fc | Slider\nSimpleGUI::Slider(U\"speed: {:.1f}\"_fmt(speed), speed, 100, 400, Vec2{ 520, 420 }, 140, 120);\n// \u5de6\u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089 | If left key is pressed\nif (KeyLeft.pressed())\n{\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u5de6\u306b\u79fb\u52d5\u3059\u308b | Player moves left\nplayerPosX = Max((playerPosX - speed * Scene::DeltaTime()), 60.0);\nisPlayerFacingRight = false;\n}\n// \u53f3\u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089 | If right key is pressed\nif (KeyRight.pressed())\n{\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u53f3\u306b\u79fb\u52d5\u3059\u308b | Player moves right\nplayerPosX = Min((playerPosX + speed * Scene::DeltaTime()), 740.0);\nisPlayerFacingRight = true;\n}\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u63cf\u304f | Draw the player\nemoji.scaled(0.75).mirrored(isPlayerFacingRight).drawAt(playerPosX, 540);\n}\n}\n</code></pre>"},{"location":"download/web/","title":"Getting Started with Siv3D for Web","text":"<p>An unofficial version of Siv3D that can generate programs that run in a web browser is available. There are several limitations and points to note for the web version, so it is intended for intermediate and advanced users who are familiar with using Siv3D. If you have any trouble using it, please ask questions in the <code>#web</code> channel on the Siv3D Discord server.</p>"},{"location":"download/web/#usage-guide","title":"Usage Guide","text":"<ul> <li>Please refer to OpenSiv3D for Web .</li> <li>In the initial build, an error message may appear, but if you build it again, it will build successfully.</li> <li>In the web version build, all files of <code>engine/</code> and <code>example/</code> are included in the final output by default, making the final output file size several tens of MB even in the Release build. When you publish such an application on the web, it takes time for the users accessing it to download the files. Therefore, when you actually publish the application, you need to delete unnecessary files (see: Tutorial 60. Publishing the Application for reference).</li> <li>By removing libraries that are not used by the program from the \"additional dependency files\" in the Emscripten linker settings (e.g. <code>Siv3DScript</code>, <code>opencv_objdetect</code>, <code>opencv_photo</code>, <code>opencv_imgproc</code>, <code>turbojpeg</code>, <code>gif</code>, <code>webp</code>, <code>opusfile</code>, <code>opus</code>, <code>tiff</code>), the output file size of the web version can be compacted to a minimum of a few MBs. For more details, please consult in the <code>#web</code> channel on the Siv3D Discord server.</li> </ul>"},{"location":"download/windows/","title":"Getting Started with Siv3D on Windows","text":""},{"location":"download/windows/#1-system-requirements","title":"1. System Requirements","text":""},{"location":"download/windows/#11-developer-system-requirements","title":"1.1 Developer System Requirements","text":"<p>The necessary development environment for Siv3D programming on Windows is as follows:</p> OS Windows 10 (64-bit) /  Windows 11 CPU Intel / AMD CPU Output Devices Monitors and speakers IDE Microsoft Visual C++ 2022 17.5(Please install \"Desktop development with C++\" during the installation process) About Visual Studio Editions <p>For Siv3D programming on Windows 10 or Windows 11, it is convenient to use Visual Studio Community 2022. This is a free version of the integrated development environment \"Visual Studio\" that professional software developers worldwide use. Students, individuals, and small-scale developers can use the same features as the paid version of Visual Studio for free.</p> About Visual Studio Installation <p>Download and execute the installer for Visual Studio 2022 Community from the Visual Studio download page .</p> <p>When you run the installer, a screen will appear where you can choose programming languages and development tools. From here, select \"Desktop development with C++\".</p> <p></p> <p>After that, just press the \"Install\" button at the bottom right to start installing the necessary tools for C++ programming.</p>"},{"location":"download/windows/#12-system-requirements-for-running-siv3d-application","title":"1.2 System Requirements for Running Siv3D Application","text":"<p>The necessary environment to run applications developed with Siv3D v0.6.12 on Windows is as follows. You may want to include this in the instructions when distributing your game or app.</p> OS Windows 7 SP1 (64-bit) / Windows 8.1 (64-bit) / Windows 10 (64-bit) /  Windows 11 CPU CPU manufactured by Intel or AMD Video Output Some sort of video output device, such as a monitor Audio Output Some sort of audio output device"},{"location":"download/windows/#2-installing-the-siv3d-sdk","title":"2. Installing the Siv3D SDK","text":"<ol> <li>Download and run OpenSiv3D v0.6.12 Installer for Windows Desktop .</li> <li>If you see a message that says \"Windows Protected Your PC\" when you try to execute it, press More info and then press Run anyway.</li> </ol> <p>Recommended to reboot Windows after installation</p> <p>To ensure that the environment variables set by the installer are reflected correctly in Visual Studio, it is recommended that you reboot Windows after installation.</p> If you still fail <p>If you fail to execute the installer, install the SDK by following the \"Manual SDK Installation\" method on this page.</p> The installer will automatically do the following: <ul> <li>Create a SDK folder (The default location is <code>Documents</code>).</li> <li>Set a user environment variable \"SIV3D_0_6_12\" with the path to the SDK folder.</li> <li>Copy the Visual Studio project template for the Siv3D project (The default locations is <code>Documents/Visual Studio 2022/Templates/ProjectTemplates/</code>).</li> <li>Register the uninstaller.</li> </ul> How to uninstall the installed OpenSiv3D SDK <p>The OpenSiv3D SDK can be uninstalled from the \"Settings\" in Windows, similar to regular applications.</p> <p></p> Previous versions <p>The use of previous versions is not recommended. If necessary, please download them from the links below.  Due to updates to the compiler and others, you may not be able to use past versions in the latest development environment. If you want to build an old Siv3D project, it is best to port its source code to a project with the latest version.</p> <ul> <li>OpenSiv3D v0.6.11 Installer for Windows Desktop</li> <li>OpenSiv3D v0.6.10 Installer for Windows Desktop</li> <li>OpenSiv3D v0.6.9 Installer for Windows Desktop</li> <li>OpenSiv3D v0.6.8 Installer for Windows Desktop</li> <li>OpenSiv3D v0.6.7 Installer for Windows Desktop</li> <li>OpenSiv3D v0.6.6 Installer for Windows Desktop</li> <li>OpenSiv3D v0.6.5 Installer for Windows Desktop</li> <li>OpenSiv3D v0.6.4 Installer for Windows Desktop</li> <li>OpenSiv3D v0.6.3 Installer for Windows Desktop</li> <li>OpenSiv3D v0.6.2 Installer for Windows Desktop</li> </ul>"},{"location":"download/windows/#3-creating-a-siv3d-project","title":"3. Creating a Siv3D project","text":"<ol> <li>Lanuch Visual Studio and open a New Project Dialog by clicking Create a new project.</li> <li>Select OpenSiv3D project and then click Next.</li> <li>Type a name for the project and click OK to create the project.</li> </ol>"},{"location":"download/windows/#4-building-a-siv3d-app","title":"4. Building a Siv3D app","text":"<ol> <li>After creating a project, a sample code (Main.cpp) will appear.</li> <li>On the Build menu, click Build Solution.</li> <li>On the Debug menu, click Start Debugging.</li> <li>The running program can be terminated by pressing the Esc key or by closing the window.</li> </ol> If you get the error 'Cannot find Siv3D.hpp' <p>The cause is that the installation information of the Siv3D SDK set by the installer is not reflected in Visual Studio. Restart Windows and create a new Siv3D project again to resolve this issue.</p>"},{"location":"download/windows/#supplement-manually-installing-the-sdk","title":"(Supplement) Manually Installing the SDK","text":"<p>If the OpenSiv3D installer doesn't run correctly, you can manually install OpenSiv3D instead. The steps are as follows.</p> Steps for manually installing the Siv3D SDK"},{"location":"download/windows/#placing-sdk-files-and-setting-environment-variables","title":"Placing SDK files and setting environment variables","text":"<ol> <li>Download and extract OpenSiv3D_SDK_0.6.12.zip (File size: 90 MB), and place the contents in your documents folder as follows:<ul> <li><code>.../Documents/OpenSiv3D_SDK_0.6.12/addon</code></li> <li><code>.../Documents/OpenSiv3D_SDK_0.6.12/include</code></li> <li><code>.../Documents/OpenSiv3D_SDK_0.6.12/lib</code></li> </ul> </li> <li>Create a new environment variable <code>SIV3D_0_6_12</code> and set the path to the SDK folder (the parent folder of the <code>addon/</code>, <code>include/</code>, and <code>lib/</code> folders)<ul> <li>Example: If you have placed <code>C:/Users/Siv3D/Documents/OpenSiv3D_SDK_0.6.12/include</code>, set <code>C:/Users/Siv3D/Documents/OpenSiv3D_SDK_0.6.12</code> to the environment variable <code>SIV3D_0_6_12</code>.</li> </ul> </li> </ol>"},{"location":"download/windows/#placing-the-opensiv3d-project-template-zip","title":"Placing the OpenSiv3D project template (ZIP)","text":"<ol> <li>Download the Visual Studio project template OpenSiv3D_0.6.12.zip (size: about 63 MB), and without unzipping the file, place the ZIP file in the <code>Visual Studio 2022/Templates/ProjectTemplates/</code> folder created in the documents folder during the Visual Studio 2022 installation.  </li> </ol> <p>After the manual installation steps are complete, reboot your PC to ensure the application of the environment variables. Then, proceed to step 3 on this page.</p>"},{"location":"reference/adapter/","title":"\u81ea\u4f5c\u30af\u30e9\u30b9\u3068 Siv3D \u306e\u9023\u4fc2","text":""},{"location":"reference/adapter/#1-\u6982\u8981","title":"1. \u6982\u8981","text":"<p>\u672c\u8a18\u4e8b\u3067\u306f\u3001\u81ea\u4f5c\u30af\u30e9\u30b9\u3092 Siv3D \u306e\u69d8\u3005\u306a\u6a5f\u80fd\u3068\u9023\u4fc2\u3055\u305b\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\u9023\u4fc2\u306b\u3088\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e1\u30ea\u30c3\u30c8\u304c\u5f97\u3089\u308c\u307e\u3059\u3002</p> <ul> <li><code>Print</code> \u3084 <code>Console</code> \u306a\u3069\u3067\u76f4\u63a5\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308b</li> <li><code>U\"{}\"_fmt()</code> \u3067\u76f4\u63a5\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308b</li> <li>INI \u3084 JSON, CSV \u306a\u3069\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u8aad\u307f\u66f8\u304d\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b</li> <li>\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u66f8\u304d\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b</li> <li><code>HashSet</code> \u3084 <code>HashTable</code> \u306e\u30ad\u30fc\u3068\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b</li> </ul>"},{"location":"reference/adapter/#2-\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5bfe\u5fdc","title":"2. \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5bfe\u5fdc","text":"<p>\u30af\u30e9\u30b9\u3092\u300c\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u300d\u306b\u3059\u308b\u3068\u3001</p> <ul> <li><code>Print</code> \u306b\u3088\u308b\u753b\u9762\u3078\u306e\u30c7\u30d0\u30c3\u30b0\u51fa\u529b</li> <li><code>Console</code> \u306b\u3088\u308b\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b</li> <li><code>Say</code> \u306b\u3088\u308b\u97f3\u58f0\u8aad\u307f\u4e0a\u3052</li> <li><code>Format()</code> \u306b\u3088\u308b <code>String</code> \u3078\u306e\u5909\u63db</li> <li><code>TextWriter</code> \u3078\u306e\u66f8\u304d\u51fa\u3057</li> <li><code>INI</code>, <code>JSON</code>, <code>CSV</code> \u306a\u3069\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u66f8\u304d\u51fa\u3057</li> <li><code>Font::operator()</code></li> </ul> <p>\u306a\u3069\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"reference/adapter/#21-\u65b9\u6cd5","title":"2.1 \u65b9\u6cd5","text":"<p>\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\u5185\u306b\u3001\u6b21\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002</p> <pre><code>friend void Formatter(FormatData&amp; formatData, const \u81ea\u4f5c\u30af\u30e9\u30b9&amp; value)\n{\n}\n</code></pre> <p>\u3053\u306e\u95a2\u6570\u5185\u3067 <code>value</code> \u3092\u6587\u5b57\u5217\u5316\u3057\u3001<code>FormatData</code> \u306e <code>String</code> \u578b\u306e\u30e1\u30f3\u30d0\u5909\u6570 <code>.string</code> \u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002</p> \u4f8b<pre><code>friend void Formatter(FormatData&amp; formatData, const RGB&amp; value)\n{\nformatData.string += U\"({}, {}, {})\"_fmt(value.r, value.g, value.b);\n}\n</code></pre> <p>\u3053\u308c\u3067\u81ea\u4f5c\u30af\u30e9\u30b9\u304c\u300c\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u300d\u306b\u306a\u308a\u307e\u3057\u305f\u3002</p>"},{"location":"reference/adapter/#22-\u30b5\u30f3\u30d7\u30eb","title":"2.2 \u30b5\u30f3\u30d7\u30eb","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nstruct RGB\n{\nfloat r, g, b;\nfriend void Formatter(FormatData&amp; formatData, const RGB&amp; value)\n{\nformatData.string += U\"({}, {}, {})\"_fmt(value.r, value.g, value.b);\n}\n};\nvoid Main()\n{\nconst RGB rgb{ 0.1f, 0.2f, 0.3f };\n// \u753b\u9762\u3078\u306e\u30c7\u30d0\u30c3\u30b0\u51fa\u529b\nPrint &lt;&lt; rgb;\n// \u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\nConsole &lt;&lt; rgb;\n// \u97f3\u58f0\u8aad\u307f\u4e0a\u3052\nSay &lt;&lt; rgb;\n// String \u3078\u306e\u5909\u63db\nconst String s = Format(rgb);\n// TextWriter \u3078\u306e\u66f8\u304d\u8fbc\u307f\n{\nTextWriter writer{ U\"test.txt\" };\nwriter &lt;&lt; rgb;\n}\n// INI, JSON, CSV \u7b49\u5404\u7a2e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u66f8\u304d\u8fbc\u307f\n{\nINI ini;\nini[U\"aaa.color\"] = rgb;\nini.save(U\"test.ini\");\nJSON json;\njson[U\"aaa\"][U\"color\"] = rgb;\njson.save(U\"test.json\");\nCSV csv;\ncsv.writeRow(U\"item\", U\"color\");\ncsv.writeRow(U\"aaa\", rgb);\ncsv.save(U\"test.csv\");\n}\nconst Font font{ 64 };\nwhile (System::Update())\n{\n// Font::operator() \u3067\u306e\u4f7f\u7528\nfont(rgb).draw(100, 100);\n}\n}\n</code></pre>"},{"location":"reference/adapter/#3-_fmt-\u5bfe\u5fdc","title":"3. <code>_fmt</code> \u5bfe\u5fdc","text":"<p>\u30af\u30e9\u30b9\u3092 <code>_fmt</code> \u306b\u5bfe\u5fdc\u3055\u305b\u308b\u3068\u3001\u305d\u306e\u30af\u30e9\u30b9\u3092 <code>U\"{}\"_fmt()</code> \u3067\u6587\u5b57\u5217\u5316\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"reference/adapter/#31-\u65b9\u6cd5","title":"3.1 \u65b9\u6cd5","text":"<p>\u30b0\u30ed\u30fc\u30d0\u30eb\u540d\u524d\u7a7a\u9593\u306b\u6b21\u306e\u3088\u3046\u306a <code>fmt::formatter</code> \u306e\u7279\u6b8a\u5316\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u4f8b\u3068\u3057\u3066\u3001\u5148\u307b\u3069\u306e <code>RGB</code> \u30af\u30e9\u30b9\u3092\u5bfe\u5fdc\u3055\u305b\u307e\u3059\u3002</p> \u4f8b<pre><code>template &lt;&gt;\nstruct SIV3D_HIDDEN fmt::formatter&lt;RGB, s3d::char32&gt;\n{\nstd::u32string tag;\nauto parse(basic_format_parse_context&lt;s3d::char32&gt;&amp; ctx)\n{\nreturn s3d::detail::GetFormatTag(tag, ctx);\n}\ntemplate &lt;class FormatContext&gt;\nauto format(const RGB&amp; value, FormatContext&amp; ctx)\n{\nreturn format_to(ctx.out(), U\"({}, {}, {})\", value.r, value.g, value.b);\n}\n};\n</code></pre> <p><code>{:.2f}</code> \u306e\u3088\u3046\u306a\u7279\u6b8a\u306a\u30bf\u30b0\u306b\u3082\u5bfe\u5fdc\u3055\u305b\u308b\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002</p> \u4f8b<pre><code>template &lt;&gt;\nstruct SIV3D_HIDDEN fmt::formatter&lt;RGB, s3d::char32&gt;\n{\nstd::u32string tag;\nauto parse(basic_format_parse_context&lt;s3d::char32&gt;&amp; ctx)\n{\nreturn s3d::detail::GetFormatTag(tag, ctx);\n}\ntemplate &lt;class FormatContext&gt;\nauto format(const RGB&amp; value, FormatContext&amp; ctx)\n{\nif (tag.empty()) // \u7279\u6b8a\u30bf\u30b0\u304c\u7121\u3044\u5834\u5408\n{\nreturn format_to(ctx.out(), U\"({}, {}, {})\", value.r, value.g, value.b);\n}\nelse // \u7279\u6b8a\u30bf\u30b0\u304c\u3042\u308b\u5834\u5408\n{\nconst std::u32string format\n= (U\"({:\" + tag + U\"}, {:\" + tag + U\"}, {:\" + tag + U\"})\");\nreturn format_to(ctx.out(), format, value.r, value.g, value.b);\n}\n}\n};\n</code></pre>"},{"location":"reference/adapter/#32-\u30b5\u30f3\u30d7\u30eb","title":"3.2 \u30b5\u30f3\u30d7\u30eb","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nstruct RGB\n{\nfloat r, g, b;\n};\ntemplate &lt;&gt;\nstruct SIV3D_HIDDEN fmt::formatter&lt;RGB, s3d::char32&gt;\n{\nstd::u32string tag;\nauto parse(basic_format_parse_context&lt;s3d::char32&gt;&amp; ctx)\n{\nreturn s3d::detail::GetFormatTag(tag, ctx);\n}\ntemplate &lt;class FormatContext&gt;\nauto format(const RGB&amp; value, FormatContext&amp; ctx)\n{\nif (tag.empty()) // \u7279\u6b8a\u30bf\u30b0\u304c\u7121\u3044\u5834\u5408\n{\nreturn format_to(ctx.out(), U\"({}, {}, {})\", value.r, value.g, value.b);\n}\nelse // \u7279\u6b8a\u30bf\u30b0\u304c\u3042\u308b\u5834\u5408\n{\nconst std::u32string format\n= (U\"({:\" + tag + U\"}, {:\" + tag + U\"}, {:\" + tag + U\"})\");\nreturn format_to(ctx.out(), format, value.r, value.g, value.b);\n}\n}\n};\nvoid Main()\n{\nconst RGB rgb{ 0.111f, 0.222f, 0.333f };\nPrint &lt;&lt; U\"color: {}\"_fmt(rgb);\nPrint &lt;&lt; U\"color: {:.1f}\"_fmt(rgb);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/adapter/#4-\u30d1\u30fc\u30b9\u5bfe\u5fdc","title":"4. \u30d1\u30fc\u30b9\u5bfe\u5fdc","text":"<p>\u30af\u30e9\u30b9\u3092\u300c\u30d1\u30fc\u30b9\u53ef\u80fd\u300d\u306b\u3059\u308b\u3068\u3001</p> <ul> <li><code>Parse()</code>, <code>ParseOr()</code>, <code>ParseOpt()</code></li> <li><code>INI</code>, <code>JSON</code>, <code>CSV</code> \u306a\u3069\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306e\u8aad\u307f\u8fbc\u307f</li> </ul> <p>\u306a\u3069\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"reference/adapter/#41-\u65b9\u6cd5","title":"4.1 \u65b9\u6cd5","text":"<p>\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\u5185\u306b\u3001\u6b21\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002</p> <pre><code>template &lt;class CharType&gt;\nfriend std::basic_istream&lt;CharType&gt;&amp; operator &gt;&gt;(std::basic_istream&lt;CharType&gt;&amp; input, \u81ea\u4f5c\u30af\u30e9\u30b9&amp; value)\n{\n}\n</code></pre> <p>\u3053\u306e\u95a2\u6570\u5185\u3067\u3001\u5165\u529b\u30b9\u30c8\u30ea\u30fc\u30e0 <code>input</code> \u304b\u3089\u5024\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u305f\u6587\u5b57\u5217\u3092\u30d1\u30fc\u30b9\u3067\u304d\u308b\u3088\u3046\u306a\u5bfe\u79f0\u7684\u306a\u64cd\u4f5c\u306b\u306a\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002</p> \u4f8b<pre><code>template &lt;class CharType&gt;\nfriend std::basic_istream&lt;CharType&gt;&amp; operator &gt;&gt;(std::basic_istream&lt;CharType&gt;&amp; input, RGB&amp; value)\n{\nCharType unused;\nreturn input &gt;&gt; unused\n&gt;&gt; value.r &gt;&gt; unused\n&gt;&gt; value.g &gt;&gt; unused\n&gt;&gt; value.b &gt;&gt; unused;\n}\n</code></pre> <p>\u3053\u308c\u3067\u81ea\u4f5c\u30af\u30e9\u30b9\u304c\u300c\u30d1\u30fc\u30b9\u53ef\u80fd\u300d\u306b\u306a\u308a\u307e\u3057\u305f\u3002</p>"},{"location":"reference/adapter/#42-\u30b5\u30f3\u30d7\u30eb","title":"4.2 \u30b5\u30f3\u30d7\u30eb","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nstruct RGB\n{\nfloat r, g, b;\nfriend void Formatter(FormatData&amp; formatData, const RGB&amp; value)\n{\nformatData.string += U\"({}, {}, {})\"_fmt(value.r, value.g, value.b);\n}\ntemplate &lt;class CharType&gt;\nfriend std::basic_istream&lt;CharType&gt;&amp; operator &gt;&gt;(std::basic_istream&lt;CharType&gt;&amp; input, RGB&amp; value)\n{\nCharType unused;\nreturn input &gt;&gt; unused\n&gt;&gt; value.r &gt;&gt; unused\n&gt;&gt; value.g &gt;&gt; unused\n&gt;&gt; value.b &gt;&gt; unused;\n}\n};\nvoid Main()\n{\nconst RGB rgb{ 0.1f, 0.2f, 0.3f };\nconst String s = Format(rgb);\nconst RGB rgb2 = Parse&lt;RGB&gt;(s);\nPrint &lt;&lt; rgb2;\n// 2.3 \u3067\u4f5c\u6210\u3057\u305f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3080\n{\nINI ini{ U\"test.ini\" };\nconst RGB x = Parse&lt;RGB&gt;(ini[U\"aaa.color\"]);\nPrint &lt;&lt; U\"INI: \" &lt;&lt; x;\n}\n// 2.3 \u3067\u4f5c\u6210\u3057\u305f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3080\n{\nJSON json = JSON::Load(U\"test.json\");\nconst RGB x = json[U\"aaa\"][U\"color\"].get&lt;RGB&gt;();\nPrint &lt;&lt; U\"JSON: \" &lt;&lt; x;\n}\n// 2.3 \u3067\u4f5c\u6210\u3057\u305f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3080\n{\nCSV csv{ U\"test.csv\" };\nconst RGB x = csv.get&lt;RGB&gt;(1, 1);\nPrint &lt;&lt; U\"CSV: \" &lt;&lt; x;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/adapter/#5-\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u5bfe\u5fdc","title":"5. \u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u5bfe\u5fdc","text":"<p>\u30af\u30e9\u30b9\u3092\u300c\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u53ef\u80fd\u300d\u306b\u3059\u308b\u3068\u3001</p> <ul> <li><code>Serializer</code></li> <li><code>Deserializer</code></li> </ul> <p>\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"reference/adapter/#51-\u65b9\u6cd5","title":"5.1 \u65b9\u6cd5","text":"<p>\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\u5185\u306b\u3001\u6b21\u306e\u3088\u3046\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002</p> <pre><code>template &lt;class Archive&gt;\nvoid SIV3D_SERIALIZE(Archive&amp; archive)\n{\n}\n</code></pre> <p>\u3053\u306e\u95a2\u6570\u5185\u3067\u3001\u5404\u30e1\u30f3\u30d0\u5909\u6570\u3092 <code>archive()</code> \u306b\u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u5404\u30e1\u30f3\u30d0\u5909\u6570\u306f\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> \u4f8b<pre><code>template &lt;class Archive&gt;\nvoid SIV3D_SERIALIZE(Archive&amp; archive)\n{\narchive(r, g, b);\n}\n</code></pre>"},{"location":"reference/adapter/#52-\u30b5\u30f3\u30d7\u30eb","title":"5.2 \u30b5\u30f3\u30d7\u30eb","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nstruct RGB\n{\nfloat r, g, b;\nfriend void Formatter(FormatData&amp; formatData, const RGB&amp; value)\n{\nformatData.string += U\"({}, {}, {})\"_fmt(value.r, value.g, value.b);\n}\ntemplate &lt;class Archive&gt;\nvoid SIV3D_SERIALIZE(Archive&amp; archive)\n{\narchive(r, g, b);\n}\n};\nvoid Main()\n{\n// \u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\n{\nconst RGB rgb{ 0.1f, 0.2f, 0.3f };\nconst Array&lt;RGB&gt; colors = { RGB{ 0.2f, 0.3f, 0.4f }, RGB{ 0.5f, 0.6f, 0.7f } };\nSerializer&lt;BinaryWriter&gt; writer{ U\"test.bin\" };\nwriter(rgb);\nwriter(colors);\n}\n// \u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u305f\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\n{\nRGB rgb;\nArray&lt;RGB&gt; colors;\nDeserializer&lt;BinaryReader&gt; reader{ U\"test.bin\" };\nreader(rgb);\nreader(colors);\nPrint &lt;&lt; rgb;\nPrint &lt;&lt; colors;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/adapter/#6-\u30cf\u30c3\u30b7\u30e5\u5bfe\u5fdc","title":"6. \u30cf\u30c3\u30b7\u30e5\u5bfe\u5fdc","text":"<p>\u30af\u30e9\u30b9\u3092\u30cf\u30c3\u30b7\u30e5\u5bfe\u5fdc\u3055\u305b\u308b\u3068\u3001<code>HashSet</code> \u3084 <code>HashTable</code> \u306e\u30ad\u30fc\u3068\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"reference/adapter/#61-\u65b9\u6cd5","title":"6.1 \u65b9\u6cd5","text":"<p>\u30af\u30e9\u30b9\u306b <code>==</code> \u6f14\u7b97\u5b50\u3068\u3001<code>std::hash&lt;&gt;</code> \u306e\u7279\u6b8a\u5316\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</p> <pre><code>friend bool operator ==(const \u81ea\u4f5c\u30af\u30e9\u30b9&amp; a, const \u81ea\u4f5c\u30af\u30e9\u30b9&amp; b) noexcept\n{\n// a \u3068 b \u304c\u7b49\u3057\u3044\u5834\u5408 true \u3092\u8fd4\u3059\n}\n// \u307e\u305f\u306f\nbool operator ==(const \u81ea\u4f5c\u30af\u30e9\u30b9&amp;) const = default;\n</code></pre> <pre><code>template&lt;&gt;\nstruct std::hash&lt;\u81ea\u4f5c\u30af\u30e9\u30b9&gt;\n{\nsize_t operator()(const \u81ea\u4f5c\u30af\u30e9\u30b9&amp; value) const noexcept\n{\n// \u30cf\u30c3\u30b7\u30e5\u5024\u3092\u8fd4\u3059\n}\n};\n</code></pre> <p>\u30af\u30e9\u30b9\u304c <code>Trivially Copyable</code> \u3067\u3042\u308c\u3070\u3001\u30cf\u30c3\u30b7\u30e5\u5024\u306e\u751f\u6210\u306b\u306f <code>Hash::FNV1a()</code> \u95a2\u6570\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"reference/adapter/#62-\u30b5\u30f3\u30d7\u30eb","title":"6.2 \u30b5\u30f3\u30d7\u30eb","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nstruct Calendar\n{\nint16 month;\nint16 day;\nbool operator ==(const Calendar&amp;) const = default;\n};\ntemplate&lt;&gt;\nstruct std::hash&lt;Calendar&gt;\n{\nsize_t operator()(const Calendar&amp; value) const noexcept\n{\nreturn Hash::FNV1a(value);\n}\n};\nvoid Main()\n{\nHashTable&lt;Calendar, String&gt; table;\ntable[Calendar{ 1, 1 }] = U\"\u5143\u65e6\";\ntable[Calendar{ 5, 5 }] = U\"\u3053\u3069\u3082\u306e\u65e5\";\ntable[Calendar{ 11, 3 }] = U\"\u6587\u5316\u306e\u65e5\";\nconst Calendar calendar{ 5, 5 };\nif (auto it = table.find(calendar); it != table.end())\n{\nPrint &lt;&lt; it-&gt;second;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/async/","title":"\u975e\u540c\u671f\u51e6\u7406","text":""},{"location":"reference/async/#1-\u6982\u8981","title":"1. \u6982\u8981","text":"<p>Siv3D \u306e <code>Main()</code> \u95a2\u6570\u306f\u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u308b\u305f\u3081\u3001\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u5185\u3067\u8a08\u7b97\u306b\u6642\u9593\u306e\u304b\u304b\u308b\u95a2\u6570\u3092\u547c\u3093\u3060\u5834\u5408\u3001\u95a2\u6570\u306e\u7d50\u679c\u304c\u8fd4\u308b\u307e\u3067\u51e6\u7406\u304c\u305d\u3053\u3067\u30b9\u30c8\u30c3\u30d7\u3057\u3001\u753b\u9762\u306e\u66f4\u65b0\u304c\u505c\u6b62\u3057\u305f\u308a\u3001\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u304c\u4f4e\u4e0b\u3057\u305f\u308a\u3057\u307e\u3059\u3002Siv3D \u306e\u975e\u540c\u671f API \u3092\u4f7f\u3046\u3068\u3001\u5b8c\u4e86\u307e\u3067\u306b\u6642\u9593\u306e\u304b\u304b\u308b\u51e6\u7406\u3092\u975e\u540c\u671f\uff08\u57fa\u672c\u7684\u306b\u306f\u5225\u306e\u30b9\u30ec\u30c3\u30c9\uff09\u306b\u5b9f\u884c\u3055\u305b\u3001\u305d\u308c\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067 <code>Main()</code> \u95a2\u6570\u5185\u3067\u5225\u306e\u51e6\u7406\u3092\u9032\u3081\u3066\u304a\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"reference/async/#\u6ce8\u610f\u4e8b\u9805","title":"\u6ce8\u610f\u4e8b\u9805","text":"<ul> <li><code>Main()</code> \u4ee5\u5916\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u306f\u3001Siv3D \u306e\u63cf\u753b\u30b5\u30d6\u30b7\u30b9\u30c6\u30e0\u306b\u95a2\u9023\u3059\u308b API\uff08<code>.draw()</code> \u3084\u30ec\u30f3\u30c0\u30fc\u30b9\u30c6\u30fc\u30c8\u3001\u30b7\u30a7\u30fc\u30c0\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306a\u3069\u306e\u4f5c\u6210\u3084\u64cd\u4f5c\uff09\u3092\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002\u552f\u4e00\u306e\u4f8b\u5916\u3068\u3057\u3066 <code>Print</code> \u306f\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</li> <li><code>Main()</code> \u4ee5\u5916\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u30a2\u30bb\u30c3\u30c8 (<code>Texture</code>, <code>Audio</code>, <code>Font</code>, <code>PixelShader</code> \u306a\u3069\uff09\u3092\u4f5c\u6210\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30a2\u30bb\u30c3\u30c8\u7ba1\u7406\u6a5f\u80fd (<code>TextureAsset</code> \u306a\u3069\uff09\u304c\u63d0\u4f9b\u3059\u308b\u975e\u540c\u671f\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u308c\u4ee5\u5916\u306e\u65b9\u6cd5\u3067\u306f\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002</li> <li>HTTP \u901a\u4fe1\u306b\u3088\u308b\u30d5\u30a1\u30a4\u30eb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3092\u975e\u540c\u671f\u306b\u884c\u3044\u305f\u3044\u5834\u5408\u306f <code>SimpleHTTP::SaveAsync()</code> \u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002</li> <li><code>Array</code>, <code>Stopwatch</code>, <code>Image</code>, <code>Wave</code>, <code>BinaryReader</code>, <code>JSON</code>, <code>TextWriter</code>, <code>NavMesh</code> \u306e\u3088\u3046\u306b\u3001Siv3D \u306e\u30b3\u30a2\u30b7\u30b9\u30c6\u30e0\u3068\u5bc6\u63a5\u306b\u304b\u304b\u308f\u3089\u306a\u3044\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30fc\u30f3\u306e\u6a5f\u80fd\u306e\u5927\u90e8\u5206\u306f\u3069\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u3082\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002\u305f\u3060\u3057\u8907\u6570\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u540c\u3058\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5171\u6709\u3059\u308b\u5834\u5408\u306f\u3001\u30c7\u30fc\u30bf\u7af6\u5408\u304c\u767a\u751f\u3057\u306a\u3044\u3088\u3046\u3001\u9069\u5207\u306a\u540c\u671f\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002</li> </ul>"},{"location":"reference/async/#siv3d-\u30a8\u30f3\u30b8\u30f3\u5185\u306e\u4e26\u884c\u51e6\u7406","title":"Siv3D \u30a8\u30f3\u30b8\u30f3\u5185\u306e\u4e26\u884c\u51e6\u7406","text":"<p>Siv3D \u306e\u30a8\u30f3\u30b8\u30f3\u90e8\u5206\u306f\u8907\u6570\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u5229\u7528\u3059\u308b\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u3066\u3001\u304a\u3082\u306b\u30aa\u30fc\u30c7\u30a3\u30aa\u518d\u751f\u3001Web \u30ab\u30e1\u30e9\u51e6\u7406\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306a\u3069\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u975e\u540c\u671f\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"reference/async/#2-\u975e\u540c\u671f\u3067\u306e\u30a2\u30bb\u30c3\u30c8\u4f5c\u6210","title":"2. \u975e\u540c\u671f\u3067\u306e\u30a2\u30bb\u30c3\u30c8\u4f5c\u6210","text":"<p><code>Texture</code>, <code>Audio</code>, <code>Font</code>, <code>PixelShader</code> \u306a\u3069\u306e\u30a2\u30bb\u30c3\u30c8\u3092\u975e\u540c\u671f\u3067\u4f5c\u6210\u3059\u308b\u5834\u5408\u3001\u6700\u3082\u5b89\u5168\u3067\u52b9\u7387\u7684\u306a\u65b9\u6cd5\u306f\u30a2\u30bb\u30c3\u30c8\u7ba1\u7406\u6a5f\u80fd\u304c\u63d0\u4f9b\u3059\u308b\u975e\u540c\u671f API \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u3053\u308c\u4ee5\u5916\u306e\u65b9\u6cd5\u3067\u306f\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u5404\u30a2\u30bb\u30c3\u30c8\u306e <code>::LoadAsync()</code> \u3092\u4f7f\u3046\u3068\u3001\u305d\u306e\u30a2\u30bb\u30c3\u30c8\u304c\u672a\u30ed\u30fc\u30c9\u3067\u3042\u308b\u5834\u5408\u306b\u3001\u5225\u30b9\u30ec\u30c3\u30c9\u3092\u4f7f\u3063\u305f\u30a2\u30bb\u30c3\u30c8\u306e\u975e\u540c\u671f\u30ed\u30fc\u30c9\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\u30a2\u30bb\u30c3\u30c8\u306e\u975e\u540c\u671f\u30ed\u30fc\u30c9\u304c\u5b8c\u4e86\u3057\u305f\u304b\u306f <code>::IsReady()</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u975e\u540c\u671f\u30ed\u30fc\u30c9\u4e2d\u306b\u305d\u306e\u30a2\u30bb\u30c3\u30c8\u306e\u4f7f\u7528\u307e\u305f\u306f <code>::Wait()</code> \u3092\u3059\u308b\u3068\u3001\u30ed\u30fc\u30c9\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u306e\u5f85\u6a5f\u304c\u767a\u751f\u3057\u307e\u3059\u3002</p> <p>\u540c\u6642\u306b\u975e\u540c\u671f\u30ed\u30fc\u30c9\u3067\u304d\u308b\u30a2\u30bb\u30c3\u30c8\u6570\u306b\u4e0a\u9650\u306f\u8a2d\u3051\u3089\u308c\u3066\u3044\u307e\u305b\u3093\u3002</p> <p>OpenGL \u3067\u306e TextureAsset \u975e\u540c\u671f\u30ed\u30fc\u30c9\u306b\u304a\u3051\u308b\u6ce8\u610f</p> <p>OpenGL \u30d0\u30c3\u30af\u30a8\u30f3\u30c9 (macOS \u3068 Linux \u306e\u30c7\u30d5\u30a9\u30eb\u30c8, \u304a\u3088\u3073 Windows \u3067\u9078\u629e\u3057\u305f\u5834\u5408) \u3067\u306f\u3001<code>TextureAsset</code> \u306e\u975e\u540c\u671f\u30ed\u30fc\u30c9\u304c <code>System::Update()</code> \u306e\u547c\u3073\u51fa\u3057\u4e2d\u306b\u5b8c\u4e86\u3057\u307e\u3059\u3002<code>TextureAsset</code> \u306e\u975e\u540c\u671f\u30ed\u30fc\u30c9\u4e2d\u306f\u5fc5\u305a <code>System::Update()</code> \u3092\u547c\u3093\u3067\u304f\u3060\u3055\u3044\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String preloadText = U\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nFontAsset::Register(U\"MyFont\", FontMethod::MSDF, 64, Typeface::Bold);\nTextureAsset::Register(U\"MyTexture\", U\"example/bay.jpg\");\nAudioAsset::Register(U\"MyAudio\", Audio::Stream, U\"example/test.mp3\");\nAudioAsset::Register(U\"MyMIDI\", U\"example/midi/test.mid\");\n// \u975e\u540c\u671f\u30ed\u30fc\u30c9\u3092\u958b\u59cb\nFontAsset::LoadAsync(U\"MyFont\", preloadText);\nTextureAsset::LoadAsync(U\"MyTexture\");\nAudioAsset::LoadAsync(U\"MyAudio\");\nAudioAsset::LoadAsync(U\"MyMIDI\");\nwhile (System::Update())\n{\nClearPrint();\n// \u30ed\u30fc\u30c9\u304c\u5b8c\u4e86\u3057\u305f\u304b\nPrint &lt;&lt; FontAsset::IsReady(U\"MyFont\");\nPrint &lt;&lt; TextureAsset::IsReady(U\"MyTexture\");\nPrint &lt;&lt; AudioAsset::IsReady(U\"MyAudio\");\nPrint &lt;&lt; AudioAsset::IsReady(U\"MyMIDI\");\n}\n}\n</code></pre>"},{"location":"reference/async/#\u975e\u540c\u671f\u51e6\u7406\u306e-api","title":"\u975e\u540c\u671f\u51e6\u7406\u306e API","text":""},{"location":"reference/async/#\u30af\u30e9\u30b9","title":"\u30af\u30e9\u30b9","text":""},{"location":"reference/async/#asynctask","title":"<code>AsyncTask&lt;Type&gt;</code>","text":"<p>\u3042\u308b\u95a2\u6570\u3092\u975e\u540c\u671f\u5b9f\u884c\u3057\u3001\u305d\u306e\u72b6\u614b\u3084\u7d50\u679c\u3092\u7ba1\u7406\u3059\u308b\u3001\u975e\u540c\u671f\u30bf\u30b9\u30af\u30af\u30e9\u30b9\u3067\u3059\u3002\u901a\u5e38\u306f <code>Async()</code> \u95a2\u6570\u306b\u3088\u3063\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <p><code>AsyncTask</code> \u306b\u306f\u4ee5\u4e0b\u306e\u72b6\u614b\u304c\u3042\u308a\u307e\u3059</p> <ol> <li>\u975e\u540c\u671f\u51e6\u7406\u3092\u6301\u3063\u3066\u3044\u306a\u3044</li> <li>\u975e\u540c\u671f\u51e6\u7406\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u30bf\u30b9\u30af\u304c\u5b9f\u884c\u4e2d\u3067\u3042\u308a\u3001\u7d50\u679c\u306f\u307e\u3060\u8fd4\u305b\u306a\u3044</li> <li>\u975e\u540c\u671f\u51e6\u7406\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3057\u3066\u304a\u308a\u3001\u7d50\u679c\u3092\u3059\u3050\u306b\u8fd4\u305b\u308b</li> </ol> \u975e\u540c\u671f\u51e6\u7406\u3092\u6301\u3063\u3066\u3044\u308b\u304b\u3092\u8fd4\u3057\u307e\u3059\u3002<pre><code>bool AsyncTask&lt;Type&gt;::isValid() const;\n</code></pre> <ul> <li><code>AsyncTask&lt;Type&gt;::get()</code> \u3092\u547c\u3076\u3068\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u6301\u305f\u306a\u3044\u72b6\u614b\u306b\u623b\u308a\u307e\u3059\u3002</li> </ul> <code>\u623b\u308a\u5024</code> \u975e\u540c\u671f\u51e6\u7406\u3092\u6301\u3063\u3066\u3044\u308b\u5834\u5408 <code>true</code>, \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f <code>false</code> \u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3057\u305f\u975e\u540c\u671f\u51e6\u7406\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u7d50\u679c\u3092\u3059\u3050\u306b\u8fd4\u305b\u308b\u72b6\u614b\u3067\u3042\u308b\u304b\u3092\u8fd4\u3057\u307e\u3059\u3002<pre><code>bool AsyncTask&lt;Type&gt;::isReady() const;\n</code></pre> <ul> <li><code>AsyncTask&lt;Type&gt;::get()</code> \u3092\u547c\u3076\u3068\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u6301\u305f\u306a\u3044\u72b6\u614b\u306b\u623b\u308a\u307e\u3059\u3002</li> </ul> <code>\u623b\u308a\u5024</code> \u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3057\u305f\u975e\u540c\u671f\u51e6\u7406\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u7d50\u679c\u3092\u3059\u3050\u306b\u8fd4\u305b\u308b\u72b6\u614b\u3067\u3042\u308b\u5834\u5408 <code>true</code>, \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f <code>false</code> \u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3057\u305f\u975e\u540c\u671f\u51e6\u7406\u306e\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002<pre><code>Type AsyncTask&lt;Type&gt;::get();\n</code></pre> <ul> <li>\u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u5b8c\u4e86\u307e\u3067\u5f85\u6a5f\u3057\u307e\u3059\u3002</li> </ul> <code>\u623b\u308a\u5024</code> \u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3057\u305f\u975e\u540c\u671f\u51e6\u7406\u306e\u7d50\u679c \u975e\u540c\u671f\u51e6\u7406\u306e\u30bf\u30b9\u30af\u5b8c\u4e86\u3092\u5f85\u3061\u307e\u3059\u3002<pre><code>void AsyncTask&lt;Type&gt;::wait() const;\n</code></pre> <ul> <li>\u975e\u540c\u671f\u51e6\u7406\u3092\u6301\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u3053\u306e\u95a2\u6570\u306f\u3059\u3050\u306b\u5236\u5fa1\u3092\u8fd4\u3057\u307e\u3059\u3002</li> </ul>"},{"location":"reference/async/#\u95a2\u6570","title":"\u95a2\u6570","text":"\u975e\u540c\u671f\u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002<pre><code>template &lt;class Fty, class... Args&gt;\nauto Async(Fty&amp;&amp; f, Args&amp;&amp;... args);\n</code></pre> <code>f</code> \u975e\u540c\u671f\u3067\u5b9f\u884c\u3059\u308b\u95a2\u6570 <code>args</code> \u95a2\u6570 <code>f</code> \u306b\u6e21\u3059\u5f15\u6570 <code>\u623b\u308a\u5024</code> \u95a2\u6570 <code>f</code> \u306e\u623b\u308a\u5024\u578b\u306e\u975e\u540c\u671f\u30bf\u30b9\u30af (<code>AsyncTask&lt;Ret&gt;</code>)"},{"location":"reference/async/#3-\u975e\u540c\u671f\u51e6\u7406\u306e\u30b5\u30f3\u30d7\u30eb","title":"3. \u975e\u540c\u671f\u51e6\u7406\u306e\u30b5\u30f3\u30d7\u30eb","text":""},{"location":"reference/async/#31-\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u306b\u542b\u307e\u308c\u308b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u975e\u540c\u671f\u3067\u30ed\u30fc\u30c9\u3057\u3066\u8868\u793a\u3059\u308b","title":"3.1 \u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u306b\u542b\u307e\u308c\u308b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u975e\u540c\u671f\u3067\u30ed\u30fc\u30c9\u3057\u3066\u8868\u793a\u3059\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\n// \u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u304c\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b\u304b\u3092\u8fd4\u3059\u95a2\u6570\uff08\u7c21\u6613\u7684\u306a\u5b9f\u88c5\uff09\nbool IsImageFilePath(const FilePath&amp; path)\n{\nconst String extension = FileSystem::Extension(path);\n// \u62e1\u5f35\u5b50 png, jpg, jpeg \u306e\u30d5\u30a1\u30a4\u30eb\u3092\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3068\u898b\u306a\u3059 \nreturn (extension == U\"png\")\n|| (extension == U\"jpg\")\n|| (extension == U\"jpeg\");\n}\n// \u30d5\u30a9\u30eb\u30c0\u9078\u629e\u30c0\u30a4\u30a2\u30ed\u30b0\u3067\u9078\u629e\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u5185\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u4e00\u89a7\u3092\u8fd4\u3059\u95a2\u6570\nArray&lt;FilePath&gt; GetImageFilePaths()\n{\n// \u30d5\u30a9\u30eb\u30c0\u9078\u629e\u30c0\u30a4\u30a2\u30ed\u30b0\u3067\u30d5\u30a9\u30eb\u30c0\u304c\u9078\u629e\u3055\u308c\u305f\u3089\nif (const auto directory = Dialog::SelectFolder())\n{\n// \u305d\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u542b\u307e\u308c\u308b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u4e00\u89a7\u3092\u8fd4\u3059\nreturn FileSystem::DirectoryContents(*directory, Recursive::No)\n.filter(IsImageFilePath);\n}\nreturn{};\n}\nvoid Main()\n{\nWindow::Resize(1200, 800);\nconst Array&lt;FilePath&gt; imageFilePaths = GetImageFilePaths() // \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u4e00\u89a7\u306e\u3046\u3061\n.take(24); // \u6700\u5927 24 \u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\n// \u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30bb\u30c3\u30c8\u540d\u3092\u8a18\u9332\u3059\u308b\u914d\u5217\nArray&lt;AssetName&gt; assetNames(imageFilePaths.size());\n// \u5404\u30d5\u30a1\u30a4\u30eb\u306b\u3064\u3044\u3066\nfor (size_t i = 0; i &lt; imageFilePaths.size(); ++i)\n{\n// \u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30bb\u30c3\u30c8\u540d\uff08\u4efb\u610f\uff09\nconst AssetName assetName = U\"texture_{}\"_fmt(i);\n// \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\nconst FilePath path = imageFilePaths[i];\n// \u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30bb\u30c3\u30c8\u540d\u3092\u8a18\u9332\u3059\u308b\nassetNames[i] = assetName;\n// \u30a2\u30bb\u30c3\u30c8\u3092\u767b\u9332\u3059\u308b\nTextureAsset::Register(assetName, path, TextureDesc::Mipped);\n// \u975e\u540c\u671f\u3067\u306e\u8aad\u307f\u8fbc\u307f\u3092\u958b\u59cb\u3059\u308b\nTextureAsset::LoadAsync(assetName);\n}\nwhile (System::Update())\n{\n// \u5404\u30a2\u30bb\u30c3\u30c8\u306b\u3064\u3044\u3066\nfor (size_t i = 0; i &lt; imageFilePaths.size(); ++i)\n{\nconst double x = (100.0 + (i % 6) * 200.0);\nconst double y = (100.0 + (i / 6) * 200.0);\nif (TextureAsset::IsReady(assetNames[i])) // \u975e\u540c\u671f\u30ed\u30fc\u30c9\u304c\u5b8c\u4e86\u3057\u3066\u3044\u308c\u3070\n{\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u8868\u793a\u3059\u308b\nTextureAsset(assetNames[i]).resized(200).drawAt(x, y);\n}\nelse\n{\n// \u30ed\u30fc\u30c9\u4e2d\u3067\u3042\u308c\u3070\u3001\u4ee3\u308f\u308a\u306b\u5186\u3092\u8868\u793a\u3059\u308b\nCircle{ x, y, 50 }.drawFrame(20, ColorF{ 0.75 });\n}\n}\n}\n}\n</code></pre>"},{"location":"reference/async/#32-\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u3092\u6b62\u3081\u305a\u306b\u5b9f\u884c\u306b\u6642\u9593\u306e\u304b\u304b\u308b\u95a2\u6570\u306e\u7d50\u679c\u3092\u5f97\u308b","title":"3.2 \u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u3092\u6b62\u3081\u305a\u306b\u3001\u5b9f\u884c\u306b\u6642\u9593\u306e\u304b\u304b\u308b\u95a2\u6570\u306e\u7d50\u679c\u3092\u5f97\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\n// n \u79d2\u5f8c\u306b n \u3092\u8fd4\u3059\u95a2\u6570\uff08\u91cd\u3044\u51e6\u7406\u3092 Sleep \u3067\u4ee3\u308f\u308a\u306b\u8868\u73fe\uff09\nint32 F(int32 n)\n{\n// n \u79d2\u30b9\u30ea\u30fc\u30d7\nSystem::Sleep(n * 1s);\nreturn n;\n}\nvoid Main()\n{\nScene::SetBackground(Palette::White);\n// \u975e\u540c\u671f\u30bf\u30b9\u30af\nAsyncTask&lt;int32&gt; task;\nwhile (System::Update())\n{\n// \u975e\u540c\u671f\u30bf\u30b9\u30af\u3092\u6301\u3063\u3066\u3044\u306a\u3044\u6642\u306b\u30dc\u30bf\u30f3\u3092\u62bc\u305b\u308b\nif (SimpleGUI::Button(U\"Call\", Vec2{ 600, 20 }, unspecified, (not task.isValid())))\n{\n// \u95a2\u6570 F \u3092\u5b9f\u884c\u3059\u308b\u975e\u540c\u671f\u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3002F \u306e\u7b2c\u4e00\u5f15\u6570\u306b 5 \u3092\u6e21\u3059\ntask = Async(F, 5);\n}\n// \u975e\u540c\u671f\u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3057\u305f\u3089\nif (task.isReady())\n{\n// \u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\nPrint &lt;&lt; task.get();\n}\nconst double t = Scene::Time();\nfor (auto i : step(12))\n{\nconst double angle = (i * 30_deg) + (t * 30_deg);\nconst Vec2 pos = OffsetCircular{ Scene::Center(), 160, angle };\nCircle{ pos, 20 }.draw(HSV{ (i * 30) });\n}\n}\n// \u5b9f\u884c\u9014\u4e2d\u306e\u30bf\u30b9\u30af\u304c\u3042\u308c\u3070\u5b8c\u4e86\u307e\u3067\u5f85\u3064\u3002\nif (task.isValid())\n{\ntask.wait();\n}\n}\n</code></pre>"},{"location":"reference/async/#33-\u975e\u540c\u671f\u30bf\u30b9\u30af\u3092\u4e2d\u65ad\u3059\u308b","title":"3.3 \u975e\u540c\u671f\u30bf\u30b9\u30af\u3092\u4e2d\u65ad\u3059\u308b","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4e2d\u65ad\u3059\u308b\u5834\u5408\u3001<code>AsyncTask</code> \u306f\u95a2\u6570\u304c\u623b\u308a\u5024\u3092\u8fd4\u3059\u307e\u3067\u5f85\u6a5f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u5f85\u6a5f\u6642\u9593\u3092\u6e1b\u3089\u3059\u305f\u3081\u30013.2 \u306e\u30b5\u30f3\u30d7\u30eb\u3092\u62e1\u5f35\u3057\u3001\u95a2\u6570\u3092\u4e2d\u65ad\u3067\u304d\u308b\u4ed5\u7d44\u307f\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\n// n \u79d2\u5f8c\u306b n \u3092\u8fd4\u3059\u95a2\u6570\uff08\u91cd\u3044\u51e6\u7406\u3092 Sleep \u3067\u4ee3\u308f\u308a\u306b\u8868\u73fe\uff09\nint32 F(int32 n, const std::atomic&lt;bool&gt;&amp; abort)\n{\nfor (int i = 0; i &lt; (n * 10); ++i)\n{\n// \u51e6\u7406\u306e\u6700\u4e2d\u306b\u4e2d\u65ad\u30d5\u30e9\u30b0\u3092\u78ba\u8a8d\u3059\u308b\nif (abort) // \u4e2d\u65ad\u30d5\u30e9\u30b0\u304c true \u306a\u3089\n{\n// \u5b8c\u5168\u306b\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308b\u524d\u306b\u305d\u3053\u3067\u4e2d\u65ad\u3059\u308b\nreturn -1;\n}\nSystem::Sleep(100ms);\n}\nreturn n;\n}\nvoid Main()\n{\nScene::SetBackground(Palette::White);\n// \u975e\u540c\u671f\u30bf\u30b9\u30af\nAsyncTask&lt;int32&gt; task;\n// \u4e2d\u65ad\u30d5\u30e9\u30b0\nstd::atomic&lt;bool&gt; abort{ false };\nwhile (System::Update())\n{\n// \u975e\u540c\u671f\u30bf\u30b9\u30af\u3092\u6301\u3063\u3066\u3044\u306a\u3044\u6642\u306b\u30dc\u30bf\u30f3\u3092\u62bc\u305b\u308b\nif (SimpleGUI::Button(U\"Call\", Vec2{ 600, 20 }, unspecified, (not task.isValid())))\n{\nabort = false;\n// \u95a2\u6570 F \u3092\u5b9f\u884c\u3059\u308b\u975e\u540c\u671f\u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3002F \u306e\u7b2c\u4e00\u5f15\u6570\u306b 5 \u3092\u3001\u7b2c\u4e8c\u5f15\u6570\u306b\u4e2d\u65ad\u6307\u793a\u306e\u53c2\u7167\u3092\u6e21\u3059\ntask = Async(F, 5, std::ref(abort));\n}\n// \u975e\u540c\u671f\u30bf\u30b9\u30af\u306e\u4e2d\u65ad\nif (SimpleGUI::Button(U\"Abort\", Vec2{ 600, 60 }, unspecified, task.isValid()))\n{\n// \u4e2d\u65ad\u30d5\u30e9\u30b0\u3092 true \u306b\nabort = true;\n}\n// \u975e\u540c\u671f\u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3057\u305f\u3089\nif (task.isReady())\n{\n// \u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\nPrint &lt;&lt; task.get();\n}\nconst double t = Scene::Time();\nfor (auto i : step(12))\n{\nconst double angle = (i * 30_deg) + (t * 30_deg);\nconst Vec2 pos = OffsetCircular{ Scene::Center(), 160, angle };\nCircle{ pos, 20 }.draw(HSV{ (i * 30) });\n}\n}\n// \u5b9f\u884c\u9014\u4e2d\u306e\u30bf\u30b9\u30af\u304c\u3042\u308c\u3070\u5b8c\u4e86\u307e\u3067\u5f85\u3064\u3002\nif (task.isValid())\n{\n// \u4e2d\u65ad\u6307\u793a\u3092\u51fa\u3059\nabort = true;\n// \u5b8c\u5168\u306b\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308b\u524d\u306b\u5236\u5fa1\u3092\u8fd4\u3057\u3066\u304f\u308c\u308b\ntask.wait();\n}\n}\n</code></pre>"},{"location":"reference/async/#34-\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u751f\u6210\u3057\u3066\u3044\u308b\u753b\u50cf\u306e\u9014\u4e2d\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b","title":"3.4 \u5225\u30b9\u30ec\u30c3\u30c9\u3067\u751f\u6210\u3057\u3066\u3044\u308b\u753b\u50cf\u306e\u9014\u4e2d\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nclass ImageTask\n{\npublic:\nImageTask()\n: m_processingImage(400, 400, Palette::White)\n, m_result{ m_processingImage }\n{\nm_task = Async(Update, this);\n}\n~ImageTask()\n{\n// \u975e\u540c\u671f\u30bf\u30b9\u30af\u304c\u3042\u308c\u3070\nif (m_task.isValid())\n{\n// \u4e2d\u65ad\u30d5\u30e9\u30b0\u3092\u30aa\u30f3\u306b\nm_abort = true;\n// \u5236\u5fa1\u3092\u8fd4\u3059\u307e\u3067\u5f85\u3064\nm_task.wait();\n}\n}\n// \u4f55\u884c\u5857\u308a\u3064\u3076\u3057\u305f\u304b\u3092\u8fd4\u3059\nsize_t getProgress() const\n{\nreturn m_processedLine;\n}\n// \u7d50\u679c\u753b\u50cf\u3092\u53d6\u5f97\nvoid get(DynamicTexture&amp; texture)\n{\nstd::lock_guard lock{ m_mutex };\ntexture.fill(m_result);\n}\nprivate:\nbool update()\n{\nconst size_t y = m_processedLine;\n// 1 \u884c\u5857\u308b\nfor (size_t x = 0; x &lt; m_processingImage.width(); ++x)\n{\nm_processingImage[y][x] = Palette::Orange;\n}\n// \u4e00\u884c\u7d42\u308f\u3063\u305f\u3089\u7d50\u679c\u753b\u50cf\u3092\u66f4\u65b0\n{\nstd::lock_guard lock{ m_mutex };\n// \u51e6\u7406\u4e2d\u306e\u5185\u5bb9\u3092\u8ee2\u9001\nm_result = m_processingImage;\n++m_processedLine;\n}\n// \u51e6\u7406\u304c\u5b8c\u5168\u306b\u5b8c\u4e86\u3057\u305f\u3089\nif (m_processedLine == m_processingImage.height())\n{\n// \u51e6\u7406\u7528\u306e\u753b\u50cf\u3092\u7834\u68c4\u3057\u3001\u30e1\u30e2\u30ea\u3082\u958b\u653e\u3059\u308b\nm_processingImage.release();\nreturn true;\n}\nreturn false;\n}\nstatic void Update(ImageTask* pImageTask)\n{\n// \u4e2d\u65ad\u30d5\u30e9\u30b0\u304c\u7d4c\u3063\u305f\u3089\u672a\u5b8c\u4e86\u3067\u3082\u7d42\u4e86\u3059\u308b\nwhile (not pImageTask-&gt;m_abort)\n{\n// 5 \u30df\u30ea\u79d2\u3054\u3068\u306b 1 \u884c\u5857\u308b\nSystem::Sleep(5ms);\nif (pImageTask-&gt;update())\n{\nbreak;\n}\n}\n}\n// \u975e\u540c\u671f\u30bf\u30b9\u30af\nAsyncTask&lt;void&gt; m_task;\n// \u51e6\u7406\u3092\u4e2d\u65ad\u3059\u308b\u304b\u306e\u30d5\u30e9\u30b0\nstd::atomic&lt;bool&gt; m_abort{ false };\n// \u51e6\u7406\u4e2d\u306e\u753b\u50cf\nImage m_processingImage;\n// \u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u884c\u6570\nstd::atomic&lt;size_t&gt; m_processedLine = 0;\n////////\n//\n// \u30df\u30e5\u30fc\u30c6\u30c3\u30af\u30b9\u3067\u4fdd\u8b77\u3059\u308b\u30c7\u30fc\u30bf\n//\nstd::mutex m_mutex;\n// \u7d50\u679c\u753b\u50cf\nImage m_result;\n//\n////////\n};\nvoid Main()\n{\nImageTask imageTask;\nDynamicTexture texture;\nsize_t currentProgress = 0;\nwhile (System::Update())\n{\n// \u9032\u6357\u304c\u3042\u308c\u3070\nif (const size_t newProgress = imageTask.getProgress();\ncurrentProgress != newProgress)\n{\n// \u7d50\u679c\u753b\u50cf\u3092\u53d6\u5f97\u3059\u308b\nimageTask.get(texture);\ncurrentProgress = newProgress;\nPrint &lt;&lt; currentProgress;\n}\nif (texture)\n{\ntexture.draw();\n}\n}\n}\n</code></pre>"},{"location":"reference/avoid-global-variable/","title":"\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3068\u3057\u3066\u4f5c\u6210\u3067\u304d\u306a\u3044\u30af\u30e9\u30b9","text":""},{"location":"reference/avoid-global-variable/#\u8aac\u660e","title":"\u8aac\u660e","text":"<p>Siv3D \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u304a\u3044\u3066\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306e\u4f7f\u7528\u306f\u4e0d\u5fc5\u8981\u306a\u306e\u3067\u907f\u3051\u308b\u3079\u304d\u3067\u3059\u3002</p> <p>\u307e\u305f\u3001Siv3D \u306b\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3068\u3057\u3066\u4f5c\u6210\u3067\u304d\u306a\u3044\u30af\u30e9\u30b9\u304c\u3042\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u30af\u30e9\u30b9\u3084\u3001\u4ee5\u4e0b\u306e\u30af\u30e9\u30b9\u3092\u30e1\u30f3\u30d0\u5909\u6570\u306b\u542b\u3080\u30af\u30e9\u30b9\u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u3059\u308b\u3068\u3001\u30a8\u30f3\u30b8\u30f3\u306e\u521d\u671f\u5316\u524d\u306b\u30a8\u30f3\u30b8\u30f3\u6a5f\u80fd\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3088\u3046\u3068\u3057\u3066\u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002</p> <ul> <li><code>Texture</code></li> <li><code>DynamicTexture</code></li> <li><code>RenderTexture</code></li> <li><code>MSRenderTexture</code></li> <li><code>Font</code></li> <li><code>Audio</code></li> <li><code>Effect</code></li> <li><code>Mesh</code></li> <li><code>Model</code></li> <li><code>VertexShader</code></li> <li><code>PixelShader</code></li> <li><code>Script</code></li> </ul>"},{"location":"reference/avoid-global-variable/#\u4ee3\u308f\u308a\u306e\u65b9\u6cd5-1","title":"\u4ee3\u308f\u308a\u306e\u65b9\u6cd5 (1)","text":"<p>Main \u95a2\u6570\u5185\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u5909\u6570\u3068\u3057\u305f\u308a\u3001\u95a2\u6570\u306e\u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u3067\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306a\u304f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u69d8\u3005\u306a\u5834\u6240\u3067\u4e0a\u8a18\u306e\u30af\u30e9\u30b9\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nclass Game\n{\npublic:\nvoid draw() const\n{\nm_cat.drawAt(100, 100);\nm_dog.drawAt(300, 300);\n}\nprivate:\nTexture m_cat = Texture{ U\"\ud83d\udc08\"_emoji };\nTexture m_dog = Texture{ U\"\ud83d\udc15\"_emoji };\n};\nstruct Faces\n{\nArray&lt;Texture&gt; textures;\nFaces()\n{\ntextures &lt;&lt; Texture{ U\"\ud83d\ude0a\"_emoji };\ntextures &lt;&lt; Texture{ U\"\ud83e\udd14\"_emoji };\ntextures &lt;&lt; Texture{ U\"\ud83e\udd23\"_emoji };\n}\n};\nvoid DrawFace(const Faces&amp; faces)\n{\nconst int32 index = (Time::GetSec() % 3);\nfaces.textures[index].drawAt(200, 200);\n}\nvoid Main()\n{\nGame game; // \u3053\u3053\u3067 Texture \u304c\u4f5c\u6210\u3055\u308c\u308b\nFaces faces; // \u3053\u3053\u3067 Texture \u304c\u4f5c\u6210\u3055\u308c\u308b\nwhile (System::Update())\n{\ngame.draw();\nDrawFace(faces);\n}\n}\n</code></pre>"},{"location":"reference/avoid-global-variable/#\u4ee3\u308f\u308a\u306e\u65b9\u6cd5-2","title":"\u4ee3\u308f\u308a\u306e\u65b9\u6cd5 (2)","text":"<p><code>Texture</code>, <code>Audio</code>, <code>Font</code>, <code>VertexShader</code>, <code>PixelShader</code> \u306b\u95a2\u3057\u3066\u306f\u3001\u30a2\u30bb\u30c3\u30c8\u7ba1\u7406\u6a5f\u80fd\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u69d8\u3005\u306a\u5834\u6240\u3067\u7279\u5b9a\u306e\u30a2\u30bb\u30c3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Draw()\n{\n// \u30a2\u30bb\u30c3\u30c8\u7ba1\u7406\u6a5f\u80fd\u3092\u901a\u3057\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\nTextureAsset(U\"Windmill\").draw();\nTextureAsset(U\"Siv3D-kun\").scaled(0.8).drawAt(200, 200);\n}\nvoid Main()\n{\n// \u30a2\u30bb\u30c3\u30c8\u7ba1\u7406\u6a5f\u80fd\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30bb\u30c3\u30c8\u3092\u767b\u9332\u3059\u308b\nTextureAsset::Register(U\"Windmill\", U\"example/windmill.png\", TextureDesc::Mipped);\nTextureAsset::Register(U\"Siv3D-kun\", U\"example/siv3d-kun.png\", TextureDesc::Mipped);\nwhile (System::Update())\n{\nDraw();\n}\n}\n</code></pre>"},{"location":"reference/helloworld/","title":"Siv3D \u3067 Hello world \u3059\u308b 21 \u306e\u65b9\u6cd5","text":""},{"location":"reference/helloworld/#1-print","title":"1. Print","text":"<ul> <li>\u753b\u9762\u3078\u306e\u30c7\u30d0\u30c3\u30b0\u51fa\u529b\u6a5f\u80fd <code>Print</code> \u3092\u4f7f\u3044\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nPrint &lt;&lt; U\"Hello, world!\";\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#2-console","title":"2. Console","text":"<ul> <li>\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\u6a5f\u80fd <code>Console</code> \u3092\u4f7f\u3044\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nConsole &lt;&lt; U\"Hello, world!\";\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#3-logger","title":"3. Logger","text":"<ul> <li>\u30ed\u30b0\u51fa\u529b\u6a5f\u80fd <code>Logger</code> \u3092\u4f7f\u3044\u307e\u3059</li> <li>Visual Studio \u306e\u5834\u5408\u3001\u30c7\u30d0\u30c3\u30b0\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u300c\u51fa\u529b\u300d\u30a6\u30a3\u30f3\u30c9\u30a6\u5185\u306b\u51fa\u529b\u3055\u308c\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nLogger &lt;&lt; U\"Hello, world!\";\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#4-say","title":"4. Say","text":"<ul> <li>\u97f3\u58f0\u8aad\u307f\u4e0a\u3052\u6a5f\u80fd <code>Say</code> \u3092\u4f7f\u3044\u307e\u3059</li> <li>\u8aad\u307f\u4e0a\u3052\u8a71\u8005\u306e\u8a00\u8a9e\u306f <code>TextToSpeech::SetDefaultLanguage()</code> \u3067\u5909\u66f4\u3067\u304d\u307e\u3059</li> <li>OS \u306e\u8a2d\u5b9a\u306b\u3088\u3063\u3066\u306f\u7279\u5b9a\u306e\u8a00\u8a9e\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059</li> <li>Linux \u7248\u3067\u306f\u52d5\u4f5c\u3057\u307e\u305b\u3093</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n//TextToSpeech::SetDefaultLanguage(LanguageCode::EnglishUS);\nSay &lt;&lt; U\"Hello, world!\";\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#5-puttext","title":"5. PutText","text":"<ul> <li>\u5ea7\u6a19\u3092\u6307\u5b9a\u3067\u304d\u308b\u30c7\u30d0\u30c3\u30b0\u8868\u793a <code>PutText</code> \u3092\u4f7f\u3044\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nPutText(U\"Hello, world!\", Scene::Center());\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#6-\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9","title":"6. \u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9","text":"<ul> <li><code>System::MessageBoxOK()</code> \u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3057\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nSystem::MessageBoxOK(U\"Hello, world!\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#7-\u30c8\u30fc\u30b9\u30c8\u901a\u77e5","title":"7. \u30c8\u30fc\u30b9\u30c8\u901a\u77e5","text":"<ul> <li>\u30c8\u30fc\u30b9\u30c8\u901a\u77e5\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u307e\u3059</li> <li>Windows \u7248\u306e\u307f\u5229\u7528\u3067\u304d\u308b\u6a5f\u80fd\u3067\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nToastNotificationItem item{ .title = U\"Siv3D\", .message = U\"Hello, world!\"};\nPlatform::Windows::ToastNotification::Show(item);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#8-\u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb","title":"8. \u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb","text":"<ul> <li>\u6307\u5b9a\u3057\u305f\u6587\u5b57\u5217\u3092\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30bf\u30a4\u30c8\u30eb\u306b\u8868\u793a\u3057\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::SetTitle(U\"Hello, world!\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#9-\u30dc\u30bf\u30f3","title":"9. \u30dc\u30bf\u30f3","text":"<ul> <li><code>SimpleGUI::Button()</code> \u3067\u30dc\u30bf\u30f3\u3092\u8868\u793a\u3057\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Hello, world!\", Vec2{ 20, 20 }))\n{\nSystem::Exit();\n}\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#10-font","title":"10. Font","text":"<ul> <li><code>FontMethod::MSDF</code> \u8a2d\u5b9a\u306e <code>Font</code> \u3092\u4f5c\u6210\u3059\u308b\u3068\u3001\u5927\u304d\u3055\u3001\u4f4d\u7f6e\u3001\u8272\u3092\u6307\u5b9a\u3057\u3066\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u753b\u3067\u304d\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nwhile (System::Update())\n{\nfont(U\"Hello, world!\").drawAt(100, Scene::Center(), ColorF{ 0.1, 0.4, 0.7 });\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#11-glyph","title":"11. Glyph","text":"<ul> <li><code>Font::getGlyphs()</code> \u3067\u53d6\u5f97\u3067\u304d\u308b\u5404\u6587\u5b57\u306e <code>Glyph</code> \u3092\u4f7f\u3046\u3068\u3001\u6587\u5b57\u5358\u4f4d\u3067\u8272\u3084\u4f4d\u7f6e\u3092\u5236\u5fa1\u3067\u304d\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nconst double scale = 2.0;\nwhile (System::Update())\n{\nVec2 penPos{ 40, 40 };\n{\nconst ScopedCustomShader2D shader{ Font::GetPixelShader(font.method(), TextStyle::Type::Default) };\nGraphics2D::SetSDFParameters(TextStyle::Default());\nint32 i = 0;\nfor (const auto&amp; glyph : font.getGlyphs(U\"Hello, world!\"))\n{\nconst ColorF color = HSV{ i * 20 };\nglyph.texture.scaled(scale).draw(Math::Round(penPos + glyph.getOffset() * scale), color);\npenPos.x += (glyph.xAdvance * scale);\npenPos.y += Math::Sin(i * 60_deg) * 20;\n++i;\n}\n}\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#12-outlineglyph","title":"12. OutlineGlyph","text":"<ul> <li><code>Font::renderOutlines()</code> \u3067\u53d6\u5f97\u3067\u304d\u308b\u5404\u6587\u5b57\u306e <code>OutlineGlyph</code> \u306f\u3001\u5404\u6587\u5b57\u306e\u8f2a\u90ed\u3092 <code>LineString</code> \u3068\u3057\u3066\u6271\u3048\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ 100, Typeface::Bold };\nconst Array&lt;OutlineGlyph&gt; glyphs = font.renderOutlines(U\"Hello, world!\");\nwhile (System::Update())\n{\nVec2 penPos{ 40, 40 };\nfor (const auto&amp; glyph : glyphs)\n{\nconst Transformer2D transform{ Mat3x2::Translate(penPos + glyph.getOffset()) };\nfor (const auto&amp; ring : glyph.rings)\n{\nconst double halfLength = ring.calculateLength(CloseRing::Yes) * 0.5;\nring.extractLineString(0.0, halfLength, CloseRing::Yes).draw(3, ColorF{ 0.25 });\nring.extractLineString(halfLength, halfLength, CloseRing::Yes).draw(3, ColorF{ 1.0 });\n}\npenPos.x += glyph.xAdvance;\n}\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#13-buffer2d","title":"13. Buffer2D","text":"<ul> <li><code>Font::renderPolygons()</code> \u3067\u53d6\u5f97\u3067\u304d\u308b\u5404\u6587\u5b57\u306e <code>PolygonGlyph</code> \u3092 <code>Buffer2D</code> \u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u3001\u6587\u5b57\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u63cf\u753b\u3067\u304d\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\n// \u80cc\u666f\u30c6\u30af\u30b9\u30c1\u30e3 1 \u3092\u4f5c\u6210\u3059\u308b\nTexture CreateTexture1()\n{\nRenderTexture renderTexture{ Size{ 1, 128 } };\n{\nconst ScopedRenderTarget2D renderTarget{ renderTexture };\nRect{ 0, 0, 1, 128 }.draw(Arg::top(0.2, 0.5, 1.0), Arg::bottom(0.2, 0.5, 0.0));\n}\nGraphics2D::Flush();\nreturn renderTexture;\n}\n// \u80cc\u666f\u30c6\u30af\u30b9\u30c1\u30e3 2 \u3092\u4f5c\u6210\u3059\u308b\nTexture CreateTexture2()\n{\nMSRenderTexture renderTexture{ Size{ 800, 100 }, ColorF{ 0.2, 0.3, 0.6 } };\n{\nconst ScopedRenderTarget2D renderTarget{ renderTexture };\nconst ColorF PatternColor{ 1.0 };\nfor (int32 y = 0; y &lt; 8; ++y)\n{\nfor (int32 x = 0; x &lt;= 40; ++x)\n{\nif (IsEven(y))\n{\nCircle{ (x * 20), (60 + y * 6), (2 + y) }.drawFrame(1, PatternColor);\n}\nelse\n{\nCircle{ (10 + x * 20), (60 + y * 6), (2 + y) }.drawFrame(1, PatternColor);\n}\n}\n}\n}\n// MSRenderTexture \u306e\u5b8c\u6210\u306b\u306f\n// 2D \u63cf\u753b\u547d\u4ee4\u306e\u767a\u884c (Flush) + MSAA \u306e\u89e3\u6c7a (Resolve) \u304c\u5fc5\u8981\nGraphics2D::Flush();\nrenderTexture.resolve();\n// \u5b8c\u6210\u3057\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u8fd4\u3059\nreturn renderTexture;\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ 100, Typeface::Bold };\nconst Texture texture1 = CreateTexture1();\nconst Texture texture2 = CreateTexture2();\nArray&lt;Buffer2D&gt; polygons;\n{\nVec2 penPos{ 0, 0 };\nfor (const auto&amp; glyph : font.renderPolygons(U\"Hello, world!\"))\n{\nfor (const auto&amp; polygon : glyph.polygons)\n{\npolygons &lt;&lt; polygon.movedBy(penPos + glyph.getOffset()).toBuffer2D(Vec2{ 0, 20 }, Vec2{ 800, 100 });\n}\npenPos.x += glyph.xAdvance;\n}\n}\nwhile (System::Update())\n{\n{\nconst Transformer2D transform{ Mat3x2::Translate(80, 40) };\nfor (const auto&amp; polygon : polygons)\n{\npolygon.draw(texture1);\n}\n}\n{\nconst Transformer2D transform{ Mat3x2::Translate(80, 200) };\nfor (const auto&amp; polygon : polygons)\n{\npolygon.draw(texture2);\n}\n}\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#14-image","title":"14. Image","text":"<ul> <li><code>Image</code> \u306b\u30c6\u30ad\u30b9\u30c8\u3092\u66f8\u304d\u8fbc\u3080\u3053\u3068\u3067\u3001\u67d4\u8edf\u306a\u753b\u50cf\u52a0\u5de5\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ 100, Typeface::Bold };\nImage image{ 800, 160, Palette::White };\nfont(U\"Hello, world!\").paintAt(image, 400, 80, ColorF{ 0.25 });\nimage.spread(8);\nconst Texture texture{ image };\nwhile (System::Update())\n{\ntexture.draw();\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#15-rendertexture","title":"15. RenderTexture","text":"<ul> <li><code>RenderTexture</code> \u306b\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u753b\u3059\u308b\u3053\u3068\u3067\u3001\u30ac\u30a6\u30b9\u307c\u304b\u3057\u3084\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3092 GPU \u3067\u9ad8\u901f\u306b\u51e6\u7406\u3067\u304d\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nconstexpr Size BaseSize{ 800, 256 };\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\nRenderTexture CreateTexture(const Font&amp; font, StringView text)\n{\nRenderTexture renderTexture{ Size{ 800, 256 }, ColorF{ 0.0 } };\n{\nconst ScopedRenderTarget2D renderTarget{ renderTexture };\nfont(text).drawAt(400, 100);\n}\nGraphics2D::Flush();\nreturn renderTexture;\n}\nvoid Main()\n{\nconst Font font{ 100, Typeface::Bold };\nconst String text = U\"Hello, world!\";\nRenderTexture gaussianA1{ CreateTexture(font, text) }, gaussianB1{ BaseSize };\nRenderTexture gaussianA4{ BaseSize / 4 }, gaussianB4{ BaseSize / 4 };\nRenderTexture gaussianA8{ BaseSize / 8 }, gaussianB8{ BaseSize / 8 };\n{\nShader::GaussianBlur(gaussianA1, gaussianB1, gaussianA1);\nShader::Downsample(gaussianA1, gaussianA4);\nShader::GaussianBlur(gaussianA4, gaussianB4, gaussianA4);\nShader::Downsample(gaussianA4, gaussianA8);\nShader::GaussianBlur(gaussianA8, gaussianB8, gaussianA8);\n}\nwhile (System::Update())\n{\nfont(text).drawAt(400, 100);\nfont(text).drawAt(400, 300, ColorF{ 0.3, 0.9, 0.5 });\n{\nconst ScopedRenderStates2D blend{ BlendState::Additive };\ngaussianA1.draw(ColorF{ 1.0 });\ngaussianA4.resized(BaseSize).draw(ColorF{ 0.5 });\ngaussianA8.resized(BaseSize).draw(ColorF{ 0.5 });\ngaussianA4.resized(BaseSize).draw(0, 200, ColorF{ 0.3, 0.9, 0.5 } * 0.25);\ngaussianA8.resized(BaseSize).draw(0, 200, ColorF{ 0.3, 0.9, 0.5 });\n}\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#16-html","title":"16. HTML","text":"<ul> <li><code>HTMLWriter</code> \u3092\u4f7f\u3063\u3066\u4f5c\u6210\u3057\u305f HTML \u6587\u66f8\u3092\u3001<code>System::LaunchBrowser()</code> \u3092\u4f7f\u3063\u3066 Web \u30d6\u30e9\u30a6\u30b6\u3067\u958b\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n{\nHTMLWriter html{ U\"hello.html\", U\"Hello, world!\" };\n// &lt;h1&gt;Hello world!&lt;/h1&gt;\nhtml.writeHeader(U\"Hello world!\");\n}\nSystem::LaunchBrowser(U\"hello.html\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#17-\u30e9\u30a4\u30bb\u30f3\u30b9","title":"17. \u30e9\u30a4\u30bb\u30f3\u30b9","text":"<ul> <li>\u30e9\u30a4\u30bb\u30f3\u30b9\u6587\u66f8\u306b\u306f\u8ffd\u52a0\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u6587\u3092\u51fa\u529b\u3067\u304d\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nLicenseInfo info{ .title = U\"Hello, world!\", .copyright = U\"(C) 2023 Hello, world!\", .text = U\"Hello, world!\" };\nLicenseManager::AddLicense(info);\nLicenseManager::ShowInBrowser();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#18-\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9","title":"18. \u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9","text":"<ul> <li><code>Clipboard::SetText()</code> \u3067\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u306e\u5185\u5bb9\u3092\u5909\u66f4\u3067\u304d\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nClipboard::SetText(U\"Hello, world!\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#19-\u30c4\u30a4\u30fc\u30c8","title":"19. \u30c4\u30a4\u30fc\u30c8","text":"<ul> <li><code>Twitter::OpenTweetWindow()</code> \u306b\u3088\u3063\u3066\u3001\u7279\u5b9a\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u753b\u9762\u3092 Web \u30d6\u30e9\u30a6\u30b6\u306b\u8868\u793a\u3067\u304d\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nTwitter::OpenTweetWindow(U\"Hello, world! #Siv3D\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#20-klatttts","title":"20. KlattTTS","text":"<ul> <li>\u53e4\u5178\u7684\u306a\u97f3\u58f0\u5408\u6210\u30e2\u30c7\u30eb\u3092\u7528\u3044\u305f\u97f3\u58f0\u8aad\u307f\u4e0a\u3052\u6a5f\u80fd <code>KlattTTS::Speak()</code> \u3092\u4f7f\u3044\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nKlattTTS::Speak(U\"Hello, world!\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"reference/helloworld/#21-qr","title":"21. QR","text":"<ul> <li>\u6307\u5b9a\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u3092 QR \u30b3\u30fc\u30c9\u306b\u5909\u63db\u3057\u3066\u8868\u793a\u3057\u307e\u3059</li> </ul> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture texture{ QR::MakeImage(QR::EncodeText(U\"Hello, world!\")) };\nwhile (System::Update())\n{\ntexture.draw(40, 40);\n}\n}\n</code></pre>"},{"location":"reference/messagebox/","title":"\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9","text":""},{"location":"reference/messagebox/#1-\u6982\u8981","title":"1. \u6982\u8981","text":"<p>\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u6a5f\u80fd\u3092\u4f7f\u3046\u3068\u3001\u30e1\u30a4\u30f3\u30a6\u30a3\u30f3\u30c9\u30a6\u3068\u306f\u5225\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3068\u3057\u3066\u3001\u30e6\u30fc\u30b6\u306b\u5fdc\u7b54\u3092\u6c42\u3081\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3057\u3001\u30e6\u30fc\u30b6\u306e\u9078\u629e\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306e\u8868\u793a\u4e2d\u306f\u3001\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u9032\u884c\u304c\u30d6\u30ed\u30c3\u30af\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"reference/messagebox/#2-\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306e-api","title":"2. \u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306e API","text":""},{"location":"reference/messagebox/#\u95a2\u6570","title":"\u95a2\u6570","text":"\u300cOK\u300d\u30dc\u30bf\u30f3\u3092\u6301\u3064\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3057\u3001\u305d\u306e\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002<pre><code>MessageBoxResult System::MessageBoxOK(StringView text, MessageBoxStyle style = MessageBoxStyle::Default);\nMessageBoxResult System::MessageBoxOK(StringView title, StringView text, MessageBoxStyle style = MessageBoxStyle::Default);\n</code></pre> <code>title</code> \u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306e\u30bf\u30a4\u30c8\u30eb <code>text</code> \u672c\u6587 <code>style</code> \u30b9\u30bf\u30a4\u30eb <code>\u623b\u308a\u5024</code> <code>MessageBoxResult::OK</code> \u300cOK\u300d\u300c\u30ad\u30e3\u30f3\u30bb\u30eb\u300d\u30dc\u30bf\u30f3\u3092\u6301\u3064\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3057\u3001\u305d\u306e\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002<pre><code>MessageBoxResult System::MessageBoxOKCancel(StringView text, MessageBoxStyle style = MessageBoxStyle::Default);\nMessageBoxResult System::MessageBoxOKCancel(StringView title, StringView text, MessageBoxStyle style = MessageBoxStyle::Default);\n</code></pre> <code>title</code> \u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306e\u30bf\u30a4\u30c8\u30eb <code>text</code> \u672c\u6587 <code>style</code> \u30b9\u30bf\u30a4\u30eb <code>\u623b\u308a\u5024</code> <code>MessageBoxResult::OK</code> \u307e\u305f\u306f <code>MessageBoxResult::Cancel</code> \u300c\u306f\u3044\u300d\u300c\u3044\u3044\u3048\u300d\u30dc\u30bf\u30f3\u3092\u6301\u3064\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3057\u3001\u305d\u306e\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002<pre><code>MessageBoxResult System::MessageBoxYesNo(StringView text, MessageBoxStyle style = MessageBoxStyle::Default);\nMessageBoxResult System::MessageBoxYesNo(StringView title, StringView text, MessageBoxStyle style = MessageBoxStyle::Default);\n</code></pre> <code>title</code> \u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306e\u30bf\u30a4\u30c8\u30eb <code>text</code> \u672c\u6587 <code>style</code> \u30b9\u30bf\u30a4\u30eb <code>\u623b\u308a\u5024</code> <code>MessageBoxResult::Yes</code> \u307e\u305f\u306f <code>MessageBoxResult::No</code>"},{"location":"reference/messagebox/#\u5217\u6319\u578b","title":"\u5217\u6319\u578b","text":""},{"location":"reference/messagebox/#messageboxresult","title":"MessageBoxResult","text":"<p>\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306b\u5bfe\u3059\u308b\u30e6\u30fc\u30b6\u306e\u64cd\u4f5c\u3092\u8868\u3059\u5b9a\u6570\u3067\u3059\u3002\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u3088\u3063\u3066\u306f\u3001\u30dc\u30bf\u30f3\u3092\u9078\u629e\u305b\u305a\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3092\u9589\u3058\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002</p> \u5024 \u8aac\u660e <code>OK</code> \u300cOK\u300d\u304c\u62bc\u3055\u308c\u305f <code>Cancel</code> \u300c\u30ad\u30e3\u30f3\u30bb\u30eb\u300d\u304c\u62bc\u3055\u308c\u305f\u304b\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u304c\u9589\u3058\u3089\u308c\u305f <code>Yes</code> \u300c\u306f\u3044\u300d\u304c\u62bc\u3055\u308c\u305f <code>No</code> \u300c\u3044\u3044\u3048\u300d\u304c\u62bc\u3055\u308c\u305f"},{"location":"reference/messagebox/#messageboxstyle","title":"MessageBoxStyle","text":"<p>\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u8868\u3059\u5b9a\u6570\u3067\u3059\u3002\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u3088\u3063\u3066\u306f\u30b9\u30bf\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u3001\u305d\u306e\u5834\u5408\u306f\u901a\u5e38\u306e\u30b9\u30bf\u30a4\u30eb\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002</p> \u5024 \u8aac\u660e <code>Default</code> \u901a\u5e38\u306e\u30b9\u30bf\u30a4\u30eb <code>Info</code> \u60c5\u5831\u3092\u4f1d\u3048\u308b\u30b9\u30bf\u30a4\u30eb <code>Warning</code> \u8b66\u544a\u3092\u4f1d\u3048\u308b\u30b9\u30bf\u30a4\u30eb <code>Error</code> \u6df1\u523b\u306a\u30a8\u30e9\u30fc\u3092\u4f1d\u3048\u308b\u30b9\u30bf\u30a4\u30eb <code>Question</code> \u30af\u30a8\u30b9\u30c1\u30e7\u30f3\u30de\u30fc\u30af\u306e\u30b9\u30bf\u30a4\u30eb"},{"location":"reference/messagebox/#3-\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306e\u30b5\u30f3\u30d7\u30eb","title":"3. \u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306e\u30b5\u30f3\u30d7\u30eb","text":""},{"location":"reference/messagebox/#31-\u4e00\u5b9a\u6642\u9593\u304c\u7d4c\u904e\u3057\u305f\u3089\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3059\u308b","title":"3.1 \u4e00\u5b9a\u6642\u9593\u304c\u7d4c\u904e\u3057\u305f\u3089\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3059\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// 5 \u79d2\u9593\u306e\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u30bf\u30a4\u30de\u30fc\nTimer timer{ 5s, StartImmediately::Yes };\nwhile (System::Update())\n{\nClearPrint();\n// \u6b8b\u308a\u6642\u9593\u3092\u8868\u793a\u3059\u308b\nPrint &lt;&lt; U\"\u6b8b\u308a \" &lt;&lt; timer.format(U\"mm:ss\");\n// \u30bf\u30a4\u30de\u30fc\u304c 0 \u306b\u5230\u9054\u3057\u305f\u3089\nif (timer.reachedZero())\n{\n// OK \u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3059\u308b\nSystem::MessageBoxOK(U\"\u4f53\u9a13\u7248\u306e\u7d42\u4e86\", U\"\u4f53\u9a13\u7248\u3067\u904a\u3079\u308b\u306e\u306f\u3053\u3053\u307e\u3067\u3067\u3059\u3002\");\n// \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3059\u308b\nreturn;\n}\n}\n}\n</code></pre>"},{"location":"reference/messagebox/#32-\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u9589\u3058\u308b\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3068\u304d\u306b\u7d42\u4e86\u3059\u308b\u304b\u78ba\u8a8d\u3059\u308b","title":"3.2 \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u9589\u3058\u308b\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3068\u304d\u306b\u7d42\u4e86\u3059\u308b\u304b\u78ba\u8a8d\u3059\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30e6\u30fc\u30b6\u64cd\u4f5c\u3067\u30a2\u30d7\u30ea\u304c\u7d42\u4e86\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\nSystem::SetTerminationTriggers(UserAction::NoAction);\nwhile (System::Update())\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u9589\u3058\u308b\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089\nif (System::GetUserActions() &amp; UserAction::CloseButtonClicked)\n{\n// Yes \u304b No \u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3059\u308b\nconst MessageBoxResult result = System::MessageBoxYesNo(U\"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3057\u307e\u3059\u304b\uff1f\");\n// Yes \u304c\u9078\u3070\u308c\u305f\u3089\nif (result == MessageBoxResult::Yes)\n{\n// \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3059\u308b\nreturn;\n}\n}\n}\n}\n</code></pre>"},{"location":"reference/messagebox/#33-\u8d77\u52d5\u6642\u306b\u524d\u56de\u306e\u30bb\u30fc\u30d6\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u304b\u78ba\u8a8d\u3059\u308b","title":"3.3 \u8d77\u52d5\u6642\u306b\u524d\u56de\u306e\u30bb\u30fc\u30d6\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u304b\u78ba\u8a8d\u3059\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30bb\u30fc\u30d6\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\nconstexpr FilePathView SaveDataPath = U\"save.txt\";\n// \u8aad\u307f\u8fbc\u3093\u3060\u30bb\u30fc\u30d6\u30c7\u30fc\u30bf\nString saveData;\n// \u3082\u3057\u524d\u56de\u306e\u30c7\u30fc\u30bf\u304c\u5b58\u5728\u3059\u308c\u3070\nif (FileSystem::Exists(SaveDataPath))\n{\n// Yes \u304b No \u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3059\u308b\nconst MessageBoxResult result = System::MessageBoxYesNo(U\"\u524d\u56de\u306e\u30c7\u30fc\u30bf\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\u8aad\u307f\u8fbc\u3093\u3067\u305d\u3053\u304b\u3089\u518d\u958b\u3057\u307e\u3059\u304b\uff1f\");\n// Yes \u304c\u9078\u3070\u308c\u305f\u3089\nif (result == MessageBoxResult::Yes)\n{\n// \u30bb\u30fc\u30d6\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u6587\u5b57\u5217\u3092\u8aad\u307f\u8fbc\u3080\nsaveData = TextReader{ SaveDataPath }.readAll();\n}\n}\n// \u30bb\u30fc\u30d6\u30c7\u30fc\u30bf\u304c\u8aad\u307f\u8fbc\u307e\u308c\u3066\u3044\u305f\u3089\nif (saveData)\n{\nPrint &lt;&lt; U\"\u524d\u56de\u306e\u30bb\u30fc\u30d6\u30c7\u30fc\u30bf: \" &lt;&lt; saveData;\n}\nelse\n{\nPrint &lt;&lt; U\"\u65b0\u898f\u30c7\u30fc\u30bf\";\n}\nwhile (System::Update())\n{\n}\n// \u30bb\u30fc\u30d6\u30c7\u30fc\u30bf\uff08\u73fe\u5728\u306e\u65e5\u4ed8\u3068\u6642\u523b\uff09\u3092\u30bb\u30fc\u30d6\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3093\u3067\u304b\u3089\u7d42\u4e86\u3059\u308b\nTextWriter{ SaveDataPath }.writeln(DateTime::Now());\n}\n</code></pre>"},{"location":"reference/messagebox/#34-\u4f5c\u696d\u5185\u5bb9\u3092\u4fdd\u5b58\u3059\u308b\u304b\u78ba\u8a8d\u3059\u308b","title":"3.4 \u4f5c\u696d\u5185\u5bb9\u3092\u4fdd\u5b58\u3059\u308b\u304b\u78ba\u8a8d\u3059\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30e6\u30fc\u30b6\u64cd\u4f5c\u3067\u30a2\u30d7\u30ea\u304c\u7d42\u4e86\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\nSystem::SetTerminationTriggers(UserAction::NoAction);\n// \u30bb\u30fc\u30d6\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\nconstexpr FilePathView SaveDataPath = U\"save-hsv.txt\";\n// \u80cc\u666f\u8272\nHSV hsv = ColorF{ 0.8, 0.9, 1.0 };\n// \u30bb\u30fc\u30d6\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308c\u3070\u305d\u3053\u304b\u3089\u8272\u3092\u8aad\u307f\u8fbc\u3080\nif (FileSystem::Exists(SaveDataPath))\n{\nDeserializer&lt;BinaryReader&gt; reader{ SaveDataPath };\nreader(hsv);\n}\n// \u73fe\u5728\u9078\u629e\u3057\u3066\u3044\u308b\u8272\u304c\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u304b\nbool saved = true;\nwhile (System::Update())\n{\n// \u4f5c\u696d\u5185\u5bb9\u304c\u672a\u4fdd\u5b58\u306e\u5834\u5408\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30bf\u30a4\u30c8\u30eb\u3067\u77e5\u3089\u305b\u308b\nWindow::SetTitle(saved ? U\"\u8272\u306e\u9078\u629e\" : U\"* \u8272\u306e\u9078\u629e [\u672a\u4fdd\u5b58]\");\n// \u80cc\u666f\u8272\u3092\u8a2d\u5b9a\u3059\u308b\nScene::SetBackground(hsv);\n// \u30ab\u30e9\u30fc\u30d4\u30c3\u30ab\u30fc\u3067\u8272\u3092\u9078\u629e\u3059\u308b\nif (SimpleGUI::ColorPicker(hsv, Vec2{ 40,40 }))\n{\n// \u5909\u66f4\u304c\u3042\u308c\u3070\u672a\u4fdd\u5b58\u72b6\u614b\u306b\u3059\u308b\nsaved = false;\n}\n// \u672a\u4fdd\u5b58\u306e\u5834\u5408\u3001\u300c\u8272\u3092\u4fdd\u5b58\u3059\u308b\u300d\u30dc\u30bf\u30f3\u3092\u8868\u793a\nif (SimpleGUI::Button(U\"\u8272\u3092\u4fdd\u5b58\u3059\u308b\", Vec2{ 240, 40 }, unspecified, (not saved))) // \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089\n{\n// \u30bb\u30fc\u30d6\u30d5\u30a1\u30a4\u30eb\u306b\u8272\u3092\u4fdd\u5b58\nSerializer&lt;BinaryWriter&gt; writer{ SaveDataPath };\nwriter(hsv);\n// \u4fdd\u5b58\u6e08\u307f\u306b\u3059\u308b\nsaved = true;\n}\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u9589\u3058\u308b\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089\nif (System::GetUserActions() &amp; UserAction::CloseButtonClicked)\n{\nif (saved) // \u4fdd\u5b58\u6e08\u307f\u306a\u3089\n{\nreturn; // \u4f55\u3082\u305b\u305a\u7d42\u4e86\u3059\u308b\n}\nelse // \u672a\u4fdd\u5b58\u306a\u3089\n{\n// OK \u304b \u30ad\u30e3\u30f3\u30bb\u30eb \u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3059\u308b\nconst MessageBoxResult result = System::MessageBoxOKCancel(U\"\u8272\u306e\u9078\u629e\", U\"\u8272\u3092\u4fdd\u5b58\u305b\u305a\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3057\u307e\u3059\u304b\uff1f\");\n// OK \u304c\u9078\u3070\u308c\u305f\u3089\nif (result == MessageBoxResult::OK)\n{\n// \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3059\u308b\nreturn;\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"reference/messagebox/#35-\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u76f8\u5f53\u306e\u6a5f\u80fd\u3092\u81ea\u4f5c\u3059\u308b","title":"3.5 \u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u76f8\u5f53\u306e\u6a5f\u80fd\u3092\u81ea\u4f5c\u3059\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nnamespace s3dx\n{\nclass SceneMessageBoxImpl\n{\npublic:\nstatic constexpr Size MessageBoxSize{ 360, 240 };\nstatic constexpr Size MessageBoxButtonSize{ 120, 40 };\nstatic constexpr ColorF MessageBoxBackgroundColor{ 0.96 };\nstatic constexpr ColorF MessageBoxActiveButtonColor{ 1.0 };\nstatic constexpr ColorF MessageBoxTextColor{ 0.11 };\nSceneMessageBoxImpl()\n{\nSystem::SetTerminationTriggers(UserAction::NoAction);\nScene::SetBackground(ColorF{ 0.11 });\n}\n~SceneMessageBoxImpl()\n{\nSystem::SetTerminationTriggers(m_triggers);\nScene::SetBackground(m_bgColor);\n}\nMessageBoxResult show(StringView text, const std::pair&lt;String, MessageBoxResult&gt;&amp; button) const\n{\nwhile (System::Update())\n{\ndrawMessageBox(text);\nm_buttonC.draw(m_buttonC.mouseOver() ? MessageBoxActiveButtonColor : MessageBoxBackgroundColor).drawFrame(0, 1, MessageBoxTextColor);\nm_font(button.first).drawAt(m_buttonC.center().moveBy(0, -1), MessageBoxTextColor);\nif (m_buttonC.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\nif (MouseL.down())\n{\nbreak;\n}\n}\n}\nreturn button.second;\n}\nMessageBoxResult show(const StringView text, const std::pair&lt;String, MessageBoxResult&gt;&amp; button0, const std::pair&lt;String, MessageBoxResult&gt;&amp; button1) const\n{\nMessageBoxResult result = MessageBoxResult::Cancel;\nwhile (System::Update())\n{\ndrawMessageBox(text);\nm_buttonL.draw(m_buttonL.mouseOver() ? MessageBoxActiveButtonColor : MessageBoxBackgroundColor).drawFrame(0, 1, MessageBoxTextColor);\nm_buttonR.draw(m_buttonR.mouseOver() ? MessageBoxActiveButtonColor : MessageBoxBackgroundColor).drawFrame(0, 1, MessageBoxTextColor);\nm_font(button0.first).drawAt(m_buttonL.center().moveBy(0, -1), MessageBoxTextColor);\nm_font(button1.first).drawAt(m_buttonR.center().moveBy(0, -1), MessageBoxTextColor);\nif (m_buttonL.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\nif (MouseL.down())\n{\nresult = button0.second;\nbreak;\n}\n}\nelse if (m_buttonR.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\nif (MouseL.down())\n{\nresult = button1.second;\nbreak;\n}\n}\n}\nreturn result;\n}\nprivate:\nTransformer2D m_tr{ Mat3x2::Identity(), Mat3x2::Identity(), Transformer2D::Target::SetLocal };\nScopedRenderStates2D m_rs{ BlendState::Default2D, SamplerState::Default2D, RasterizerState::Default2D };\nuint32 m_triggers = System::GetTerminationTriggers();\nColorF m_bgColor = Scene::GetBackground();\nVec2 m_pos = ((Scene::Size() - MessageBoxSize) * 0.5);\nRectF m_messageBoxRect{ m_pos, MessageBoxSize };\nRectF m_buttonC = RectF{ Arg::bottomCenter(m_messageBoxRect.bottomCenter().movedBy(0, -20)), MessageBoxButtonSize };\nRectF m_buttonL = RectF{ Arg::bottomCenter(m_messageBoxRect.bottomCenter().movedBy(-80, -20)), MessageBoxButtonSize };\nRectF m_buttonR = RectF{ Arg::bottomCenter(m_messageBoxRect.bottomCenter().movedBy(80, -20)), MessageBoxButtonSize };\nFont m_font = SimpleGUI::GetFont();\nvoid drawMessageBox(StringView text) const\n{\nm_messageBoxRect.draw(MessageBoxBackgroundColor).stretched(-5).drawFrame(1, 0, MessageBoxTextColor);\nm_font(text).draw(14, m_messageBoxRect.stretched(-20, -20, -80, -20), MessageBoxTextColor);\n}\n};\ninline MessageBoxResult SceneMessageBoxOK(StringView text)\n{\nreturn SceneMessageBoxImpl{}.show(text, { U\"OK\", MessageBoxResult::OK });\n}\n[[nodiscard]]\ninline MessageBoxResult SceneMessageBoxOKCancel(StringView text)\n{\nreturn SceneMessageBoxImpl{}.show(text, { U\"OK\", MessageBoxResult::OK }, { U\"\u30ad\u30e3\u30f3\u30bb\u30eb\", MessageBoxResult::Cancel });\n}\n[[nodiscard]]\ninline MessageBoxResult SceneMessageBoxYesNo(StringView text)\n{\nreturn SceneMessageBoxImpl{}.show(text, { U\"\u306f\u3044\", MessageBoxResult::Yes }, { U\"\u3044\u3044\u3048\", MessageBoxResult::No });\n}\n}\nvoid Main()\n{\n// 5 \u79d2\u9593\u306e\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u30bf\u30a4\u30de\u30fc\nTimer timer{ 5s, StartImmediately::Yes };\nwhile (System::Update())\n{\nClearPrint();\n// \u6b8b\u308a\u6642\u9593\u3092\u8868\u793a\u3059\u308b\nPrint &lt;&lt; U\"\u6b8b\u308a \" &lt;&lt; timer.format(U\"mm:ss\");\n// \u30bf\u30a4\u30de\u30fc\u304c 0 \u306b\u5230\u9054\u3057\u305f\u3089\nif (timer.reachedZero())\n{\n// OK \u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3059\u308b\ns3dx::SceneMessageBoxOK(U\"\u4f53\u9a13\u7248\u3067\u904a\u3079\u308b\u306e\u306f\u3053\u3053\u307e\u3067\u3067\u3059\u3002\");\n// \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3059\u308b\nreturn;\n}\n}\n}\n</code></pre>"},{"location":"reference/polymorphism/","title":"\u591a\u614b\u6027\u3092\u4f7f\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0","text":""},{"location":"reference/polymorphism/#1-\u591a\u614b\u6027\u306e\u57fa\u790e","title":"1. \u591a\u614b\u6027\u306e\u57fa\u790e","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nenum class EnemyType\n{\nCat,\nDog,\n};\nclass IEnemy\n{\npublic:\nvirtual ~IEnemy() = default;\nvirtual void draw() const = 0;\nvirtual EnemyType getType() const = 0;\n};\nclass EnemyCat : public IEnemy\n{\npublic:\nEnemyCat() = default;\nexplicit EnemyCat(const Vec2&amp; pos)\n: m_pos{ pos } {}\nvoid draw() const override\n{\nTextureAsset(U\"cat\").drawAt(m_pos);\n}\nEnemyType getType() const override\n{\nreturn EnemyType::Cat;\n}\nprivate:\nVec2 m_pos{ 0,0 };\n};\nclass EnemyDog : public IEnemy\n{\npublic:\nEnemyDog() = default;\nexplicit EnemyDog(const Vec2&amp; pos)\n: m_pos{ pos } {}\nvoid draw() const override\n{\nTextureAsset(U\"dog\").drawAt(m_pos);\n}\nEnemyType getType() const override\n{\nreturn EnemyType::Dog;\n}\nprivate:\nVec2 m_pos{ 0, 0 };\n};\nvoid Main()\n{\nTextureAsset::Register(U\"cat\", U\"\ud83d\udc08\"_emoji);\nTextureAsset::Register(U\"dog\", U\"\ud83d\udc15\"_emoji);\nArray&lt;std::unique_ptr&lt;IEnemy&gt;&gt; enemies;\nenemies &lt;&lt; std::make_unique&lt;EnemyCat&gt;(Vec2{ 100, 100 });\nenemies &lt;&lt; std::make_unique&lt;EnemyDog&gt;(Vec2{ 300, 300 });\nenemies &lt;&lt; std::make_unique&lt;EnemyDog&gt;(Vec2{ 500, 500 });\nwhile (System::Update())\n{\nfor (const auto&amp; enemy : enemies)\n{\nenemy-&gt;draw();\n}\n}\n}\n</code></pre>"},{"location":"samples/2d/","title":"2D \u63cf\u753b\u306e\u30b5\u30f3\u30d7\u30eb","text":""},{"location":"samples/2d/#1-\u8907\u96d1\u306a\u56f3\u5f62\u3084\u7d75\u6587\u5b57\u306b\u5f71\u3092\u4ed8\u3051\u308b","title":"1. \u8907\u96d1\u306a\u56f3\u5f62\u3084\u7d75\u6587\u5b57\u306b\u5f71\u3092\u4ed8\u3051\u308b","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture emoji{ U\"\ud83d\udc08\"_emoji };\n// \u5f71\u7528\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\nconst RenderTexture shadowTexture{ Scene::Size(), ColorF{ 1.0, 0.0 } };\nconst RenderTexture blur4{ shadowTexture.size() / 4 };\nconst RenderTexture internal4{ shadowTexture.size() / 4 };\nwhile (System::Update())\n{\nconst double angle = (Scene::Time() * 10_deg);\n// \u5f71\u306e\u5f62\u72b6\u3092\u63cf\u304f\n{\nconst ScopedRenderTarget2D target{ shadowTexture.clear(ColorF{ 1.0, 0.0 }) };\n// RGB \u5024\u306f\u7121\u8996\u3057\u3066\u3001\u63cf\u753b\u3055\u308c\u305f\u6700\u5927\u306e\u30a2\u30eb\u30d5\u30a1\u5024\u3092\u4fdd\u6301\u3059\u308b\u30d6\u30ec\u30f3\u30c9\u30b9\u30c6\u30fc\u30c8\u3092\u9069\u7528\u3059\u308b\nconst ScopedRenderStates2D blend{ BlendState::MaxAlpha };\n// \u5f71\u3092\u53f3\u4e0b\u65b9\u5411\u306b\u843d\u3068\u3059\u305f\u3081\u3001\u63cf\u753b\u4f4d\u7f6e\u3092\u305a\u3089\u3059\nconst Transformer2D transform{ Mat3x2::Translate(2, 2) };\nShape2D::Hexagon(100, Vec2{ 200, 200 }).draw();\nShape2D::Star(120, Vec2{ 400, 400 }, angle).draw();\nShape2D::RectBalloon(Rect{ 500, 103, 200, 100 }, Vec2{ 480, 240 }).drawFrame(10);\nemoji.rotated(angle).drawAt(600, 500);\n}\n// shadowTexture \u3092\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0 + \u30ac\u30a6\u30b9\u307c\u304b\u3057\n{\nShader::Downsample(shadowTexture, blur4);\nShader::GaussianBlur(blur4, internal4, blur4);\n}\n// \u307c\u304b\u3057\u305f\u5f71\u3092\u63cf\u304f\nblur4.resized(Scene::Size()).draw(ColorF{ 0.0, 0.5 });\n// \u901a\u5e38\u306e\u5f62\u72b6\u3092\u63cf\u304f\nif (not MouseL.pressed())\n{\nShape2D::Hexagon(100, Vec2{ 200, 200 }).draw();\nShape2D::Star(120, Vec2{ 400, 400 }, angle).draw(Palette::Yellow);\nShape2D::RectBalloon(Rect{ 500, 100, 200, 100 }, Vec2{ 480, 240 })\n.drawFrame(10, Palette::Seagreen);\nemoji.rotated(angle).drawAt(600, 500);\n}\n}\n}\n</code></pre>"},{"location":"samples/2d/#2-\u7d19\u304b\u3089\u5207\u308a\u629c\u3044\u305f\u3088\u3046\u306a\u63cf\u753b","title":"2. \u7d19\u304b\u3089\u5207\u308a\u629c\u3044\u305f\u3088\u3046\u306a\u63cf\u753b","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 1.0, 0.9, 0.7 });\nconstexpr Vec2 pos{ 220, 60 };\nconst Image image{ U\"example/siv3d-kun.png\" };\nconst Texture texture{ image };\n// \u753b\u50cf\u306e\u8f2a\u90ed\u304b\u3089 Polygon \u3092\u4f5c\u6210\u3059\u308b\nconst Polygon polygon = image.alphaToPolygon(160, AllowHoles::No);\n// \u51f8\u5305\u3092\u8a08\u7b97\u3059\u308b\nconst Polygon convexHull = polygon.computeConvexHull();\n// Polygon \u3092\u592a\u3089\u305b\u308b\nconst Polygon largeConvex = convexHull.calculateBuffer(20);\n// \u5f71\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\nconst RenderTexture shadowTexture{ Scene::Size(), ColorF{ 1.0, 0.0 } };\nconst RenderTexture gaussianA4{ shadowTexture.size() / 4 };\nconst RenderTexture gaussianB4{ shadowTexture.size() / 4 };\nwhile (System::Update())\n{\n// \u5f71\u306e\u5f62\u72b6\u3092\u63cf\u304f\n{\nconst ScopedRenderTarget2D target{ shadowTexture.clear(ColorF{ 1.0, 0.0 }) };\nconst ScopedRenderStates2D blend{ BlendState::MaxAlpha };\nconst Transformer2D transform{ Mat3x2::Translate(6, 6) };\nlargeConvex.draw(pos);\n}\n// shadowTexture \u3092\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0 + \u30ac\u30a6\u30b9\u307c\u304b\u3057\n{\nShader::Downsample(shadowTexture, gaussianA4);\nShader::GaussianBlur(gaussianA4, gaussianB4, gaussianA4);\n}\n// \u307c\u304b\u3057\u305f\u5f71\u3092\u63cf\u304f\ngaussianA4.resized(Scene::Size()).draw(ColorF{ 0.0, 0.5 });\nlargeConvex.draw(pos, ColorF{ 0.96, 0.98, 1.0 });\ntexture.draw(pos);\n}\n}\n</code></pre>"},{"location":"samples/2d/#3-\u4ed8\u7b8b","title":"3. \u4ed8\u7b8b","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid DrawStickyNote(const RectF&amp; rect, const ColorF&amp; noteColor)\n{\n// \u5c11\u3057\u3060\u3051\u56de\u8ee2\u3055\u305b\u3066\u5f71\u3092\u63cf\u304f\n{\nconst Transformer2D t{ Mat3x2::Rotate(2_deg, rect.pos) };\nrect.stretched(-2, 1, 1, -4).drawShadow(Vec2{ 0, 0 }, 12, 0, ColorF{ 0.0, 0.4 });\n}\nrect.draw(noteColor);\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 1.0, 0.98, 0.96 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nwhile (System::Update())\n{\nfor (auto i : step(10))\n{\nconst RectF rect{ (80 + i / 5 * 280), (40 + i % 5 * 90), 230, 70 };\nDrawStickyNote(rect, HSV{ (i * 36), 0.46, 1.0 });\nfont(U\"Text\").draw(36, rect.pos.movedBy(20, 10), ColorF{ 0.1, 0.95 });\n}\n}\n}\n</code></pre>"},{"location":"samples/2d/#4-\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u53cd\u5c04","title":"4. \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u53cd\u5c04","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Array&lt;Texture&gt; textures =\n{\nTexture{ U\"\ud83d\udcb9\"_emoji },\nTexture{ U\"\ud83d\udcc5\"_emoji },\nTexture{ U\"\ud83c\udfe1\"_emoji },\n};\nconstexpr Size ImageSize = Emoji::ImageSize;\nwhile (System::Update())\n{\nRect{ 0, 300, 800, 300 }.draw(ColorF{ 0.2, 0.3, 0.4 });\nfor (auto&amp;&amp; [i, texture] : Indexed(textures))\n{\nconst Vec2 pos{ (140 + i * 200), 220 };\ntexture.draw(pos);\n// \u53cd\u5c04\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\ntexture(0, (ImageSize.y / 2), ImageSize.x, (ImageSize.y / 2))\n.flipped()\n.draw(pos.x, (pos.y + ImageSize.y),\nArg::top(1.0, 0.8), Arg::bottom(1.0, 0.0));\n}\n}\n}\n</code></pre>"},{"location":"samples/2d/#5-2d-\u30e9\u30a4\u30c8\u30d6\u30eb\u30fc\u30e0","title":"5. 2D \u30e9\u30a4\u30c8\u30d6\u30eb\u30fc\u30e0","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid DrawScene(const Texture&amp; emoji)\n{\nCircle{ 680, 40, 20 }.draw();\nRect{ Arg::center(680, 110), 30 }.draw();\nTriangle{ 680, 180, 40 }.draw();\nCircle{ 740, 40, 20 }.draw(HSV{ 0 });\nRect{ Arg::center(740, 110), 30 }.draw(HSV{ 120 });\nTriangle{ 740, 180, 40 }.draw(HSV{ 240 });\nCircle{ 50, 200, 300 }.drawFrame(4);\nCircle{ 550, 450, 200 }.drawFrame(4);\nfor (auto i : step(12))\n{\nconst double angle = (i * 30_deg + Scene::Time() * 5_deg);\nconst Vec2 pos = OffsetCircular{ Scene::Center(), 200, angle };\nCircle{ pos, 8 }.draw(HSV{ i * 30 });\n}\nemoji.drawAt(400, 300);\n}\nvoid Main()\n{\nconst Size sceneSize{ 800, 600 };\nconst Texture emoji{ U\"\ud83d\udc08\"_emoji };\n// \u30d6\u30eb\u30fc\u30e0\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\nconst RenderTexture blur1{ sceneSize };\nconst RenderTexture internal1{ sceneSize };\nconst RenderTexture blur4{ sceneSize / 4 };\nconst RenderTexture internal4{ sceneSize / 4 };\nconst RenderTexture blur8{ sceneSize / 8 };\nconst RenderTexture internal8{ sceneSize / 8 };\n// 3 \u7a2e\u985e\u306e\u307c\u304b\u3057\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5bc4\u4e0e\u5ea6\ndouble a1 = 0.0, a4 = 0.0, a8 = 0.0;\nwhile (System::Update())\n{\n// \u901a\u5e38\u306e\u30b7\u30fc\u30f3\u63cf\u753b\n{\nDrawScene(emoji);\n}\n// \u30d6\u30eb\u30fc\u30e0\u7528\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u7528\u610f\u3059\u308b\n{\n// \u30b7\u30fc\u30f3\u3092\u63cf\u304f\n{\n// \u30d6\u30eb\u30fc\u30e0\u7528\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u3059\u308b\nconst ScopedRenderTarget2D target{ blur1.clear(ColorF{ 0.0 }) };\n// \u30b7\u30fc\u30f3\u3092\u63cf\u304f\nDrawScene(emoji);\n} // blur1 \u306e\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u89e3\u9664\u3055\u308c\u308b\n// (1) blur1: 1x blur\nShader::GaussianBlur(blur1, internal1, blur1);\n// (2) blur4: 1x blur + 1/4 scale + 1x blur \nShader::Downsample(blur1, blur4);\nShader::GaussianBlur(blur4, internal4, blur4);\n// (3) blur8: 1x blur + 1/4 scale + 1x blur + 1/2 scale + 1x blur\nShader::Downsample(blur4, blur8);\nShader::GaussianBlur(blur8, internal8, blur8);\n}\n{\nconst ScopedRenderStates2D blend{ BlendState::Additive };\nif (a1)\n{\nblur1.resized(sceneSize).draw(ColorF{ a1 });\n}\nif (a4)\n{\nblur4.resized(sceneSize).draw(ColorF{ a4 });\n}\nif (a8)\n{\nblur8.resized(sceneSize).draw(ColorF{ a8 });\n}\n}\nSimpleGUI::Slider(U\"a1: {:.1f}\"_fmt(a1), a1, 0.0, 4.0, Vec2{ 40, 40 });\nSimpleGUI::Slider(U\"a4: {:.1f}\"_fmt(a4), a4, 0.0, 4.0, Vec2{ 40, 80 });\nSimpleGUI::Slider(U\"a8: {:.1f}\"_fmt(a8), a8, 0.0, 4.0, Vec2{ 40, 120 });\nif (SimpleGUI::Button(U\"0, 0, 0\", Vec2{ 40, 160 }))\n{\na1 = a4 = a8 = 0.0;\n}\nif (SimpleGUI::Button(U\"0, 0, 1\", Vec2{ 40, 200 }))\n{\na1 = a4 = 0.0;\na8 = 1.0;\n}\nif (SimpleGUI::Button(U\"0, 1, 1\", Vec2{ 40, 240 }))\n{\na1 = 0.0;\na8 = a4 = 1.0;\n}\nif (SimpleGUI::Button(U\"1, 1, 1\", Vec2{ 40, 280 }))\n{\na1 = a4 = a8 = 1.0;\n}\n}\n}\n</code></pre>"},{"location":"samples/2d/#6-\u30d1\u30bf\u30fc\u30f3\u30d6\u30e9\u30b7","title":"6. \u30d1\u30bf\u30fc\u30f3\u30d6\u30e9\u30b7","text":"\u30b3\u30fc\u30c9 pattern_brush.hlsl<pre><code>//\n//\tTextures\n//\nTexture2D g_texture0 : register(t0);\nTexture2D g_texture1 : register(t1);\nSamplerState g_sampler0 : register(s0);\nSamplerState g_sampler1 : register(s1);\nnamespace s3d\n{\n//\n//\tVS Output / PS Input\n//\nstruct PSInput\n{\nfloat4 position\t: SV_POSITION;\nfloat4 color\t: COLOR0;\nfloat2 uv\t\t: TEXCOORD0;\n};\n}\n//\n//\tConstant Buffer\n//\ncbuffer PSConstants2D : register(b0)\n{\nfloat4 g_colorAdd;\nfloat4 g_sdfParam;\nfloat4 g_sdfOutlineColor;\nfloat4 g_sdfShadowColor;\nfloat4 g_internal;\n}\n// \u5b9a\u6570\u30d0\u30c3\u30d5\u30a1 (PS_1)\ncbuffer PatternBrush : register(b1)\n{\nfloat2 g_uvScale;\n}\n//\n//\tFunctions\n//\nfloat4 PS(s3d::PSInput input) : SV_TARGET\n{\nconst float alpha = g_texture0.Sample(g_sampler0, input.uv).r;\nfloat4 texColor = g_texture1.Sample(g_sampler1, input.uv * g_uvScale);\ntexColor.a = alpha;\nreturn ((texColor * input.color) + g_colorAdd);\n}\n</code></pre> pattern_brush.frag<pre><code># version 410\n//\n//\tTextures\n//\nuniform sampler2D Texture0;\nuniform sampler2D Texture1;\n//\n//\tPSInput\n//\nlayout(location = 0) in vec4 Color;\nlayout(location = 1) in vec2 UV;\n//\n//\tPSOutput\n//\nlayout(location = 0) out vec4 FragColor;\n//\n//\tConstant Buffer\n//\nlayout(std140) uniform PSConstants2D\n{\nvec4 g_colorAdd;\nvec4 g_sdfParam;\nvec4 g_sdfOutlineColor;\nvec4 g_sdfShadowColor;\nvec4 g_internal;\n};\n// PS_1\nlayout(std140) uniform PatternBrush\n{\nvec2 g_uvScale;\n};\n//\n//\tFunctions\n//\nvoid main()\n{\nfloat alpha = texture(Texture0, UV).r;\nvec4 texColor = texture(Texture1, UV * g_uvScale);\ntexColor.a = alpha;\nFragColor = (texColor * Color) + g_colorAdd;\n}\n</code></pre> <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30d1\u30bf\u30fc\u30f3\u753b\u50cf\u3092\u4f5c\u308b\nImage CreatePattern()\n{\nImage image{ 16, 16, Palette::White };\nCircle{ 0, 4, 2 }.paint(image, Palette::Black);\nCircle{ 8, 4, 2 }.paint(image, Palette::Black);\nCircle{ 16, 4, 2 }.paint(image, Palette::Black);\nCircle{ 4, 12, 2 }.paint(image, Palette::Black);\nCircle{ 12, 12, 2 }.paint(image, Palette::Black);\nreturn image;\n}\n// \u5b9a\u6570\u30d0\u30c3\u30d5\u30a1 (PS_1)\nstruct PatternBrush\n{\n// \u30d1\u30bf\u30fc\u30f3\u306e UV \u306e\u30b9\u30b1\u30fc\u30eb\nFloat2 uvScale;\n};\nvoid Main()\n{\nconstexpr Size sceneSize{ 600, 600 };\n// \u30d1\u30bf\u30fc\u30f3\u753b\u50cf\u306e\u30c6\u30af\u30b9\u30c1\u30e3\nconst Texture patternTexture{ CreatePattern(), TextureDesc::Mipped };\n// \u30d1\u30bf\u30fc\u30f3\u30d6\u30e9\u30b7\u7528\u306e\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\nconst PixelShader ps = HLSL{ U\"pattern_brush.hlsl\", U\"PS\" }\n| GLSL{ U\"pattern_brush.frag\", { { U\"PSConstants2D\", 0 }, { U\"PatternBrush\", 1 } } };\nif (not ps)\n{\nthrow Error{ U\"Failed to load a shader file\" };\n}\n// \u5b9a\u6570\u30d0\u30c3\u30d5\u30a1\nConstantBuffer&lt;PatternBrush&gt; cb;\ncb-&gt;uvScale = (Float2{ sceneSize } / patternTexture.size());\n// \u30da\u30f3\u3067\u66f8\u304d\u8fbc\u3080\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\nMSRenderTexture renderTexture{ sceneSize, Palette::Black };\n// \u30da\u30f3\u306e\u592a\u3055\nconstexpr double Thickness = 20;\nwhile (System::Update())\n{\nif (MouseL.pressed())\n{\n{\nconst ScopedRenderTarget2D target{ renderTexture };\nif (MouseL.down())\n{\nCircle{ Cursor::PosF(), (Thickness * 0.5) }.draw();\n}\nelse if (MouseL.pressed() &amp;&amp; (not Cursor::Delta().isZero()))\n{\nLine{ Cursor::PreviousPosF(), Cursor::PosF() }\n.draw(LineStyle::RoundCap, Thickness);\n}\n}\nGraphics2D::Flush();\nrenderTexture.resolve();\n}\nRect{ sceneSize }.draw();\n{\n// \u30d1\u30bf\u30fc\u30f3\u753b\u50cf\u3092 PS \u30c6\u30af\u30b9\u30c1\u30e3\u30b9\u30ed\u30c3\u30c8 1 \u306b\u30bb\u30c3\u30c8 \nGraphics2D::SetPSTexture(1, patternTexture);\nGraphics2D::SetPSConstantBuffer(1, cb);\n// \u30d1\u30bf\u30fc\u30f3\u3092\u304f\u308a\u8fd4\u3057\u30de\u30c3\u30d4\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n{\nconst ScopedRenderStates2D sampler{ {ShaderStage::Pixel, 1, SamplerState::RepeatLinear} };\nconst ScopedCustomShader2D shader{ ps };\nrenderTexture.draw();\n}\n}\n// \u30d1\u30bf\u30fc\u30f3\u753b\u50cf\u3092\u53f3\u4e0a\u306b\u8868\u793a\npatternTexture.draw(620, 20);\n}\n}\n</code></pre>"},{"location":"samples/2d/#7-2d-\u63cf\u753b\u306b\u304a\u3051\u308b\u5c04\u5f71\u5909\u63db","title":"7. 2D \u63cf\u753b\u306b\u304a\u3051\u308b\u5c04\u5f71\u5909\u63db","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nstruct Homography\n{\nFloat4 m1;\nFloat4 m2;\nFloat4 m3;\n};\n// \u30c1\u30a7\u30c3\u30ab\u30fc\u30d1\u30bf\u30fc\u30f3\u306e Image \u3092\u4f5c\u308b\nImage MakeCheckerPattern()\n{\nImage image{ 1280, 720 , Palette::White };\nfor (auto p : step(image.size() / Size{ 40, 40 }))\n{\nif (IsEven(p.x + p.y))\n{\nRect{ p * 40, 40 }.overwrite(image, Color{ 40 });\n}\n}\nreturn image;\n}\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture{ U\"example/bay.jpg\", TextureDesc::Mipped };\nconst Texture checker{ MakeCheckerPattern(), TextureDesc::Mipped };\nconstexpr double circleR = 12.0;\nconst VertexShader vs = HLSL{ U\"example/shader/hlsl/homography.hlsl\", U\"VS\" }\n| GLSL{ U\"example/shader/glsl/homography.vert\", { { U\"VSConstants2D\", 0 }, { U\"VSHomography\", 1} } };\nconst PixelShader ps = HLSL{ U\"example/shader/hlsl/homography.hlsl\", U\"PS\" }\n| GLSL{ U\"example/shader/glsl/homography.frag\", { { U\"PSConstants2D\", 0 }, { U\"PSHomography\", 1} } };\nif ((not vs) || (not ps))\n{\nthrow Error{ U\"Failed to load shader files\" };\n}\nConstantBuffer&lt;Homography&gt; vsHomography;\nConstantBuffer&lt;Homography&gt; psHomography;\nQuad quad{ Vec2{100, 300}, Vec2{500, 300}, Vec2{500, 600}, Vec2{100, 600} };\nOptional&lt;size_t&gt; grabbedIndex;\nbool homography = true;\nwhile (System::Update())\n{\nSimpleGUI::CheckBox(homography, U\"Homography\", Vec2{ 40, 40 });\nif (homography)\n{\nconst ScopedCustomShader2D shader{ vs, ps };\nconst ScopedRenderStates2D sampler{ SamplerState::ClampAniso };\n{\nconst Mat3x3 mat = Mat3x3::Homography(quad.movedBy(580, 0));\nvsHomography = { Float4{ mat._11_12_13, 0 }, Float4{ mat._21_22_23, 0 }, Float4{ mat._31_32_33, 0 } };\nGraphics2D::SetVSConstantBuffer(1, vsHomography);\nconst Mat3x3 inv = mat.inverse();\npsHomography = { Float4{ inv._11_12_13, 0 }, Float4{ inv._21_22_23, 0 }, Float4{ inv._31_32_33, 0 } };\nGraphics2D::SetPSConstantBuffer(1, psHomography);\n// 1x1 \u306e Rect \u306b\u8cbc\u308a\u4ed8\u3051\u3066\u63cf\u304f\u3068\u3001\u9069\u5207\u306b\u30db\u30e2\u30b0\u30e9\u30d5\u30a3\u5909\u63db\u3055\u308c\u308b\nRect{ 1 }(checker).draw();\n}\n{\nconst Mat3x3 mat = Mat3x3::Homography(quad);\nvsHomography = { Float4{ mat._11_12_13, 0 }, Float4{ mat._21_22_23, 0 }, Float4{ mat._31_32_33, 0 } };\nGraphics2D::SetVSConstantBuffer(1, vsHomography);\nconst Mat3x3 inv = mat.inverse();\npsHomography = { Float4{ inv._11_12_13, 0 }, Float4{ inv._21_22_23, 0 }, Float4{ inv._31_32_33, 0 } };\nGraphics2D::SetPSConstantBuffer(1, psHomography);\n// 1x1 \u306e Rect \u306b\u8cbc\u308a\u4ed8\u3051\u3066\u63cf\u304f\u3068\u3001\u9069\u5207\u306b\u30db\u30e2\u30b0\u30e9\u30d5\u30a3\u5909\u63db\u3055\u308c\u308b\nRect{ 1 }(texture).draw();\n}\n}\nelse\n{\nquad.movedBy(580, 0)(checker).draw();\nquad(texture).draw();\n}\nif (grabbedIndex)\n{\nif (not MouseL.pressed())\n{\ngrabbedIndex.reset();\n}\nelse\n{\nquad.p(*grabbedIndex).moveBy(Cursor::DeltaF());\n}\n}\nelse\n{\nfor (auto i : step(4))\n{\nconst Circle circle = quad.p(i).asCircle(circleR);\nif (circle.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\nif (circle.leftClicked())\n{\ngrabbedIndex = i;\nbreak;\n}\n}\n}\nfor (auto i : step(4))\n{\nquad.p(i).asCircle(circleR).draw(ColorF{ 1.0, 0.3, 0.3, 0.5 });\n}\n}\n}\n</code></pre>"},{"location":"samples/2d/#8-\u30c9\u30c3\u30c8\u7d75\u3092\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3055\u305b\u308b","title":"8. \u30c9\u30c3\u30c8\u7d75\u3092\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3055\u305b\u308b","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture{ U\"example/spritesheet/siv3d-kun-16.png\" };\nconstexpr int32 patterns[4] = { 1, 2, 1, 0 };\nwhile (System::Update())\n{\nconst ScopedRenderStates2D sampler{ SamplerState::ClampNearest };\nconst uint64 t = Time::GetMillisec();\nconst int32 x = ((t / 2000 % 2) * 3);\nconst int32 y = (t / 4000 % 4);\nconst int32 n = (t / 250 % 4);\nRect{ ((patterns[n] + x) * 20 * 4), (y * 28 * 4), (20 * 4), (28 * 4) }\n.draw(ColorF{ 0.3, 0.9, 0.8 });\ntexture.scaled(4).draw();\nRect{ 520, 60, (20 * 8 + 80), (28 * 8 + 80) }\n.draw(ColorF{ 0.5, 0.9, 0.5 });\ntexture((patterns[n] + x) * 20, (y * 28), 20, 28)\n.scaled(8).draw(560, 100);\n}\n}\n</code></pre>"},{"location":"samples/2d/#9-\u96c6\u4e2d\u7dda\u306e\u63cf\u753b","title":"9. \u96c6\u4e2d\u7dda\u306e\u63cf\u753b","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.98, 0.96, 0.94 });\nconst Texture texture{ U\"\ud83e\udd80\"_emoji };\nEllipse target{ 400, 300, 180, 120 };\nRect outer = Scene::Rect();\ndouble minThickness = 3.0, maxThickness = 10.0;\ndouble lineCount = 150;\ndouble offsetRange = 60.0;\nSaturatedLinework&lt;Ellipse&gt; linework{ target, outer };\nlinework\n.setThickness(minThickness, maxThickness)\n.setLineCount(static_cast&lt;size_t&gt;(lineCount))\n.setOffsetRange(offsetRange);\nwhile (System::Update())\n{\nif (MouseR.down())\n{\ntarget.setCenter(Cursor::Pos());\nlinework.setTargetShape(target);\n}\ntexture.scaled(1.6).drawAt(target.center);\nlinework.draw(ColorF{ 0.1 });\nif (SimpleGUI::Slider(U\"lineCount\", lineCount, 0.0, 400.0, Vec2{ 20, 20 }, 150))\n{\nlinework.setLineCount(static_cast&lt;size_t&gt;(lineCount));\n}\nif (SimpleGUI::Slider(U\"offsetRange\", offsetRange, 0.0, 100.0, Vec2{ 20, 60 }, 150))\n{\nlinework.setOffsetRange(offsetRange);\n}\n}\n}\n</code></pre>"},{"location":"samples/2d/#10-perlinnoise-\u306e\u751f\u6210","title":"10. PerlinNoise \u306e\u751f\u6210","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nImage image1{ 512, 512, Palette::White };\nImage image2{ 512, 512, Palette::White };\nDynamicTexture texture1{ image1 };\nDynamicTexture texture2{ image2 };\nPerlinNoise noise;\nsize_t oct = 5;\ndouble persistence = 0.5;\nconst Array&lt;String&gt; options = Range(1, 6).map(Format);\nwhile (System::Update())\n{\nSimpleGUI::Headline(U\"octaves\", Vec2{ 40, 540 });\nSimpleGUI::HorizontalRadioButtons(oct, options, Vec2{ 40, 580 });\nSimpleGUI::Headline(U\"persistence\", Vec2{ 400, 540 });\nSimpleGUI::Slider(U\"{:.2f}\"_fmt(persistence), persistence, Vec2{ 400, 580 }, 60, 120);\nif (SimpleGUI::Button(U\"Generate\", Vec2{ 620, 580 }))\n{\nnoise.reseed(RandomUint64());\nconst int32 octaves = static_cast&lt;int32&gt;(oct + 1);\nfor (auto p : step(image1.size()))\n{\nimage1[p] = ColorF{ noise.normalizedOctave2D0_1((p / 128.0), octaves, persistence) };\n}\nfor (auto p : step(image2.size()))\n{\nimage2[p] = ColorF{ noise.octave2D0_1((p / 128.0), octaves, persistence) };\n}\ntexture1.fill(image1);\ntexture2.fill(image2);\n}\ntexture1.draw();\ntexture2.draw(512, 0);\n}\n}\n</code></pre>"},{"location":"samples/2d/#11-\u30ad\u30fc\u30d5\u30ec\u30fc\u30e0\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3","title":"11. \u30ad\u30fc\u30d5\u30ec\u30fc\u30e0\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture texture1{ U\"\ud83d\udc25\"_emoji };\nconst Texture texture2{ U\"\ud83d\udc22\"_emoji };\nSimpleAnimation a1;\na1.setLoop(12s)\n.set(U\"r\", { 0.5s, 0 }, { 1.5s, 1 }, EaseOutBounce)\n.set(U\"g\", { 1s, 0 }, { 2s, 1 }, EaseOutBounce)\n.set(U\"b\", { 1.5s, 0 }, { 2.5s, 1 }, EaseOutBounce)\n.set(U\"angle\", { 3s, 0_deg }, { 8.5s, 720_deg }, EaseOutBounce)\n.set(U\"size\", { 0s, 0 }, { 0.5s, 320 }, EaseOutExpo)\n.set(U\"size\", { 9s, 320 }, { 9.5s, 0 }, EaseOutExpo)\n.start();\nSimpleAnimation a2;\na2.setLoop(6s)\n.set(U\"x\", { 1s, 150 }, { 3s, 650 }, EaseInOutExpo)\n.set(U\"y\", { 0s, 350 }, { 1s, 150 }, EaseOutBack)\n.set(U\"y\", { 3s, 150 }, { 4s, 350 }, EaseInQuad)\n.set(U\"t\", { 0s, 0 }, { 4s, 12_pi }, EaseInOutQuad)\n.set(U\"a\", { 5s, 1 }, { 6s, 0 }, EaseOutCubic)\n.start();\nSimpleAnimation a3;\na3.setLoop(6s)\n.set(U\"x\", { 0s, 100 }, { 3s, 700 }, EaseInOutQuad)\n.set(U\"x\", { 3s, 700 }, { 6s, 100 }, EaseInOutQuad)\n.set(U\"mirrored\", { 0s, 1 }, { 3s, 1 })\n.set(U\"mirrored\", { 3s, 0 }, { 6s, 0 })\n.start();\nwhile (System::Update())\n{\nTriangle{ Scene::Center(), a1[U\"size\"], a1[U\"angle\"] }\n.draw(ColorF{ a1[U\"r\"], 0, 0 }, ColorF{ 0, a1[U\"g\"], 0 }, ColorF{ 0, 0, a1[U\"b\"] });\ntexture1\n.drawAt(a2[U\"x\"], a2[U\"y\"] + Math::Sin(a2[U\"t\"]) * 20.0, ColorF{ 1, a2[U\"a\"] });\ntexture2\n.mirrored(a3[U\"mirrored\"])\n.drawAt(a3[U\"x\"], 500);\n}\n}\n</code></pre>"},{"location":"samples/2d/#12-\u6db2\u4f53\u98a8\u306e-hp-\u30d0\u30fc","title":"12. \u6db2\u4f53\u98a8\u306e HP \u30d0\u30fc","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nclass LiquidBar\n{\npublic:\nLiquidBar() = default;\nexplicit LiquidBar(const Rect&amp; rect)\n: m_rect{ rect } {}\nvoid update(double targetHP)\n{\nm_targetHP = targetHP;\nm_liquidHP = Math::SmoothDamp(m_liquidHP, targetHP, m_liquidHPVelocity, LiquidSmoothTime);\nif (m_solidHP &lt; targetHP)\n{\nm_solidHP = targetHP;\n}\nelse\n{\nm_solidHP = Math::SmoothDamp(m_solidHP, targetHP, m_solidHPVelocity, SolidSmoothTime, MaxSolidBarSpeed);\n}\n}\nvoid draw(const ColorF&amp; liquidColorFront, const ColorF&amp; liquidColorBack, const ColorF&amp; solidColor) const\n{\n// \u30d0\u30fc\u306e\u80cc\u666f\u3092\u63cf\u304f\nm_rect.draw(ColorF{ 0.2, 0.15, 0.25 });\n// \u30d0\u30fc\u306e\u67a0\u3092\u63cf\u304f\nm_rect.drawFrame(2, 0);\nconst Point basePos = m_rect.pos.movedBy(FrameThickness, FrameThickness);\nconst int32 height = (m_rect.h - (FrameThickness * 2));\nconst double width = (m_rect.w - (FrameThickness * 2));\nconst double solidWidth = Min(Max((width * m_solidHP) + (height * 0.5 * 0.3), 0.0), width);\nconst double liquidWidth = (width * m_liquidHP);\n// \u56fa\u4f53\u30d0\u30fc\u3092\u63cf\u304f\n{\nconst RectF solidBar{ basePos, solidWidth, height };\nconst double alpha = ((0.005 &lt; AbsDiff(m_targetHP, m_solidHP)) ? 1.0 : (AbsDiff(m_targetHP, m_solidHP) / 0.005));\nsolidBar.draw(ColorF{ solidColor, alpha });\n}\n// \u6db2\u4f53\u30d0\u30fc\u3092\u63cf\u304f\n{\nconst double t = Scene::Time();\nconst double offsetScale = ((m_liquidHP &lt; 0.05) ? (m_liquidHP / 0.05) : (0.98 &lt; m_liquidHP) ? 0.0 : 1.0);\n// \u80cc\u666f\u306e\u6db2\u4f53\u30d0\u30fc\u3092\u63cf\u304f\nfor (int32 i = 0; i &lt; height; ++i)\n{\nconst Vec2 pos = basePos.movedBy(0, i);\nconst double waveOffset = (i * 0.3)\n+ (Math::Sin(i * 17_deg + t * 800_deg) * 0.8)\n+ (Math::Sin(i * 11_deg + t * 700_deg) * 1.2)\n+ (Math::Sin(i * 7_deg + t * 550_deg) * 1.6);\nconst RectF rect{ pos, Clamp((liquidWidth + waveOffset * offsetScale), 0.0, width), 1 };\nconst double distance = Clamp(1.0 - i / (height - 1.0) + 0.7, 0.0, 1.0);\nHSV hsv{ liquidColorBack };\nhsv.v *= Math::Pow(distance, 2.0);\nrect.draw(hsv);\n}\n// \u524d\u666f\u306e\u6db2\u4f53\u30d0\u30fc\u3092\u63cf\u304f\nfor (int32 i = 0; i &lt; height; ++i)\n{\nconst Vec2 pos = basePos.movedBy(0, i);\nconst double waveOffset = (i * 0.3)\n+ (Math::Sin(i * 17_deg - t * 800_deg) * 0.8)\n+ (Math::Sin(i * 11_deg - t * 700_deg) * 1.2)\n+ (Math::Sin(i * 7_deg - t * 550_deg) * 1.6);\nconst RectF rect{ pos, Clamp((liquidWidth + waveOffset * offsetScale), 0.0, width), 1 };\nconst double distance = Clamp(1.0 - i / (height - 1.0) + 0.7, 0.0, 1.0);\nHSV hsv{ liquidColorFront };\nhsv.v *= Math::Pow(distance, 2.0);\nrect.draw(hsv);\n}\n}\n}\nprivate:\n// \u6db2\u4f53\u30d0\u30fc\u304c\u6e1b\u5c11\u3059\u308b\u3068\u304d\u306e\u5e73\u6ed1\u5316\u6642\u9593\uff08\u5c0f\u3055\u3044\u3068\u65e9\u304f\u76ee\u6a19\u306b\u5230\u9054\uff09\nstatic constexpr double LiquidSmoothTime = 0.03;\n// \u56fa\u4f53\u30d0\u30fc\u304c\u6e1b\u5c11\u3059\u308b\u3068\u304d\u306e\u5e73\u6ed1\u5316\u6642\u9593\uff08\u5c0f\u3055\u3044\u3068\u65e9\u304f\u76ee\u6a19\u306b\u5230\u9054\uff09\nstatic constexpr double SolidSmoothTime = 0.5;\n// \u56fa\u4f53\u30d0\u30fc\u304c\u6e1b\u5c11\u3059\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u901f\u3055\nstatic constexpr double MaxSolidBarSpeed = 0.25;\nstatic constexpr int32 FrameThickness = 2;\nRect m_rect = Rect::Empty();\ndouble m_targetHP = 1.0;\ndouble m_liquidHP = 1.0;\ndouble m_solidHP = 1.0;\ndouble m_liquidHPVelocity = 0.0;\ndouble m_solidHPVelocity = 0.0;\n};\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nLiquidBar bar1{ Rect{ 100, 100, 200, 30 } };\nLiquidBar bar2{ Rect{ 100, 200, 300, 50 } };\ndouble hp = 1.0;\nwhile (System::Update())\n{\nbar1.update(hp);\nbar2.update(hp);\nbar1.draw(ColorF{ 0.9, 0.1, 0.1 }, ColorF{ 0.7, 0.05, 0.05 }, ColorF{ 0.9, 0.5, 0.1 });\nbar2.draw(ColorF{ 0.9, 0.1, 0.1 }, ColorF{ 0.7, 0.05, 0.05 }, ColorF{ 0.9, 0.5, 0.1 });\nSimpleGUI::Slider(U\"{:.2f}\"_fmt(hp), hp, Vec2{ 440, 100 }, 60, 160);\n}\n}\n</code></pre>"},{"location":"samples/2d/#13-\u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u30b7\u30b9\u30c6\u30e0","title":"13. \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u30b7\u30b9\u30c6\u30e0","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// Siv3D-kun \u306e\u5f62\u306e Polygon \u3092\u4f5c\u6210\nPolygon CreatePolygon()\n{\nreturn Image{ U\"example/siv3d-kun.png\" }\n.alphaToPolygonCentered().simplified(1).scaled(1.3);\n}\nvoid Main()\n{\nWindow::Resize(1280, 720);\nconst Texture textureSiv3D{ U\"example/siv3d-kun.png\" };\nconst std::array&lt;BlendState, 4&gt; blends = {\nBlendState::Default2D, BlendState::Additive, BlendState::Opaque, BlendState::Subtractive\n};\n// \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\nconst Texture texture{ U\"example/particle.png\", TextureDesc::Mipped };\n// \u30c7\u30d0\u30c3\u30b0\u30e2\u30fc\u30c9\u306b\u3059\u308b\u304b\nbool debugMode = false;\n// \u80cc\u666f\u3092\u767d\u306b\u3059\u308b\u304b\nbool whiteBackground = false;\n// Siv3D-kun \u3092\u8868\u793a\u3059\u308b\u304b\nbool drawTexture = false;\nVec2 position{ 300, 340 };\nVec2 force{ 0.0, 0.0 };\nHSV startColor = ColorF{ 1.0 };\nsize_t blendIndex = 1;\nsize_t emitterIndex = 1;\nCircleEmitter2D circleEmitter;\nArcEmitter2D arcEmitter;\nRectEmitter2D rectEmitter;\nPolygonEmitter2D polygonEmitter{ CreatePolygon() };\nParticleSystem2DParameters parameters;\nParticleSystem2D particleSystem{ position, force };\nparticleSystem.setEmitter(arcEmitter);\nparticleSystem.setTexture(texture);\nparticleSystem.setParameters(parameters);\nparticleSystem.prewarm();\nwhile (System::Update())\n{\n// \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u306e\u500b\u6570\u3092\u8868\u793a\u3059\u308b\nClearPrint();\nPrint &lt;&lt; U\"{} particles\"_fmt(particleSystem.num_particles());\n// \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u3092\u66f4\u65b0\u3059\u308b\nparticleSystem.update();\nif (debugMode)\n{\n// \u30c7\u30d0\u30c3\u30b0\u30e2\u30fc\u30c9\u3067\u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u3092\u63cf\u753b\u3059\u308b\nparticleSystem.drawDebug();\n}\nelse\n{\n// \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u3092\u63cf\u753b\u3059\u308b\nparticleSystem.draw();\n}\nif (emitterIndex == 3 &amp;&amp; drawTexture)\n{\n// Siv3D-kun \u3092\u8868\u793a\u3059\u308b\ntextureSiv3D.scaled(1.3).drawAt(position);\n}\nif (MouseR.pressed())\n{\n// \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u306e\u767a\u751f\u4f4d\u7f6e\u3092\u79fb\u52d5\u3055\u305b\u308b\nparticleSystem.setPosition(position = Cursor::Pos());\n}\nSimpleGUI::CheckBox(debugMode, U\"Debug\", Vec2{ 80, 660 }, 140);\nSimpleGUI::CheckBox(whiteBackground, U\"White\", Vec2{ 240, 660 }, 140);\nSimpleGUI::CheckBox(drawTexture, U\"Texture\", Vec2{ 400, 660 }, 140, (emitterIndex == 3));\nScene::SetBackground(whiteBackground ? Color{ 250, 252, 255 } : Palette::DefaultBackground);\nconst int32 x0 = 560, x1 = 900;\n{\nSimpleGUI::Slider(U\"Rate\", parameters.rate, 1.0, 500.0, Vec2{ x0, 20 }, 120, 200);\nSimpleGUI::Slider(U\"Max\", parameters.maxParticles, 50.0, 2500.0, Vec2{ x0, 60 }, 120, 200);\nSimpleGUI::Slider(U\"LifeTime\", parameters.startLifeTime, 0.0, 5.0, Vec2{ x0, 100 }, 120, 200);\nSimpleGUI::Slider(U\"Speed\", parameters.startSpeed, 0.0, 320.0, Vec2{ x0, 140 }, 120, 200);\nSimpleGUI::Slider(U\"Color H\", startColor.h, 0.0, 360.0, Vec2{ x0, 180 }, 120, 200);\nSimpleGUI::Slider(U\"Color S\", startColor.s, 0.0, 1.0, Vec2{ x0, 220 }, 120, 200);\nSimpleGUI::Slider(U\"Color V\", startColor.v, 0.0, 1.0, Vec2{ x0, 260 }, 120, 200);\nSimpleGUI::Slider(U\"Color A\", startColor.a, 0.0, 1.0, Vec2{ x0, 300 }, 120, 200);\nSimpleGUI::Slider(U\"Size\", parameters.startSize, 0.0, 150.0, Vec2{ x0, 340 }, 120, 200);\nSimpleGUI::Slider(U\"Rotation\", parameters.startRotationDeg, -180, 180, Vec2{ x0, 380 }, 120, 200);\nSimpleGUI::Slider(U\"AngularVel\", parameters.startAngularVelocityDeg, -720, 720, Vec2{ x0, 420 }, 120, 200);\nSimpleGUI::Slider(U\"Force X\", force.x, -320.0, 320.0, Vec2{ x0, 460 }, 120, 200);\nSimpleGUI::Slider(U\"Force Y\", force.y, -320, 320.0, Vec2{ x0, 500 }, 120, 200);\nSimpleGUI::RadioButtons(blendIndex, { U\"Default\", U\"Additive\", U\"Opaque\", U\"Subtractive\" }, Vec2{ x0, 540 }, 320);\nparameters.blendState = blends[blendIndex];\nparameters.startColor = startColor;\nparticleSystem.setParameters(parameters);\nparticleSystem.setForce(force);\n}\n{\nbool changed = false;\nchanged |= SimpleGUI::RadioButtons(emitterIndex, { U\"Circle\", U\"Arc\", U\"Rect\", U\"Polygon\" }, Vec2{ x1, 20 }, 360);\nif (emitterIndex == 0)\n{\nchanged |= SimpleGUI::Slider(U\"Source Radius\", circleEmitter.sourceRadius, 0.0, 40.0, Vec2{ x1, 180 }, 160, 200);\nchanged |= SimpleGUI::Slider(U\"R\", circleEmitter.r, 0.0, 320.0, Vec2{ x1, 220 }, 160, 200);\nchanged |= SimpleGUI::CheckBox(circleEmitter.randomDirection, U\"Random Direction\", Vec2{ x1, 260 }, 360);\nchanged |= SimpleGUI::CheckBox(circleEmitter.fromShell, U\"From Shell\", Vec2{ x1, 300 }, 300);\nif (changed) // setEmitter \u306f\u91cd\u3044\u51e6\u7406\u306a\u306e\u3067\u3001\u5909\u66f4\u304c\u3042\u3063\u305f\u6642\u3060\u3051\n{\nparticleSystem.setEmitter(circleEmitter);\n}\n}\nelse if (emitterIndex == 1)\n{\nchanged |= SimpleGUI::Slider(U\"Source Radius\", arcEmitter.sourceRadius, 0.0, 40.0, Vec2{ x1, 180 }, 160, 200);\nchanged |= SimpleGUI::Slider(U\"R\", arcEmitter.r, 0.0, 320.0, Vec2{ x1, 220 }, 160, 200);\nchanged |= SimpleGUI::Slider(U\"Direction\", arcEmitter.direction, -180, 180, Vec2{ x1, 260 }, 160, 200);\nchanged |= SimpleGUI::Slider(U\"Angle\", arcEmitter.angle, 0.0, 360, Vec2{ x1, 300 }, 160, 200);\nchanged |= SimpleGUI::CheckBox(arcEmitter.randomDirection, U\"Random Direction\", Vec2{ x1, 340 }, 360);\nchanged |= SimpleGUI::CheckBox(arcEmitter.fromShell, U\"From Shell\", Vec2{ x1, 380 }, 360);\nif (changed) // setEmitter \u306f\u91cd\u3044\u51e6\u7406\u306a\u306e\u3067\u3001\u5909\u66f4\u304c\u3042\u3063\u305f\u6642\u3060\u3051\n{\nparticleSystem.setEmitter(arcEmitter);\n}\n}\nelse if (emitterIndex == 2)\n{\nchanged |= SimpleGUI::Slider(U\"Source Radius\", rectEmitter.sourceRadius, 0.0, 40.0, Vec2{ x1, 180 }, 160, 200);\nchanged |= SimpleGUI::Slider(U\"Width\", rectEmitter.width, 0, 720, Vec2{ x1, 220 }, 160, 200);\nchanged |= SimpleGUI::Slider(U\"Height\", rectEmitter.height, 0, 720, Vec2{ x1, 260 }, 160, 200);\nchanged |= SimpleGUI::CheckBox(rectEmitter.randomDirection, U\"Random Direction\", Vec2{ x1, 300 }, 360);\nchanged |= SimpleGUI::CheckBox(rectEmitter.fromShell, U\"From Shell\", Vec2{ x1, 340 }, 360);\nif (changed) // setEmitter \u306f\u91cd\u3044\u51e6\u7406\u306a\u306e\u3067\u3001\u5909\u66f4\u304c\u3042\u3063\u305f\u6642\u3060\u3051\n{\nparticleSystem.setEmitter(rectEmitter);\n}\n}\nelse if (emitterIndex == 3)\n{\nif (changed) // setEmitter \u306f\u91cd\u3044\u51e6\u7406\u306a\u306e\u3067\u3001\u5909\u66f4\u304c\u3042\u3063\u305f\u6642\u3060\u3051\n{\nparticleSystem.setEmitter(polygonEmitter);\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/2d/#14-\u30b2\u30fc\u30e0\u3078\u306e\u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u30b7\u30b9\u30c6\u30e0\u7d44\u307f\u8fbc\u307f","title":"14. \u30b2\u30fc\u30e0\u3078\u306e\u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u30b7\u30b9\u30c6\u30e0\u7d44\u307f\u8fbc\u307f","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30dc\u30fc\u30eb\u7528\u306e\u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u30af\u30e9\u30b9\nclass BallParticleSystem\n{\npublic:\nBallParticleSystem(const Vec2&amp; pos, const Vec2&amp; force)\n: m_system{ pos, force }\n, m_texture{ U\"example/particle.png\", TextureDesc::Mipped }\n{\nm_system.setTexture(m_texture);\n// \u30d1\u30e9\u30e1\u30fc\u30bf\nParticleSystem2DParameters parameters;\nparameters.rate = 300.0;\nparameters.startSpeed = 50.0;\nparameters.startColor = HSV{ 10.0, 0.8, 0.25 };\nparameters.startSize = 60.0;\nparameters.blendState = BlendState::Additive;\nm_system.setParameters(parameters);\n// \u30a8\u30df\u30c3\u30bf\u30fc\nCircleEmitter2D circleEmitter;\ncircleEmitter.r = 12.0;\nm_system.setEmitter(circleEmitter);\nm_system.prewarm();\n}\nvoid setPos(const Vec2&amp; pos)\n{\nm_system.setPosition(pos);\n}\nvoid update()\n{\nm_system.update();\n}\nvoid draw() const\n{\nm_system.draw();\n}\nprivate:\n// 2D \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u30b7\u30b9\u30c6\u30e0\nParticleSystem2D m_system;\n// \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\nTexture m_texture;\n};\n# include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// 1 \u3064\u306e\u30d6\u30ed\u30c3\u30af\u306e\u30b5\u30a4\u30ba | Size of a single block\nconstexpr Size BrickSize{ 40, 20 };\n// \u30dc\u30fc\u30eb\u306e\u901f\u3055\uff08\u30d4\u30af\u30bb\u30eb / \u79d2\uff09 | Ball speed (pixels / second)\nconstexpr double BallSpeedPerSec = 480.0;\n// \u30dc\u30fc\u30eb\u306e\u901f\u5ea6 | Ball velocity\nVec2 ballVelocity{ 0, -BallSpeedPerSec };\n// \u30dc\u30fc\u30eb | Ball\nCircle ball{ 400, 400, 8 };\n// \u30d6\u30ed\u30c3\u30af\u306e\u914d\u5217 | Array of bricks\nArray&lt;Rect&gt; bricks;\nfor (int32 y = 0; y &lt; 5; ++y)\n{\nfor (int32 x = 0; x &lt; (Scene::Width() / BrickSize.x); ++x)\n{\nbricks &lt;&lt; Rect{ (x* BrickSize.x), (60 + y * BrickSize.y), BrickSize };\n}\n}\n// \u30dc\u30fc\u30eb\u7528\u306e\u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u30af\u30e9\u30b9\nBallParticleSystem particleSystem{ ball.center, Vec2{ 0.0, -120 } };\nwhile (System::Update())\n{\n// \u30d1\u30c9\u30eb | Paddle\nconst Rect paddle{ Arg::center(Cursor::Pos().x, 500), 60, 10 };\n// \u30dc\u30fc\u30eb\u3092\u79fb\u52d5\u3055\u305b\u308b | Move the ball\nball.moveBy(ballVelocity * Scene::DeltaTime());\n// \u30d6\u30ed\u30c3\u30af\u3092\u9806\u306b\u30c1\u30a7\u30c3\u30af\u3059\u308b | Check bricks in sequence\nfor (auto it = bricks.begin(); it != bricks.end(); ++it)\n{\n// \u30d6\u30ed\u30c3\u30af\u3068\u30dc\u30fc\u30eb\u304c\u4ea4\u5dee\u3057\u3066\u3044\u305f\u3089 | If block and ball intersect\nif (it-&gt;intersects(ball))\n{\n// \u30d6\u30ed\u30c3\u30af\u306e\u4e0a\u8fba\u3001\u307e\u305f\u306f\u5e95\u8fba\u3068\u4ea4\u5dee\u3057\u3066\u3044\u305f\u3089 | If ball intersects with top or bottom of the block\nif (it-&gt;bottom().intersects(ball) || it-&gt;top().intersects(ball))\n{\n// \u30dc\u30fc\u30eb\u306e\u901f\u5ea6\u306e Y \u6210\u5206\u306e\u7b26\u53f7\u3092\u53cd\u8ee2\u3059\u308b | Reverse the sign of the Y component of the ball's velocity\nballVelocity.y *= -1;\n}\nelse // \u30d6\u30ed\u30c3\u30af\u306e\u5de6\u8fba\u307e\u305f\u306f\u53f3\u8fba\u3068\u4ea4\u5dee\u3057\u3066\u3044\u305f\u3089\n{\n// \u30dc\u30fc\u30eb\u306e\u901f\u5ea6\u306e X \u6210\u5206\u306e\u7b26\u53f7\u3092\u53cd\u8ee2\u3059\u308b | Reverse the sign of the X component of the ball's velocity\nballVelocity.x *= -1;\n}\n// \u30d6\u30ed\u30c3\u30af\u3092\u914d\u5217\u304b\u3089\u524a\u9664\u3059\u308b\uff08\u30a4\u30c6\u30ec\u30fc\u30bf\u306f\u7121\u52b9\u306b\u306a\u308b\uff09 | Remove the block from the array (the iterator becomes invalid)\nbricks.erase(it);\n// \u3053\u308c\u4ee5\u4e0a\u30c1\u30a7\u30c3\u30af\u3057\u306a\u3044 | Do not check any more\nbreak;\n}\n}\n// \u5929\u4e95\u306b\u3076\u3064\u304b\u3063\u305f\u3089 | If the ball hits the ceiling\nif ((ball.y &lt; 0) &amp;&amp; (ballVelocity.y &lt; 0))\n{\n// \u30dc\u30fc\u30eb\u306e\u901f\u5ea6\u306e Y \u6210\u5206\u306e\u7b26\u53f7\u3092\u53cd\u8ee2\u3059\u308b | Reverse the sign of the Y component of the ball's velocity\nballVelocity.y *= -1;\n}\n// \u5de6\u53f3\u306e\u58c1\u306b\u3076\u3064\u304b\u3063\u305f\u3089 | If the ball hits the left or right wall\nif (((ball.x &lt; 0) &amp;&amp; (ballVelocity.x &lt; 0))\n|| ((Scene::Width() &lt; ball.x) &amp;&amp; (0 &lt; ballVelocity.x)))\n{\n// \u30dc\u30fc\u30eb\u306e\u901f\u5ea6\u306e X \u6210\u5206\u306e\u7b26\u53f7\u3092\u53cd\u8ee2\u3059\u308b | Reverse the sign of the X component of the ball's velocity\nballVelocity.x *= -1;\n}\n// \u30d1\u30c9\u30eb\u306b\u3042\u305f\u3063\u305f\u3089 | If the ball hits the left or right wall\nif ((0 &lt; ballVelocity.y) &amp;&amp; paddle.intersects(ball))\n{\n// \u30d1\u30c9\u30eb\u306e\u4e2d\u5fc3\u304b\u3089\u306e\u8ddd\u96e2\u306b\u5fdc\u3058\u3066\u306f\u306d\u8fd4\u308b\u65b9\u5411\uff08\u901f\u5ea6\u30d9\u30af\u30c8\u30eb\uff09\u3092\u5909\u3048\u308b | Change the direction (velocity vector) of the ball depending on the distance from the center of the paddle\nballVelocity = Vec2{ (ball.x - paddle.center().x) * 10, -ballVelocity.y }.setLength(BallSpeedPerSec);\n}\n// \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u3092\u66f4\u65b0\u3059\u308b\nparticleSystem.setPos(ball.center);\nparticleSystem.update();\n// \u3059\u3079\u3066\u306e\u30d6\u30ed\u30c3\u30af\u3092\u63cf\u753b\u3059\u308b | Draw all the bricks\nfor (const auto&amp; brick : bricks)\n{\n// \u30d6\u30ed\u30c3\u30af\u306e Y \u5ea7\u6a19\u306b\u5fdc\u3058\u3066\u8272\u3092\u5909\u3048\u308b | Change the color of the brick depending on the Y coordinate\nbrick.stretched(-1).draw(HSV{ brick.y - 40 });\n}\n// \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u975e\u8868\u793a\u306b\u3059\u308b | Hide the mouse cursor\nCursor::RequestStyle(CursorStyle::Hidden);\n// \u30dc\u30fc\u30eb\u3092\u63cf\u304f | Draw the ball\nball.draw();\n// \u30d1\u30c9\u30eb\u3092\u63cf\u304f | Draw the paddle\npaddle.rounded(3).draw();\n// \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u3092\u63cf\u753b\u3059\u308b\nparticleSystem.draw();\n}\n}\n</code></pre>"},{"location":"samples/2d/#15-\u30ab\u30fc\u30bd\u30eb\u3092\u6ce8\u76ee\u3059\u308b\u77e2\u5370","title":"15. \u30ab\u30fc\u30bd\u30eb\u3092\u6ce8\u76ee\u3059\u308b\u77e2\u5370","text":"<p>Siv3D-Sample | \u30ab\u30fc\u30bd\u30eb\u3092\u6ce8\u76ee\u3059\u308b\u77e2\u5370 </p>"},{"location":"samples/2d/#16-\u30af\u30a9\u30fc\u30bf\u30fc\u30d3\u30e5\u30fc","title":"16 \u30af\u30a9\u30fc\u30bf\u30fc\u30d3\u30e5\u30fc","text":"<p>Siv3D-Sample | \u30af\u30a9\u30fc\u30bf\u30fc\u30d3\u30e5\u30fc </p>"},{"location":"samples/3d/","title":"3D \u63cf\u753b\u306e\u30b5\u30f3\u30d7\u30eb","text":""},{"location":"samples/3d/#1-plot3d","title":"1. Plot3D","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nconst ColorF backgroundColor = ColorF{ 0.4, 0.6, 0.8 }.removeSRGBCurve();\nconst Texture woodTexture{ U\"example/texture/wood.jpg\", TextureDesc::MippedSRGB };\nMeshData meshDataFront = MeshData::Grid(Vec2{ 20,20 }, 256, 256);\nMeshData meshDataBack = MeshData::Grid(Vec2{ 20,20 }, 256, 256).rotate(Quaternion::RotateX(180_deg));\nDynamicMesh meshFront{ meshDataFront }, meshBack{ meshDataBack };\nconst PixelShader ps = HLSL{ U\"example/shader/hlsl/forward_triplanar.hlsl\", U\"PS\" }\n| GLSL{ U\"example/shader/glsl/forward_triplanar.frag\", { { U\"PSPerFrame\", 0 }, { U\"PSPerView\", 1 }, { U\"PSPerMaterial\", 3 } } };\nconst MSRenderTexture renderTexture{ Scene::Size(), TextureFormat::R8G8B8A8_Unorm_SRGB, HasDepth::Yes };\nDebugCamera3D camera{ renderTexture.size(), 30_deg, Vec3{ 16, 12, -24 } };\nTextEditState te;\nwhile (System::Update())\n{\nif (not te.active)\n{\ncamera.update(2.0);\nGraphics3D::SetCameraTransform(camera);\n}\n// 3D\n{\nconst ScopedRenderTarget3D target{ renderTexture.clear(backgroundColor) };\nconst ScopedCustomShader3D shader{ ps };\nmeshFront.draw(woodTexture);\nmeshBack.draw(woodTexture);\n}\n// RenderTexture \u3092 2D \u30b7\u30fc\u30f3\u306b\u63cf\u753b\u3059\u308b\n{\nGraphics3D::Flush();\nrenderTexture.resolve();\nShader::LinearToScreen(renderTexture);\n}\nif (SimpleGUI::TextBox(te, Vec2{ 20,20 }, 1240))\n{\n// \u6570\u5f0f\u30d1\u30fc\u30b5\nMathParser parser{ (te.text ? te.text : U\"0\") };\n// \u5909\u6570 x, y \u3092\u8a2d\u5b9a\u3059\u308b\ndouble x = 0;\ndouble z = 0;\nparser.setVaribale(U\"x\", &amp;x);\nparser.setVaribale(U\"y\", &amp;z);\nfor (auto&amp; vertex : meshDataFront.vertices)\n{\nx = vertex.pos.x;\nz = vertex.pos.z;\nif (auto y = parser.evalOpt())\n{\nvertex.pos.y = static_cast&lt;float&gt;(*y);\n}\nelse\n{\n// \u5f0f\u304c\u4e0d\u6b63\u306a\u5834\u5408\u306f\u51e6\u7406\u3092\u884c\u308f\u306a\u3044\nbreak;\n}\n}\nfor (auto&amp; vertex : meshDataBack.vertices)\n{\nx = vertex.pos.x;\nz = vertex.pos.z;\nif (auto y = parser.evalOpt())\n{\nvertex.pos.y = static_cast&lt;float&gt;(*y);\n}\nelse\n{\n// \u5f0f\u304c\u4e0d\u6b63\u306a\u5834\u5408\u306f\u51e6\u7406\u3092\u884c\u308f\u306a\u3044\nbreak;\n}\n}\n// \u6cd5\u7dda\u3092\u8a08\u7b97\u3059\u308b\nmeshDataFront.computeNormals();\nmeshDataBack.computeNormals();\n// DynamicTexture \u3092\u66f4\u65b0\u3059\u308b\nmeshFront.fill(meshDataFront);\nmeshBack.fill(meshDataBack);\n}\n}\n}\n</code></pre>"},{"location":"samples/3d/#2-3d-\u30c6\u30ad\u30b9\u30c8","title":"2. 3D \u30c6\u30ad\u30b9\u30c8","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nclass Font3D\n{\npublic:\nFont3D() = default;\nSIV3D_NODISCARD_CXX20\nexplicit Font3D(const Font&amp; font)\n: m_font{ font } {}\n[[nodiscard]]\nArray&lt;MeshGlyph&gt; getGlyphs(StringView s) const\n{\nArray&lt;MeshGlyph&gt; results;\nfor (auto ch : s)\n{\nauto it = m_table.find(ch);\nif (it == m_table.end())\n{\nit = m_table.emplace(ch, m_font.createMesh(ch)).first;\n}\nresults &lt;&lt; it-&gt;second;\n}\nreturn results;\n}\nvoid drawCylindricalInner(StringView s, const Vec3&amp; center, double r, double scale, double startAngle, const ColorF&amp; color) const\n{\nconst double perimeter = (r * Math::TwoPi);\ndouble penPosX = 0.0;\nstartAngle += 90_deg;\nfor (auto meshGlyph : getGlyphs(s))\n{\npenPosX += (meshGlyph.xOffset * scale);\nif (meshGlyph.mesh)\n{\nconst double angle = (penPosX / perimeter) * 360_deg;\nconst Quaternion q = Quaternion::RotateY(-90_deg + angle - startAngle);\nconst Vec3 pos = Cylindrical{ r, (-180_deg - angle + startAngle), 0.0 } + center;\nconst Mat4x4 mat = Mat4x4::Translate(-meshGlyph.xOffset, 0, 0)\n.scaled(scale)\n.rotated(q)\n.translated(pos);\nmeshGlyph.mesh.draw(mat, color);\n}\npenPosX += (meshGlyph.xAdvance - meshGlyph.xOffset) * scale;\n}\n}\nvoid drawCylindricalOuter(StringView s, const Vec3&amp; center, double r, double scale, double startAngle, const ColorF&amp; color) const\n{\nconst double perimeter = (r * Math::TwoPi);\ndouble penPosX = 0.0;\nstartAngle += 90_deg;\nfor (auto meshGlyph : getGlyphs(s))\n{\npenPosX += (meshGlyph.xOffset * scale);\nif (meshGlyph.mesh)\n{\nconst double angle = (penPosX / perimeter) * 360_deg;\nconst Quaternion q = Quaternion::RotateY(90_deg - angle - startAngle);\nconst Vec3 pos = Cylindrical{ r, (180_deg + angle + startAngle), 0.0 } + center;\nconst Mat4x4 mat = Mat4x4::Translate(-meshGlyph.xOffset, 0, 0)\n.scaled(scale)\n.rotated(q)\n.translated(pos);\nmeshGlyph.mesh.draw(mat, color);\n}\npenPosX += (meshGlyph.xAdvance - meshGlyph.xOffset) * scale;\n}\n}\nprivate:\nFont m_font;\nmutable HashTable&lt;char32, MeshGlyph&gt; m_table;\n};\nvoid Main()\n{\nWindow::Resize(1280, 720);\nconst ColorF backgroundColor = ColorF{ 0.5, 0.6, 0.6 }.removeSRGBCurve();\nconst Texture uvChecker{ U\"example/texture/uv.png\", TextureDesc::MippedSRGB };\nconst MSRenderTexture renderTexture{ Scene::Size(), TextureFormat::R8G8B8A8_Unorm_SRGB, HasDepth::Yes };\nDebugCamera3D camera{ renderTexture.size(), 30_deg, Vec3{ 10, 16, -32 } };\nconst Font3D font3D{ Font{ 60 } };\nwhile (System::Update())\n{\nconst double t = Scene::Time();\ncamera.update(2.0);\nGraphics3D::SetCameraTransform(camera);\n// 3D \u63cf\u753b\n{\nGraphics3D::SetGlobalAmbientColor(Graphics3D::DefaultGlobalAmbientColor);\nGraphics3D::SetSunColor(ColorF{ 0.75 });\nconst ScopedRenderTarget3D target{ renderTexture.clear(backgroundColor) };\nPlane{ 64 }.draw(uvChecker);\nCylinder{ Vec3{0,0,0}, Vec3{0, 16, 0}, 5.6 }.draw(ColorF{ 0.25 }.removeSRGBCurve());\n// 3D Text Circle\n{\n// \u4e21\u9762\u63cf\u753b\u3092\u884c\u3046\nconst ScopedRenderStates3D rasterizer{ RasterizerState::SolidCullNone, BlendState::Additive };\n// \u30e9\u30a4\u30c6\u30a3\u30f3\u30b0\u3092\u7121\u52b9\u5316\u3059\u308b\nGraphics3D::SetGlobalAmbientColor(ColorF{ 1.0 });\nGraphics3D::SetSunColor(ColorF{ 0.0 });\nfont3D.drawCylindricalOuter(DateTime::Now().format(U\"HH:mm:ss\"), Vec3{ 0, 11.5, 0 }, 6 * 1.2, 3.0 * 1.2, (t * -25_deg), ColorF{ 1.0, 0.98, 0.9 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(DateTime::Now().format(U\"HH:mm:ss\"), Vec3{ 0, 11.5, 0 }, 6 * 1.2, 3.0 * 1.2, (t * -25_deg) + 180_deg, ColorF{ 1.0, 0.98, 0.9 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"Monday, September 27, 2021\", Vec3{ 0, 10, 0 }, 6 * 1.2, 1.2 * 1.2, (t * -50_deg), ColorF{ 1.0, 0.98, 0.9 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"NIKKEI 225 30,248.81 +609.41\", Vec3{ 0, 8, 0 }, 6, 1.0, (t * -72_deg), ColorF{ 0.6, 1.0, 0.8 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"HANG SENG 24,192,16 -318.82\", Vec3{ 0, 7, 0 }, 6, 1.0, (t * -62_deg), ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"SHANGHAI 3,613.07 -29.15\", Vec3{ 0, 6, 0 }, 6, 1.0, (t * -58_deg), ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"FTSE 7,051.48 -26.87\", Vec3{ 0, 5, 0 }, 6, 1.0, (t * -70_deg), ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"CAC 6,638.46 -63.52\", Vec3{ 0, 4, 0 }, 6, 1.0, (t * -60_deg), ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"DAX 15,531.75 -112.22\", Vec3{ 0, 3, 0 }, 6, 1.0, (t * -66_deg), ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"NASDAQ 15,047.70 -4.54\", Vec3{ 0, 2, 0 }, 6, 1.0, (t * -68_deg), ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"NIKKEI 225 30,248.81 +609.41\", Vec3{ 0, 8, 0 }, 6, 1.0, (t * -72_deg) + 180_deg, ColorF{ 0.6, 1.0, 0.8 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"HANG SENG 24,192,16 -318.82\", Vec3{ 0, 7, 0 }, 6, 1.0, (t * -62_deg) + 180_deg, ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"SHANGHAI 3,613.07 -29.15\", Vec3{ 0, 6, 0 }, 6, 1.0, (t * -58_deg) + 180_deg, ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"FTSE 7,051.48 -26.87\", Vec3{ 0, 5, 0 }, 6, 1.0, (t * -70_deg) + 180_deg, ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"CAC 6,638.46 -63.52\", Vec3{ 0, 4, 0 }, 6, 1.0, (t * -60_deg) + 180_deg, ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"DAX 15,531.75 -112.22\", Vec3{ 0, 3, 0 }, 6, 1.0, (t * -66_deg) + 180_deg, ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\nfont3D.drawCylindricalOuter(U\"NASDAQ 15,047.70 -4.54\", Vec3{ 0, 2, 0 }, 6, 1.0, (t * -68_deg) + 180_deg, ColorF{ 1.0, 0.6, 0.6 }.removeSRGBCurve());\n}\n}\n// 3D \u30b7\u30fc\u30f3\u3092 2D \u30b7\u30fc\u30f3\u306b\u63cf\u753b\u3059\u308b\n{\nGraphics3D::Flush();\nrenderTexture.resolve();\nShader::LinearToScreen(renderTexture);\n}\n}\n}\n</code></pre>"},{"location":"samples/3d/#3-3d-\u306e\u30dc\u30fc\u30c9\u30b2\u30fc\u30e0\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8","title":"3. 3D \u306e\u30dc\u30fc\u30c9\u30b2\u30fc\u30e0\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30c6\u30fc\u30d6\u30eb\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u624b\u7d9a\u304d\u7684\u306b\u751f\u6210\u3059\u308b\u95a2\u6570\nImage CreateTableImage()\n{\nPerlinNoise noise;\nreturn Image::Generate(Size{ 1024, 1024 }, [&amp;](Point p)\n{\nconst double x = Fraction(noise.octave2D0_1(p * Vec2{ 0.03, 0.0005 }, 2) * 25) * 0.3 + 0.55;\nreturn ColorF{ x, 0.85 * x, 0.7 * x }.removeSRGBCurve();\n}).gaussianBlurred(3);\n}\n// \u30d6\u30ed\u30c3\u30af\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u624b\u7d9a\u304d\u7684\u306b\u751f\u6210\u3059\u308b\u95a2\u6570\nImage CreateBlockImage()\n{\nPerlinNoise noise;\nreturn Image::Generate(Size{ 256, 256 }, [&amp;](Point p)\n{\nconst double x = Fraction(noise.octave2D0_1(p * Vec2{ 0.05, 0.0005 }, 2) * 25) * 0.15 + 0.85;\nreturn ColorF{ x }.removeSRGBCurve();\n}).gaussianBlurred(2);\n}\n// \u30c6\u30fc\u30d6\u30eb\u3092\u63cf\u753b\u3059\u308b\u95a2\u6570\nvoid DrawTable(const Texture&amp; tableTexture)\n{\nPlane{ Vec3{ 0, -0.4, 0 }, 24 }.draw(tableTexture);\n}\n// \u76e4\u3092\u63cf\u753b\u3059\u308b\u95a2\u6570\nvoid DrawBoard(const Mesh&amp; mesh)\n{\nconst ColorF BoardColor = ColorF{ 0.9, 0.85, 0.75 }.removeSRGBCurve();\nconst ColorF LineColor = ColorF{ 0.3, 0.2, 0.0 }.removeSRGBCurve();\nmesh.draw(BoardColor);\n// \u76e4\u4e0a\u306e\u7dda\nfor (int32 i = -4; i &lt;= 4; ++i)\n{\nLine3D{ Vec3{ -4, 0.01, i }, Vec3{ 4, 0.01, i } }.draw(LineColor);\nLine3D{ Vec3{ i, 0.01, -4 }, Vec3{ i, 0.01, 4 } }.draw(LineColor);\n}\nLine3D{ Vec3{ -4.1, 0.01, -4.1 }, Vec3{ 4.1, 0.01, -4.1 } }.draw(LineColor);\nLine3D{ Vec3{ -4.1, 0.01, 4.1 }, Vec3{ 4.1, 0.01, 4.1 } }.draw(LineColor);\nLine3D{ Vec3{ -4.1, 0.01, 4.1 }, Vec3{ -4.1, 0.01, -4.1 } }.draw(LineColor);\nLine3D{ Vec3{ 4.1, 0.01, 4.1 }, Vec3{ 4.1, 0.01, -4.1 } }.draw(LineColor);\n}\n// \u76e4\u4e0a\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 (x, y, z) \u304b\u3089 Box \u3092\u4f5c\u6210\u3059\u308b\u95a2\u6570\nBox MakeBox(int32 x, int32 y, int32 z)\n{\nreturn Box::FromPoints(Vec3{ (x - 4), (y + 1), (4 - z) }, Vec3{ (x - 3), y, (3 - z) });\n}\n// \u30d6\u30ed\u30c3\u30af\u3092\u63cf\u304f\u95a2\u6570\nvoid DrawBlock(int32 x, int32 y, int32 z, const ColorF&amp; color, double scale = 1.0)\n{\nMakeBox(x, y, z).scaled(scale).draw(color);\n}\n// \u30d6\u30ed\u30c3\u30af\u3092\u63cf\u304f\u95a2\u6570\nvoid DrawBlock(int32 x, int32 y, int32 z, const ColorF&amp; color, const Texture&amp; blockTexture)\n{\nMakeBox(x, y, z).draw(blockTexture, color);\n}\n// \u30b2\u30fc\u30e0\u306e\u72b6\u614b\nstruct Game\n{\nstatic constexpr int32 MaxY = 15;\nint32 s[8][(MaxY + 1)][8] = {};\nint32 getHeight(int32 x, int32 z) const\n{\nfor (int32 y = MaxY; 0 &lt;= y; --y)\n{\nif (s[x][y][z])\n{\nreturn (y + 1);\n}\n}\nreturn 0;\n}\n};\n// \u30b2\u30fc\u30e0\u306e\u72b6\u614b\u306b\u57fa\u3065\u3044\u3066\u30d6\u30ed\u30c3\u30af\u3092\u63cf\u304f\u95a2\u6570\nvoid DrawGame(const Game&amp; game, const Texture&amp; blockTexture)\n{\nconst ColorF BlockColor1 = ColorF{ 1.0, 0.85, 0.6 }.removeSRGBCurve();\nconst ColorF BlockColor2 = ColorF{ 0.4, 0.15, 0.15 }.removeSRGBCurve();\nfor (int32 y = 0; y &lt;= Game::MaxY; ++y)\n{\nfor (int32 x = 0; x &lt; 8; ++x)\n{\nfor (int32 z = 0; z &lt; 8; ++z)\n{\nconst int32 s = game.s[x][y][z];\nif (s == 1)\n{\nDrawBlock(x, y, z, BlockColor1, blockTexture);\n}\nelse if (s == 2)\n{\nDrawBlock(x, y, z, BlockColor2, blockTexture);\n}\n}\n}\n}\n}\n// \u30ab\u30e1\u30e9\u306e\u5236\u5fa1\u30af\u30e9\u30b9\nclass CameraController\n{\npublic:\nexplicit CameraController(const Size&amp; sceneSize)\n: m_camera{ sceneSize, m_verticalFOV, m_eyePosition, m_focusPosition } {}\nvoid update()\n{\nconst Ray ray = getMouseRay();\n// \u76e4\u306e\u307e\u308f\u308a\u90e8\u5206\nconst std::array&lt;Box, 4&gt; boxes =\n{\nBox::FromPoints(Vec3{ -5, 0.0, 5 }, Vec3{ 5, -0.4, 4 }),\nBox::FromPoints(Vec3{ 4, 0.0, 5 }, Vec3{ 5, -0.4, -5 }),\nBox::FromPoints(Vec3{ -5, 0.0, -4 }, Vec3{ 5, -0.4, -5 }),\nBox::FromPoints(Vec3{ -5, 0.0, 5 }, Vec3{ -4, -0.4, -5 })\n};\nif (MouseL.up())\n{\nm_grabbed = false;\n}\nif (m_grabbed)\n{\nconst double before = (m_cursorPos - Scene::Center()).getAngle();\nconst double after = (Cursor::Pos() - Scene::Center()).getAngle();\nm_phi -= (after - before);\nm_cursorPos = Cursor::Pos();\n}\nfor (const auto&amp; box : boxes)\n{\nif (box.intersects(ray))\n{\n// \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u624b\u306e\u30a2\u30a4\u30b3\u30f3\u306b\u3059\u308b\nCursor::RequestStyle(CursorStyle::Hand);\nif ((not m_grabbed) &amp;&amp; MouseL.down())\n{\nm_grabbed = true;\nm_cursorPos = Cursor::Pos();\n}\n}\n}\n// \u8996\u70b9\u3092\u7403\u9762\u5ea7\u6a19\u7cfb\u3067\u8a08\u7b97\u3059\u308b\nm_eyePosition = Spherical{ 24, m_theta, (270_deg - m_phi) };\n// \u30ab\u30e1\u30e9\u3092\u66f4\u65b0\u3059\u308b\nm_camera.setView(m_eyePosition, m_focusPosition);\n// \u30b7\u30fc\u30f3\u306b\u30ab\u30e1\u30e9\u3092\u8a2d\u5b9a\u3059\u308b\nGraphics3D::SetCameraTransform(m_camera);\n}\nRay getMouseRay() const\n{\nreturn m_camera.screenToRay(Cursor::PosF());\n}\nbool isGrabbing() const\n{\nreturn m_grabbed;\n}\nprivate:\n// \u7e26\u65b9\u5411\u306e\u8996\u91ce\u89d2\uff08\u30e9\u30b8\u30a2\u30f3\uff09\ndouble m_verticalFOV = 25_deg;\n// \u30ab\u30e1\u30e9\u306e\u8996\u70b9\u306e\u4f4d\u7f6e\nVec3 m_eyePosition{ 16, 16, -16 };\n// \u30ab\u30e1\u30e9\u306e\u6ce8\u8996\u70b9\u306e\u4f4d\u7f6e\nVec3 m_focusPosition{ 0, 0, 0 };\ndouble m_phi = -20_deg;\ndouble m_theta = 50_deg;\n// \u30ab\u30e1\u30e9\nBasicCamera3D m_camera;\nbool m_grabbed = false;\nVec2 m_cursorPos = Scene::Center();\n};\nvoid Main()\n{\n// \u30a6\u30a4\u30f3\u30c9\u30a6\u3068\u30b7\u30fc\u30f3\u3092 1280x720 \u306b\u30ea\u30b5\u30a4\u30ba\u3059\u308b\nWindow::Resize(1280, 720);\n// \u74b0\u5883\u5149\u3092\u8a2d\u5b9a\u3059\u308b\nGraphics3D::SetGlobalAmbientColor(ColorF{ 0.75, 0.75, 0.75 });\n// \u592a\u967d\u5149\u3092\u8a2d\u5b9a\u3059\u308b\nGraphics3D::SetSunColor(ColorF{ 0.5, 0.5, 0.5 });\n// \u592a\u967d\u306e\u65b9\u5411\u3092\u8a2d\u5b9a\u3059\u308b\nGraphics3D::SetSunDirection(Vec3{ 0, 1, -0.3 }.normalized());\n// \u80cc\u666f\u8272 (3D \u7528\u306e\u8272\u306f .removeSRGBCurve() \u3067 sRGB \u30ab\u30fc\u30d6\u3092\u9664\u53bb\uff09\nconst ColorF backgroundColor = ColorF{ 0.4, 0.6, 0.8 }.removeSRGBCurve();\n// 3D \u30b7\u30fc\u30f3\u3092\u63cf\u304f\u3001\u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u5bfe\u5fdc\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\nconst MSRenderTexture renderTexture{ Scene::Size(), TextureFormat::R8G8B8A8_Unorm_SRGB, HasDepth::Yes };\n// \u30c6\u30fc\u30d6\u30eb\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\nconst Texture tableTexture{ CreateTableImage(), TextureDesc::MippedSRGB };\n// \u30d6\u30ed\u30c3\u30af\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\nconst Texture blockTexture{ CreateBlockImage(), TextureDesc::MippedSRGB };\n// \u76e4\u7528\u306e 3D \u30e1\u30c3\u30b7\u30e5\nconst Mesh meshBoard{ MeshData::RoundedBox(0.1, Vec3{ 10, 0.4, 10 }, 5).translate(0, -0.2, 0) };\n// \u30ab\u30e1\u30e9\u5236\u5fa1\nCameraController cameraController{ renderTexture.size() };\n// \u30b2\u30fc\u30e0\u306e\u72b6\u614b\nGame game;\ngame.s[0][0][0] = game.s[1][0][1] = 1;\ngame.s[4][0][4] = game.s[5][0][4] = 2;\nwhile (System::Update())\n{\n// \u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30dc\u30af\u30bb\u30eb\nPoint activeVoxelXZ{ -1, -1 };\n////////////////////////////////\n//\n//\t\u72b6\u614b\u306e\u66f4\u65b0\n//\n////////////////////////////////\n{\nif (not cameraController.isGrabbing())\n{\nconst Ray ray = cameraController.getMouseRay();\nfloat minDistance = 99999.9f;\nfor (int32 x = 0; x &lt; 8; ++x)\n{\nfor (int32 z = 0; z &lt; 8; ++z)\n{\nconst int32 height = game.getHeight(x, z);\nconst Box box = MakeBox(x, height, z);\nif (Optional&lt;float&gt; distacne = box.intersects(ray))\n{\nif (*distacne &lt; minDistance)\n{\nminDistance = *distacne;\nactiveVoxelXZ.set(x, z);\n}\n}\n}\n}\nif (activeVoxelXZ != Point{ -1, -1 })\n{\nauto&amp; voxel = game.s[activeVoxelXZ.x][game.getHeight(activeVoxelXZ.x, activeVoxelXZ.y)][activeVoxelXZ.y];\nif (MouseL.down())\n{\nvoxel = 1;\n}\nelse if (MouseR.down())\n{\nvoxel = 2;\n}\n}\n}\ncameraController.update();\n}\n////////////////////////////////\n//\n//\t3D \u63cf\u753b\n//\n////////////////////////////////\n{\n{\n// renderTexture \u3092\u80cc\u666f\u8272\u3067\u5857\u308a\u3064\u3076\u3057\u30013D \u63cf\u753b\u306e\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\nconst ScopedRenderTarget3D target{ renderTexture.clear(backgroundColor) };\nDrawTable(tableTexture);\nDrawBoard(meshBoard);\nDrawGame(game, blockTexture);\n{\n// \u534a\u900f\u660e\u3092\u6709\u52b9\u306b\nconst ScopedRenderStates3D blend{ BlendState::OpaqueAlphaToCoverage };\nfor (int32 x = 0; x &lt; 8; ++x)\n{\nfor (int32 z = 0; z &lt; 8; ++z)\n{\nconst int32 height = game.getHeight(x, z);\nDrawBlock(x, height, z, ColorF{ 0.2, 0.8, 0.8, 0.5 }, ((activeVoxelXZ == Point{ x, z }) ? 1.0 : 0.25));\n}\n}\n}\n}\nGraphics3D::Flush();\nrenderTexture.resolve();\nShader::LinearToScreen(renderTexture);\n}\n////////////////////////////////\n//\n//\t2D \u63cf\u753b\n//\n////////////////////////////////\n{\nif (SimpleGUI::Button(U\"\u7247\u3065\u3051\u308b\", Vec2{ 1100, 20 }, 160))\n{\ngame = Game{};\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/3d/#4-\u4f4e\u89e3\u50cf\u5ea6\u98a8\u306e-3d-\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0","title":"4. \u4f4e\u89e3\u50cf\u5ea6\u98a8\u306e 3D \u30ec\u30f3\u30c0\u30ea\u30f3\u30b0","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconstexpr Size SceneSize{ 256, 192 };\nconst ColorF backgroundColor = ColorF{ 0.4, 0.6, 0.8 }.removeSRGBCurve();\nconst Texture wiindmill{ Image{ U\"example/windmill.png\" }.clipped(200, 230, 64, 64), TextureDesc::UnmippedSRGB };\nconst Texture siv3dKun{ Image{ U\"example/spritesheet/siv3d-kun-16.png\" }.clipped(0, 0, 20, 32), TextureDesc::UnmippedSRGB };\nconst Mesh spriteMesh{ MeshData::TwoSidedPlane(SizeF{ 2.0, 3.2 }).rotate(Quaternion::RotateX(-90_deg)) };\nconst RenderTexture renderTexture{ SceneSize, TextureFormat::R8G8B8A8_Unorm_SRGB, HasDepth::Yes };\nDebugCamera3D camera{ renderTexture.size(), 30_deg, Vec3{ 10, 2, -32 } };\nwhile (System::Update())\n{\ncamera.update(2.0);\nGraphics3D::SetCameraTransform(camera);\n// [3D rendering]\n{\nconst ScopedRenderTarget3D target{ renderTexture.clear(backgroundColor) };\nPlane{ 64 }.draw(ColorF{ 0.7 }.removeSRGBCurve());\nBox::FromPoints(Vec3{ -4, 0, -4 }, Vec3{ -2, 4, 4 }).draw(ColorF{ 0.8, 0.6, 0.4 }.removeSRGBCurve());\nPlane{ Vec3{0, 4, 0 }, 64 }.draw(ColorF{ 0.5 }.removeSRGBCurve());\n{\nconst ScopedRenderStates3D sampler{ SamplerState::ClampNearest };\nBox{ 4, 2, 0, 4 }.draw(wiindmill);\n}\n{\nconst ScopedRenderStates3D sampler{ SamplerState::ClampNearest, BlendState::Default2D };\nspriteMesh.draw(Vec3{ 0, 1.6, -4 }, siv3dKun);\n}\n}\n// [2D rendering]\n{\nGraphics3D::Flush();\n// TextureFilter::Nearest\nShader::LinearToScreen(renderTexture, TextureFilter::Nearest);\n}\n}\n}\n</code></pre>"},{"location":"samples/3d/#5-3d-\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u624b\u52d5\u56de\u8ee2","title":"5. 3D \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u624b\u52d5\u56de\u8ee2","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nconst ColorF backgroundColor = ColorF{ 0.4, 0.6, 0.8 }.removeSRGBCurve();\nconst Texture uvChecker{ U\"example/texture/uv.png\", TextureDesc::MippedSRGB };\nconst Texture earthTexture{ U\"example/texture/earth.jpg\", TextureDesc::MippedSRGB };\nconst MSRenderTexture renderTexture{ Scene::Size(), TextureFormat::R8G8B8A8_Unorm_SRGB, HasDepth::Yes };\nDebugCamera3D camera{ renderTexture.size(), 30_deg, Vec3{ 10, 16, -32 } };\nconst Sphere sphere{ 0,4,0,4 };\nQuaternion rotation;\nbool grabbedX = false;\nbool grabbedY = false;\nconst Cylinder cY{ sphere.center, 4.6, 1 };\nconst Cylinder cX{ sphere.center, 4.5, 1, Quaternion::RotateZ(90_deg) };\nwhile (System::Update())\n{\nClearPrint();\ncamera.update(2.0);\nGraphics3D::SetCameraTransform(camera);\n{\nconst Ray ray = camera.screenToRay(Cursor::PosF());\nconst ScopedRenderTarget3D target{ renderTexture.clear(backgroundColor) };\nPlane{ 64 }.draw(uvChecker);\nsphere.draw(rotation, earthTexture);\ncY.draw(ColorF{ (grabbedY ? 0.8 : 0.5), 0.0, 0.0 }.removeSRGBCurve());\ncX.draw(ColorF{ 0.0, (grabbedX ? 0.8 : 0.5), 0.0 }.removeSRGBCurve());\nif (grabbedX)\n{\nrotation *= Quaternion::RotateX(-1_deg * Cursor::DeltaF().y);\n}\nif (grabbedY)\n{\nrotation *= Quaternion::RotateY(-1_deg * Cursor::DeltaF().x);\n}\nconst Optional&lt;float&gt; cyd = ray.intersects(cY);\nconst Optional&lt;float&gt; cxd = ray.intersects(cX);\nPrint &lt;&lt; U\"cyd: \" &lt;&lt; cyd;\nPrint &lt;&lt; U\"cxd: \" &lt;&lt; cxd;\nif (cyd || cxd)\n{\nCursor::RequestStyle(CursorStyle::Hand);\nif (MouseL.down())\n{\nif (cxd &amp;&amp; cyd)\n{\n((cxd &lt; cyd) ? grabbedX : grabbedY) = true;\n}\nelse\n{\n((cxd) ? grabbedX : grabbedY) = true;\n}\n}\n}\nif (MouseL.up())\n{\ngrabbedY = grabbedX = false;\n}\n}\n{\nGraphics3D::Flush();\nrenderTexture.resolve();\nShader::LinearToScreen(renderTexture);\n}\n}\n}\n</code></pre>"},{"location":"samples/3d/#6-\u9ad8\u3055\u30de\u30c3\u30d7\u306e\u7de8\u96c6","title":"6. \u9ad8\u3055\u30de\u30c3\u30d7\u306e\u7de8\u96c6","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nconst VertexShader vsTerrain = HLSL{ U\"example/shader/hlsl/terrain_forward.hlsl\", U\"VS\" }\n| GLSL{ U\"example/shader/glsl/terrain_forward.vert\", { { U\"VSPerView\", 1 }, { U\"VSPerObject\", 2 }, { U\"VSPerMaterial\", 3 } } };\nconst PixelShader psTerrain = HLSL{ U\"example/shader/hlsl/terrain_forward.hlsl\", U\"PS\" }\n| GLSL{ U\"example/shader/glsl/terrain_forward.frag\", { { U\"PSPerFrame\", 0 }, { U\"PSPerView\", 1 }, { U\"PSPerMaterial\", 3 } } };\nconst PixelShader psNormal = HLSL{ U\"example/shader/hlsl/terrain_normal.hlsl\", U\"PS\" }\n| GLSL{ U\"example/shader/glsl/terrain_normal.frag\", { {U\"PSConstants2D\", 0} } };\nif ((not vsTerrain) || (not psTerrain) || (not psNormal))\n{\nreturn;\n}\nconst ColorF backgroundColor = ColorF{ 0.4, 0.6, 0.8 }.removeSRGBCurve();\nconst Texture terrainTexture{ U\"example/texture/grass.jpg\", TextureDesc::MippedSRGB };\nconst Texture rockTexture{ U\"example/texture/rock.jpg\", TextureDesc::MippedSRGB };\nconst Texture brushTexture{ U\"example/particle.png\" };\nconst MSRenderTexture renderTexture{ Scene::Size(), TextureFormat::R8G8B8A8_Unorm_SRGB, HasDepth::Yes };\nconst Mesh gridMesh{ MeshData::Grid({ 128, 128 }, 128, 128) };\nDebugCamera3D camera{ renderTexture.size(), 30_deg, Vec3{ 10, 16, -32 } };\nRenderTexture heightmap{ Size{ 256, 256 }, ColorF{ 0.0 }, TextureFormat::R32_Float };\nRenderTexture normalmap{ Size{ 256, 256 }, ColorF{ 0.0, 0.0, 0.0 }, TextureFormat::R16G16_Float };\nwhile (System::Update())\n{\ncamera.update(2.0);\n// 3D\n{\nGraphics3D::SetCameraTransform(camera);\nconst ScopedCustomShader3D shader{ vsTerrain, psTerrain };\nconst ScopedRenderTarget3D target{ renderTexture.clear(backgroundColor) };\nconst ScopedRenderStates3D ss{ { ShaderStage::Vertex, 0, SamplerState::ClampLinear} };\nGraphics3D::SetVSTexture(0, heightmap);\nGraphics3D::SetPSTexture(1, normalmap);\nGraphics3D::SetPSTexture(2, rockTexture);\ngridMesh.draw(terrainTexture);\n}\n// RenderTexture \u3092 2D \u30b7\u30fc\u30f3\u306b\u63cf\u753b\n{\nGraphics3D::Flush();\nrenderTexture.resolve();\nShader::LinearToScreen(renderTexture);\n}\nif (const bool gen = SimpleGUI::Button(U\"Random\", Vec2{ 270, 10 });\n(gen || (MouseL | MouseR).pressed())) // \u5730\u5f62\u3092\u7de8\u96c6\n{\n// heightmap \u3092\u7de8\u96c6\nif (gen)\n{\nconst PerlinNoiseF perlin{ RandomUint64() };\nGrid&lt;float&gt; grid(256, 256);\nfor (auto p : step(grid.size()))\n{\ngrid[p] = perlin.octave2D0_1(p / 256.0f, 5) * 16.0f;\n}\nconst RenderTexture noise{ grid };\nconst ScopedRenderTarget2D target{ heightmap };\nnoise.draw();\n}\nelse\n{\nconst ScopedRenderTarget2D target{ heightmap };\nconst ScopedRenderStates2D blend{ BlendState::Additive };\nbrushTexture.scaled(1.0 + MouseL.pressed()).drawAt(Cursor::PosF(), ColorF{ Scene::DeltaTime() * 15.0 });\n}\n// normal map \u3092\u66f4\u65b0\n{\nconst ScopedRenderTarget2D target{ normalmap };\nconst ScopedCustomShader2D shader{ psNormal };\nconst ScopedRenderStates2D blend{ BlendState::Opaque, SamplerState::ClampLinear };\nheightmap.draw();\n}\n}\nheightmap.draw(ColorF{ 0.1 });\nnormalmap.draw(0, 260);\n}\n}\n</code></pre>"},{"location":"samples/apps/","title":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b5\u30f3\u30d7\u30eb","text":""},{"location":"samples/apps/#1-\u30e9\u30a4\u30d5\u30b2\u30fc\u30e0-\u30a8\u30c7\u30a3\u30bf","title":"1. \u30e9\u30a4\u30d5\u30b2\u30fc\u30e0 \u30a8\u30c7\u30a3\u30bf","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// 1 \u30bb\u30eb\u304c 1 \u30d0\u30a4\u30c8\u306b\u306a\u308b\u3088\u3046\u3001\u30d3\u30c3\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u7528\nstruct Cell\n{\nbool previous : 1 = 0;\nbool current : 1 = 0;\n};\n// \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u30e9\u30f3\u30c0\u30e0\u306a\u30bb\u30eb\u5024\u3067\u57cb\u3081\u308b\u95a2\u6570\nvoid RandomFill(Grid&lt;Cell&gt;&amp; grid)\n{\ngrid.fill(Cell{});\n// \u5883\u754c\u306e\u30bb\u30eb\u3092\u9664\u3044\u3066\u66f4\u65b0\nfor (auto y : Range(1, (grid.height() - 2)))\n{\nfor (auto x : Range(1, (grid.width() - 2)))\n{\ngrid[y][x] = Cell{ 0, RandomBool(0.5) };\n}\n}\n}\n// \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u72b6\u614b\u3092\u66f4\u65b0\u3059\u308b\u95a2\u6570\nvoid Update(Grid&lt;Cell&gt;&amp; grid)\n{\nfor (auto&amp; cell : grid)\n{\ncell.previous = cell.current;\n}\n// \u5883\u754c\u306e\u30bb\u30eb\u3092\u9664\u3044\u3066\u66f4\u65b0\nfor (auto y : Range(1, (grid.height() - 2)))\n{\nfor (auto x : Range(1, (grid.width() - 2)))\n{\nconst int32 c = grid[y][x].previous;\nint32 n = 0;\nn += grid[y - 1][x - 1].previous;\nn += grid[y - 1][x].previous;\nn += grid[y - 1][x + 1].previous;\nn += grid[y][x - 1].previous;\nn += grid[y][x + 1].previous;\nn += grid[y + 1][x - 1].previous;\nn += grid[y + 1][x].previous;\nn += grid[y + 1][x + 1].previous;\n// \u30bb\u30eb\u306e\u72b6\u614b\u306e\u66f4\u65b0\ngrid[y][x].current = (c == 0 &amp;&amp; n == 3) || (c == 1 &amp;&amp; (n == 2 || n == 3));\n}\n}\n}\n// \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u72b6\u614b\u3092\u753b\u50cf\u5316\u3059\u308b\u95a2\u6570\nvoid CopyToImage(const Grid&lt;Cell&gt;&amp; grid, Image&amp; image)\n{\nfor (auto y : step(image.height()))\n{\nfor (auto x : step(image.width()))\n{\nimage[y][x] = grid[y + 1][x + 1].current\n? Color{ 0, 255, 0 } : Palette::Black;\n}\n}\n}\nvoid Main()\n{\n// \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30bb\u30eb\u306e\u6570\uff08\u6a2a\uff09\nconstexpr int32 Width = 60;\n// \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30bb\u30eb\u306e\u6570\uff08\u7e26\uff09\nconstexpr int32 Height = 60;\n// \u8a08\u7b97\u3092\u3057\u306a\u3044\u5883\u754c\u90e8\u5206\u3082\u542b\u3081\u305f\u30b5\u30a4\u30ba\u3067\u4e8c\u6b21\u5143\u914d\u5217\u3092\u78ba\u4fdd\nGrid&lt;Cell&gt; grid((Width + 2), (Height + 2), Cell{ 0,0 });\n// \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u72b6\u614b\u3092\u53ef\u8996\u5316\u3059\u308b\u305f\u3081\u306e\u753b\u50cf\nImage image{ Width, Height, Palette::Black };\n// \u52d5\u7684\u30c6\u30af\u30b9\u30c1\u30e3\nDynamicTexture texture{ image };\nStopwatch stopwatch{ StartImmediately::Yes };\n// \u81ea\u52d5\u518d\u751f\nbool autoStep = false;\n// \u66f4\u65b0\u983b\u5ea6\ndouble speed = 0.5;\n// \u30b0\u30ea\u30c3\u30c9\u306e\u8868\u793a\nbool showGrid = true;\n// \u753b\u50cf\u306e\u66f4\u65b0\u306e\u5fc5\u8981\u304c\u3042\u308b\u304b\nbool updated = false;\nwhile (System::Update())\n{\n// \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u30e9\u30f3\u30c0\u30e0\u306a\u5024\u3067\u57cb\u3081\u308b\u30dc\u30bf\u30f3\nif (SimpleGUI::ButtonAt(U\"Random\", Vec2{ 700, 40 }, 170))\n{\nRandomFill(grid);\nupdated = true;\n}\n// \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30bb\u30eb\u3092\u3059\u3079\u3066\u30bc\u30ed\u306b\u3059\u308b\u30dc\u30bf\u30f3\nif (SimpleGUI::ButtonAt(U\"Clear\", Vec2{ 700, 80 }, 170))\n{\ngrid.fill({ 0, 0 });\nupdated = true;\n}\n// \u4e00\u6642\u505c\u6b62 / \u518d\u751f\u30dc\u30bf\u30f3\nif (SimpleGUI::ButtonAt((autoStep ? U\"Pause\" : U\"Run \u25b6\"), Vec2{ 700, 160 }, 170))\n{\nautoStep = (not autoStep);\n}\n// \u66f4\u65b0\u983b\u5ea6\u5909\u66f4\u30b9\u30e9\u30a4\u30c0\u30fc\nSimpleGUI::SliderAt(U\"Speed\", speed, 1.0, 0.1, Vec2{ 700, 200 }, 70, 100);\n// 1 \u30b9\u30c6\u30c3\u30d7\u9032\u3081\u308b\u30dc\u30bf\u30f3\u3001\u307e\u305f\u306f\u66f4\u65b0\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u78ba\u8a8d\nif (SimpleGUI::ButtonAt(U\"Step\", Vec2{ 700, 240 }, 170, (not autoStep))\n|| (autoStep &amp;&amp; ((speed * speed) &lt;= stopwatch.sF())))\n{\nUpdate(grid);\nupdated = true;\nstopwatch.restart();\n}\n// \u30b0\u30ea\u30c3\u30c9\u8868\u793a\u306e\u6709\u7121\u3092\u6307\u5b9a\u3059\u308b\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\nSimpleGUI::CheckBoxAt(showGrid, U\"Grid\", Vec2{ 700, 320 }, 170);\n// \u30d5\u30a3\u30fc\u30eb\u30c9\u4e0a\u3067\u306e\u30bb\u30eb\u306e\u7de8\u96c6\nif (Rect{ 0, 0, 599 }.mouseOver())\n{\nconst Point target = (Cursor::Pos() / 10 + Point{ 1, 1 });\nif (MouseL.pressed())\n{\ngrid[target].current = true;\nupdated = true;\n}\nelse if (MouseR.pressed())\n{\ngrid[target].current = false;\nupdated = true;\n}\n}\n// \u753b\u50cf\u3092\u66f4\u65b0\u3059\u308b\nif (updated)\n{\nCopyToImage(grid, image);\ntexture.fill(image);\nupdated = false;\n}\n// \u753b\u50cf\u3092\u30d5\u30a3\u30eb\u30bf\u306a\u3057\u3067\u62e1\u5927\u3057\u3066\u8868\u793a\u3059\u308b\n{\nconst ScopedRenderStates2D sampler{ SamplerState::ClampNearest };\ntexture.scaled(10).draw();\n}\n// \u30b0\u30ea\u30c3\u30c9\u3092\u8868\u793a\u3059\u308b\nif (showGrid)\n{\nfor (auto i : step(61))\n{\nRect{ 0, i * 10, 600, 1 }.draw(ColorF{ 0.4 });\nRect{ i * 10, 0, 1, 600 }.draw(ColorF{ 0.4 });\n}\n}\n// \u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u3057\u3066\u3044\u308b\u30bb\u30eb\u3092\u30cf\u30a4\u30e9\u30a4\u30c8\u3059\u308b\nif (Rect{ 0, 0, 599 }.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hidden);\nRect{ Cursor::Pos() / 10 * 10, 10 }.draw(Palette::Orange);\n}\n}\n}\n</code></pre>"},{"location":"samples/apps/#2-qr-\u30b3\u30fc\u30c9\u4f5c\u6210","title":"2. QR \u30b3\u30fc\u30c9\u4f5c\u6210","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u5909\u63db\u3059\u308b\u30c6\u30ad\u30b9\u30c8\nTextEditState textEdit{ U\"Abc\" };\nString previous;\n// QR \u30b3\u30fc\u30c9\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u52d5\u7684\u30c6\u30af\u30b9\u30c1\u30e3\nDynamicTexture texture;\nwhile (System::Update())\n{\n// \u30c6\u30ad\u30b9\u30c8\u5165\u529b\nSimpleGUI::TextBox(textEdit, Vec2{ 20,20 }, 1240);\n// \u30c6\u30ad\u30b9\u30c8\u306e\u66f4\u65b0\u304c\u3042\u308c\u3070 QR \u30b3\u30fc\u30c9\u3092\u518d\u4f5c\u6210\u3059\u308b\nif (const String current = textEdit.text;\ncurrent != previous)\n{\n// \u5165\u529b\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u3092 QR \u30b3\u30fc\u30c9\u306b\u5909\u63db\u3059\u308b\nif (const auto qr = QR::EncodeText(current))\n{\n// \u67a0\u3092\u4ed8\u3051\u3066\u62e1\u5927\u3057\u305f\u753b\u50cf\u3067\u52d5\u7684\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u66f4\u65b0\u3059\u308b\ntexture.fill(QR::MakeImage(qr).scaled(500, 500, InterpolationAlgorithm::Nearest));\n}\nprevious = current;\n}\ntexture.drawAt(640, 400);\n}\n}\n</code></pre>"},{"location":"samples/apps/#3-\u30c9\u30c3\u30c8\u304a\u7d75\u304b\u304d","title":"3. \u30c9\u30c3\u30c8\u304a\u7d75\u304b\u304d","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30ab\u30fc\u30bd\u30eb\u304c\u4e57\u3063\u3066\u3044\u308b\u30bb\u30eb\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\nOptional&lt;Point&gt; CursorPosToIndex(int32 cellSize, const Size&amp; gridSize)\n{\nconst Point cursorPos = Cursor::Pos();\nif ((cursorPos.x &lt; 0) || (cursorPos.y &lt; 0))\n{\nreturn none;\n}\nconst Point index = (cursorPos / cellSize);\nif ((not InRange(index.x, 0, (gridSize.x - 1)))\n|| (not InRange(index.y, 0, (gridSize.y - 1))))\n{\nreturn none;\n}\nreturn index;\n}\n// \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304b\u3089\u30bb\u30eb\u306e Rect \u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\nRect IndexToRect(const Point&amp; index, int32 cellSize)\n{\nreturn Rect{ (index * cellSize), cellSize };\n}\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconstexpr int32 CellSize = 40;\n// \u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3068\u30bb\u30eb\u306e\u5927\u304d\u3055\u304b\u3089\u7e26\u6a2a\u306e\u30bb\u30eb\u306e\u500b\u6570\u3092\u8a08\u7b97\nGrid&lt;int32&gt; grid(Scene::Size() / CellSize);\nwhile (System::Update())\n{\n// \u30ab\u30fc\u30bd\u30eb\u3092\u624b\u306e\u5f62\u306b\u3059\u308b\nCursor::RequestStyle(CursorStyle::Hand);\nfor (auto p : step(grid.size()))\n{\nIndexToRect(p, CellSize).stretched(-1).draw(ColorF{ 0.95 - grid[p] * 0.3 });\n}\n// \u30ab\u30fc\u30bd\u30eb\u304c\u4e57\u3063\u3066\u3044\u308b\u30bb\u30eb\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u53d6\u5f97\u3059\u308b\n// \uff08\u3059\u3079\u3066\u306e\u30bb\u30eb\u3067\u30af\u30ea\u30c3\u30af\u5224\u5b9a\u3092\u884c\u3046\u3088\u308a\u3082\u52b9\u7387\u7684\uff09\nif (const auto index = CursorPosToIndex(CellSize, grid.size()))\n{\n// \u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (MouseL.down())\n{\n// 0 \u2192 1 \u2192 2 \u2192\u30003 \u2192 0 \u2192 1 \u2192 ... \u3068\u9077\u79fb\u3055\u305b\u308b\n++grid[*index] %= 4;\n}\n// \u53f3\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\nif (MouseR.pressed())\n{\ngrid[*index] = 0;\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/apps/#4-\u6642\u8a08","title":"4. \u6642\u8a08","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nconst Vec2 center = Scene::Center();\nwhile (System::Update())\n{\nCircle{ center, 240 }.drawShadow(Vec2{ 0, 2 }, 12).draw().drawFrame(20, 0, ColorF{ 0.8 });\n// \u6570\u5b57\nfor (auto i : Range(1, 12))\n{\nconst Vec2 pos = OffsetCircular{ center, 170, (i * 30_deg) };\nfont(i).drawAt(50, pos, ColorF{ 0.3 });\n}\nfor (auto i : Range(0, 59))\n{\nconst Vec2 pos = OffsetCircular{ center, 210, i * 6_deg };\nCircle{ pos, (i % 5 ? 3 : 6) }.draw(ColorF{ 0.3 });\n}\n// \u73fe\u5728\u6642\u523b\u3092\u53d6\u5f97\nconst DateTime time = DateTime::Now();\n// \u6642\u91dd\nconst double hour = ((time.hour + time.minute / 60.0) * 30_deg);\nLine{ center, Arg::direction = Circular(110, hour) }\n.draw(LineStyle::RoundCap, 18, ColorF{ 0.11 });\n// \u5206\u91dd\nconst double minute = ((time.minute + time.second / 60.0) * 6_deg);\nLine{ center, Arg::direction = Circular(190, minute) }\n.draw(LineStyle::RoundCap, 8, ColorF{ 0.11 });\n// \u79d2\u91dd\nconst double second = (time.second * 6_deg);\nLine{ center, Arg::direction = Circular(190, second) }\n.stretched(40, 0)\n.draw(3, ColorF{ 0.11 });\n}\n}\n</code></pre>"},{"location":"samples/apps/#5-\u753b\u50cf\u30d3\u30e5\u30fc\u30a2","title":"5. \u753b\u50cf\u30d3\u30e5\u30fc\u30a2","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nTexture texture;\nwhile (System::Update())\n{\n// \u30d5\u30a1\u30a4\u30eb\u304c\u30c9\u30ed\u30c3\u30d7\u3055\u308c\u305f\nif (DragDrop::HasNewFilePaths())\n{\n// \u30d5\u30a1\u30a4\u30eb\u3092\u753b\u50cf\u3068\u3057\u3066\u8aad\u307f\u8fbc\u3081\u305f\nif (const Image image{ DragDrop::GetDroppedFilePaths().front().path })\n{\n// \u753b\u9762\u306e\u30b5\u30a4\u30ba\u306b\u5408\u3046\u3088\u3046\u306b\u753b\u50cf\u3092\u62e1\u5927\u7e2e\u5c0f\ntexture = Texture{ image.fitted(Scene::Size()) };\n}\n}\nif (texture)\n{\ntexture.drawAt(Scene::CenterF());\n}\n}\n}\n</code></pre>"},{"location":"samples/apps/#6-\u30ea\u30b5\u30a4\u30ba\u53ef\u80fd\u306a\u753b\u50cf\u30d3\u30e5\u30fc\u30a2","title":"6. \u30ea\u30b5\u30a4\u30ba\u53ef\u80fd\u306a\u753b\u50cf\u30d3\u30e5\u30fc\u30a2","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::SetStyle(WindowStyle::Sizable);\nScene::SetResizeMode(ResizeMode::Actual);\nScene::SetBackground(ColorF{ 0.5 });\nTexture texture;\nwhile (System::Update())\n{\n// \u30d5\u30a1\u30a4\u30eb\u304c\u30c9\u30ed\u30c3\u30d7\u3055\u308c\u305f\nif (DragDrop::HasNewFilePaths())\n{\n// \u30d5\u30a1\u30a4\u30eb\u3092\u753b\u50cf\u3068\u3057\u3066\u8aad\u307f\u8fbc\u3081\u305f\nif (const Image image{ DragDrop::GetDroppedFilePaths().front().path })\n{\ntexture = Texture{ image, TextureDesc::Mipped };\n}\n}\nif (texture)\n{\ntexture.fitted(Scene::Size()).drawAt(Scene::CenterF());\n}\n}\n}\n</code></pre>"},{"location":"samples/apps/#7-\u4e16\u754c\u5730\u56f3","title":"7. \u4e16\u754c\u5730\u56f3","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nconst Array&lt;MultiPolygon&gt; countries = GeoJSONFeatureCollection{ JSON::Load(U\"example/geojson/countries.geojson\") }.getFeatures()\n.map([](const GeoJSONFeature&amp; f) { return f.getGeometry().getPolygons(); });\nCamera2D camera{ Vec2{ 0, 0 }, 2.0, Camera2DParameters{.maxScale = 4096.0 } };\nOptional&lt;size_t&gt; selected;\nwhile (System::Update())\n{\nClearPrint();\ncamera.update();\n{\nconst auto transformer = camera.createTransformer();\nconst double lineThickness = (1.0 / Graphics2D::GetMaxScaling());\nconst RectF viewRect = camera.getRegion();\nPrint &lt;&lt; Cursor::PosF();\nPrint &lt;&lt; camera.getScale() &lt;&lt; U\"x\";\nRect{ Arg::center(0, 0), 360, 180 }.draw(ColorF{ 0.2, 0.6, 0.9 }); // \u6d77\n{\nfor (auto&amp;&amp; [i, country] : Indexed(countries))\n{\n// \u753b\u9762\u5916\u306b\u3042\u308b\u5834\u5408\u306f\u63cf\u753b\u3092\u30b9\u30ad\u30c3\u30d7\nif (not country.computeBoundingRect().intersects(viewRect))\n{\ncontinue;\n}\nif (country.leftClicked())\n{\nselected = i;\n}\ncountry.draw((selected == i) ? ColorF{ 0.9, 0.8, 0.7 } : ColorF{ 0.93, 0.99, 0.96 });\ncountry.drawFrame(lineThickness, ColorF{ 0.25 });\n}\n}\n}\ncamera.draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"samples/apps/#8-\u52d5\u753b\u30d7\u30ec\u30a4\u30e4\u30fc","title":"8. \u52d5\u753b\u30d7\u30ec\u30a4\u30e4\u30fc","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nVideoTexture videoTexture;\nAudio audio;\nbool playing = false;\nwhile (System::Update())\n{\nif (playing)\n{\nvideoTexture.advance();\n}\nconst double videoTime = videoTexture.posSec();\nconst double audioTime = audio.posSec();\n// \u52d5\u753b\u306e\u518d\u751f\u4f4d\u7f6e\u3068\u97f3\u58f0\u306e\u518d\u751f\u4f4d\u7f6e\u306e\u5dee\u304c 0.1 \u79d2\u4ee5\u4e0a\u3042\u308b\u5834\u5408\nif (audio &amp;&amp; (0.1 &lt; AbsDiff(audioTime, videoTime)))\n{\n// \u97f3\u58f0\u306e\u518d\u751f\u4f4d\u7f6e\u3092\u52d5\u753b\u306e\u518d\u751f\u4f4d\u7f6e\u306b\u5408\u308f\u305b\u308b\naudio.seekTime(videoTime);\n}\nif (videoTexture)\n{\nvideoTexture.fitted(Scene::Size()).drawAt(Scene::CenterF());\n}\nif (SimpleGUI::Button(U\"Open\", Vec2{ 40, 640 }, 100))\n{\nplaying = false;\nif (audio)\n{\naudio.pause();\n}\nif (const auto path = Dialog::OpenFile({ FileFilter::AllVideoFiles() }))\n{\nvideoTexture = VideoTexture{ *path };\naudio = Audio{ Audio::Stream, *path };\nif (videoTexture)\n{\nvideoTexture.advance(0.0);\nplaying = true;\n}\nif (audio)\n{\naudio.play();\n}\n}\n}\nif (SimpleGUI::Button(U\"\\U000F04AB\", Vec2{ 150, 640 }, 60, (not videoTexture.isEmpty())))\n{\nvideoTexture.setPosSec(0.0);\nvideoTexture.advance(0.0);\naudio.seekTime(0.0);\n}\nif (SimpleGUI::Button((playing ? U\"\\U000F03E4\" : U\"\\U000F040A\"), Vec2{ 220, 640 }, 60, (not videoTexture.isEmpty())))\n{\nplaying = (not playing);\nif (audio)\n{\nif (playing)\n{\naudio.play();\n}\nelse\n{\naudio.pause();\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/apps/#9-\u30b3\u30c3\u30db\u66f2\u7dda","title":"9. \u30b3\u30c3\u30db\u66f2\u7dda","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nArray&lt;Line&gt; Next(const Array&lt;Line&gt;&amp; lines)\n{\nArray&lt;Line&gt; result;\nfor (const auto&amp; line : lines)\n{\nconst Vec2 p0 = line.begin;\nconst Vec2 p1 = (line.begin + (line.vector() / 3));\nconst Vec2 p2 = (p1 + (line.vector() / 3).rotate(-60_deg));\nconst Vec2 p3 = (line.end - (line.vector() / 3));\nconst Vec2 p4 = line.end;\nresult.emplace_back(p0, p1);\nresult.emplace_back(p1, p2);\nresult.emplace_back(p2, p3);\nresult.emplace_back(p3, p4);\n}\nreturn result;\n}\nvoid Draw(const Array&lt;Line&gt;&amp; lines)\n{\nconst double thickness = Min(2.0 / Graphics2D::GetMaxScaling(), 2.0);\nfor (const auto&amp; line : lines)\n{\nline.draw(thickness, Palette::Black);\n}\n}\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.7, 0.9, 0.8 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Heavy };\nconst Array&lt;Line&gt; e0 = { Line{ -400, 0, 400, 0 } };\nconst Array&lt;Line&gt; e1 = Next(e0);\nconst Array&lt;Line&gt; e2 = Next(e1);\nconst Array&lt;Line&gt; e3 = Next(e2);\nconst Array&lt;Line&gt; e4 = Next(e3);\nconst Array&lt;Line&gt; e5 = Next(e4);\nconst Array&lt;Line&gt; e6 = Next(e5);\nCamera2D camera{ Vec2{ 0, 0 },1.0 };\nsize_t level = 0;\nwhile (System::Update())\n{\n{\nconst auto t = camera.createTransformer();\ncamera.update();\nif (level == 0)\nDraw(e0);\nelse if (level == 1)\nDraw(e1);\nelse if (level == 2)\nDraw(e2);\nelse if (level == 3)\nDraw(e3);\nelse if (level == 4)\nDraw(e4);\nelse if (level == 5)\nDraw(e5);\nelse if (level == 6)\nDraw(e6);\ncamera.draw(Palette::Orange);\n}\nSimpleGUI::RadioButtons(level, { U\"E0\", U\"E1\", U\"E2\", U\"E3\", U\"E4\", U\"E5\", U\"E6\" }, Vec2{ 20, 20 });\nRect{ 20, 500, 300, 200 }\n.drawShadow(Vec2{ 3, 3 }, 8, 0)\n.draw(ColorF{ 1.0, 0.9, 0.8 });\nconst Line base{ 40, 600, 280, 600 };\nDraw(Next({ base }));\nfont(U\"Generator\").drawAt(24, Vec2{ 160, 680 }, ColorF{ 0.0, 0.5 });\n}\n}\n</code></pre>"},{"location":"samples/apps/#10-ai-\u306b\u3088\u308b\u7269\u8a9e\u751f\u6210","title":"10. AI \u306b\u3088\u308b\u7269\u8a9e\u751f\u6210","text":"<p>Siv3D-Sample | AI \u306b\u3088\u308b\u7269\u8a9e\u751f\u6210 </p>"},{"location":"samples/gamelauncher/","title":"\u30b2\u30fc\u30e0\u30e9\u30f3\u30c1\u30e3\u30fc\u3092\u4f5c\u308b","text":"<p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | \u30b2\u30fc\u30e0\u30e9\u30f3\u30c1\u30e3\u30fc </p>"},{"location":"samples/games/","title":"\u30b2\u30fc\u30e0\u306e\u30b5\u30f3\u30d7\u30eb","text":""},{"location":"samples/games/#1-\u30d6\u30ed\u30c3\u30af\u304f\u305a\u3057","title":"1. \u30d6\u30ed\u30c3\u30af\u304f\u305a\u3057","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// 1 \u3064\u306e\u30d6\u30ed\u30c3\u30af\u306e\u30b5\u30a4\u30ba | Size of a single block\nconstexpr Size BrickSize{ 40, 20 };\n// \u30dc\u30fc\u30eb\u306e\u901f\u3055\uff08\u30d4\u30af\u30bb\u30eb / \u79d2\uff09 | Ball speed (pixels / second)\nconstexpr double BallSpeedPerSec = 480.0;\n// \u30dc\u30fc\u30eb\u306e\u901f\u5ea6 | Ball velocity\nVec2 ballVelocity{ 0, -BallSpeedPerSec };\n// \u30dc\u30fc\u30eb | Ball\nCircle ball{ 400, 400, 8 };\n// \u30d6\u30ed\u30c3\u30af\u306e\u914d\u5217 | Array of bricks\nArray&lt;Rect&gt; bricks;\nfor (int32 y = 0; y &lt; 5; ++y)\n{\nfor (int32 x = 0; x &lt; (Scene::Width() / BrickSize.x); ++x)\n{\nbricks &lt;&lt; Rect{ (x * BrickSize.x), (60 + y * BrickSize.y), BrickSize };\n}\n}\nwhile (System::Update())\n{\n// \u30d1\u30c9\u30eb | Paddle\nconst Rect paddle{ Arg::center(Cursor::Pos().x, 500), 60, 10 };\n// \u30dc\u30fc\u30eb\u3092\u79fb\u52d5\u3055\u305b\u308b | Move the ball\nball.moveBy(ballVelocity * Scene::DeltaTime());\n// \u30d6\u30ed\u30c3\u30af\u3092\u9806\u306b\u30c1\u30a7\u30c3\u30af\u3059\u308b | Check bricks in sequence\nfor (auto it = bricks.begin(); it != bricks.end(); ++it)\n{\n// \u30d6\u30ed\u30c3\u30af\u3068\u30dc\u30fc\u30eb\u304c\u4ea4\u5dee\u3057\u3066\u3044\u305f\u3089 | If block and ball intersect\nif (it-&gt;intersects(ball))\n{\n// \u30d6\u30ed\u30c3\u30af\u306e\u4e0a\u8fba\u3001\u307e\u305f\u306f\u5e95\u8fba\u3068\u4ea4\u5dee\u3057\u3066\u3044\u305f\u3089 | If ball intersects with top or bottom of the block\nif (it-&gt;bottom().intersects(ball) || it-&gt;top().intersects(ball))\n{\n// \u30dc\u30fc\u30eb\u306e\u901f\u5ea6\u306e Y \u6210\u5206\u306e\u7b26\u53f7\u3092\u53cd\u8ee2\u3059\u308b | Reverse the sign of the Y component of the ball's velocity\nballVelocity.y *= -1;\n}\nelse // \u30d6\u30ed\u30c3\u30af\u306e\u5de6\u8fba\u307e\u305f\u306f\u53f3\u8fba\u3068\u4ea4\u5dee\u3057\u3066\u3044\u305f\u3089\n{\n// \u30dc\u30fc\u30eb\u306e\u901f\u5ea6\u306e X \u6210\u5206\u306e\u7b26\u53f7\u3092\u53cd\u8ee2\u3059\u308b | Reverse the sign of the X component of the ball's velocity\nballVelocity.x *= -1;\n}\n// \u30d6\u30ed\u30c3\u30af\u3092\u914d\u5217\u304b\u3089\u524a\u9664\u3059\u308b\uff08\u30a4\u30c6\u30ec\u30fc\u30bf\u306f\u7121\u52b9\u306b\u306a\u308b\uff09 | Remove the block from the array (the iterator becomes invalid)\nbricks.erase(it);\n// \u3053\u308c\u4ee5\u4e0a\u30c1\u30a7\u30c3\u30af\u3057\u306a\u3044 | Do not check any more\nbreak;\n}\n}\n// \u5929\u4e95\u306b\u3076\u3064\u304b\u3063\u305f\u3089 | If the ball hits the ceiling\nif ((ball.y &lt; 0) &amp;&amp; (ballVelocity.y &lt; 0))\n{\n// \u30dc\u30fc\u30eb\u306e\u901f\u5ea6\u306e Y \u6210\u5206\u306e\u7b26\u53f7\u3092\u53cd\u8ee2\u3059\u308b | Reverse the sign of the Y component of the ball's velocity\nballVelocity.y *= -1;\n}\n// \u5de6\u53f3\u306e\u58c1\u306b\u3076\u3064\u304b\u3063\u305f\u3089 | If the ball hits the left or right wall\nif (((ball.x &lt; 0) &amp;&amp; (ballVelocity.x &lt; 0))\n|| ((Scene::Width() &lt; ball.x) &amp;&amp; (0 &lt; ballVelocity.x)))\n{\n// \u30dc\u30fc\u30eb\u306e\u901f\u5ea6\u306e X \u6210\u5206\u306e\u7b26\u53f7\u3092\u53cd\u8ee2\u3059\u308b | Reverse the sign of the X component of the ball's velocity\nballVelocity.x *= -1;\n}\n// \u30d1\u30c9\u30eb\u306b\u3042\u305f\u3063\u305f\u3089 | If the ball hits the left or right wall\nif ((0 &lt; ballVelocity.y) &amp;&amp; paddle.intersects(ball))\n{\n// \u30d1\u30c9\u30eb\u306e\u4e2d\u5fc3\u304b\u3089\u306e\u8ddd\u96e2\u306b\u5fdc\u3058\u3066\u306f\u306d\u8fd4\u308b\u65b9\u5411\uff08\u901f\u5ea6\u30d9\u30af\u30c8\u30eb\uff09\u3092\u5909\u3048\u308b | Change the direction (velocity vector) of the ball depending on the distance from the center of the paddle\nballVelocity = Vec2{ (ball.x - paddle.center().x) * 10, -ballVelocity.y }.setLength(BallSpeedPerSec);\n}\n// \u3059\u3079\u3066\u306e\u30d6\u30ed\u30c3\u30af\u3092\u63cf\u753b\u3059\u308b | Draw all the bricks\nfor (const auto&amp; brick : bricks)\n{\n// \u30d6\u30ed\u30c3\u30af\u306e Y \u5ea7\u6a19\u306b\u5fdc\u3058\u3066\u8272\u3092\u5909\u3048\u308b | Change the color of the brick depending on the Y coordinate\nbrick.stretched(-1).draw(HSV{ brick.y - 40 });\n}\n// \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u975e\u8868\u793a\u306b\u3059\u308b | Hide the mouse cursor\nCursor::RequestStyle(CursorStyle::Hidden);\n// \u30dc\u30fc\u30eb\u3092\u63cf\u304f | Draw the ball\nball.draw();\n// \u30d1\u30c9\u30eb\u3092\u63cf\u304f | Draw the paddle\npaddle.rounded(3).draw();\n}\n}\n</code></pre>"},{"location":"samples/games/#2-\u843d\u3061\u3066\u304f\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u62fe\u3046\u30b2\u30fc\u30e0","title":"2. \u843d\u3061\u3066\u304f\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u62fe\u3046\u30b2\u30fc\u30e0","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30a2\u30a4\u30c6\u30e0\u306e\u60c5\u5831\nstruct ItemInfo\n{\n// \u30a2\u30a4\u30c6\u30e0\u306e\u30c6\u30af\u30b9\u30c1\u30e3\nTexture texture;\n// \u843d\u4e0b\u901f\u5ea6\uff08\u30d4\u30af\u30bb\u30eb / \u79d2\uff09\ndouble speed;\n// \u5f97\u70b9\nint32 score;\n};\n// \u30d5\u30a3\u30fc\u30eb\u30c9\u4e0a\u306e\u30a2\u30a4\u30c6\u30e0\nstruct Item\n{\n// \u30a2\u30a4\u30c6\u30e0\u306e\u7a2e\u985e\nint32 type;\n// \u30a2\u30a4\u30c6\u30e0\u306e\u73fe\u5728\u4f4d\u7f6e\nVec2 pos;\n};\nvoid Main()\n{\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u7d75\u6587\u5b57\u30c6\u30af\u30b9\u30c1\u30e3\nconst Texture playerTexture{ U\"\ud83d\ude03\"_emoji };\n// \u30b9\u30b3\u30a2\u8868\u793a\u7528\u306e\u30d5\u30a9\u30f3\u30c8\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u30b9\u30d4\u30fc\u30c9\uff08\u30d4\u30af\u30bb\u30eb / \u79d2)\nconstexpr double PlayerSpeed = 500.0;\n// \u30a2\u30a4\u30c6\u30e0\u304c\u767a\u751f\u3059\u308b\u6642\u9593\u9593\u9694\uff08\u79d2\uff09\nconstexpr double ItemSpawnInterval = 0.5;\n// \u30a2\u30a4\u30c6\u30e0\u306e\u3042\u305f\u308a\u5224\u5b9a\u306e\u5186\u306e\u534a\u5f84\uff08\u30d4\u30af\u30bb\u30eb\uff09\nconstexpr double ItemRadius = 40.0;\n// \u30a2\u30a4\u30c6\u30e0\u306e\u30c6\u30af\u30b9\u30c1\u30e3\nconst Array&lt;ItemInfo&gt; ItemInfos =\n{\n{ Texture{ U\"\ud83c\udf69\"_emoji }, 200.0, 100 },\n{ Texture{ U\"\ud83c\udf70\"_emoji }, 300.0, 500 },\n};\n// \u6700\u5f8c\u306b\u30a2\u30a4\u30c6\u30e0\u304c\u767a\u751f\u3057\u3066\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\uff08\u79d2\uff09\ndouble itemSpawnAccumulatedTime = 0.0;\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u5ea7\u6a19\nVec2 playerPos{ 400, 500 };\n// \u73fe\u5728\u753b\u9762\u4e0a\u306b\u3042\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u914d\u5217\nArray&lt;Item&gt; items;\n// \u30b9\u30b3\u30a2\nint32 score = 0;\nwhile (System::Update())\n{\n////////////////////////////////\n//\n//\t\u72b6\u614b\u66f4\u65b0\n//\n////////////////////////////////\n// \u524d\u306e\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593 (\u79d2)\nconst double deltaTime = Scene::DeltaTime();\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u79fb\u52d5\u306b\u95a2\u3059\u308b\u51e6\u7406\n{\nif (KeyLeft.pressed()) // [\u2190] \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\n{\nplayerPos.x -= (PlayerSpeed * deltaTime);\n}\nelse if (KeyRight.pressed()) // [\u2192] \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\n{\nplayerPos.x += (PlayerSpeed * deltaTime);\n}\n// \u58c1\u306e\u5916\u306b\u51fa\u306a\u3044\u3088\u3046\u306b\u3059\u308b\n// Clamp(x, min, max) \u306f, x \u3092 min\uff5emax \u306e\u7bc4\u56f2\u306b\u53ce\u3081\u305f\u5024\u3092\u8fd4\u3059\nplayerPos.x = Clamp(playerPos.x, 0.0, 800.0);\n}\n// \u30a2\u30a4\u30c6\u30e0\u306e\u51fa\u73fe\u3068\u79fb\u52d5\u3068\u6d88\u6ec5\u306b\u95a2\u3059\u308b\u51e6\u7406\n{\nitemSpawnAccumulatedTime += deltaTime;\n// spawnTime \u304c\u7d4c\u904e\u3059\u308b\u3054\u3068\u306b\u65b0\u3057\u3044\u30a2\u30a4\u30c6\u30e0\u3092\u51fa\u73fe\u3055\u305b\u308b\nwhile (ItemSpawnInterval &lt;= itemSpawnAccumulatedTime)\n{\n// \u65b0\u3057\u304f\u51fa\u73fe\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u914d\u5217\u306b\u8ffd\u52a0\u3059\u308b\nitems &lt;&lt; Item\n{\n.type = (RandomBool(0.9) ? 0 : 1), // \u30a2\u30a4\u30c6\u30e0\u306e\u7a2e\u985e\n.pos = { Random(100, 700), -100 }, // \u30a2\u30a4\u30c6\u30e0\u306e\u521d\u671f\u5ea7\u6a19\n};\nitemSpawnAccumulatedTime -= ItemSpawnInterval;\n}\n// \u3059\u3079\u3066\u306e\u30a2\u30a4\u30c6\u30e0\u306b\u3064\u3044\u3066\u79fb\u52d5\u51e6\u7406\u3092\u884c\u3046\nfor (auto&amp; item : items)\n{\nitem.pos.y += (ItemInfos[item.type].speed * deltaTime);\n}\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u3042\u305f\u308a\u5224\u5b9a\u306e\u5186\nconst Circle playerCircle{ playerPos, 60 };\n// \u30a2\u30a4\u30c6\u30e0\u306e\u3042\u305f\u308a\u5224\u5b9a\u3068\u56de\u53ce\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u524a\u9664\nfor (auto it = items.begin(); it != items.end();)\n{\n// \u30a2\u30a4\u30c6\u30e0\u306e\u3042\u305f\u308a\u5224\u5b9a\u306e\u5186\nconst Circle itemCircle{ it-&gt;pos, ItemRadius };\n// \u4ea4\u5dee\u3057\u305f\u3089\u30a2\u30a4\u30c6\u30e0\u3092\u524a\u9664\nif (playerCircle.intersects(itemCircle))\n{\n// (\u524a\u9664\u3059\u308b\u524d\u306b) \u30b9\u30b3\u30a2\u3092\u52a0\u7b97\u3059\u308b\nscore += ItemInfos[it-&gt;type].score;\n// \u30a2\u30a4\u30c6\u30e0\u3092\u524a\u9664\u3059\u308b\nit = items.erase(it);\n}\nelse\n{\n// \u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u6b21\u306e\u30a2\u30a4\u30c6\u30e0\u306b\u9032\u3081\u308b\n++it;\n}\n}\n// \u753b\u9762\u5916\u306b\u51fa\u305f\u30a2\u30a4\u30c6\u30e0\u3092\u6d88\u53bb\u3059\u308b\nitems.remove_if([](const Item&amp; item) { return (700 &lt; item.pos.y); });\n}\n////////////////////////////////\n//\n//\t\u63cf\u753b\n//\n////////////////////////////////\n// \u80cc\u666f\u3092\u63cf\u753b\u3059\u308b\nScene::Rect().draw(Arg::top = ColorF{ 0.1, 0.4, 0.8 }, Arg::bottom = ColorF{ 0.3, 0.7, 1.0 });\n// \u5730\u9762\u3092\u63cf\u753b\u3059\u308b\nRect{ Arg::bottomLeft(0, Scene::Height()), Scene::Width(), 60 }.draw(ColorF{ 0.2, 0.6, 0.3 });\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b\nplayerTexture.drawAt(playerPos);\n// \u30a2\u30a4\u30c6\u30e0\u3092\u63cf\u753b\u3059\u308b\nfor (const auto&amp; item : items)\n{\nItemInfos[item.type].texture.resized(ItemRadius * 2).drawAt(item.pos);\n}\n// \u30b9\u30b3\u30a2\u3092\u63cf\u753b\u3059\u308b\nfont(ThousandsSeparate(score)).draw(30, Vec2{ 20, 20 });\n}\n}\n</code></pre>"},{"location":"samples/games/#3-15-\u30d1\u30ba\u30eb","title":"3. 15 \u30d1\u30ba\u30eb","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// 2\u3064 \u306e\u30d4\u30fc\u30b9\u304c\u96a3\u308a\u5408\u3063\u3066\u3044\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\nbool Swappable(int32 a, int32 b)\n{\nreturn ((a / 4 == b / 4) &amp;&amp; (AbsDiff(a, b) == 1))\n|| ((a % 4 == b % 4) &amp;&amp; (AbsDiff(a, b) == 4));\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\n// \u30d4\u30fc\u30b9\u306e\u30b5\u30a4\u30ba\nconstexpr int32 CellSize = 100;\n// \u4f4d\u7f6e\nconstexpr Point Offset{ 60, 40 };\n// \u30c0\u30a4\u30a2\u30ed\u30b0\u304b\u3089\u753b\u50cf\u3092\u9078\u629e\u3059\u308b\nconst Image image = Dialog::OpenImage();\n// \u6b63\u65b9\u5f62\u306b\u5207\u308a\u629c\u304f\nconst Texture texture{ image.squareClipped(), TextureDesc::Mipped };\n// \u30e9\u30f3\u30c0\u30e0\u306a\u64cd\u4f5c\u3067\u30d1\u30ba\u30eb\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\u3059\u308b\nArray&lt;int32&gt; pieces = Range(0, 15);\n{\n// \u7a7a\u767d\u306e\u4f4d\u7f6e\nint32 blankPos = 15;\nfor (int32 i = 0; i &lt; 1000; ++i)\n{\nconst int32 to = (blankPos + Sample({ -4, -1, 1, 4 }));\nif (InRange(to, 0, 15) &amp;&amp; Swappable(blankPos, to))\n{\nstd::swap(pieces[blankPos], pieces[to]);\nblankPos = to;\n}\n}\n}\n// \u63b4\u3093\u3067\u3044\u308b\u30d4\u30fc\u30b9\u306e\u756a\u53f7\nOptional&lt;int32&gt; grabbed;\nwhile (System::Update())\n{\nRect{ Offset, (CellSize * 4) }\n.drawShadow(Vec2{ 0, 2 }, 12, 8)\n.draw(ColorF{ 0.25 })\n.drawFrame(0, 8, ColorF{ 0.3, 0.5, 0.7 });\nif (not MouseL.pressed())\n{\ngrabbed.reset();\n}\nfor (int32 i = 0; i &lt; 16; ++i)\n{\nconst int32 pieceID = pieces[i];\nconst Rect rect = Rect{ (CellSize * (i % 4)), (CellSize * (i / 4)), CellSize }.movedBy(Offset);\nif (pieceID == 15)\n{\nif (grabbed &amp;&amp; rect.mouseOver() &amp;&amp; Swappable(i, grabbed.value()))\n{\nstd::swap(pieces[i], pieces[grabbed.value()]);\ngrabbed = i;\n}\ncontinue;\n}\nif (rect.leftClicked())\n{\ngrabbed = i;\n}\nrect(texture.uv((pieceID % 4 * 0.25), (pieceID / 4 * 0.25), 0.25, 0.25))\n.draw()\n.drawFrame(1, 0, ColorF{ 1.0, 0.75 });\nif (grabbed == i)\n{\nrect.draw(ColorF{ 1.0, 0.5, 0.0, 0.3 });\n}\nif (rect.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n}\n// \u898b\u672c\u3092\u63cf\u304f\ntexture.resized(180)\n.draw((Offset.x + CellSize * 4 + 40), Offset.y)\n.drawFrame(0, 4, ColorF{ 0.3, 0.5, 0.7 });\n}\n}\n</code></pre>"},{"location":"samples/games/#4-\u6570\u3064\u306a\u304e","title":"4. \u6570\u3064\u306a\u304e","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nstruct Bubble\n{\n// \u30d0\u30d6\u30eb\u306e\u5186\u306e\u534a\u5f84\nstatic constexpr int32 Radius = 30;\n// \u30d0\u30d6\u30eb\u306e\u5186\nCircle circle;\n// \u30d0\u30d6\u30eb\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\nint32 index;\n// \u63a5\u7d9a\u6e08\u307f\u306a\u3089 true \u306b\nbool connected = false;\nvoid draw(const Font&amp; font) const\n{\nif (connected)\n{\ncircle.drawShadow(Vec2{ 1, 2 }, 10, 3).draw()\n.drawFrame(2, 0, ColorF{ 0.3, 0.6, 1.0 });\n}\nelse\n{\ncircle.draw();\n}\nfont(index + 1).drawAt(36, circle.center, ColorF{ 0.25 });\n}\n};\n// \u30d0\u30d6\u30eb\u3069\u3046\u3057\u304c\u91cd\u306a\u3063\u3066\u3044\u306a\u3044\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\nbool CheckBubbles(const Array&lt;Bubble&gt;&amp; bubbles)\n{\nfor (size_t i = 0; i &lt; bubbles.size(); ++i)\n{\nfor (size_t k = (i + 1); k &lt; bubbles.size(); ++k)\n{\n// \u91cd\u306a\u3063\u3066\u3044\u308b\nif (bubbles[i].circle.stretched(5)\n.intersects(bubbles[k].circle.stretched(5)))\n{\nreturn false;\n}\n}\n}\nreturn true;\n}\n// \u6307\u5b9a\u3057\u305f\u500b\u6570\u306e\u30d0\u30d6\u30eb\u3092\u91cd\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u751f\u6210\u3059\u308b\nArray&lt;Bubble&gt; MakeBubbles(int32 count)\n{\nArray&lt;Bubble&gt; bubbles(count);\ndo\n{\nfor (int32 i = 0; i &lt; count; ++i)\n{\n// \u30d0\u30d6\u30eb\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\nbubbles[i].index = i;\n// \u30d0\u30d6\u30eb\u306e\u5186\nbubbles[i].circle.set(RandomVec2(Circle{ Scene::Center(), (Scene::Height() / 2 - Bubble::Radius) }), Bubble::Radius);\n}\n} while (not CheckBubbles(bubbles));\nreturn bubbles;\n}\n// \u6307\u5b9a\u3057\u305f\u30ec\u30d9\u30eb\u306b\u304a\u3051\u308b\u30d0\u30d6\u30eb\u306e\u500b\u6570\nconstexpr int32 GetBubbleCount(int32 level)\n{\nreturn Min(level, 15);\n}\n// \u6307\u5b9a\u3057\u305f\u30ec\u30d9\u30eb\u306b\u304a\u3051\u308b\u5236\u9650\u6642\u9593\uff08\u79d2\uff09\nconstexpr Duration GetTime(int32 level)\n{\nreturn Duration{ (level &lt;= 15) ? 8.0 : 8.0 - Min((level - 15) * 0.05, 2.0) };\n}\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst Font font{ FontMethod::MSDF, 48, Typeface::Medium };\nEffect effect;\n// \u52b9\u679c\u97f3\u3092\u4f5c\u6210\u3059\u308b\nconst Array&lt;PianoKey&gt; keys = { PianoKey::C5,  PianoKey::D5, PianoKey::E5, PianoKey::F5, PianoKey::G5,\nPianoKey::A5, PianoKey::B5, PianoKey::C6, PianoKey::D6, PianoKey::E6,\nPianoKey::F6, PianoKey::G6, PianoKey::A6, PianoKey::B6, PianoKey::C7 };\nconst Array&lt;Audio&gt; sounds = keys.map([](auto k) { return Audio{ GMInstrument::Glockenspiel, k, 0.3s }; });\n// \u30cf\u30a4\u30b9\u30b3\u30a2\nint32 highScore = 0;\n// \u73fe\u5728\u306e\u30ec\u30d9\u30eb\nint32 level = 1;\n// \u63a5\u7d9a\u6570\nint32 connected = 0;\n// \u6b8b\u308a\u6642\u9593\u306e\u30bf\u30a4\u30de\u30fc\nTimer timer{ GetTime(level), StartImmediately::Yes };\n// \u30d0\u30d6\u30eb\nArray&lt;Bubble&gt; bubbles = MakeBubbles(GetBubbleCount(level));\nwhile (System::Update())\n{\nconst double delta = Scene::DeltaTime();\nfor (auto&amp; bubble : bubbles)\n{\nif ((bubble.index == connected)\n&amp;&amp; (not bubble.connected)\n&amp;&amp; bubble.circle.stretched(10).mouseOver())\n{\n// \u63a5\u7d9a\u6e08\u307f\u306b\u3059\u308b\nbubble.connected = true;\n// \u63a5\u7d9a\u6570\u3092\u5897\u3084\u3059\n++connected;\n// \u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\neffect.add([pos = Cursor::Pos()](double t)\n{\nCircle{ pos, (Bubble::Radius + t * 200) }.drawFrame(2, 0, ColorF{ 0.2, 0.5, 1.0, (1.0 - t * 2.5) });\nreturn (t &lt; 0.4);\n});\n// \u30d0\u30d6\u30eb\u306e\u6570\u5b57\u306b\u5fdc\u3058\u3066\u52b9\u679c\u97f3\u3092\u9cf4\u3089\u3059\nsounds[bubble.index].playOneShot(0.8);\n}\n// \u30d0\u30d6\u30eb\u3092\u5186\u5468\u306b\u6cbf\u3063\u3066\u79fb\u52d5\u3055\u305b\u308b\nbubble.circle.center = OffsetCircular{ Scene::Center(), bubble.circle.center }\n.rotate((IsEven(bubble.index) ? 20_deg : -20_deg) * delta);\n}\n// \u30d0\u30d6\u30eb\u3092\u3059\u3079\u3066\u3064\u306a\u3050\u304b\u3001\u6642\u9593\u5207\u308c\u306b\u306a\u3063\u305f\u3089\nif (const bool failed = timer.reachedZero();\n(connected == GetBubbleCount(level)) || failed)\n{\n// \u30ec\u30d9\u30eb\u3092\u66f4\u65b0\u3059\u308b\nlevel = (failed ? 1 : ++level);\n// \u63a5\u7d9a\u6570\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b\nconnected = 0;\n// \u5236\u9650\u6642\u9593\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b\ntimer = Timer{ GetTime(level), StartImmediately::Yes };\n// \u30d0\u30d6\u30eb\u3092\u518d\u751f\u6210\u3059\u308b\nbubbles = MakeBubbles(GetBubbleCount(level));\n// \u30cf\u30a4\u30b9\u30b3\u30a2\u3092\u66f4\u65b0\u3059\u308b\nhighScore = Max(highScore, level);\n// \u30bf\u30a4\u30c8\u30eb\u3092\u66f4\u65b0\u3059\u308b\nWindow::SetTitle(U\"Level {} (High score: {})\"_fmt(level, highScore));\n}\n// \u5236\u9650\u6642\u9593\u3092\u8868\u3059\u80cc\u666f\u3092\u63cf\u753b\u3059\u308b\nRectF{ Scene::Width(), (Scene::Height() * timer.progress0_1()) }.draw(HSV{ (level * 30), 0.3, 0.9 });\n// \u30d0\u30d6\u30eb\u3092\u3064\u306a\u3050\u7dda\u3092\u63cf\u753b\u3059\u308b\nfor (int32 i = 0; i &lt; (connected - 1); ++i)\n{\nLine{ bubbles[i].circle.center, bubbles[i + 1].circle.center }.draw(3, Palette::Orange);\n}\n// \u30d0\u30d6\u30eb\u3092\u63cf\u753b\u3059\u308b\nfor (const auto&amp; bubble : bubbles)\n{\nbubble.draw(font);\n}\n// \u30a8\u30d5\u30a7\u30af\u30c8\u3092\u63cf\u753b\u3059\u308b\neffect.update();\n}\n}\n</code></pre>"},{"location":"samples/games/#5-\u30bf\u30a4\u30d4\u30f3\u30b0\u30b2\u30fc\u30e0","title":"5. \u30bf\u30a4\u30d4\u30f3\u30b0\u30b2\u30fc\u30e0","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u554f\u984c\u6587\u306e\u30ea\u30b9\u30c8\nconst Array&lt;String&gt; texts =\n{\nU\"Practice makes perfect.\",\nU\"Don't cry over spilt milk.\",\nU\"Faith will move mountains.\",\nU\"Nothing ventured, nothing gained.\",\nU\"Bad news travels fast.\",\n};\n// \u554f\u984c\u6587\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u3076\nString target = texts.choice();\n// \u5165\u529b\u4e2d\u306e\u6587\u5b57\u5217\nString input;\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nwhile (System::Update())\n{\n// \u30c6\u30ad\u30b9\u30c8\u5165\u529b\uff08TextInputMode::DenyControl: \u30a8\u30f3\u30bf\u30fc\u3084\u30bf\u30d6\u3001\u30d0\u30c3\u30af\u30b9\u30da\u30fc\u30b9\u306f\u53d7\u3051\u4ed8\u3051\u306a\u3044\uff09\nTextInput::UpdateText(input, TextInputMode::DenyControl);\n// \u8aa4\u3063\u305f\u5165\u529b\u304c\u542b\u307e\u308c\u3066\u3044\u305f\u3089\u524a\u9664\u3059\u308b\nwhile (not target.starts_with(input))\n{\ninput.pop_back();\n}\n// \u4e00\u81f4\u3057\u305f\u3089\u6b21\u306e\u554f\u984c\u3078\u79fb\u308b\nif (input == target)\n{\n// \u554f\u984c\u6587\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u3076\ntarget = texts.choice();\n// \u5165\u529b\u6587\u5b57\u5217\u3092\u30af\u30ea\u30a2\u3059\u308b\t\ninput.clear();\n}\n// \u554f\u984c\u6587\u3092\u63cf\u753b\u3059\u308b\nfont(target).draw(40, Vec2{ 40, 80 }, ColorF{ 0.98 });\n// \u5165\u529b\u4e2d\u306e\u6587\u5b57\u3092\u63cf\u753b\u3059\u308b\nfont(input).draw(40, Vec2{ 40, 80 }, ColorF{ 0.12 });\n}\n}\n</code></pre>"},{"location":"samples/games/#6-\u7d75\u6587\u5b57\u30bf\u30ef\u30fc","title":"6. \u7d75\u6587\u5b57\u30bf\u30ef\u30fc","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092 1280x720 \u306b\u30ea\u30b5\u30a4\u30ba\nWindow::Resize(1280, 720);\n// \u80cc\u666f\u8272\u3092\u8a2d\u5b9a\nScene::SetBackground(ColorF{ 0.2, 0.7, 1.0 });\n// \u767b\u5834\u3059\u308b\u7d75\u6587\u5b57\nconst Array&lt;String&gt; emojis = { U\"\ud83d\udc18\", U\"\ud83d\udc27\", U\"\ud83d\udc10\", U\"\ud83d\udc24\" };\nArray&lt;MultiPolygon&gt; polygons;\nArray&lt;Texture&gt; textures;\nfor (const auto&amp; emoji : emojis)\n{\n// \u7d75\u6587\u5b57\u306e\u753b\u50cf\u304b\u3089\u5f62\u72b6\u60c5\u5831\u3092\u4f5c\u6210\u3059\u308b\npolygons &lt;&lt; Emoji::CreateImage(emoji).alphaToPolygonsCentered().simplified(2.0);\n// \u7d75\u6587\u5b57\u306e\u753b\u50cf\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\ntextures &lt;&lt; Texture{ Emoji{ emoji } };\n}\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b9\u30c6\u30c3\u30d7\uff08\u79d2\uff09\nconstexpr double StepTime = (1.0 / 200.0);\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\nP2World world;\n// [_] \u5730\u9762\nconst P2Body ground = world.createLine(P2Static, Vec2{ 0, 0 }, Line{ -300, 0, 300, 0 });\n// \u52d5\u7269\u306e\u7269\u4f53\nArray&lt;P2Body&gt; bodies;\n// \u7269\u4f53\u306e ID \u3068\u7d75\u6587\u5b57\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u5bfe\u5fdc\u30c6\u30fc\u30d6\u30eb\nHashTable&lt;P2BodyID, size_t&gt; table;\n// \u7d75\u6587\u5b57\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\nsize_t index = Random(polygons.size() - 1);\n// 2D \u30ab\u30e1\u30e9\nCamera2D camera{ Vec2{ 0, -200 } };\nwhile (System::Update())\n{\naccumulatedTime += Scene::DeltaTime();\nwhile (StepTime &lt;= accumulatedTime)\n{\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\u3092\u66f4\u65b0\u3059\u308b\nworld.update(StepTime);\naccumulatedTime -= StepTime;\n}\n// \u5730\u9762\u3088\u308a\u4e0b\u306b\u843d\u3061\u305f\u7269\u4f53\u306f\u524a\u9664\u3059\u308b\nfor (auto it = bodies.begin(); it != bodies.end();)\n{\nif (100 &lt; it-&gt;getPos().y)\n{\n// \u5bfe\u5fdc\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u3082\u524a\u9664\ntable.erase(it-&gt;id());\nit = bodies.erase(it);\n}\nelse\n{\n++it;\n}\n}\n// 2D \u30ab\u30e1\u30e9\u3092\u66f4\u65b0\u3059\u308b\ncamera.update();\n{\n// 2D \u30ab\u30e1\u30e9\u304b\u3089 Transformer2D \u3092\u4f5c\u6210\u3059\u308b\nconst auto t = camera.createTransformer();\n// \u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (MouseL.down())\n{\n// \u30dc\u30c7\u30a3\u3092\u8ffd\u52a0\u3059\u308b\nbodies &lt;&lt; world.createPolygons(P2Dynamic, Cursor::PosF(), polygons[index], P2Material{ 0.1, 0.0, 1.0 });\n// \u30dc\u30c7\u30a3 ID \u3068\u7d75\u6587\u5b57\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u7d44\u3092\u5bfe\u5fdc\u30c6\u30fc\u30d6\u30eb\u306b\u8ffd\u52a0\u3059\u308b\ntable.emplace(bodies.back().id(), std::exchange(index, Random(polygons.size() - 1)));\n}\n// \u3059\u3079\u3066\u306e\u30dc\u30c7\u30a3\u3092\u63cf\u753b\u3059\u308b\nfor (const auto&amp; body : bodies)\n{\ntextures[table[body.id()]].rotated(body.getAngle()).drawAt(body.getPos());\n}\n// \u5730\u9762\u3092\u63cf\u753b\u3059\u308b\nground.draw(Palette::Green);\n// \u73fe\u5728\u64cd\u4f5c\u3067\u304d\u308b\u7d75\u6587\u5b57\u3092\u63cf\u753b\u3059\u308b\ntextures[index].drawAt(Cursor::PosF(), AlphaF(0.5 + Periodic::Sine0_1(1s) * 0.5));\n}\n// 2D \u30ab\u30e1\u30e9\u306e\u64cd\u4f5c\u3092\u63cf\u753b\u3059\u308b\ncamera.draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"samples/games/#7-\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30b2\u30fc\u30e0","title":"7. \u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30b2\u30fc\u30e0","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// \u6575\u306e\u4f4d\u7f6e\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4f5c\u6210\u3059\u308b\u95a2\u6570\nVec2 GenerateEnemy()\n{\nreturn RandomVec2({ 50, 750 }, -20);\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.1, 0.2, 0.7 });\nconst Font font{ FontMethod::MSDF, 48 };\n// \u81ea\u6a5f\u30c6\u30af\u30b9\u30c1\u30e3\nconst Texture playerTexture{ U\"\ud83e\udd16\"_emoji };\n// \u6575\u30c6\u30af\u30b9\u30c1\u30e3\nconst Texture enemyTexture{ U\"\ud83d\udc7e\"_emoji };\n// \u81ea\u6a5f\nVec2 playerPos{ 400, 500 };\n// \u6575\nArray&lt;Vec2&gt; enemies = { GenerateEnemy() };\n// \u81ea\u6a5f\u30b7\u30e7\u30c3\u30c8\nArray&lt;Vec2&gt; playerBullets;\n// \u6575\u30b7\u30e7\u30c3\u30c8\nArray&lt;Vec2&gt; enemyBullets;\n// \u81ea\u6a5f\u306e\u30b9\u30d4\u30fc\u30c9\nconstexpr double PlayerSpeed = 550.0;\n// \u81ea\u6a5f\u30b7\u30e7\u30c3\u30c8\u306e\u30b9\u30d4\u30fc\u30c9\nconstexpr double PlayerBulletSpeed = 500.0;\n// \u6575\u306e\u30b9\u30d4\u30fc\u30c9\nconstexpr double EnemySpeed = 100.0;\n// \u6575\u30b7\u30e7\u30c3\u30c8\u306e\u30b9\u30d4\u30fc\u30c9\nconstexpr double EnemyBulletSpeed = 300.0;\n// \u6575\u306e\u767a\u751f\u9593\u9694\u306e\u521d\u671f\u5024\uff08\u79d2\uff09\nconstexpr double InitialEnemySpawnInterval = 2.0;\n// \u6575\u306e\u767a\u751f\u9593\u9694\uff08\u79d2\uff09\ndouble enemySpawnTime = InitialEnemySpawnInterval;\n// \u6575\u306e\u767a\u751f\u306e\u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble enemyAccumulatedTime = 0.0;\n// \u81ea\u6a5f\u30b7\u30e7\u30c3\u30c8\u306e\u30af\u30fc\u30eb\u30bf\u30a4\u30e0\uff08\u79d2\uff09\nconstexpr double PlayerShotCoolTime = 0.1;\n// \u81ea\u6a5f\u30b7\u30e7\u30c3\u30c8\u306e\u30af\u30fc\u30eb\u30bf\u30a4\u30e0\u30bf\u30a4\u30de\u30fc\uff08\u79d2\uff09\ndouble playerShotTimer = 0.0;\n// \u6575\u30b7\u30e7\u30c3\u30c8\u306e\u30af\u30fc\u30eb\u30bf\u30a4\u30e0\uff08\u79d2\uff09\nconstexpr double EnemyShotCoolTime = 0.9;\n// \u6575\u30b7\u30e7\u30c3\u30c8\u306e\u30af\u30fc\u30eb\u30bf\u30a4\u30e0\u30bf\u30a4\u30de\u30fc\uff08\u79d2\uff09\ndouble enemyShotTimer = 0.0;\nEffect effect;\n// \u30cf\u30a4\u30b9\u30b3\u30a2\nint32 highScore = 0;\n// \u73fe\u5728\u306e\u30b9\u30b3\u30a2\nint32 score = 0;\nwhile (System::Update())\n{\n// \u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\u5224\u5b9a\nbool gameover = false;\nconst double deltaTime = Scene::DeltaTime();\nenemyAccumulatedTime += deltaTime;\nplayerShotTimer = Min((playerShotTimer + deltaTime), PlayerShotCoolTime);\nenemyShotTimer += deltaTime;\n// \u6575\u3092\u767a\u751f\u3055\u305b\u308b\nwhile (enemySpawnTime &lt;= enemyAccumulatedTime)\n{\nenemyAccumulatedTime -= enemySpawnTime;\nenemySpawnTime = Max(enemySpawnTime * 0.95, 0.3);\nenemies &lt;&lt; GenerateEnemy();\n}\n// \u81ea\u6a5f\u306e\u79fb\u52d5\nconst Vec2 move = Vec2{ (KeyRight.pressed() - KeyLeft.pressed()), (KeyDown.pressed() - KeyUp.pressed()) }\n.setLength(deltaTime * PlayerSpeed * (KeyShift.pressed() ? 0.5 : 1.0));\nplayerPos.moveBy(move).clamp(Scene::Rect());\n// \u81ea\u6a5f\u30b7\u30e7\u30c3\u30c8\u306e\u767a\u5c04\nif (PlayerShotCoolTime &lt;= playerShotTimer)\n{\nplayerShotTimer -= PlayerShotCoolTime;\nplayerBullets &lt;&lt; playerPos.movedBy(0, -50);\n}\n// \u81ea\u6a5f\u30b7\u30e7\u30c3\u30c8\u3092\u79fb\u52d5\u3055\u305b\u308b\nfor (auto&amp; playerBullet : playerBullets)\n{\nplayerBullet.y += (deltaTime * -PlayerBulletSpeed);\n}\n// \u753b\u9762\u5916\u306b\u51fa\u305f\u81ea\u6a5f\u30b7\u30e7\u30c3\u30c8\u3092\u524a\u9664\u3059\u308b\nplayerBullets.remove_if([](const Vec2&amp; b) { return (b.y &lt; -40); });\n// \u6575\u3092\u79fb\u52d5\u3055\u305b\u308b\nfor (auto&amp; enemy : enemies)\n{\nenemy.y += (deltaTime * EnemySpeed);\n}\n// \u753b\u9762\u5916\u306b\u51fa\u305f\u6575\u3092\u524a\u9664\u3059\u308b\nenemies.remove_if([&amp;](const Vec2&amp; e)\n{\nif (700 &lt; e.y)\n{\n// \u6575\u304c\u753b\u9762\u5916\u306b\u51fa\u305f\u3089\u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\ngameover = true;\nreturn true;\n}\nelse\n{\nreturn false;\n}\n});\n// \u6575\u30b7\u30e7\u30c3\u30c8\u306e\u767a\u5c04\nif (EnemyShotCoolTime &lt;= enemyShotTimer)\n{\nenemyShotTimer -= EnemyShotCoolTime;\nfor (const auto&amp; enemy : enemies)\n{\nenemyBullets &lt;&lt; enemy;\n}\n}\n// \u6575\u30b7\u30e7\u30c3\u30c8\u3092\u79fb\u52d5\u3055\u305b\u308b\nfor (auto&amp; enemyBullet : enemyBullets)\n{\nenemyBullet.y += (deltaTime * EnemyBulletSpeed);\n}\n// \u753b\u9762\u5916\u306b\u51fa\u305f\u81ea\u6a5f\u30b7\u30e7\u30c3\u30c8\u3092\u524a\u9664\u3059\u308b\nenemyBullets.remove_if([](const Vec2&amp; b) {return (700 &lt; b.y); });\n////////////////////////////////\n//\n//\t\u653b\u6483\u5224\u5b9a\n//\n////////////////////////////////\n// \u6575 vs \u81ea\u6a5f\u30b7\u30e7\u30c3\u30c8\nfor (auto itEnemy = enemies.begin(); itEnemy != enemies.end();)\n{\nconst Circle enemyCircle{ *itEnemy, 40 };\nbool skip = false;\nfor (auto itBullet = playerBullets.begin(); itBullet != playerBullets.end();)\n{\nif (enemyCircle.intersects(*itBullet))\n{\n// \u7206\u767a\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\neffect.add([pos = *itEnemy](double t)\n{\nconst double t2 = ((0.5 - t) * 2.0);\nCircle{ pos, (10 + t * 280) }.drawFrame((20 * t2), AlphaF(t2 * 0.5));\nreturn (t &lt; 0.5);\n});\nitEnemy = enemies.erase(itEnemy);\nplayerBullets.erase(itBullet);\n++score;\nskip = true;\nbreak;\n}\n++itBullet;\n}\nif (skip)\n{\ncontinue;\n}\n++itEnemy;\n}\n// \u6575\u30b7\u30e7\u30c3\u30c8 vs \u81ea\u6a5f\nfor (const auto&amp; enemyBullet : enemyBullets)\n{\n// \u6575\u30b7\u30e7\u30c3\u30c8\u304c playerPos \u306e 20 \u30d4\u30af\u30bb\u30eb\u4ee5\u5185\u306b\u63a5\u8fd1\u3057\u305f\u3089\nif (enemyBullet.distanceFrom(playerPos) &lt;= 20)\n{\n// \u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\u306b\u3059\u308b\ngameover = true;\nbreak;\n}\n}\n// \u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\u306a\u3089\u30ea\u30bb\u30c3\u30c8\u3059\u308b\nif (gameover)\n{\nplayerPos = Vec2{ 400, 500 };\nenemies.clear();\nplayerBullets.clear();\nenemyBullets.clear();\nenemySpawnTime = InitialEnemySpawnInterval;\nhighScore = Max(highScore, score);\nscore = 0;\n}\n////////////////////////////////\n//\n//\t\u63cf\u753b\n//\n////////////////////////////////\n// \u80cc\u666f\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u63cf\u753b\u3059\u308b\nfor (int32 i = 0; i &lt; 12; ++i)\n{\nconst double a = Periodic::Sine0_1(2s, Scene::Time() - (2.0 / 12 * i));\nRect{ 0, (i * 50), 800, 50 }.draw(ColorF(1.0, a * 0.2));\n}\n// \u81ea\u6a5f\u3092\u63cf\u753b\u3059\u308b\nplayerTexture.resized(80).flipped().drawAt(playerPos);\n// \u81ea\u6a5f\u30b7\u30e7\u30c3\u30c8\u3092\u63cf\u753b\u3059\u308b\nfor (const auto&amp; playerBullet : playerBullets)\n{\nCircle{ playerBullet, 8 }.draw(Palette::Orange);\n}\n// \u6575\u3092\u63cf\u753b\u3059\u308b\nfor (const auto&amp; enemy : enemies)\n{\nenemyTexture.resized(60).drawAt(enemy);\n}\n// \u6575\u30b7\u30e7\u30c3\u30c8\u3092\u63cf\u753b\u3059\u308b\nfor (const auto&amp; enemyBullet : enemyBullets)\n{\nCircle{ enemyBullet, 4 }.draw(Palette::White);\n}\n// \u7206\u767a\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u63cf\u753b\u3059\u308b\neffect.update();\n// \u30b9\u30b3\u30a2\u3092\u63cf\u753b\u3059\u308b\nfont(U\"{} [{}]\"_fmt(score, highScore)).draw(30, Arg::bottomRight(780, 580));\n}\n}\n</code></pre>"},{"location":"samples/games/#8-\u30d4\u30f3\u30dc\u30fc\u30eb","title":"8. \u30d4\u30f3\u30dc\u30fc\u30eb","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// \u5916\u5468\u306e\u67a0\u306e\u9802\u70b9\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u95a2\u6570\nLineString CreateFrame(const Vec2&amp; leftAnchor, const Vec2&amp; rightAnchor)\n{\nArray&lt;Vec2&gt; points = { leftAnchor, Vec2{ -70, -20 } };\nfor (int32 i = -30; i &lt;= 30; ++i)\n{\npoints &lt;&lt; OffsetCircular(Vec2{ 0.0, -120 }, 70, (i * 3_deg));\n}\npoints &lt;&lt; Vec2{ 70, -20 } &lt;&lt; rightAnchor;\nreturn LineString{ points };\n}\n// \u63a5\u89e6\u3057\u3066\u3044\u308b\u304b\u306b\u5fdc\u3058\u3066\u8272\u3092\u6c7a\u5b9a\u3059\u308b\u95a2\u6570\nColorF GetColor(const P2Body&amp; body, const HashSet&lt;P2BodyID&gt;&amp; list)\n{\nreturn list.contains(body.id()) ? Palette::White : Palette::Orange;\n}\nvoid Main()\n{\n// \u80cc\u666f\u8272\u3092\u8a2d\u5b9a\u3059\u308b\nScene::SetBackground(ColorF(0.2, 0.3, 0.4));\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b9\u30c6\u30c3\u30d7\uff08\u79d2\uff09\nconstexpr double StepTime = (1.0 / 200.0);\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\n// \u7269\u7406\u6f14\u7b97\u7528\u306e\u30ef\u30fc\u30eb\u30c9\nP2World world{ 60.0 };\n// \u5de6\u53f3\u30d5\u30ea\u30c3\u30d1\u30fc\u306e\u8ef8\u306e\u5ea7\u6a19\nconstexpr Vec2 LeftFlipperAnchor{ -25, 10 }, RightFlipperAnchor{ 25, 10 };\n// \u56fa\u5b9a\u306e\u67a0\nArray&lt;P2Body&gt; frames;\n{\n// \u5916\u5468\nframes &lt;&lt; world.createLineString(P2Static, Vec2{ 0, 0 }, CreateFrame(LeftFlipperAnchor, RightFlipperAnchor));\n// \u5de6\u4e0a\u306e (\nframes &lt;&lt; world.createLineString(P2Static, Vec2{ 0, 0 }, LineString{ Range(-25, -10).map([=](int32 i) { return OffsetCircular(Vec2{ 0.0, -120 }, 55, (i * 3_deg)).toVec2(); }) });\n// \u53f3\u4e0a\u306e )\nframes &lt;&lt; world.createLineString(P2Static, Vec2{ 0, 0 }, LineString{ Range(10, 25).map([=](int32 i) { return OffsetCircular(Vec2{ 0.0, -120 }, 55, (i * 3_deg)).toVec2(); }) });\n}\n// \u30d0\u30f3\u30d1\u30fc\nArray&lt;P2Body&gt; bumpers;\n{\n// \u25cf x3\n{\nconst P2Material material{ .restitution = 1.0, .restitutionThreshold = 0.1 };\nbumpers &lt;&lt; world.createCircle(P2Static, Vec2{ 0, -170 }, 5, material);\nbumpers &lt;&lt; world.createCircle(P2Static, Vec2{ -20, -150 }, 5, material);\nbumpers &lt;&lt; world.createCircle(P2Static, Vec2{ 20, -150 }, 5, material);\n}\n// \u25b2 x2\n{\nconst P2Material material{ .restitution = 0.8, .restitutionThreshold = 0.1 };\nbumpers &lt;&lt; world.createTriangle(P2Static, Vec2{ 0, 0 }, Triangle{ -60, -50, -40, -15, -60, -30 }, material);\nbumpers &lt;&lt; world.createTriangle(P2Static, Vec2{ 0, 0 }, Triangle{ 60, -50, 60, -30, 40, -15 }, material);\n}\n}\nconst P2Material softMaterial{ .density = 0.1, .restitution = 0.0 };\n// \u5de6\u30d5\u30ea\u30c3\u30d1\u30fc\nP2Body leftFlipper = world.createRect(P2Dynamic, LeftFlipperAnchor, RectF{ 0, 0.4, 21, 4.5 }, softMaterial);\n// \u5de6\u30d5\u30ea\u30c3\u30d1\u30fc\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\nconst P2PivotJoint leftJoint = world.createPivotJoint(frames[0], leftFlipper, LeftFlipperAnchor).setLimits(-20_deg, 25_deg).setLimitsEnabled(true);\n// \u53f3\u30d5\u30ea\u30c3\u30d1\u30fc\nP2Body rightFlipper = world.createRect(P2Dynamic, RightFlipperAnchor, RectF{ -21, 0.4, 21, 4.5 }, softMaterial);\n// \u53f3\u30d5\u30ea\u30c3\u30d1\u30fc\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\nconst P2PivotJoint rightJoint = world.createPivotJoint(frames[0], rightFlipper, RightFlipperAnchor).setLimits(-25_deg, 20_deg).setLimitsEnabled(true);\n// \u30b9\u30d4\u30ca\u30fc \uff0b\nconst P2Body spinner = world.createRect(P2Dynamic, Vec2{ -58, -120 }, SizeF{ 20, 1 }, softMaterial).addRect(RectF{ Arg::center(0, 0), 1, 20 }, P2Material{ 0.01, 0.0 });\n// \u30b9\u30d4\u30ca\u30fc\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\nP2PivotJoint spinnerJoint = world.createPivotJoint(frames[0], spinner, Vec2{ -58, -120 }).setMaxMotorTorque(0.05).setMotorSpeed(0).setMotorEnabled(true);\n// \u98a8\u8eca\u306e |\nframes &lt;&lt; world.createLine(P2Static, Vec2{ 0, 0 }, Line{ -40, -60, -40, -40 });\n// \u98a8\u8eca\u306e\u7fbd \uff0f\nconst P2Body windmillWing = world.createRect(P2Dynamic, Vec2{ -40, -60 }, SizeF{ 30, 2 }, P2Material{ 0.1, 0.8 });\n// \u98a8\u8eca\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\nconst P2PivotJoint windmillJoint = world.createPivotJoint(frames.back(), windmillWing, Vec2{ -40, -60 }).setMotorSpeed(240_deg).setMaxMotorTorque(10000.0).setMotorEnabled(true);\n// \u632f\u308a\u5b50\u306e\u8ef8\nconst P2Body pendulumBase = world.createPlaceholder(P2Static, Vec2{ 0, -190 });\n// \u632f\u308a\u5b50 \u25cf\nP2Body pendulum = world.createCircle(P2Dynamic, Vec2{ 0, -120 }, 4, P2Material{ 0.1, 1.0 });\n// \u632f\u308a\u5b50\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\nconst P2DistanceJoint pendulumJoint = world.createDistanceJoint(pendulumBase, Vec2{ 0, -190 }, pendulum, Vec2{ 0, -120 }, 70);\n// \u30a8\u30ec\u30d9\u30fc\u30bf\u30fc\u306e\u4e0a\u90e8 \u25cf\nconst P2Body elevatorA = world.createCircle(P2Static, Vec2{ 40, -100 }, 3);\n// \u30a8\u30ec\u30d9\u30fc\u30bf\u30fc\u306e\u5e8a \uff0d\nconst P2Body elevatorB = world.createRect(P2Dynamic, Vec2{ 40, -100 }, SizeF{ 20, 2 });\n// \u30a8\u30ec\u30d9\u30fc\u30bf\u30fc\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\nP2SliderJoint elevatorSliderJoint = world.createSliderJoint(elevatorA, elevatorB, Vec2{ 40, -100 }, Vec2::Down()).setLimits(5, 50).setLimitEnabled(true).setMaxMotorForce(10000).setMotorSpeed(-100);\n// \u30dc\u30fc\u30eb \u3007\nconst P2Body ball = world.createCircle(P2Dynamic, Vec2{ -40, -120 }, 4, P2Material{ 0.05, 0.0 });\nconst P2BodyID ballID = ball.id();\n// \u30a8\u30ec\u30d9\u30fc\u30bf\u30fc\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u7528\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\nStopwatch sliderStopwatch{ StartImmediately::Yes };\n// 2D \u30ab\u30e1\u30e9\nconst Camera2D camera{ Vec2{ 0, -80 }, 2.4 };\nwhile (System::Update())\n{\n////////////////////////////////\n//\n//\t\u66f4\u65b0\n//\n////////////////////////////////\nif (4s &lt; sliderStopwatch)\n{\n// \u30a8\u30ec\u30d9\u30fc\u30bf\u30fc\u306e\u5dfb\u304d\u4e0a\u3052\u3092\u505c\u6b62\nelevatorSliderJoint.setMotorEnabled(false);\nsliderStopwatch.restart();\n}\nelse if (2s &lt; sliderStopwatch)\n{\n// \u30a8\u30ec\u30d9\u30fc\u30bf\u30fc\u306e\u5dfb\u304d\u4e0a\u3052\nelevatorSliderJoint.setMotorEnabled(true);\n}\n// \u30dc\u30fc\u30eb\u3068\u63a5\u89e6\u3057\u3066\u3044\u308b\u30dc\u30c7\u30a3\u306e ID\nHashSet&lt;P2BodyID&gt; collidedIDs;\n// \u7269\u7406\u6f14\u7b97\u30ef\u30fc\u30eb\u30c9\u306e\u66f4\u65b0\nfor (accumulatedTime += Scene::DeltaTime(); StepTime &lt;= accumulatedTime; accumulatedTime -= StepTime)\n{\n// \u632f\u308a\u5b50\u306e\u63fa\u308c\u3092\u304a\u3055\u3048\u308b\u62b5\u6297\npendulum.applyForce(Vec2{ (pendulum.getVelocity().x &lt; 0.0) ? 0.0001 : -0.0001, 0.0 });\n// \u5de6\u30d5\u30ea\u30c3\u30d1\u30fc\u306e\u64cd\u4f5c\nleftFlipper.applyTorque(KeyLeft.pressed() ? -80 : 40);\n// \u53f3\u30d5\u30ea\u30c3\u30d1\u30fc\u306e\u64cd\u4f5c\nrightFlipper.applyTorque(KeyRight.pressed() ? 80 : -40);\nworld.update(StepTime);\n// \u30dc\u30fc\u30eb\u3068\u63a5\u89e6\u3057\u3066\u3044\u308b\u30dc\u30c7\u30a3\u306e ID \u3092\u683c\u7d0d\nfor (auto&amp;&amp; [pair, collision] : world.getCollisions())\n{\nif (pair.a == ballID)\n{\ncollidedIDs.emplace(pair.b);\n}\nelse if (pair.b == ballID)\n{\ncollidedIDs.emplace(pair.a);\n}\n}\n}\n////////////////////////////////\n//\n//\t\u63cf\u753b\n//\n////////////////////////////////\n// \u63cf\u753b\u7528\u306e Transformer2D\nconst auto transformer = camera.createTransformer();\n// \u67a0\u306e\u63cf\u753b\nfor (const auto&amp; frame : frames)\n{\nframe.draw(Palette::Skyblue);\n}\n// \u30b9\u30d4\u30ca\u30fc\u306e\u63cf\u753b\nspinner.draw(GetColor(spinner, collidedIDs));\n// \u30d0\u30f3\u30d1\u30fc\u306e\u63cf\u753b\nfor (const auto&amp; bumper : bumpers)\n{\nbumper.draw(GetColor(bumper, collidedIDs));\n}\n// \u98a8\u8eca\u306e\u63cf\u753b\nwindmillWing.draw(GetColor(windmillWing, collidedIDs));\n// \u632f\u308a\u5b50\u306e\u63cf\u753b\npendulum.draw(GetColor(pendulum, collidedIDs));\n// \u30a8\u30ec\u30d9\u30fc\u30bf\u30fc\u306e\u63cf\u753b\nelevatorA.draw(GetColor(elevatorA, collidedIDs));\nelevatorB.draw(GetColor(elevatorB, collidedIDs));\n// \u30dc\u30fc\u30eb\u306e\u63cf\u753b\nball.draw(Palette::White);\n// \u30d5\u30ea\u30c3\u30d1\u30fc\u306e\u63cf\u753b\nleftFlipper.draw(Palette::Orange);\nrightFlipper.draw(Palette::Orange);\n// \u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u53ef\u8996\u5316\nleftJoint.draw(Palette::Red);\nrightJoint.draw(Palette::Red);\nspinnerJoint.draw(Palette::Red);\nwindmillJoint.draw(Palette::Red);\npendulumJoint.draw(Palette::Red);\nelevatorSliderJoint.draw(Palette::Red);\n}\n}\n</code></pre>"},{"location":"samples/games/#9-\u30af\u30c3\u30ad\u30fc\u30af\u30ea\u30c3\u30ab\u30fc","title":"9. \u30af\u30c3\u30ad\u30fc\u30af\u30ea\u30c3\u30ab\u30fc","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n//\u30b2\u30fc\u30e0\u306e\u30bb\u30fc\u30d6\u30c7\u30fc\u30bf\nstruct SaveData\n{\ndouble cookies;\nArray&lt;int32&gt; itemCounts;\n// \u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306b\u5bfe\u5fdc\u3055\u305b\u308b\u305f\u3081\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\ntemplate &lt;class Archive&gt;\nvoid SIV3D_SERIALIZE(Archive&amp; archive)\n{\narchive(cookies, itemCounts);\n}\n};\n/// @brief \u30a2\u30a4\u30c6\u30e0\u306e\u30dc\u30bf\u30f3\n/// @param rect \u30dc\u30bf\u30f3\u306e\u9818\u57df\n/// @param texture \u30dc\u30bf\u30f3\u306e\u7d75\u6587\u5b57\n/// @param font \u6587\u5b57\u63cf\u753b\u306b\u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\n/// @param name \u30a2\u30a4\u30c6\u30e0\u306e\u540d\u524d\n/// @param desc \u30a2\u30a4\u30c6\u30e0\u306e\u8aac\u660e\n/// @param count \u30a2\u30a4\u30c6\u30e0\u306e\u6240\u6301\u6570\n/// @param enabled \u30dc\u30bf\u30f3\u3092\u62bc\u305b\u308b\u304b\n/// @return \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u5834\u5408 true, \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f false\nbool Button(const Rect&amp; rect, const Texture&amp; texture, const Font&amp; font, const String&amp; name, const String&amp; desc, int32 count, bool enabled)\n{\nif (enabled)\n{\nrect.draw(ColorF{ 0.3, 0.5, 0.9, 0.8 });\nrect.drawFrame(2, 2, ColorF{ 0.5, 0.7, 1.0 });\nif (rect.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n}\nelse\n{\nrect.draw(ColorF{ 0.0, 0.4 });\nrect.drawFrame(2, 2, ColorF{ 0.5 });\n}\ntexture.scaled(0.5).drawAt(rect.x + 50, rect.y + 50);\nfont(name).draw(30, rect.x + 100, rect.y + 15, Palette::White);\nfont(desc).draw(18, rect.x + 102, rect.y + 60, Palette::White);\nfont(count).draw(50, Arg::rightCenter((rect.x + rect.w - 20), (rect.y + 50)), Palette::White);\nreturn (enabled &amp;&amp; rect.leftClicked());\n}\n// \u30af\u30c3\u30ad\u30fc\u304c\u964d\u308b\u30a8\u30d5\u30a7\u30af\u30c8\nstruct CookieBackgroundEffect : IEffect\n{\n// \u521d\u671f\u5ea7\u6a19\nVec2 m_start;\n// \u56de\u8ee2\u89d2\u5ea6\ndouble m_angle;\n// \u30c6\u30af\u30b9\u30c1\u30e3\nTexture m_texture;\nCookieBackgroundEffect(const Vec2&amp; start, const Texture&amp; texture)\n: m_start{ start }\n, m_angle{ Random(2_pi) }\n, m_texture{ texture } {}\nbool update(double t) override\n{\nconst Vec2 pos = m_start + 0.5 * t * t * Vec2{ 0, 120 };\nm_texture.scaled(0.3).rotated(m_angle).drawAt(pos, ColorF{ 1.0, (1.0 - t / 3.0) });\nreturn (t &lt; 3.0);\n}\n};\n// \u30af\u30c3\u30ad\u30fc\u304c\u821e\u3046\u30a8\u30d5\u30a7\u30af\u30c8\nstruct CookieEffect : IEffect\n{\n// \u521d\u671f\u5ea7\u6a19\nVec2 m_start;\n// \u521d\u901f\nVec2 m_velocity;\n// \u62e1\u5927\u500d\u7387\ndouble m_scale;\n// \u56de\u8ee2\u89d2\u5ea6\ndouble m_angle;\n// \u30c6\u30af\u30b9\u30c1\u30e3\nTexture m_texture;\nCookieEffect(const Vec2&amp; start, const Texture&amp; texture)\n: m_start{ start }\n, m_velocity{ Circular{ 80, Random(-40_deg, 40_deg) } }\n, m_scale{ Random(0.2, 0.3) }\n, m_angle{ Random(2_pi) }\n, m_texture{ texture } {}\nbool update(double t) override\n{\nconst Vec2 pos = m_start\n+ m_velocity * t + 0.5 * t * t * Vec2{ 0, 120 };\nm_texture.scaled(m_scale).rotated(m_angle).drawAt(pos, ColorF{ 1.0, (1.0 - t) });\nreturn (t &lt; 1.0);\n}\n};\n// \u300c+1\u300d\u304c\u4e0a\u6607\u3059\u308b\u30a8\u30d5\u30a7\u30af\u30c8\nstruct PlusOneEffect : IEffect\n{\n// \u521d\u671f\u5ea7\u6a19\nVec2 m_start;\n// \u30d5\u30a9\u30f3\u30c8\nFont m_font;\nPlusOneEffect(const Vec2&amp; start, const Font&amp; font)\n: m_start{ start }\n, m_font{ font } {}\nbool update(double t) override\n{\nm_font(U\"+1\").drawAt(24, m_start.movedBy(0, t * -120), ColorF{ 1.0, (1.0 - t) });\nreturn (t &lt; 1.0);\n}\n};\n// \u30a2\u30a4\u30c6\u30e0\u306e\u30c7\u30fc\u30bf\nstruct Item\n{\n// \u30a2\u30a4\u30c6\u30e0\u306e\u7d75\u6587\u5b57\nTexture emoji;\n// \u30a2\u30a4\u30c6\u30e0\u306e\u540d\u524d\nString name;\n// \u30a2\u30a4\u30c6\u30e0\u3092\u521d\u3081\u3066\u8cfc\u5165\u3059\u308b\u3068\u304d\u306e\u30b3\u30b9\u30c8\nint32 initialCost;\n// \u30a2\u30a4\u30c6\u30e0\u306e CPS\nint32 cps;\n// \u30a2\u30a4\u30c6\u30e0\u3092 count \u500b\u6301\u3063\u3066\u3044\u308b\u3068\u304d\u306e\u8cfc\u5165\u30b3\u30b9\u30c8\u3092\u8fd4\u3059\nint32 getCost(int32 count) const\n{\nreturn initialCost * (count + 1);\n}\n};\n// \u30af\u30c3\u30ad\u30fc\u306e\u3070\u306d\nclass CookieSpring\n{\npublic:\nvoid update(double deltaTime, bool pressed)\n{\n// \u3070\u306d\u306e\u84c4\u7a4d\u6642\u9593\u3092\u52a0\u7b97\u3059\u308b\nm_accumulatedTime += deltaTime;\nwhile (0.005 &lt;= m_accumulatedTime)\n{\n// \u3070\u306d\u306e\u529b\uff08\u5909\u5316\u3092\u6253\u3061\u6d88\u3059\u65b9\u5411\uff09\ndouble force = (-0.02 * m_x);\n// \u753b\u9762\u3092\u62bc\u3057\u3066\u3044\u308b\u3068\u304d\u306b\u50cd\u304f\u529b\nif (pressed)\n{\nforce += 0.004;\n}\n// \u901f\u5ea6\u306b\u529b\u3092\u9069\u7528\uff08\u6e1b\u8870\u3082\u3055\u305b\u308b\uff09\nm_velocity = (m_velocity + force) * 0.92;\n// \u4f4d\u7f6e\u306b\u53cd\u6620\nm_x += m_velocity;\nm_accumulatedTime -= 0.005;\n}\n}\ndouble get() const\n{\nreturn m_x;\n}\nprivate:\n// \u3070\u306d\u306e\u4f38\u3073\ndouble m_x = 0.0;\n// \u3070\u306d\u306e\u901f\u5ea6\ndouble m_velocity = 0.0;\n// \u3070\u306d\u306e\u84c4\u7a4d\u6642\u9593\ndouble m_accumulatedTime = 0.0;\n};\n// \u30af\u30c3\u30ad\u30fc\u306e\u5f8c\u5149\u3092\u63cf\u304f\u95a2\u6570\nvoid DrawHalo(const Vec2&amp; center)\n{\nfor (int32 i = 0; i &lt; 4; ++i)\n{\ndouble startAngle = Scene::Time() * 15_deg + i * 90_deg;\nCircle{ center, 180 }.drawPie(startAngle, 60_deg, ColorF{ 1.0, 0.3 }, ColorF{ 1.0, 0.0 });\n}\nfor (int32 i = 0; i &lt; 6; ++i)\n{\ndouble startAngle = Scene::Time() * -15_deg + i * 60_deg;\nCircle{ center, 180 }.drawPie(startAngle, 40_deg, ColorF{ 1.0, 0.3 }, ColorF{ 1.0, 0.0 });\n}\n}\n// \u30a2\u30a4\u30c6\u30e0\u306e\u6240\u6709\u6570\u3092\u3082\u3068\u306b CPS \u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\nint32 CalculateCPS(const Array&lt;Item&gt;&amp; ItemTable, const Array&lt;int32&gt;&amp; itemCounts)\n{\nint32 cps = 0;\nfor (size_t i = 0; i &lt; ItemTable.size(); ++i)\n{\ncps += ItemTable[i].cps * itemCounts[i];\n}\nreturn cps;\n}\nvoid Main()\n{\n// \u30af\u30c3\u30ad\u30fc\u306e\u7d75\u6587\u5b57\nconst Texture texture{ U\"\ud83c\udf6a\"_emoji };\n// \u30a2\u30a4\u30c6\u30e0\u306e\u30c7\u30fc\u30bf\nconst Array&lt;Item&gt; ItemTable = {\n{ Texture{ U\"\ud83c\udf3e\"_emoji }, U\"\u30af\u30c3\u30ad\u30fc\u8fb2\u5834\", 10, 1 },\n{ Texture{ U\"\ud83c\udfed\"_emoji }, U\"\u30af\u30c3\u30ad\u30fc\u5de5\u5834\", 100, 10 },\n{ Texture{ U\"\u2693\"_emoji }, U\"\u30af\u30c3\u30ad\u30fc\u6e2f\", 1000, 100 },\n};\n// \u5404\u30a2\u30a4\u30c6\u30e0\u306e\u6240\u6709\u6570\nArray&lt;int32&gt; itemCounts(ItemTable.size()); // = { 0, 0, 0 }\n// \u30d5\u30a9\u30f3\u30c8\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u30af\u30c3\u30ad\u30fc\u306e\u30af\u30ea\u30c3\u30af\u5186\nconstexpr Circle CookieCircle{ 170, 300, 100 };\n// \u30a8\u30d5\u30a7\u30af\u30c8\nEffect effectBackground, effect;\n// \u30af\u30c3\u30ad\u30fc\u306e\u3070\u306d\nCookieSpring cookieSpring;\n// \u30af\u30c3\u30ad\u30fc\u306e\u500b\u6570\ndouble cookies = 0;\n// \u30b2\u30fc\u30e0\u306e\u7d4c\u904e\u6642\u9593\u306e\u84c4\u7a4d\ndouble accumulatedTime = 0.0;\n// \u80cc\u666f\u306e\u30af\u30c3\u30ad\u30fc\u306e\u84c4\u7a4d\u6642\u9593\ndouble cookieBackgroundAccumulatedTime = 0.0;\n// \u30bb\u30fc\u30d6\u30c7\u30fc\u30bf\u304c\u898b\u3064\u304b\u308c\u3070\u305d\u308c\u3092\u8aad\u307f\u8fbc\u3080\n{\n// \u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\nDeserializer&lt;BinaryReader&gt; reader{ U\"game.save\" };\nif (reader) // \u3082\u3057\u30aa\u30fc\u30d7\u30f3\u306b\u6210\u529f\u3057\u305f\u3089\n{\nSaveData saveData;\nreader(saveData);\ncookies = saveData.cookies;\nitemCounts = saveData.itemCounts;\n}\n}\nwhile (System::Update())\n{\n// \u30af\u30c3\u30ad\u30fc\u306e\u6bce\u79d2\u306e\u751f\u7523\u91cf\u3092\u8a08\u7b97\u3059\u308b\nconst int32 cps = CalculateCPS(ItemTable, itemCounts);\n// \u30b2\u30fc\u30e0\u306e\u7d4c\u904e\u6642\u9593\u3092\u52a0\u7b97\u3059\u308b\naccumulatedTime += Scene::DeltaTime();\n// 0.1 \u79d2\u4ee5\u4e0a\u84c4\u7a4d\u3057\u3066\u3044\u305f\u3089\nif (0.1 &lt;= accumulatedTime)\n{\naccumulatedTime -= 0.1;\n// 0.1 \u79d2\u5206\u306e\u30af\u30c3\u30ad\u30fc\u751f\u7523\u3092\u52a0\u7b97\u3059\u308b\ncookies += (cps * 0.1);\n}\n// \u80cc\u666f\u306e\u30af\u30c3\u30ad\u30fc\n{\n// \u80cc\u666f\u306e\u30af\u30c3\u30ad\u30fc\u304c\u767a\u751f\u3059\u308b\u9069\u5f53\u306a\u9593\u9694\u3092 cps \u304b\u3089\u8a08\u7b97\uff08\u591a\u304f\u306a\u308a\u3059\u304e\u306a\u3044\u3088\u3046\u7de9\u3084\u304b\u306b\u5c0f\u3055\u304f\u306a\u308a\u3001\u4e0b\u9650\u3082\u8a2d\u3051\u308b\uff09\nconst double cookieBackgroundSpawnTime = cps ? Max(1.0 / Math::Log2(cps * 2), 0.03) : Math::Inf;\nif (cps)\n{\ncookieBackgroundAccumulatedTime += Scene::DeltaTime();\n}\nwhile (cookieBackgroundSpawnTime &lt;= cookieBackgroundAccumulatedTime)\n{\neffectBackground.add&lt;CookieBackgroundEffect&gt;(RandomVec2(Rect{ 0, -150, 800, 100 }), texture);\ncookieBackgroundAccumulatedTime -= cookieBackgroundSpawnTime;\n}\n}\n// \u30af\u30c3\u30ad\u30fc\u306e\u3070\u306d\u3092\u66f4\u65b0\u3059\u308b\ncookieSpring.update(Scene::DeltaTime(), CookieCircle.leftPressed());\n// \u30af\u30c3\u30ad\u30fc\u5186\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308c\u3070\nif (CookieCircle.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n// \u30af\u30c3\u30ad\u30fc\u5186\u304c\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (CookieCircle.leftClicked())\n{\n++cookies;\n// \u30af\u30c3\u30ad\u30fc\u304c\u821e\u3046\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\neffect.add&lt;CookieEffect&gt;(Cursor::Pos().movedBy(Random(-5, 5), Random(-5, 5)), texture);\n// \u300c+1\u300d\u304c\u4e0a\u6607\u3059\u308b\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\neffect.add&lt;PlusOneEffect&gt;(Cursor::Pos().movedBy(Random(-5, 5), Random(-15, -5)), font);\n// \u80cc\u666f\u306e\u30af\u30c3\u30ad\u30fc\u3092\u8ffd\u52a0\u3059\u308b\neffectBackground.add&lt;CookieBackgroundEffect&gt;(RandomVec2(Rect{ 0, -150, 800, 100 }), texture);\n}\n// \u80cc\u666f\u3092\u63cf\u304f\nRect{ 0, 0, 800, 600 }.draw(Arg::top = ColorF{ 0.6, 0.5, 0.3 }, Arg::bottom = ColorF{ 0.2, 0.5, 0.3 });\n// \u80cc\u666f\u3067\u964d\u308a\u6ce8\u3050\u30af\u30c3\u30ad\u30fc\u3092\u63cf\u753b\u3059\u308b\neffectBackground.update();\n// \u30af\u30c3\u30ad\u30fc\u306e\u5f8c\u5149\u3092\u63cf\u304f\nDrawHalo(CookieCircle.center);\n// \u30af\u30c3\u30ad\u30fc\u306e\u6570\u3092\u6574\u6570\u3067\u8868\u793a\u3059\u308b\nfont(ThousandsSeparate((int32)cookies)).drawAt(60, 170, 100);\n// \u30af\u30c3\u30ad\u30fc\u306e\u751f\u7523\u91cf\u3092\u8868\u793a\u3059\u308b\nfont(U\"\u6bce\u79d2: {}\"_fmt(cps)).drawAt(24, 170, 160);\n// \u30af\u30c3\u30ad\u30fc\u3092\u63cf\u753b\u3059\u308b\ntexture.scaled(1.5 - cookieSpring.get()).drawAt(CookieCircle.center);\n// \u30a8\u30d5\u30a7\u30af\u30c8\u3092\u63cf\u753b\u3059\u308b\neffect.update();\nfor (size_t i = 0; i &lt; ItemTable.size(); ++i)\n{\n// \u30a2\u30a4\u30c6\u30e0\u306e\u6240\u6709\u6570\nconst int32 itemCount = itemCounts[i];\n// \u30a2\u30a4\u30c6\u30e0\u306e\u73fe\u5728\u306e\u4fa1\u683c\nconst int32 itemCost = ItemTable[i].getCost(itemCount);\n// \u30a2\u30a4\u30c6\u30e0 1 \u3064\u3042\u305f\u308a\u306e CPS\nconst int32 itemCps = ItemTable[i].cps;\n// \u30dc\u30bf\u30f3\nif (Button(Rect{ 340, (40 + 120 * i), 420, 100 }, ItemTable[i].emoji,\nfont, ItemTable[i].name, U\"C{} / {} CPS\"_fmt(itemCost, itemCps), itemCount, (itemCost &lt;= cookies)))\n{\ncookies -= itemCost;\n++itemCounts[i];\n}\n}\n}\n// \u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u5f8c\u3001\u7d42\u4e86\u6642\u306b\u30b2\u30fc\u30e0\u3092\u30bb\u30fc\u30d6\n{\n// \u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\nSerializer&lt;BinaryWriter&gt; writer{ U\"game.save\" };\n// \u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306b\u5bfe\u5fdc\u3057\u305f\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u51fa\u3059\nwriter(SaveData{ cookies, itemCounts });\n}\n}\n</code></pre>"},{"location":"samples/games/#10-\u30c8\u30e9\u30f3\u30d7\u3092\u63cf\u304f","title":"10. \u30c8\u30e9\u30f3\u30d7\u3092\u63cf\u304f","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(Palette::Darkgreen);\n// \u30ab\u30fc\u30c9\u306e\u5e45\u304c 75 \u30d4\u30af\u30bb\u30eb\u3067\u88cf\u9762\u304c\u8d64\u8272\u306e\u30ab\u30fc\u30c9\u30d1\u30c3\u30af\u3092\u4f5c\u6210\nconst PlayingCard::Pack pack{ 75, Palette::Red };\n// \u30b8\u30e7\u30fc\u30ab\u30fc\u306e\u679a\u6570\nconstexpr int32 NumJokers = 2;\n// 52 \u679a + \u30b8\u30e7\u30fc\u30ab\u30fc\u3092\u542b\u3080\u30ab\u30fc\u30c9\u3092\u4f5c\u6210\u3059\u308b\nArray&lt;PlayingCard::Card&gt; cards = PlayingCard::CreateDeck(NumJokers);\nwhile (System::Update())\n{\nfor (size_t i = 0; i &lt; cards.size(); ++i)\n{\nconst Vec2 center{ (100 + i % 13 * 90), (100 + (i / 13) * 130) };\nif (pack.regionAt(center).mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\nif (MouseL.down())\n{\n// \u30ab\u30fc\u30c9\u3092\u3081\u304f\u308b\ncards[i].flip();\n}\n}\n// \u30ab\u30fc\u30c9\u3092\u63cf\u753b\u3059\u308b\npack(cards[i]).drawAt(center);\n}\n}\n}\n</code></pre>"},{"location":"samples/games/#11-\u4e09\u76ee\u4e26\u3079","title":"11. \u4e09\u76ee\u4e26\u3079","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// 3 \u3064\u306e\u30de\u30fc\u30af\u304c\u3064\u306a\u304c\u3063\u305f\u304b\u3092\u8fd4\u3059\u95a2\u6570\nbool CheckLine(const Grid&lt;int32&gt;&amp; grid, const Point&amp; cellA, const Point&amp; cellB, const Point&amp; cellC)\n{\nconst int32 a = grid[cellA];\nconst int32 b = grid[cellB];\nconst int32 c = grid[cellC];\nreturn ((a != 0) &amp;&amp; (a == b) &amp;&amp; (b == c));\n}\n// \u30de\u30fc\u30af\u304c\u3064\u306a\u304c\u3063\u305f\u30e9\u30a4\u30f3\u306e\u4e00\u89a7\u3092\u8fd4\u3059\u95a2\u6570\nArray&lt;std::pair&lt;Point, Point&gt;&gt; CheckLines(const Grid&lt;int32&gt;&amp; grid)\n{\nArray&lt;std::pair&lt;Point, Point&gt;&gt; results;\n// \u7e26 3 \u5217\u3092\u8abf\u3079\u308b\nfor (int32 x = 0; x &lt; 3; ++x)\n{\nif (CheckLine(grid, Point{ x, 0 }, Point{ x, 1 }, Point{ x, 2 }))\n{\nresults.emplace_back(Point{ x, 0 }, Point{ x, 2 });\n}\n}\n// \u6a2a 3 \u884c\u3092\u8abf\u3079\u308b\nfor (int32 y = 0; y &lt; 3; ++y)\n{\nif (CheckLine(grid, Point{ 0, y }, Point{ 1, y }, Point{ 2, y }))\n{\nresults.emplace_back(Point{ 0, y }, Point{ 2, y });\n}\n}\n// \u659c\u3081\uff08\u5de6\u4e0a -&gt; \u53f3\u4e0b) \u3092\u8abf\u3079\u308b\nif (CheckLine(grid, Point{ 0, 0 }, Point{ 1, 1 }, Point{ 2, 2 }))\n{\nresults.emplace_back(Point{ 0, 0 }, Point{ 2, 2 });\n}\n// \u659c\u3081\uff08\u53f3\u4e0a -&gt; \u5de6\u4e0b) \u3092\u8abf\u3079\u308b\nif (CheckLine(grid, Point{ 2, 0 }, Point{ 1, 1 }, Point{ 0, 2 }))\n{\nresults.emplace_back(Point{ 2, 0 }, Point{ 0, 2 });\n}\nreturn results;\n}\nclass GameBoard\n{\npublic:\n// \u30bb\u30eb\u306e\u5927\u304d\u3055\nstatic constexpr int32 CellSize = 150;\n// O \u30de\u30fc\u30af\u306e\u5024\nstatic constexpr int32 O_Mark = 1;\n// X \u30de\u30fc\u30af\u306e\u5024\nstatic constexpr int32 X_Mark = 2;\nvoid update()\n{\nif (m_gameOver)\n{\nreturn;\n}\n// 3x3 \u306e\u30bb\u30eb\nfor (auto p : step(Size{ 3, 3 }))\n{\n// \u30bb\u30eb\nconst Rect cell{ (p * CellSize), CellSize };\n// \u30bb\u30eb\u306e\u30de\u30fc\u30af\nconst int32 mark = m_grid[p];\n// \u30bb\u30eb\u304c\u7a7a\u767d\u3067\u3001\u306a\u304a\u304b\u3064\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif ((mark == 0) &amp;&amp; cell.leftClicked())\n{\n// \u30bb\u30eb\u306b\u73fe\u5728\u306e\u30de\u30fc\u30af\u3092\u66f8\u304d\u8fbc\u3080\nm_grid[p] = m_currentMark;\n// \u73fe\u5728\u306e\u30de\u30fc\u30af\u3092\u5165\u308c\u66ff\u3048\u308b\nm_currentMark = ((m_currentMark == O_Mark) ? X_Mark : O_Mark);\n// \u3064\u306a\u304c\u3063\u305f\u30e9\u30a4\u30f3\u3092\u63a2\u3059\nm_lines = CheckLines(m_grid);\n// \u7a7a\u767d\u30bb\u30eb\u304c 0 \u306b\u306a\u308b\u304b\u3001\u3064\u306a\u304c\u3063\u305f\u30e9\u30a4\u30f3\u304c\u898b\u3064\u304b\u3063\u305f\u3089\nif (m_grid.count(0) == 0 || m_lines)\n{\n// \u30b2\u30fc\u30e0\u7d42\u4e86\nm_gameOver = true;\n}\n}\n}\n}\n// \u30b2\u30fc\u30e0\u3092\u30ea\u30bb\u30c3\u30c8\nvoid reset()\n{\nm_currentMark = O_Mark;\nm_grid.fill(0);\nm_lines.clear();\nm_gameOver = false;\n}\n// \u63cf\u753b\nvoid draw() const\n{\ndrawGridLines();\ndrawCells();\ndrawResults();\n}\n// \u30b2\u30fc\u30e0\u304c\u7d42\u4e86\u3057\u305f\u304b\u3092\u8fd4\u3059\nbool isGameOver() const\n{\nreturn m_gameOver;\n}\nprivate:\n// 3x3 \u306e\u4e8c\u6b21\u5143\u914d\u5217 (\u521d\u671f\u5024\u306f\u5168\u8981\u7d20 0)\nGrid&lt;int32&gt; m_grid = Grid&lt;int32&gt;(3, 3);\n// \u3053\u308c\u304b\u3089\u7f6e\u304f\u30de\u30fc\u30af\nint32 m_currentMark = O_Mark;\n// \u30b2\u30fc\u30e0\u7d42\u4e86\u30d5\u30e9\u30b0\nbool m_gameOver = false;\n// 3 \u3064\u9023\u7d9a\u3057\u305f\u30e9\u30a4\u30f3\u306e\u4e00\u89a7\nArray&lt;std::pair&lt;Point, Point&gt;&gt; m_lines;\n// \u683c\u5b50\u3092\u63cf\u304f\nvoid drawGridLines() const\n{\n// \u7dda\u3092\u5f15\u304f\nfor (auto i : { 1, 2 })\n{\nLine{ (i * CellSize), 0, (i * CellSize), (3 * CellSize) }\n.draw(4, ColorF{ 0.25 });\nLine{ 0, (i * CellSize), (3 * CellSize), (i * CellSize) }\n.draw(4, ColorF{ 0.25 });\n}\n}\n// \u30bb\u30eb\u3092\u63cf\u304f\nvoid drawCells() const\n{\n// 3x3 \u306e\u30bb\u30eb\nfor (auto p : step(Size{ 3, 3 }))\n{\n// \u30bb\u30eb\nconst Rect cell{ (p * CellSize), CellSize };\n// \u30bb\u30eb\u306e\u30de\u30fc\u30af\nconst int32 mark = m_grid[p];\n// X \u30de\u30fc\u30af\u3060\u3063\u305f\u3089\nif (mark == X_Mark)\n{\n// X \u30de\u30fc\u30af\u3092\u63cf\u304f\nShape2D::Cross(CellSize * 0.4, 10, cell.center())\n.draw(ColorF{ 0.2 });\n// \u3053\u306e\u30bb\u30eb\u306f\u3053\u308c\u4ee5\u4e0a\u51e6\u7406\u3057\u306a\u3044\ncontinue;\n}\nelse if (mark == O_Mark) // O \u30de\u30fc\u30af\u3060\u3063\u305f\u3089\n{\n// \u3007 \u30de\u30fc\u30af\u3092\u63cf\u304f\nCircle{ cell.center(), (CellSize * 0.4 - 10) }\n.drawFrame(10, 0, ColorF{ 0.2 });\n// \u3053\u306e\u30bb\u30eb\u306f\u3053\u308c\u4ee5\u4e0a\u51e6\u7406\u3057\u306a\u3044\ncontinue;\n}\n// \u30bb\u30eb\u304c\u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u3055\u308c\u305f\u3089\nif (!m_gameOver &amp;&amp; cell.mouseOver())\n{\n// \u30ab\u30fc\u30bd\u30eb\u3092\u624b\u306e\u30a2\u30a4\u30b3\u30f3\u306b\u3059\u308b\nCursor::RequestStyle(CursorStyle::Hand);\n// \u30bb\u30eb\u306e\u4e0a\u306b\u534a\u900f\u660e\u306e\u767d\u3092\u63cf\u304f\ncell.stretched(-2).draw(ColorF{ 1.0, 0.6 });\n}\n}\n}\n// \u3064\u306a\u304c\u3063\u305f\u30e9\u30a4\u30f3\u3092\u63cf\u304f\nvoid drawResults() const\n{\nfor (const auto&amp; line : m_lines)\n{\n// \u3064\u306a\u304c\u3063\u305f\u30e9\u30a4\u30f3\u306e\u59cb\u70b9\u3068\u7d42\u70b9\u306e\u30bb\u30eb\u3092\u53d6\u5f97\nconst Rect cellBegin{ line.first * CellSize, CellSize };\nconst Rect cellEnd{ line.second * CellSize, CellSize };\n// \u7dda\u3092\u5f15\u304f\nLine{ cellBegin.center(), cellEnd.center() }\n.stretched(CellSize * 0.45)\n.draw(LineStyle::RoundCap, 5, ColorF{ 0.6 });\n}\n}\n};\nvoid Main()\n{\n// \u80cc\u666f\u8272\nScene::SetBackground(ColorF{ 0.8, 1.0, 0.9 });\nconstexpr Point Offset{ 175, 30 };\nGameBoard gameBoard;\nwhile (System::Update())\n{\n{\n// 2D \u63cf\u753b\u3068\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u5ea7\u6a19\u3092\u79fb\u52d5\nconst Transformer2D transform{ Mat3x2::Translate(Offset), TransformCursor::Yes };\ngameBoard.update();\ngameBoard.draw();\n}\n// \u30b2\u30fc\u30e0\u304c\u7d42\u4e86\u3057\u3066\u3044\u305f\u3089\nif (gameBoard.isGameOver())\n{\n// Reset \u30dc\u30bf\u30f3\u3092\u62bc\u305b\u3070\u30ea\u30bb\u30c3\u30c8\nif (SimpleGUI::ButtonAt(U\"Reset\", Vec2{ 400, 520 }))\n{\ngameBoard.reset();\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/games/#12-\u97f3\u30b2\u30fc\u57fa\u790e","title":"12. \u97f3\u30b2\u30fc\u57fa\u790e","text":"\u30b3\u30fc\u30c9 <p>\u3042\u3089\u304b\u3058\u3081\u6b21\u306e\u3088\u3046\u306b\u66f8\u304b\u308c\u305f\u8b5c\u9762\u30d5\u30a1\u30a4\u30eb <code>notes.txt</code> \u3092\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e <code>App/</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306b\u914d\u7f6e\u3057\u3066\u304a\u304d\u307e\u3059\u3002</p> notes.txt<pre><code>2000 0\n2500 1\n3000 2\n3500 3\n4000 3\n4500 2\n5000 1\n5500 0\n6000 0\n6500 1\n7000 2\n7500 3\n8000 3\n8500 2\n9000 1\n9500 0\n</code></pre> <p>\u5b9f\u969b\u306e\u30b2\u30fc\u30e0\u3067\u306f <code>Audio</code> \u306e <code>.posSec()</code> \u3084 <code>.posSample()</code> \u304b\u3089\u7d4c\u904e\u6642\u9593\u3092\u8a08\u7b97\u3059\u3079\u304d\u3067\u3059\u304c\u3001\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u308f\u305a\u306b <code>Stopwatch</code> \u3067\u7d4c\u904e\u6642\u9593\u3092\u6c7a\u3081\u3066\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30ce\u30fc\u30c8\nstruct Note\n{\n// \u30ce\u30fc\u30c8\u306e\u6642\u523b\nint32 time;\n// \u62bc\u3059\u3079\u304d\u30ad\u30fc\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 (0, 1, 2, 3)\nint32 key;\n// \u6d88\u3048\u305f\u3089 false\nbool active = true;\n};\n// \u30ce\u30fc\u30c8\u60c5\u5831\u3092\u8b5c\u9762\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30ed\u30fc\u30c9\u3059\u308b\u95a2\u6570\nArray&lt;Note&gt; LoadNotes(const FilePath&amp; path)\n{\nTextReader reader{ path };\nif (not reader)\n{\nthrow Error{ U\"\u8b5c\u9762 {} \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002\"_fmt(path) };\n}\nArray&lt;Note&gt; notes;\nString line;\n// 1 \u884c\u305a\u3064\u8aad\u307f\u8fbc\u3080\nwhile (reader.readLine(line))\n{\n// \u7a7a\u767d\u884c\u306f\u30b9\u30ad\u30c3\u30d7\nif (line.isEmpty())\n{\ncontinue;\n}\n// \u8aad\u307f\u8fbc\u3093\u3060\u884c\u3092\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u3067\u5206\u5272\nconst Array&lt;String&gt; params = line.split(U' ');\n// \u5206\u5272\u3057\u305f\u7d50\u679c\u304c 2 \u8981\u7d20\u3067\u306a\u3044\u5834\u5408\u306f\u4e0d\u6b63\u306a\u8b5c\u9762\nif (params.size() != 2)\n{\nthrow Error{ U\"\u4e0d\u6b63\u306a\u8b5c\u9762\u3067\u3059\u3002\" };\n}\n// \u5206\u5272\u3057\u305f\u7d50\u679c\u3092\u305d\u308c\u305e\u308c int32 \u578b\u306b\u5909\u63db\nnotes.emplace_back(Parse&lt;int32&gt;(params[0]), Parse&lt;int32&gt;(params[1]));\n}\nreturn notes;\n}\n// \u30ce\u30fc\u30c8\u306e\u5ea7\u6a19\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\nVec2 GetNotePos(const Note&amp; note, int32 time)\n{\nconst double x = (250 + note.key * 100);\nconst double y = (500 - (note.time - time) * 0.25);\nreturn{ x, y };\n}\n// \u30ce\u30fc\u30c8\u3092\u62bc\u3057\u305f\u3068\u304d\u306e\u30a8\u30d5\u30a7\u30af\u30c8\nstruct NoteEffect : IEffect\n{\nVec2 m_start;\nint32 m_score;\nFont m_font;\nNoteEffect(const Vec2&amp; start, int32 score, const Font&amp; font)\n: m_start{ start }\n, m_score{ score }\n, m_font{ font } {}\nbool update(double t) override\n{\nCircle{ m_start, (30 + t * 80) }.drawFrame(15 * (0.5 - t));\nif (m_score == 2)\n{\nm_font(U\"Excellent\").drawAt(32, m_start.movedBy(0, (-20 - t * 160)), Palette::Orange);\n}\nelse if (m_score == 1)\n{\nm_font(U\"Good\").drawAt(32, m_start.movedBy(0, (-20 - t * 160)), Palette::Skyblue);\n}\nreturn (t &lt; 0.5);\n}\n};\nvoid Main()\n{\n// \u30ce\u30fc\u30c8\u914d\u5217\nArray&lt;Note&gt; notes = LoadNotes(U\"notes.txt\");\n// \u5224\u5b9a\u30ad\u30fc\nconst Array&lt;Input&gt; Keys = { KeyA, KeyS, KeyD, KeyF };\n// \u30ad\u30fc\u5165\u529b\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3\nArray&lt;Transition&gt; keyTransitions(Keys.size(), Transition{ 0.0s, 0.2s });\n// \u6642\u9593\u6e2c\u5b9a\u7528\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\nStopwatch stopwatch{ StartImmediately::Yes };\n// \u30d5\u30a9\u30f3\u30c8\nconst Font font{ FontMethod::MSDF, 48, Typeface::Heavy };\n// \u30a8\u30d5\u30a7\u30af\u30c8\u7ba1\u7406\nEffect effect;\nwhile (System::Update())\n{\n// \u7d4c\u904e\u6642\u9593\uff08\u30df\u30ea\u79d2\uff09\nconst int32 time = stopwatch.ms();\nClearPrint();\nPrint &lt;&lt; time;\n////////////////////////////////\n//\n//\t\u72b6\u614b\u66f4\u65b0\n//\n////////////////////////////////\nfor (size_t i = 0; i &lt; Keys.size(); ++i)\n{\nkeyTransitions[i].update(Keys[i].down());\n}\nfor (auto&amp; note : notes)\n{\n// \u6d88\u3048\u3066\u3044\u308b\u30ce\u30fc\u30c8\u306f\u30b9\u30ad\u30c3\u30d7\nif (not note.active)\n{\ncontinue;\n}\n// \u73fe\u5728\u306e\u30bf\u30a4\u30e0\u3068\u30ce\u30fc\u30c8\u306e\u30bf\u30a4\u30e0\u3068\u306e\u5dee\uff08\u30df\u30ea\u79d2\uff09\nconst int32 diffMillisec = (time - note.time);\n// \u5dee\u306e\u7d76\u5bfe\u5024\u304c 250 \u30df\u30ea\u79d2\u672a\u6e80\u306a\u3089\nif (Abs(diffMillisec) &lt; 250)\n{\n// \u30ce\u30fc\u30c8\u306b\u5bfe\u5fdc\u3059\u308b\u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\nif (Keys[note.key].down())\n{\n// \u30ce\u30fc\u30c8\u3092\u6d88\u3059\nnote.active = false;\n// \u30ce\u30fc\u30c8\u306e\u5ea7\u6a19\nconst Vec2 notePos = GetNotePos(note, time);\n// \u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\neffect.add&lt;NoteEffect&gt;(Vec2{ notePos.x, 500 }, (Abs(diffMillisec) &lt; 80 ? 2 : 1), font);\n}\n}\n// 250 \u30df\u30ea\u79d2\u4ee5\u4e0a\u306e\u9045\u308c\u306f\u30df\u30b9\nif (note.active &amp;&amp; (250 &lt;= diffMillisec))\n{\n// \u30ce\u30fc\u30c8\u3092\u6d88\u3059\nnote.active = false;\n}\n}\n////////////////////////////////\n//\n//\t\u63cf\u753b\n//\n////////////////////////////////\n// \u5165\u529b\u3092\u63cf\u753b\u3059\u308b\nfor (int32 i = 0; i &lt; 4; ++i)\n{\nconst double x = (250 + i * 100);\nRectF{ Arg::bottomCenter(x, 600), 80, 600 }\n.draw(Arg::top = ColorF{ 1.0, 0.0 }, Arg::bottom = ColorF{ 1.0, keyTransitions[i].easeOut() * 0.5 });\n}\n// \u9577\u65b9\u5f62\u3092\u63cf\u753b\u3059\u308b\nRect{ 0, 480, 800, 40 }.draw(ColorF{ 0.5 });\n// \u30ad\u30fc\u540d\u3092\u63cf\u753b\u3059\u308b\nfor (int32 i = 0; i &lt; 4; ++i)\n{\nconst double x = (250 + i * 100);\nfont(Keys[i].name()).drawAt(20, Vec2{ x, 500 }, ColorF{ 0.7 });\n}\n// \u30ce\u30fc\u30c8\u3092\u63cf\u753b\u3059\u308b\nfor (const auto&amp; note : notes)\n{\n// \u6d88\u3048\u3066\u3044\u308b\u30ce\u30fc\u30c8\u306f\u30b9\u30ad\u30c3\u30d7\nif (not note.active)\n{\ncontinue;\n}\n// \u30ce\u30fc\u30c8\u306e\u5ea7\u6a19\nconst Vec2 notePos = GetNotePos(note, time);\n// \u753b\u9762\u5185\u306b\u3042\u308b\u30ce\u30fc\u30c8\u306e\u307f\u63cf\u753b\u3059\u308b\nif (-100.0 &lt; notePos.y)\n{\nCircle{ notePos, 30 }.draw();\n}\n}\n// \u30a8\u30d5\u30a7\u30af\u30c8\u306e\u63cf\u753b\neffect.update();\n}\n}\n</code></pre>"},{"location":"samples/games/#13-\u30de\u30a4\u30f3\u30b9\u30a4\u30fc\u30d1\u30fc","title":"13. \u30de\u30a4\u30f3\u30b9\u30a4\u30fc\u30d1\u30fc","text":"<p>Siv3D-Sample | \u30de\u30a4\u30f3\u30b9\u30a4\u30fc\u30d1\u30fc </p>"},{"location":"samples/games/#14-ai-\u30aa\u30bb\u30ed","title":"14. AI \u30aa\u30bb\u30ed","text":"<p>Siv3D-Sample | AI \u30aa\u30bb\u30ed </p>"},{"location":"samples/games/#15-\u30af\u30ed\u30f3\u30c0\u30a4\u30af","title":"15. \u30af\u30ed\u30f3\u30c0\u30a4\u30af","text":"<p>Siv3D-Sample | \u30af\u30ed\u30f3\u30c0\u30a4\u30af </p>"},{"location":"samples/games/#16-\u795e\u7d4c\u8870\u5f31","title":"16. \u795e\u7d4c\u8870\u5f31","text":"<p>\u30b2\u30fc\u30e0\u5178\u578b | \u795e\u7d4c\u8870\u5f31 </p>"},{"location":"samples/games/#17-\u30cf\u30ce\u30a4\u306e\u5854","title":"17. \u30cf\u30ce\u30a4\u306e\u5854","text":"<p>\u30b2\u30fc\u30e0\u5178\u578b | \u30cf\u30ce\u30a4\u306e\u5854 </p>"},{"location":"samples/games/#18-wheel-of-fortune-\u30eb\u30fc\u30ec\u30c3\u30c8","title":"18. Wheel of Fortune (\u30eb\u30fc\u30ec\u30c3\u30c8)","text":"<p>\u30b2\u30fc\u30e0\u5178\u578b | Wheel of Fortune (\u30eb\u30fc\u30ec\u30c3\u30c8) </p>"},{"location":"samples/games/#19-2d-rpg-\u306e\u30de\u30c3\u30d7\u3068\u79fb\u52d5\u306e\u57fa\u672c","title":"19. 2D RPG \u306e\u30de\u30c3\u30d7\u3068\u79fb\u52d5\u306e\u57fa\u672c","text":"<p>\u30b2\u30fc\u30e0\u5178\u578b | 2D RPG \u306e\u30de\u30c3\u30d7\u3068\u79fb\u52d5\u306e\u57fa\u672c </p>"},{"location":"samples/games/#20-\u30aa\u30fc\u30c8\u30bf\u30a4\u30eb","title":"20. \u30aa\u30fc\u30c8\u30bf\u30a4\u30eb","text":"<p>Siv3D-Sample | \u30aa\u30fc\u30c8\u30bf\u30a4\u30eb </p>"},{"location":"samples/image/","title":"\u753b\u50cf\u306e\u30b5\u30f3\u30d7\u30eb","text":""},{"location":"samples/image/#1-\u30b9\u30b1\u30c3\u30c1","title":"1. \u30b9\u30b1\u30c3\u30c1","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30ad\u30e3\u30f3\u30d0\u30b9\u306e\u30b5\u30a4\u30ba\nconstexpr Size CanvasSize{ 600, 600 };\n// \u30da\u30f3\u306e\u592a\u3055\nconstexpr int32 PenThickness = 8;\n// \u30da\u30f3\u306e\u8272\nconstexpr Color PenColor = Palette::Orange;\n// \u66f8\u304d\u8fbc\u307f\u7528\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3059\u308b\nImage image{ CanvasSize, Palette::White };\n// \u8868\u793a\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\uff08\u5185\u5bb9\u3092\u66f4\u65b0\u3059\u308b\u306e\u3067 DynamicTexture\uff09\nDynamicTexture texture{ image };\nwhile (System::Update())\n{\nif (MouseL.pressed())\n{\n// \u66f8\u304d\u8fbc\u3080\u7dda\u306e\u59cb\u70b9\u306f\u76f4\u524d\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u5ea7\u6a19\n// \uff08\u521d\u56de\u306f\u30bf\u30c3\u30c1\u64cd\u4f5c\u6642\u306e\u5ea7\u6a19\u306e\u30b8\u30e3\u30f3\u30d7\u3092\u9632\u3050\u305f\u3081\u3001\u73fe\u5728\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u5ea7\u6a19\u306b\u3059\u308b\uff09\nconst Point from = (MouseL.down() ? Cursor::Pos() : Cursor::PreviousPos());\n// \u66f8\u304d\u8fbc\u3080\u7dda\u306e\u7d42\u70b9\u306f\u73fe\u5728\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u5ea7\u6a19\nconst Point to = Cursor::Pos();\n// image \u306b\u7dda\u3092\u66f8\u304d\u8fbc\u3080\nLine{ from, to }.overwrite(image, PenThickness, PenColor);\n// \u66f8\u304d\u8fbc\u307f\u7d42\u308f\u3063\u305f image \u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u66f4\u65b0\ntexture.fill(image);\n}\n// \u63cf\u3044\u305f\u3082\u306e\u3092\u6d88\u53bb\u3059\u308b\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089\nif (SimpleGUI::Button(U\"Clear\", Vec2{ 640, 40 }, 120))\n{\n// \u753b\u50cf\u3092\u767d\u3067\u5857\u308a\u3064\u3076\u3059\nimage.fill(Palette::White);\n// \u5857\u308a\u3064\u3076\u3057\u7d42\u308f\u3063\u305f image \u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u66f4\u65b0\u3059\u308b\ntexture.fill(image);\n}\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u8868\u793a\ntexture.draw();\n}\n}\n</code></pre>"},{"location":"samples/image/#2-\u4e07\u83ef\u93e1\u30b9\u30b1\u30c3\u30c1","title":"2. \u4e07\u83ef\u93e1\u30b9\u30b1\u30c3\u30c1","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30ad\u30e3\u30f3\u30d0\u30b9\u306e\u30b5\u30a4\u30ba\nconstexpr Size CanvasSize{ 600, 600 };\n// \u5206\u5272\u6570\nconstexpr int32 N = 12;\n// \u80cc\u666f\u8272\nconstexpr Color BackgroundColor{ 20, 40, 60 };\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u30ad\u30e3\u30f3\u30d0\u30b9\u306e\u30b5\u30a4\u30ba\u306b\u3059\u308b\nWindow::Resize(CanvasSize);\n// \u66f8\u304d\u8fbc\u307f\u7528\u306e\u753b\u50cf\nImage image{ CanvasSize, BackgroundColor };\n// \u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u52d5\u7684\u30c6\u30af\u30b9\u30c1\u30e3\nDynamicTexture texture{ image };\nwhile (System::Update())\n{\nif (MouseL.pressed())\n{\n// \u753b\u9762\u306e\u4e2d\u5fc3\u304c (0, 0) \u306b\u306a\u308b\u3088\u3046\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u5ea7\u6a19\u3092\u79fb\u52d5\u3055\u305b\u308b\nconst Vec2 begin = ((MouseL.down() ? Cursor::PosF() : Cursor::PreviousPosF()) - CanvasSize / 2);\nconst Vec2 end = (Cursor::PosF() - CanvasSize / 2);\n// \u6642\u9593\u306b\u5fdc\u3058\u3066\u8272\u3092\u5909\u5316\u3055\u305b\u308b\nconst ColorF color = HSV{ (Scene::Time() * 60.0), 0.5, 1.0 };\nfor (int32 i = 0; i &lt; N; ++i)\n{\n// \u5186\u5ea7\u6a19\u306b\u5909\u63db\u3059\u308b\nstd::array&lt;Circular, 2&gt; cs = { begin, end };\nfor (auto&amp; c : cs)\n{\n// \u89d2\u5ea6\u3092\u305a\u3089\u3059\nif (IsEven(i))\n{\nc.theta = (-c.theta - 2_pi / N * (i - 1));\n}\nelse\n{\nc.theta = (c.theta + 2_pi / N * i);\n}\n}\n// \u305a\u3089\u3057\u305f\u4f4d\u7f6e\u3092\u3082\u3068\u306b\u3001\u753b\u50cf\u306b\u7dda\u3092\u66f8\u304d\u8fbc\u3080\nLine{ cs[0], cs[1] }.moveBy(CanvasSize / 2)\n.overwrite(image, 2, color);\n}\n// \u66f8\u304d\u8fbc\u3093\u3060\u753b\u50cf\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u66f4\u65b0\u3059\u308b\ntexture.fillIfNotBusy(image);\n}\nif (MouseR.down()) // \u53f3\u30af\u30ea\u30c3\u30af\u3067\u30ea\u30bb\u30c3\u30c8\u3059\u308b\n{\n// \u753b\u50cf\u3092\u5857\u308a\u3064\u3076\u3059\nimage.fill(BackgroundColor);\n// \u5857\u308a\u3064\u3076\u3057\u305f\u753b\u50cf\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u66f4\u65b0\ntexture.fill(image);\n}\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304f\ntexture.draw();\n}\n}\n</code></pre>"},{"location":"samples/image/#3-\u30da\u30a4\u30f3\u30c8","title":"3. \u30da\u30a4\u30f3\u30c8","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u30ad\u30e3\u30f3\u30d0\u30b9\u306e\u30b5\u30a4\u30ba\nconstexpr Size CanvasSize{ 600, 600 };\n// \u30da\u30f3\u306e\u592a\u3055\ndouble penThickness = 8;\n// \u30da\u30f3\u306e\u8272\nHSV penColor = Palette::Orange;\n// \u66f8\u304d\u8fbc\u307f\u7528\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3059\u308b\nImage image{ CanvasSize, Palette::White };\n// \u8868\u793a\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\uff08\u5185\u5bb9\u3092\u66f4\u65b0\u3059\u308b\u306e\u3067 DynamicTexture\uff09\nDynamicTexture texture{ image };\nconst Array&lt;String&gt; modes = { U\"Draw\", U\"Fill\", U\"Pick\" };\nsize_t modeIndex = 0;\nwhile (System::Update())\n{\nif (modeIndex == 0) // \u30da\u30f3\n{\nif (MouseL.pressed())\n{\n// \u66f8\u304d\u8fbc\u3080\u7dda\u306e\u59cb\u70b9\u306f\u76f4\u524d\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u5ea7\u6a19\n// \uff08\u521d\u56de\u306f\u30bf\u30c3\u30c1\u64cd\u4f5c\u6642\u306e\u5ea7\u6a19\u306e\u30b8\u30e3\u30f3\u30d7\u3092\u9632\u3050\u305f\u3081\u3001\u73fe\u5728\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u5ea7\u6a19\u306b\u3059\u308b\uff09\nconst Point from = (MouseL.down() ? Cursor::Pos() : Cursor::PreviousPos());\n// \u66f8\u304d\u8fbc\u3080\u7dda\u306e\u7d42\u70b9\u306f\u73fe\u5728\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u5ea7\u6a19\nconst Point to = Cursor::Pos();\n// image \u306b\u7dda\u3092\u66f8\u304d\u8fbc\u3080\nLine{ from, to }.overwrite(image, static_cast&lt;int32&gt;(penThickness), penColor, Antialiased::No);\n// \u66f8\u304d\u8fbc\u307f\u7d42\u308f\u3063\u305f image \u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u66f4\u65b0\ntexture.fill(image);\n}\nelse if (MouseR.pressed())\n{\nconst Point from = (MouseL.down() ? Cursor::Pos() : Cursor::PreviousPos());\nconst Point to = Cursor::Pos();\nLine{ from, to }.overwrite(image, static_cast&lt;int32&gt;(penThickness), Palette::White, Antialiased::No);\ntexture.fill(image);\n}\n}\nelse if (modeIndex == 1) // \u5857\u308a\u3064\u3076\u3057\n{\nif (MouseL.down())\n{\nimage.floodFill(Cursor::Pos(), penColor);\ntexture.fill(image);\n}\nelse if (MouseR.down())\n{\nimage.floodFill(Cursor::Pos(), Palette::White);\ntexture.fill(image);\n}\n}\nelse // \u30d4\u30c3\u30ab\u30fc\n{\nif (MouseL.down())\n{\nconst Point cursorPos = Cursor::Pos();\nif (InRange(cursorPos.x, 0, (image.width() - 1))\n&amp;&amp; InRange(cursorPos.y, 0, (image.height() - 1)))\n{\npenColor = image[cursorPos];\n}\n}\n}\nif (SimpleGUI::Button(U\"Save\", Vec2{ 620, 40 }, 160))\n{\nimage.saveWithDialog();\n}\n// \u63cf\u3044\u305f\u3082\u306e\u3092\u6d88\u53bb\u3059\u308b\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089\nif (SimpleGUI::Button(U\"Clear\", Vec2{ 620, 100 }, 160))\n{\n// \u753b\u50cf\u3092\u767d\u3067\u5857\u308a\u3064\u3076\u3059\nimage.fill(Palette::White);\n// \u5857\u308a\u3064\u3076\u3057\u7d42\u308f\u3063\u305f image \u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u66f4\u65b0\u3059\u308b\ntexture.fill(image);\n}\n// \u8272\u306e\u9078\u629e\nSimpleGUI::ColorPicker(penColor, Vec2{ 620, 160 });\n// \u30da\u30f3\u306e\u592a\u3055\nSimpleGUI::Slider(penThickness, 1.0, 30.0, Vec2{ 620, 300 }, 160);\n// \u30e2\u30fc\u30c9\u306e\u9078\u629e\nSimpleGUI::RadioButtons(modeIndex, modes, Vec2{ 620, 360 });\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u8868\u793a\ntexture.draw();\n}\n}\n</code></pre>"},{"location":"samples/image/#4-image-to-polygon","title":"4. Image to Polygon","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u4f7f\u7528\u3059\u308b\u753b\u50cf\nconst Image image{ U\"example/siv3d-kun.png\" };\n// \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u8868\u793a\u4f4d\u7f6e\nconstexpr Vec2 BasePos{ 40, 80 };\n// \u30c6\u30af\u30b9\u30c1\u30e3\nconst Texture texture{ image };\n// \u30a2\u30eb\u30d5\u30a1\u5024 1 \u4ee5\u4e0a\u306e\u9818\u57df\u3092 Polygon \u5316\u3059\u308b\nconst Polygon polygon = image.alphaToPolygon(1, AllowHoles::No);\n// Polygon \u5358\u7d14\u5316\u306e\u8a31\u5bb9\u8ddd\u96e2\uff08\u30d4\u30af\u30bb\u30eb\uff09\ndouble maxDistance = 4.0;\n// \u5358\u7d14\u5316\u3057\u305f Polygon\nPolygon simplifiedPolygon = polygon.simplified(maxDistance);\nwhile (System::Update())\n{\n// \u5358\u7d14\u5316\u3057\u305f Polygon \u306e\u4e09\u89d2\u5f62\u6570\u3092\u8868\u793a\u3059\u308b\nClearPrint();\nPrint &lt;&lt; U\"{} triangles\"_fmt(simplifiedPolygon.num_triangles());\ntexture.draw(BasePos);\n// \u5358\u7d14\u5316\u3057\u305f Polygon \u3092\u30c6\u30af\u30b9\u30c1\u30e3\u4e0a\u306b\u8868\u793a\u3059\u308b\nsimplifiedPolygon.movedBy(BasePos)\n.draw(ColorF{ 1.0, 1.0, 0.0, 0.2 })\n.drawWireframe(2, Palette::Yellow);\n// \u5358\u7d14\u5316\u3057\u305f Polygon \u3092\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u6a2a\u306b\u8868\u793a\u3059\u308b\nsimplifiedPolygon.movedBy(BasePos.movedBy(320, 0))\n.draw(ColorF{ 0.5 });\n// Polygon \u5358\u7d14\u5316\u306e\u8a31\u5bb9\u8ddd\u96e2\u3092\u8a2d\u5b9a\u3059\u308b\u30b9\u30e9\u30a4\u30c0\u30fc\nif (SimpleGUI::Slider(U\"{:.1f}\"_fmt(maxDistance), maxDistance, 0, 50, Vec2{ 400, 40 }, 60, 240))\n{\n// \u30b9\u30e9\u30a4\u30c0\u30fc\u306b\u5909\u66f4\u304c\u3042\u308c\u3070\u3001\u5358\u7d14\u5316\u3057\u305f Polygon \u3092\u65b0\u3057\u3044\u8a31\u5bb9\u8ddd\u96e2\u3067\u518d\u4f5c\u6210\nsimplifiedPolygon = polygon.simplified(maxDistance);\n}\n}\n}\n</code></pre>"},{"location":"samples/image/#5-jpeg-glitch","title":"5. JPEG Glitch","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u753b\u50cf\nconst Image image{ U\"example/windmill.png\" };\n// \u8868\u793a\u7528\u306e\u52d5\u7684\u30c6\u30af\u30b9\u30c1\u30e3\nDynamicTexture texture{ image };\n// JPEG \u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\nconst Blob originalBlob = image.encodeJPEG();\n// \u6539\u5909\u3059\u308b\u30c7\u30fc\u30bf\u306e\u500b\u6570\nconst size_t noiseCount = (image.num_pixels() / 4000);\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Glitch\", Vec2{ 40, 40 }))\n{\n// Array \u3092\u4f5c\u6210\nBlob modifiedBlob = originalBlob;\nfor (size_t i = 0; i &lt; noiseCount; ++i)\n{\n// \u30e9\u30f3\u30c0\u30e0\u306a\u4f4d\u7f6e\u306e 1 \u30d0\u30a4\u30c8\u306b\u3064\u3044\u3066\u3001\u30e9\u30f3\u30c0\u30e0\u306a\u5024\u306b\u66f8\u304d\u63db\u3048\u308b\u3002\n// \u30d8\u30c3\u30c0\u90e8\u5206\uff08\u5148\u982d\uff09\u306f\u6539\u5909\u3057\u306a\u3044\u3002\nconst size_t index = Random&lt;size_t&gt;(630, (modifiedBlob.size() - 1));\nmodifiedBlob[index] = Byte{ RandomUint8() };\n}\n// JPEG \u30c7\u30fc\u30bf\u3068\u3057\u3066\u8aad\u307f\u8fbc\u3093\u3067\u753b\u50cf\u3092\u4f5c\u6210\u3001\u52d5\u7684\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u8ee2\u9001\ntexture.fill(Image{ MemoryReader{ modifiedBlob }, ImageFormat::JPEG });\n}\ntexture.drawAt(Scene::Center());\n}\n}\n</code></pre>"},{"location":"samples/image/#6-\u6a21\u5199\u30a2\u30d7\u30ea","title":"6. \u6a21\u5199\u30a2\u30d7\u30ea","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// 2 \u3064\u306e\u753b\u50cf\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\ndouble Diff(const Image&amp; a, const Image&amp; b)\n{\nconst Color* pA = a.data();\nconst Color* pB = b.data();\nconst Color* const pAEnd = (pA + a.num_pixels());\ndouble d = 0.0;\n// \u3059\u3079\u3066\u306e\u30d4\u30af\u30bb\u30eb\u306b\u5bfe\u3057\u3066\nwhile (pA != pAEnd)\n{\nd += (AbsDiff(pA-&gt;r, pB-&gt;r) + AbsDiff(pA-&gt;g, pB-&gt;g) + AbsDiff(pA-&gt;b, pB-&gt;b));\n++pA;\n++pB;\n}\nreturn d;\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u76ee\u6a19\u3068\u3059\u308b\u753b\u50cf\u3092\u30d5\u30a1\u30a4\u30eb\u30c0\u30a4\u30a2\u30ed\u30b0\u3067\u9078\u629e\u3001\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u306b\u30d5\u30a3\u30c3\u30c8\u3059\u308b\u3088\u3046\u30ea\u30b5\u30a4\u30ba\nconst Image target = Dialog::OpenImage().fit(Scene::Size());\n// \u73fe\u5728\u306e\u753b\u50cf\nImage image{ target.size(), Palette::White };\n// \u76f4\u524d\u306e\u753b\u50cf\nImage old = image;\n// \u73fe\u5728\u306e\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u52d5\u7684\u30c6\u30af\u30b9\u30c1\u30e3\nDynamicTexture texture{ image };\n// \u76ee\u6a19\u3068\u306e\u8ddd\u96e2\ndouble d1 = Diff(target, image);\nwhile (System::Update())\n{\nfor (int32 i = 0; i &lt; 100; ++i)\n{\n// \u30e9\u30f3\u30c0\u30e0\u306a\u5ea7\u6a19\nconst Point pos = RandomPoint(Rect{ image.size() });\n// \u30e9\u30f3\u30c0\u30e0\u306a\u8272\nconst ColorF color{ Random(), Random(), Random(), Random() };\n// \u30e9\u30f3\u30c0\u30e0\u306a\u534a\u5f84\nconst int32 size = Random(1, 10);\n// \u5186\u3092\u73fe\u5728\u306e\u753b\u50cf\u306b\u66f8\u304d\u8fbc\u3080\nCircle{ pos, size }.paint(image, color);\n// \u76ee\u6a19\u3068\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\nconst double d2 = Diff(target, image);\nif (d2 &lt; d1) // \u76ee\u6a19\u306b\u8fd1\u3065\u3044\u3066\u3044\u305f\u3089\u63a1\u7528\n{\nd1 = d2;\nold = image;\n}\nelse // \u8fd1\u3065\u3044\u3066\u3044\u306a\u304b\u3063\u305f\u3089\u5143\u306b\u623b\u3059\n{\nimage = old;\n}\n}\n// \u52d5\u7684\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u66f4\u65b0\u3059\u308b\ntexture.fill(image);\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u753b\u9762\u306e\u4e2d\u5fc3\u306b\u63cf\u753b\u3059\u308b\ntexture.drawAt(Scene::Center());\n// \u4fdd\u5b58\u30dc\u30bf\u30f3\nif (SimpleGUI::Button(U\"Save\", Vec2{ 660, 550 }))\n{\n// \u73fe\u5728\u306e\u753b\u50cf\u3092\u30d5\u30a1\u30a4\u30eb\u30c0\u30a4\u30a2\u30ed\u30b0\u7d4c\u7531\u3067\u4fdd\u5b58\u3059\u308b\nimage.saveWithDialog();\n}\n}\n}\n</code></pre>"},{"location":"samples/image/#7-grabcut-\u306b\u3088\u308b\u80cc\u666f\u5206\u96e2\u3068-inpaint-\u306b\u3088\u308b\u4fee\u5fa9","title":"7. GrabCut \u306b\u3088\u308b\u80cc\u666f\u5206\u96e2\u3068 Inpaint \u306b\u3088\u308b\u4fee\u5fa9","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.8, 1.0, 0.9 });\nconst Image image = Dialog::OpenImage().fit(Size{ 480, 320 });\nconst Texture texture{ image };\nGrabCut grabcut{ image };\nImage mask{ image.size(), Color{0, 0} };\nImage background{ image.size(), Palette::Black };\nImage foreground{ image.size(), Palette::Black };\nImage inpaint;\nDynamicTexture maskTexture{ mask };\nGrid&lt;GrabCutClass&gt; result;\nDynamicTexture classTexture;\nDynamicTexture backgroundTexture{ background };\nDynamicTexture foregroundTexture{ foreground };\nDynamicTexture inpaintTexture{ foreground };\nconstexpr Color BackgroundColor{ 0, 0, 255 };\nconstexpr Color ForegroundColor{ 250, 100, 50 };\nwhile (System::Update())\n{\nif ((not classTexture) || MouseL.up() || MouseR.up())\n{\ngrabcut.update(mask, ForegroundColor, BackgroundColor);\ngrabcut.getResult(result);\nclassTexture.fill(Image(result, [](GrabCutClass c) { return Color(80 * FromEnum(c)); }));\nfor (auto p : step(image.size()))\n{\nconst bool isBackground = (GrabCutClass::PossibleBackground &lt;= result[p]);\nif (isBackground)\n{\nbackground[p] = image[p];\nforeground[p] = Color{ 0,0 };\n}\nelse\n{\nforeground[p] = image[p];\nbackground[p] = Color{ 0,0 };\n}\n}\nImageProcessing::Inpaint(background, background, Color{ 0, 0 }, inpaint);\ninpaint.gaussianBlur(3);\nforegroundTexture.fill(foreground);\nbackgroundTexture.fill(background);\ninpaintTexture.fill(inpaint);\n}\nif (MouseL.pressed())\n{\nconst Point from = MouseL.down() ? Cursor::Pos() : Cursor::PreviousPos();\nconst Point to = Cursor::Pos();\nLine{ from, to }.overwrite(mask, 4, ForegroundColor, Antialiased::No);\nmaskTexture.fill(mask);\n}\nelse if (MouseR.pressed())\n{\nconst Point from = MouseR.down() ? Cursor::Pos() : Cursor::PreviousPos();\nconst Point to = Cursor::Pos();\nLine{ from, to }.overwrite(mask, 4, BackgroundColor, Antialiased::No);\nmaskTexture.fill(mask);\n}\ntexture.draw();\nmaskTexture.draw();\nclassTexture.draw(600, 0);\nbackgroundTexture.scaled(0.7).regionAt(200, 520).draw(ColorF{ 0 });\nbackgroundTexture.scaled(0.7).drawAt(200, 520);\nforegroundTexture.scaled(0.7).regionAt(1080, 520).draw(ColorF{ 0 });\nforegroundTexture.scaled(0.7).drawAt(1080, 520);\ninpaintTexture.drawAt(640, 520);\n{\nconst Transformer2D transformer{ Mat3x2::Scale(1.1, Vec2{640, 520}.movedBy(0, image.height() / 2)).translated((Scene::Center() - Cursor::Pos()) * 0.04) };\nforegroundTexture.drawAt(640, 520);\n}\n}\n}\n</code></pre>"},{"location":"samples/image/#8-\u30c9\u30ed\u30c3\u30d7\u3055\u308c\u305f\u30a4\u30e9\u30b9\u30c8\u304b\u3089\u9854\u3092\u691c\u51fa","title":"8. \u30c9\u30ed\u30c3\u30d7\u3055\u308c\u305f\u30a4\u30e9\u30b9\u30c8\u304b\u3089\u9854\u3092\u691c\u51fa","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nTexture texture;\ndouble scale = 1.0;\n// \u691c\u51fa\u5668\u3002\u6b63\u9762\u3092\u5411\u3044\u305f\u9854\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066\u5206\u985e\nconst CascadeClassifier animeFaceDetector{ U\"example/objdetect/haarcascade/face_anime.xml\" };\nArray&lt;Rect&gt; detectedFaces;\nwhile (System::Update())\n{\n// \u30d5\u30a1\u30a4\u30eb\u304c\u30c9\u30ed\u30c3\u30d7\u3055\u308c\u305f\nif (DragDrop::HasNewFilePaths())\n{\n// \u30d5\u30a1\u30a4\u30eb\u3092\u753b\u50cf\u3068\u3057\u3066\u8aad\u307f\u8fbc\u3081\u305f\nif (const Image image{ DragDrop::GetDroppedFilePaths().front().path })\n{\n// \u30a4\u30e9\u30b9\u30c8\u5185\u306e\u9854\u3092\u691c\u51fa\u3059\u308b\ndetectedFaces = animeFaceDetector.detectObjects(image);\n// \u753b\u9762\u306e\u30b5\u30a4\u30ba\u306b\u5408\u3046\u3088\u3046\u306b\u753b\u50cf\u3092\u62e1\u5927\u7e2e\u5c0f\ntexture = Texture{ image.fitted(Scene::Size()) };\n// \u753b\u50cf\u306e\u62e1\u5927\u7e2e\u5c0f\u7387\nscale = (static_cast&lt;double&gt;(texture.width()) / image.width());\n}\n}\nif (texture)\n{\ntexture.draw(0, 0);\n// \u9854\u306e\u9818\u57df\u306e\u5ea7\u6a19\u3092\u8868\u793a\u306b\u5408\u308f\u305b\u308b\nconst Transformer2D transformer{ Mat3x2::Scale(scale) };\nfor (const auto&amp; detectedFace : detectedFaces)\n{\ndetectedFace.drawFrame((4 / scale), ColorF{ 1.0, 0.0, 0.0, Periodic::Sine0_1(1.5s) });\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/image/#9-\u30de\u30f3\u30c7\u30eb\u30d6\u30ed\u96c6\u5408","title":"9. \u30de\u30f3\u30c7\u30eb\u30d6\u30ed\u96c6\u5408","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nint32 Mandelbrot(double x, double y)\n{\ndouble a = 0.0, b = 0.0;\nfor (int32 n = 0; n &lt; 360; ++n)\n{\nconst double t = (a * a - b * b + x);\nconst double u = (2.0 * a * b + y);\nif (4.0 &lt; (t * t + u * u))\n{\nreturn n;\n}\na = t;\nb = u;\n}\nreturn 0;\n}\nvoid Main()\n{\nconstexpr Size SceneSize{ 640, 480 };\nWindow::Resize(SceneSize);\nVec2 center(0, 0);\ndouble scale = -4.0;\n// \u7d50\u679c\u3092\u4fdd\u5b58\u3059\u308b\u753b\u50cf\nImage image{ SceneSize, Palette::Black };\n// \u63cf\u753b\u7528\u306e\u52d5\u7684\u30c6\u30af\u30b9\u30c1\u30e3\nDynamicTexture texture(image);\nwhile (System::Update())\n{\nconst double wheel = Mouse::Wheel();\nconst bool clicked = (MouseL | MouseR).down();\n// \u6700\u521d\u306e\u30d5\u30ec\u30fc\u30e0\u304b\u3001\u64cd\u4f5c\u304c\u3042\u3063\u305f\u3068\u304d\u3060\u3051\u66f4\u65b0\u3059\u308b\nif (wheel || clicked || (Scene::FrameCount() == 1))\n{\nscale -= wheel;\nconst double s = Pow(1.25, scale);\nconst double d = ((1.0 / s) / SceneSize.x);\nif (clicked)\n{\ncenter += (Cursor::PosF() - SceneSize / 2) * d;\n}\nconst double xb = (center.x - d * (SceneSize.x * 0.5));\nconst double yb = (center.y - d * (SceneSize.y * 0.5));\nfor (int32 y = 0; y &lt; SceneSize.y; ++y)\n{\nconst double yPos = yb + (d * y);\nfor (int32 x = 0; x &lt; SceneSize.x; ++x)\n{\nconst double xPos = xb + (d * x);\nif (const int32 m = Mandelbrot(xPos, yPos))\n{\nimage[y][x] = HSV{ (240 - m), 0.8, 1.0 };\n}\nelse\n{\nimage[y][x] = Palette::Black;\n}\n}\n}\n// \u52d5\u7684\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4e2d\u8eab\u3092 image \u3067\u66f4\u65b0\u3059\u308b\ntexture.fill(image);\n}\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b\ntexture.draw();\n}\n}\n</code></pre>"},{"location":"samples/image/#10-\u4e07\u83ef\u93e1\u30e9\u30f3\u30c0\u30e0\u30a6\u30a9\u30fc\u30af","title":"10. \u4e07\u83ef\u93e1\u30e9\u30f3\u30c0\u30e0\u30a6\u30a9\u30fc\u30af","text":"<p>Siv3D-Sample | \u4e07\u83ef\u93e1\u30e9\u30f3\u30c0\u30e0\u30a6\u30a9\u30fc\u30af </p>"},{"location":"samples/motion-graphics/","title":"\u30e2\u30fc\u30b7\u30e7\u30f3\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u306e\u30b5\u30f3\u30d7\u30eb","text":""},{"location":"samples/motion-graphics/#1-\u7dda","title":"1. \u7dda","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nnamespace MotionGraphics\n{\n/// @brief \u30e2\u30fc\u30b7\u30e7\u30f3\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u3067\u7dda\u3092\u63cf\u304f\n/// @param begin \u7dda\u306e\u59cb\u70b9\n/// @param end \u7dda\u306e\u7d42\u70b9\n/// @param thickness \u7dda\u306e\u592a\u3055\n/// @param t \u7d4c\u904e\u6642\u9593 [0.0, 1.0]\n/// @param interval \u30e2\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u59cb\u524d\u3068\u958b\u59cb\u5f8c\u306e\u4f55\u3082\u8868\u793a\u3057\u306a\u3044\u6642\u9593 [0.0, 1.0)\ninline void DrawLine(const Vec2&amp; begin, const Vec2&amp; end, double thickness, double t, double interval = 0.0)\n{\nconst double s = (0.5 - interval);\nconst Line line = Line{ begin, end }.stretched(thickness * 0.5);\nif (InRange(t, interval, 0.5))\n{\nt = (t - interval) / s;\nconst double e = Min((EaseOutExpo(t) * 1.03), 1.0);\nLine{ line.begin, line.begin.lerp(line.end, e) }\n.draw(LineStyle::Uncapped, thickness);\n}\nelse if (t &lt; (1.0 - interval))\n{\nt = (t - 0.5) / s;\nconst double e = Min((EaseOutExpo(t) * 1.03), 1.0);\nLine{ line.begin.lerp(line.end, e), line.end }\n.draw(LineStyle::Uncapped, thickness);\n}\n}\n}\nvoid Main()\n{\nusing MotionGraphics::DrawLine;\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.4 });\nconstexpr double period = 1.2;\nwhile (System::Update())\n{\n// 0.0 \u2192 1.0 \u3092 period (\u79d2) \u306e\u5468\u671f\u3067\u7e70\u308a\u8fd4\u3059\nconst double t = Periodic::Sawtooth0_1(period);\nDrawLine({ 200, 360 }, { 1080, 360 }, 40, t);\n}\n}\n</code></pre>"},{"location":"samples/motion-graphics/#2-\u30b7\u30f3\u30dc\u30eb","title":"2. \u30b7\u30f3\u30dc\u30eb","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nnamespace MotionGraphics\n{\n/// @brief \u30e2\u30fc\u30b7\u30e7\u30f3\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u3067\u7dda\u3092\u63cf\u304f\n/// @param begin \u7dda\u306e\u59cb\u70b9\n/// @param end \u7dda\u306e\u7d42\u70b9\n/// @param thickness \u7dda\u306e\u592a\u3055\n/// @param t \u7d4c\u904e\u6642\u9593 [0.0, 1.0]\n/// @param interval \u30e2\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u59cb\u524d\u3068\u958b\u59cb\u5f8c\u306e\u4f55\u3082\u8868\u793a\u3057\u306a\u3044\u6642\u9593 [0.0, 1.0)\ninline void DrawLine(const Vec2&amp; begin, const Vec2&amp; end, double thickness, double t, double interval = 0.0)\n{\nconst double s = (0.5 - interval);\nconst Line line = Line{ begin, end }.stretched(thickness * 0.5);\nif (InRange(t, interval, 0.5))\n{\nt = (t - interval) / s;\nconst double e = Min((EaseOutExpo(t) * 1.03), 1.0);\nLine{ line.begin, line.begin.lerp(line.end, e) }\n.draw(LineStyle::Uncapped, thickness);\n}\nelse if (t &lt; (1.0 - interval))\n{\nt = (t - 0.5) / s;\nconst double e = Min((EaseOutExpo(t) * 1.03), 1.0);\nLine{ line.begin.lerp(line.end, e), line.end }\n.draw(LineStyle::Uncapped, thickness);\n}\n}\n}\nvoid Main()\n{\nusing MotionGraphics::DrawLine;\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.4 });\nconstexpr double period = 1.2;\nwhile (System::Update())\n{\nconst double t = Periodic::Sawtooth0_1(period);\nDrawLine({ 440, 160 }, { 840, 160 }, 20, t);\nDrawLine({ 840, 160 }, { 840, 560 }, 20, t);\nDrawLine({ 840, 560 }, { 440, 560 }, 20, t);\nDrawLine({ 440, 560 }, { 440, 160 }, 20, t);\nDrawLine({ 740, 260 }, { 460, 260 }, 20, t);\nDrawLine({ 540, 260 }, { 540, 540 }, 20, t);\nDrawLine({ 540, 460 }, { 820, 460 }, 20, t);\nDrawLine({ 740, 460 }, { 740, 180 }, 20, t);\n}\n}\n</code></pre>"},{"location":"samples/motion-graphics/#3-\u653e\u5c04\u72b6","title":"3. \u653e\u5c04\u72b6","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nnamespace MotionGraphics\n{\n/// @brief \u30e2\u30fc\u30b7\u30e7\u30f3\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u3067\u7dda\u3092\u63cf\u304f\n/// @param begin \u7dda\u306e\u59cb\u70b9\n/// @param end \u7dda\u306e\u7d42\u70b9\n/// @param thickness \u7dda\u306e\u592a\u3055\n/// @param t \u7d4c\u904e\u6642\u9593 [0.0, 1.0]\n/// @param interval \u30e2\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u59cb\u524d\u3068\u958b\u59cb\u5f8c\u306e\u4f55\u3082\u8868\u793a\u3057\u306a\u3044\u6642\u9593 [0.0, 1.0)\ninline void DrawLine(const Vec2&amp; begin, const Vec2&amp; end, double thickness, double t, double interval = 0.0)\n{\nconst double s = (0.5 - interval);\nconst Line line = Line{ begin, end }.stretched(thickness * 0.5);\nif (InRange(t, interval, 0.5))\n{\nt = (t - interval) / s;\nconst double e = Min((EaseOutExpo(t) * 1.03), 1.0);\nLine{ line.begin, line.begin.lerp(line.end, e) }\n.draw(LineStyle::Uncapped, thickness);\n}\nelse if (t &lt; (1.0 - interval))\n{\nt = (t - 0.5) / s;\nconst double e = Min((EaseOutExpo(t) * 1.03), 1.0);\nLine{ line.begin.lerp(line.end, e), line.end }\n.draw(LineStyle::Uncapped, thickness);\n}\n}\n}\nvoid Main()\n{\nusing MotionGraphics::DrawLine;\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.4 });\nconstexpr double period = 1.2;\nwhile (System::Update())\n{\nconst double t = Periodic::Sawtooth0_1(period);\nfor (auto i : step(6))\n{\nDrawLine(\nOffsetCircular{ Scene::Center(), 80, (i * 60_deg) },\nOffsetCircular{ Scene::Center(), 300, (i * 60_deg) }, 12, t);\n}\n}\n}\n</code></pre>"},{"location":"samples/motion-graphics/#4-\u3059\u308c\u9055\u3046\u6c34\u5e73\u7dda","title":"4. \u3059\u308c\u9055\u3046\u6c34\u5e73\u7dda","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nnamespace MotionGraphics\n{\n/// @brief \u30e2\u30fc\u30b7\u30e7\u30f3\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u3067\u7dda\u3092\u63cf\u304f\n/// @param begin \u7dda\u306e\u59cb\u70b9\n/// @param end \u7dda\u306e\u7d42\u70b9\n/// @param thickness \u7dda\u306e\u592a\u3055\n/// @param t \u7d4c\u904e\u6642\u9593 [0.0, 1.0]\n/// @param interval \u30e2\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u59cb\u524d\u3068\u958b\u59cb\u5f8c\u306e\u4f55\u3082\u8868\u793a\u3057\u306a\u3044\u6642\u9593 [0.0, 1.0)\ninline void DrawLine(const Vec2&amp; begin, const Vec2&amp; end, double thickness, double t, double interval = 0.0)\n{\nconst double s = (0.5 - interval);\nconst Line line = Line{ begin, end }.stretched(thickness * 0.5);\nif (InRange(t, interval, 0.5))\n{\nt = (t - interval) / s;\nconst double e = Min((EaseOutExpo(t) * 1.03), 1.0);\nLine{ line.begin, line.begin.lerp(line.end, e) }\n.draw(LineStyle::Uncapped, thickness);\n}\nelse if (t &lt; (1.0 - interval))\n{\nt = (t - 0.5) / s;\nconst double e = Min((EaseOutExpo(t) * 1.03), 1.0);\nLine{ line.begin.lerp(line.end, e), line.end }\n.draw(LineStyle::Uncapped, thickness);\n}\n}\n}\nvoid Main()\n{\nusing MotionGraphics::DrawLine;\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.4 });\nconstexpr double period = 1.2;\nwhile (System::Update())\n{\nconst double t = Periodic::Sawtooth0_1(period);\nfor (auto i : step(8))\n{\nDrawLine({ 0, (50 + i * 100) }, { 1280, (50 + i * 100) }, 10, t);\nDrawLine({ 1280, (50 + i * 100 + 50) }, { 0, (50 + i * 100 + 50) }, 10, t);\n}\n}\n}\n</code></pre>"},{"location":"samples/motion-graphics/#5-\u5965\u3068\u624b\u524d","title":"5. \u5965\u3068\u624b\u524d","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nnamespace MotionGraphics\n{\n/// @brief \u30e2\u30fc\u30b7\u30e7\u30f3\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u3067\u7dda\u3092\u63cf\u304f\n/// @param begin \u7dda\u306e\u59cb\u70b9\n/// @param end \u7dda\u306e\u7d42\u70b9\n/// @param thickness \u7dda\u306e\u592a\u3055\n/// @param t \u7d4c\u904e\u6642\u9593 [0.0, 1.0]\n/// @param interval \u30e2\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u59cb\u524d\u3068\u958b\u59cb\u5f8c\u306e\u4f55\u3082\u8868\u793a\u3057\u306a\u3044\u6642\u9593 [0.0, 1.0)\ninline void DrawLine(const Vec2&amp; begin, const Vec2&amp; end, double thickness, double t, double interval = 0.0)\n{\nconst double s = (0.5 - interval);\nconst Line line = Line{ begin, end }.stretched(thickness * 0.5);\nif (InRange(t, interval, 0.5))\n{\nt = (t - interval) / s;\nconst double e = Min((EaseOutExpo(t) * 1.03), 1.0);\nLine{ line.begin, line.begin.lerp(line.end, e) }\n.draw(LineStyle::Uncapped, thickness);\n}\nelse if (t &lt; (1.0 - interval))\n{\nt = (t - 0.5) / s;\nconst double e = Min((EaseOutExpo(t) * 1.03), 1.0);\nLine{ line.begin.lerp(line.end, e), line.end }\n.draw(LineStyle::Uncapped, thickness);\n}\n}\n}\nvoid Main()\n{\nusing MotionGraphics::DrawLine;\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.4 });\nconstexpr double period = 1.2;\nwhile (System::Update())\n{\nconst double t = Periodic::Sawtooth0_1(period);\nconst double t2 = Periodic::Sawtooth0_1(period, (Scene::Time() + (period * 0.5)));\nfor (auto i : step(12))\n{\nconst double x = (60 + i * 120);\nDrawLine({ x, 360 }, { x, 360 - (i + 1) * 30 }, 10, t);\nDrawLine({ x, 360 }, { x, 360 + (i + 1) * 30 }, 10, t);\nconst double x2 = (90 + i * 120);\nDrawLine({ x2, 360 }, { x2, 360 - (i + 1) * 10 }, 10, t2);\nDrawLine({ x2, 360 }, { x2, 360 + (i + 1) * 10 }, 10, t2);\n}\n}\n}\n</code></pre>"},{"location":"samples/motion-graphics/#6-\u6b63\u65b9\u5f62\u3068\u56de\u8ee2","title":"6. \u6b63\u65b9\u5f62\u3068\u56de\u8ee2","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nnamespace MotionGraphics\n{\n/// @brief \u30e2\u30fc\u30b7\u30e7\u30f3\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u3067\u7dda\u3092\u63cf\u304f\n/// @param begin \u7dda\u306e\u59cb\u70b9\n/// @param end \u7dda\u306e\u7d42\u70b9\n/// @param thickness \u7dda\u306e\u592a\u3055\n/// @param t \u7d4c\u904e\u6642\u9593 [0.0, 1.0]\n/// @param interval \u30e2\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u59cb\u524d\u3068\u958b\u59cb\u5f8c\u306e\u4f55\u3082\u8868\u793a\u3057\u306a\u3044\u6642\u9593 [0.0, 1.0)\ninline void DrawLine(const Vec2&amp; begin, const Vec2&amp; end, double thickness, double t, double interval = 0.0)\n{\nconst double s = (0.5 - interval);\nconst Line line = Line{ begin, end }.stretched(thickness * 0.5);\nif (InRange(t, interval, 0.5))\n{\nt = (t - interval) / s;\nconst double e = Min((EaseOutExpo(t) * 1.03), 1.0);\nLine{ line.begin, line.begin.lerp(line.end, e) }\n.draw(LineStyle::Uncapped, thickness);\n}\nelse if (t &lt; (1.0 - interval))\n{\nt = (t - 0.5) / s;\nconst double e = Min((EaseOutExpo(t) * 1.03), 1.0);\nLine{ line.begin.lerp(line.end, e), line.end }\n.draw(LineStyle::Uncapped, thickness);\n}\n}\n}\nvoid Main()\n{\nusing MotionGraphics::DrawLine;\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.4 });\nconstexpr double period = 1.2;\nwhile (System::Update())\n{\nconst double gt = Scene::Time();\nconst double t = Periodic::Sawtooth0_1(period);\nconst double t2 = Periodic::Sawtooth0_1(period, Scene::Time() + (period * 0.5));\nfor (auto i : step(20))\n{\nconst double a2 = (i * 3_deg + gt * 18_deg);\nfor (auto k : step(4))\n{\nDrawLine(\nOffsetCircular{ Scene::Center(), (i * 60.0), (k * 90_deg + a2) },\nOffsetCircular{ Scene::Center(), (i * 60.0), ((k + (IsEven(i) ? 1 : -1)) * 90_deg + a2) },\n6, (IsEven(i) ? t : t2));\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/physics2d/","title":"2D \u7269\u7406\u6f14\u7b97\u306e\u30b5\u30f3\u30d7\u30eb","text":""},{"location":"samples/physics2d/#1-2d-\u7269\u7406\u6f14\u7b97\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8","title":"1. 2D \u7269\u7406\u6f14\u7b97\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092 1280x720 \u306b\u30ea\u30b5\u30a4\u30ba\u3059\u308b\nWindow::Resize(1280, 720);\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b9\u30c6\u30c3\u30d7\uff08\u79d2\uff09\nconstexpr double StepTime = (1.0 / 200.0);\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\n// \u91cd\u529b\u52a0\u901f\u5ea6 (cm/s^2)\nconstexpr double Gravity = 980;\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\nP2World world{ Gravity };\n// [_] \u5730\u9762 (\u5e45 1200 cm \u306e\u5e8a\uff09\nconst P2Body ground = world.createLine(P2Static, Vec2{ 0, 0 }, Line{ -600, 0, 600, 0 });\n// \u7269\u4f53\nArray&lt;P2Body&gt; bodies;\n// 2D \u30ab\u30e1\u30e9\nCamera2D camera{ Vec2{ 0, -300 } };\nwhile (System::Update())\n{\nfor (accumulatedTime += Scene::DeltaTime(); StepTime &lt;= accumulatedTime; accumulatedTime -= StepTime)\n{\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\u3092\u66f4\u65b0\u3059\u308b\nworld.update(StepTime);\n}\n// \u5730\u9762\u3088\u308a\u4e0b\u306b\u843d\u3061\u305f\u7269\u4f53\u306f\u524a\u9664\u3059\u308b\nbodies.remove_if([](const P2Body&amp; b) { return (200 &lt; b.getPos().y); });\n// 2D \u30ab\u30e1\u30e9\u3092\u66f4\u65b0\u3059\u308b\ncamera.update();\n{\n// 2D \u30ab\u30e1\u30e9\u304b\u3089 Transformer2D \u3092\u4f5c\u6210\u3059\u308b\nconst auto t = camera.createTransformer();\n// \u5de6\u30af\u30ea\u30c3\u30af\u3057\u305f\u3089\nif (MouseL.down())\n{\n// \u30af\u30ea\u30c3\u30af\u3057\u305f\u5834\u6240\u306b\u534a\u5f84 10 cm \u306e\u30dc\u30fc\u30eb\u3092\u4f5c\u6210\u3059\u308b\nbodies &lt;&lt; world.createCircle(P2Dynamic, Cursor::PosF(), 10);\n}\n// \u3059\u3079\u3066\u306e\u30dc\u30c7\u30a3\u3092\u63cf\u753b\u3059\u308b\nfor (const auto&amp; body : bodies)\n{\nbody.draw(HSV{ body.id() * 10.0 });\n}\n// \u5730\u9762\u3092\u63cf\u753b\u3059\u308b\nground.draw(Palette::Skyblue);\n}\n// 2D \u30ab\u30e1\u30e9\u306e\u64cd\u4f5c\u3092\u63cf\u753b\u3059\u308b\ncamera.draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"samples/physics2d/#2-\u9244\u7403\u306b\u3088\u308b\u7834\u58ca","title":"2. \u9244\u7403\u306b\u3088\u308b\u7834\u58ca","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092 1280x720 \u306b\u30ea\u30b5\u30a4\u30ba\u3059\u308b\nWindow::Resize(1280, 720);\n// \u80cc\u666f\u8272\u3092\u8a2d\u5b9a\u3059\u308b\nScene::SetBackground(ColorF{ 0.4, 0.7, 1.0 });\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b9\u30c6\u30c3\u30d7\uff08\u79d2\uff09\nconstexpr double StepTime = (1.0 / 200.0);\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\nP2World world;\n// [_] \u5730\u9762\nconst P2Body ground = world.createLine(P2Static, Vec2{ 0, 0 }, Line{ -1600, 0, 1600, 0 });\n// [\u25a0] \u7bb1 (Sleep \u3055\u305b\u3066\u304a\u304f)\nArray&lt;P2Body&gt; boxes;\n{\nfor (auto y : Range(0, 12))\n{\nfor (auto x : Range(0, 20))\n{\nboxes &lt;&lt; world.createRect(P2Dynamic, Vec2{ x * 50, -50 - y * 100 },\nSizeF{ 50, 100 }, P2Material{ .density = 0.02, .restitution = 0.0, .friction = 1.0 })\n.setAwake(false);\n}\n}\n}\n// \u632f\u308a\u5b50\u306e\u8ef8\u306e\u5ea7\u6a19\nconstexpr Vec2 PivotPos{ 0, -2400 };\n// \u30c1\u30a7\u30fc\u30f3\u3092\u69cb\u6210\u3059\u308b\u30ea\u30f3\u30af 1 \u3064\u306e\u9577\u3055\nconstexpr double LinkLength = 100.0;\n// \u30c1\u30a7\u30fc\u30f3\u3092\u69cb\u6210\u3059\u308b\u30ea\u30f3\u30af\u306e\u6570\nconstexpr int32 LinkCount = 16;\n// \u30c1\u30a7\u30fc\u30f3\u306e\u9577\u3055\nconstexpr double ChainLength = (LinkLength * LinkCount);\n// \u9244\u7403\u306e\u534a\u5f84\nconstexpr double BallRadius = 200;\n// \u9244\u7403\u306e\u521d\u671f\u5ea7\u6a19\nconstexpr Vec2 BallCenter = PivotPos.movedBy(-ChainLength - BallRadius, 0);\n// [\u25cf] \u9244\u7403\nconst P2Body ball = world.createCircle(P2BodyType::Dynamic, BallCenter, BallRadius,\nP2Material{ .density = 0.5, .restitution = 0.0, .friction = 1.0 });\n// [ ] \u632f\u308a\u5b50\u306e\u8ef8\uff08\u5b9f\u4f53\u304c\u306a\u3044\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\uff09\nconst P2Body pivot = world.createPlaceholder(P2BodyType::Static, PivotPos);\n// [-] \u30c1\u30a7\u30fc\u30f3\u3092\u69cb\u6210\u3059\u308b\u30ea\u30f3\u30af\nArray&lt;P2Body&gt; links;\n// \u30ea\u30f3\u30af\u3069\u3046\u3057\u3084\u30ea\u30f3\u30af\u3068\u9244\u7403\u3092\u3064\u306a\u3050\u30b8\u30e7\u30a4\u30f3\u30c8\nArray&lt;P2PivotJoint&gt; joints;\n{\nfor (auto i : step(LinkCount))\n{\n// \u30ea\u30f3\u30af\u306e\u9577\u65b9\u5f62\uff08\u96a3\u63a5\u3059\u308b\u30ea\u30f3\u30af\u3068\u91cd\u306a\u308b\u3088\u3046\u5c11\u3057\u5927\u304d\u3081\u306b\uff09\nconst RectF rect{ Arg::rightCenter = PivotPos.movedBy(i * -LinkLength, 0), LinkLength * 1.2, 20 };\n// categoryBits \u3092 0 \u306b\u3059\u308b\u3053\u3068\u3067\u3001\u7bb1\u306a\u3069\u4ed6\u306e\u7269\u4f53\u3068\u5e72\u6e09\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\nlinks &lt;&lt; world.createRect(P2Dynamic, rect.center(), rect.size,\nP2Material{ .density = 0.1, .restitution = 0.0, .friction = 1.0 }, P2Filter{ .categoryBits = 0 });\nif (i == 0)\n{\n// \u632f\u308a\u5b50\u306e\u8ef8\u3068\u6700\u521d\u306e\u30ea\u30f3\u30af\u3092\u3064\u306a\u3050\u30b8\u30e7\u30a4\u30f3\u30c8\njoints &lt;&lt; world.createPivotJoint(pivot, links.back(), rect.rightCenter().movedBy(-LinkLength * 0.1, 0));\n}\nelse\n{\n// \u65b0\u3057\u3044\u30ea\u30f3\u30af\u3068\u3001\u4e00\u3064\u524d\u306e\u30ea\u30f3\u30af\u3092\u3064\u306a\u3050\u30b8\u30e7\u30a4\u30f3\u30c8\njoints &lt;&lt; world.createPivotJoint(links[links.size() - 2], links.back(), rect.rightCenter().movedBy(-LinkLength * 0.1, 0));\n}\n}\n// \u6700\u5f8c\u306e\u30ea\u30f3\u30af\u3068\u9244\u7403\u3092\u3064\u306a\u3050\u30b8\u30e7\u30a4\u30f3\u30c8\njoints &lt;&lt; world.createPivotJoint(links.back(), ball, PivotPos.movedBy(-ChainLength, 0));\n}\n// [/] \u30b9\u30c8\u30c3\u30d1\u30fc\nP2Body stopper = world.createLine(P2Static, BallCenter.movedBy(0, 200), Line{ -400, 200, 400, 0 });\n// 2D \u30ab\u30e1\u30e9\nCamera2D camera{ Vec2{ 0, -1200 }, 0.25 };\nwhile (System::Update())\n{\nfor (accumulatedTime += Scene::DeltaTime(); StepTime &lt;= accumulatedTime; accumulatedTime -= StepTime)\n{\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\u3092\u66f4\u65b0\u3059\u308b\nworld.update(StepTime);\n// \u843d\u4e0b\u3057\u305f box \u306f\u524a\u9664\u3059\u308b\nboxes.remove_if([](const P2Body&amp; body) { return (2000 &lt; body.getPos().y); });\n}\n// 2D \u30ab\u30e1\u30e9\u3092\u66f4\u65b0\u3059\u308b\ncamera.update();\n{\n// 2D \u30ab\u30e1\u30e9\u304b\u3089 Transformer2D \u3092\u4f5c\u6210\nconst auto t = camera.createTransformer();\n// \u5730\u9762\u3092\u63cf\u304f\nground.draw(ColorF{ 0.0, 0.5, 0.0 });\n// \u30c1\u30a7\u30fc\u30f3\u3092\u63cf\u304f\nfor (const auto&amp; link : links)\n{\nlink.draw(ColorF{ 0.25 });\n}\n// \u7bb1\u3092\u63cf\u304f\nfor (const auto&amp; box : boxes)\n{\nbox.draw(ColorF{ 0.6, 0.4, 0.2 });\n}\n// \u30b9\u30c8\u30c3\u30d1\u30fc\u3092\u63cf\u304f\nstopper.draw(ColorF{ 0.25 });\n// \u9244\u7403\u3092\u63cf\u304f\nball.draw(ColorF{ 0.25 });\n}\n// \u30b9\u30c8\u30c3\u30d1\u30fc\u3092\u7121\u304f\u3059\nif (stopper &amp;&amp; SimpleGUI::Button(U\"Go\", Vec2{ 1100, 20 }))\n{\n// \u30b9\u30c8\u30c3\u30d1\u30fc\u3092\u7834\u68c4\u3059\u308b\nstopper.release();\n}\n// 2D \u30ab\u30e1\u30e9\u306e\u64cd\u4f5c\u3092\u63cf\u753b\ncamera.draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"samples/physics2d/#3-sketch-to-p2body","title":"3. Sketch to P2Body","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092 1280x720 \u306b\u30ea\u30b5\u30a4\u30ba\u3059\u308b\nWindow::Resize(1280, 720);\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b9\u30c6\u30c3\u30d7\uff08\u79d2\uff09\nconstexpr double StepTime = (1.0 / 200.0);\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\nP2World world;\n// [_] \u5730\u9762\nconst P2Body ground = world.createLine(P2Static, Vec2{ 0, 0 }, Line{ -600, 0, 600, 0 });\n// \u7269\u4f53\nArray&lt;P2Body&gt; bodies;\n// 2D \u30ab\u30e1\u30e9\nCamera2D camera{ Vec2{ 0, -300 } };\nLineString points;\nwhile (System::Update())\n{\nfor (accumulatedTime += Scene::DeltaTime(); StepTime &lt;= accumulatedTime; accumulatedTime -= StepTime)\n{\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\u3092\u66f4\u65b0\u3059\u308b\nworld.update(StepTime);\n}\n// \u5730\u9762\u3088\u308a\u4e0b\u306b\u843d\u3061\u305f\u7269\u4f53\u306f\u524a\u9664\nbodies.remove_if([](const P2Body&amp; b) { return (200 &lt; b.getPos().y); });\n// 2D \u30ab\u30e1\u30e9\u3092\u66f4\u65b0\u3059\u308b\ncamera.update();\n{\n// 2D \u30ab\u30e1\u30e9\u304b\u3089 Transformer2D \u3092\u4f5c\u6210\u3059\u308b\nconst auto t = camera.createTransformer();\n// \u5de6\u30af\u30ea\u30c3\u30af\u3082\u3057\u304f\u306f\u30af\u30ea\u30c3\u30af\u3057\u305f\u307e\u307e\u306e\u79fb\u52d5\u304c\u767a\u751f\u3057\u305f\u3089\nif (MouseL.down() ||\n(MouseL.pressed() &amp;&amp; (not Cursor::DeltaF().isZero())))\n{\npoints &lt;&lt; Cursor::PosF();\n}\nelse if (MouseL.up())\n{\npoints = points.simplified(2.0);\nif (const Polygon polygon = Polygon::CorrectOne(points))\n{\nconst Vec2 pos = polygon.centroid();\nbodies &lt;&lt; world.createPolygon(P2Dynamic, pos, polygon.movedBy(-pos));\n}\npoints.clear();\n}\n// \u3059\u3079\u3066\u306e\u30dc\u30c7\u30a3\u3092\u63cf\u753b\u3059\u308b\nfor (const auto&amp; body : bodies)\n{\nbody.draw(HSV{ body.id() * 10.0 });\n}\n// \u5730\u9762\u3092\u63cf\u753b\u3059\u308b\nground.draw(Palette::Skyblue);\npoints.draw(3);\n}\n// 2D \u30ab\u30e1\u30e9\u306e\u64cd\u4f5c\u3092\u63cf\u753b\u3059\u308b\ncamera.draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"samples/physics2d/#4-\u53f0\u8eca","title":"4. \u53f0\u8eca","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092 1280x720 \u306b\u30ea\u30b5\u30a4\u30ba\u3059\u308b\nWindow::Resize(1280, 720);\n// \u80cc\u666f\u8272\u3092\u8a2d\u5b9a\u3059\u308b\nScene::SetBackground(ColorF{ 0.4, 0.7, 1.0 });\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b9\u30c6\u30c3\u30d7\uff08\u79d2\uff09\nconstexpr double StepTime = (1.0 / 200.0);\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\nP2World world;\n// [_] \u5730\u9762\nArray&lt;P2Body&gt; floors;\n{\nfloors &lt;&lt; world.createLine(P2Static, Vec2{ 0, 0 }, Line{ -1600, 0, 1600, 0 });\nfor (auto i : Range(1, 5))\n{\nif (IsEven(i))\n{\nfloors &lt;&lt; world.createLine(P2Static, Vec2{ 0, 0 }, Line{ 0, -i * 200, 1600, -i * 200 - 300 });\n}\nelse\n{\nfloors &lt;&lt; world.createLine(P2Static, Vec2{ 0, 0 }, Line{ -1600,  -i * 200 - 300, 0, -i * 200 });\n}\n}\n}\n// [\ud83d\ude99] \u8eca\nconst P2Body carBody = world.createRect(P2Dynamic, Vec2{ -1500, -1450 }, SizeF{ 200, 40 });\nconst P2Body wheelL = world.createCircle(P2Dynamic, Vec2{ -1550, -1430 }, 30);\nconst P2Body wheelR = world.createCircle(P2Dynamic, Vec2{ -1450, -1430 }, 30);\nconst P2WheelJoint wheelJointL = world.createWheelJoint(carBody, wheelL, wheelL.getPos(), Vec2{ 0, -1 })\n.setLinearStiffness(4.0, 0.7)\n.setLimits(-5, 5).setLimitsEnabled(true);\nconst P2WheelJoint wheelJointR = world.createWheelJoint(carBody, wheelR, wheelR.getPos(), Vec2{ 0, -1 })\n.setLinearStiffness(4.0, 0.7)\n.setLimits(-5, 5).setLimitsEnabled(true);\n// \u30de\u30a6\u30b9\u30b8\u30e7\u30a4\u30f3\u30c8\nP2MouseJoint mouseJoint;\n// 2D \u30ab\u30e1\u30e9\nCamera2D camera{ Vec2{ 0, -1200 }, 0.25 };\nwhile (System::Update())\n{\nfor (accumulatedTime += Scene::DeltaTime(); StepTime &lt;= accumulatedTime; accumulatedTime -= StepTime)\n{\nworld.update(StepTime);\n}\n// 2D \u30ab\u30e1\u30e9\u3092\u66f4\u65b0\u3059\u308b\ncamera.update();\n{\n// 2D \u30ab\u30e1\u30e9\u304b\u3089 Transformer2D \u3092\u4f5c\u6210\u3059\u308b\nconst auto t = camera.createTransformer();\nif (MouseL.down())\n{\nmouseJoint = world.createMouseJoint(carBody, Cursor::PosF())\n.setMaxForce(carBody.getMass() * 5000.0)\n.setLinearStiffness(2.0, 0.7);\n}\nelse if (MouseL.pressed())\n{\nmouseJoint.setTargetPos(Cursor::PosF());\n}\nelse if (MouseL.up())\n{\nmouseJoint.release();\n}\n// \u5730\u9762\u3092\u63cf\u304f\nfor (const auto&amp; floor : floors)\n{\nfloor.draw(ColorF{ 0.0, 0.5, 0.0 });\n}\ncarBody.draw(Palette::Gray);\nwheelL.draw(Palette::Gray).drawWireframe(1, Palette::Yellow);\nwheelR.draw(Palette::Gray).drawWireframe(1, Palette::Yellow);\nmouseJoint.draw();\nwheelJointL.draw();\nwheelJointR.draw();\n}\n// 2D \u30ab\u30e1\u30e9\u306e\u64cd\u4f5c\u3092\u63cf\u753b\u3059\u308b\ncamera.draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"samples/physics2d/#5-\u6ed1\u8eca\u306e\u4ed8\u3044\u305f\u304b\u3054","title":"5. \u6ed1\u8eca\u306e\u4ed8\u3044\u305f\u304b\u3054","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092 1280x720 \u306b\u30ea\u30b5\u30a4\u30ba\u3059\u308b\nWindow::Resize(1280, 720);\n// \u80cc\u666f\u8272\u3092\u8a2d\u5b9a\u3059\u308b\nScene::SetBackground(ColorF{ 0.2 });\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b9\u30c6\u30c3\u30d7\uff08\u79d2\uff09\nconstexpr double StepTime = (1.0 / 200.0);\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\nP2World world;\nconst P2Body rail = world.createLineString(P2Static, Vec2{ 0, -400 }, { Vec2{-400, -40}, Vec2{-400, 0}, Vec2{400, 0}, {Vec2{400, -40}} });\nconst P2Body wheel = world.createCircle(P2Dynamic, Vec2{ 0, -420 }, 20);\nconst P2Body car = world.createCircle(P2Dynamic, Vec2{ 0, -380 }, 10).setFixedRotation(true);\n// \u30db\u30a4\u30fc\u30eb\u30b8\u30e7\u30a4\u30f3\u30c8\nconst P2WheelJoint wheelJoint = world.createWheelJoint(car, wheel, wheel.getPos(), Vec2{ 0, 1 })\n.setLimitsEnabled(true);\nconst P2Body box = world.createPolygon(P2Dynamic, Vec2{ 0, 0 }, LineString{ Vec2{-100, 0}, Vec2{-100, 100}, Vec2{100, 100}, {Vec2{100, 0}} }.calculateBuffer(5), P2Material{ .friction = 0.0 });\n// \u8ddd\u96e2\u30b8\u30e7\u30a4\u30f3\u30c8\nconst P2DistanceJoint distanceJointL = world.createDistanceJoint(car, car.getPos(), box, Vec2{ -100, 0 }, 400);\nconst P2DistanceJoint distanceJointR = world.createDistanceJoint(car, car.getPos(), box, Vec2{ 100, 0 }, 400);\nArray&lt;P2Body&gt; balls;\n// \u30de\u30a6\u30b9\u30b8\u30e7\u30a4\u30f3\u30c8\nP2MouseJoint mouseJoint;\n// 2D \u30ab\u30e1\u30e9\nCamera2D camera{ Vec2{ 0, -150 } };\nPrint &lt;&lt; U\"[space]: make balls\";\nwhile (System::Update())\n{\nfor (accumulatedTime += Scene::DeltaTime(); StepTime &lt;= accumulatedTime; accumulatedTime -= StepTime)\n{\nworld.update(StepTime);\n}\n// \u3053\u307c\u308c\u305f\u30dc\u30fc\u30eb\u3092\u524a\u9664\u3059\u308b\nballs.remove_if([](const P2Body&amp; b) { return (600 &lt; b.getPos().y); });\n// 2D \u30ab\u30e1\u30e9\u3092\u66f4\u65b0\u3059\u308b\ncamera.update();\n{\n// 2D \u30ab\u30e1\u30e9\u304b\u3089 Transformer2D \u3092\u4f5c\u6210\u3059\u308b\nconst auto t = camera.createTransformer();\n// \u30de\u30a6\u30b9\u30b8\u30e7\u30a4\u30f3\u30c8\u306b\u3088\u308b\u5e72\u6e09\nif (MouseL.down())\n{\nmouseJoint = world.createMouseJoint(box, Cursor::PosF())\n.setMaxForce(box.getMass() * 5000.0)\n.setLinearStiffness(2.0, 0.7);\n}\nelse if (MouseL.pressed())\n{\nmouseJoint.setTargetPos(Cursor::PosF());\n}\nelse if (MouseL.up())\n{\nmouseJoint.release();\n}\nif (KeySpace.pressed())\n{\n// \u30dc\u30fc\u30eb\u3092\u8ffd\u52a0\u3059\u308b\nballs &lt;&lt; world.createCircle(P2Dynamic, Cursor::PosF(), Random(2.0, 4.0), P2Material{ .density = 0.001, .restitution = 0.5, .friction = 0.0 });\n}\nrail.draw(Palette::Gray);\nwheel.draw(Palette::Gray).drawWireframe(1, Palette::Yellow);\ncar.draw(ColorF{ 0.3, 0.8, 0.5 });\nbox.draw(ColorF{ 0.3, 0.8, 0.5 });\nfor (const auto&amp; ball : balls)\n{\nball.draw(Palette::Skyblue);\n}\ndistanceJointL.draw();\ndistanceJointR.draw();\nmouseJoint.draw();\n}\n// 2D \u30ab\u30e1\u30e9\u306e\u64cd\u4f5c\u3092\u63cf\u753b\u3059\u308b\ncamera.draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"samples/physics2d/#6-text-to-p2body","title":"6. Text to P2Body","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.94, 0.91, 0.86 });\nconst Font font{ 100, Typeface::Bold };\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b9\u30c6\u30c3\u30d7\uff08\u79d2\uff09\nconstexpr double StepTime = (1.0 / 200.0);\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\n// \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\nP2World world;\n// \u5e8a\nconst P2Body line = world.createLine(P2Static, Vec2{ 0, 0 }, Line{ -1600, 0, 1600, 0 }, OneSided::Yes, P2Material{ 1.0, 0.1, 1.0 });\n// \u6587\u5b57\u306e\u30d1\u30fc\u30c4\nArray&lt;P2Body&gt; bodies;\nString text;\nint32 generation = 0;\nHashTable&lt;P2BodyID, int32&gt; table;\n// 2D \u30ab\u30e1\u30e9\nCamera2D camera{ Vec2{ 0, -500 }, 0.38, Camera2DParameters::MouseOnly() };\nconstexpr Vec2 textPos{ -400, -500 };\nwhile (System::Update())\n{\nfor (accumulatedTime += Scene::DeltaTime(); StepTime &lt;= accumulatedTime; accumulatedTime -= StepTime)\n{\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\u3092\u66f4\u65b0\u3059\u308b\nworld.update(StepTime);\n}\n// \u30c6\u30ad\u30b9\u30c8\u306e\u5165\u529b\u3092\u884c\u3046\nTextInput::UpdateText(text);\n// 2D \u30ab\u30e1\u30e9\u3092\u66f4\u65b0\u3059\u308b\ncamera.update();\n{\n// 2D \u30ab\u30e1\u30e9\u3092\u9069\u7528\u3059\u308b Transformer2D \u3092\u4f5c\u6210\u3059\u308b\nconst auto t = camera.createTransformer();\n// \u4e16\u4ee3\u306b\u5fdc\u3058\u305f\u8272\u3067 Body \u3092\u63cf\u753b\u3059\u308b\nfor (const auto&amp; body : bodies)\n{\nbody.draw(HSV{ (table[body.id()] * 45 + 30), 0.8, 0.8 });\n}\n// \u5e8a\u3092\u63cf\u753b\u3059\u308b\nline.draw(Palette::Green);\nconst String currentText = (text + TextInput::GetEditingText());\n// \u5165\u529b\u6587\u5b57\u3092\u63cf\u753b\u3059\u308b\n{\nconst Transformer2D scaling{ Mat3x2::Scale(2.5) };\nfont(currentText).draw(textPos, ColorF{ 0.5 });\n}\n// \u6539\u884c\u6587\u5b57\u304c\u5165\u529b\u3055\u308c\u305f\u3089\u30c6\u30ad\u30b9\u30c8\u3092 P2Body \u306b\u3059\u308b\nif (currentText.includes(U'\\n'))\n{\n// \u5165\u529b\u6587\u5b57\u3092 PolygonGlyph \u5316\u3059\u308b\nconst Array&lt;PolygonGlyph&gt; glyphs = font.renderPolygons(currentText.removed(U'\\n'));\n// P2Body \u306b\u3059\u308b Polygon \u3092\u5f97\u308b\nArray&lt;Polygon&gt; polygons;\n{\nVec2 penPos{ textPos };\nfor (const auto&amp; glyph : glyphs)\n{\nfor (const auto&amp; polygon : glyph.polygons)\n{\npolygons &lt;&lt; polygon\n.movedBy(penPos + glyph.getOffset())\n.scaled(2.5)\n.simplified(2.0);\n}\npenPos.x += glyph.xAdvance;\n}\n}\nfor (const auto&amp; polygon : polygons)\n{\nbodies &lt;&lt; world.createPolygon(P2Dynamic, Vec2{ 0, 0 }, polygon, P2Material{ 1, 0.0, 0.4 });\n// \u73fe\u5728\u306e\u4e16\u4ee3\u3092\u4fdd\u5b58\u3059\u308b\ntable[bodies.back().id()] = generation;\n}\ntext.clear();\n// \u4e16\u4ee3\u3092\u9032\u3081\u308b\n++generation;\n}\n// 2D \u30ab\u30e1\u30e9\u3001\u53f3\u30af\u30ea\u30c3\u30af\u6642\u306e UI \u3092\u8868\u793a\u3059\u308b\ncamera.draw(Palette::Orange);\n}\n// \u6d88\u53bb\u30dc\u30bf\u30f3\nif (SimpleGUI::Button(U\"Clear\", Vec2{ 1100, 40 }))\n{\nbodies.clear();\n}\n}\n}\n</code></pre>"},{"location":"samples/physics2d/#7-\u529b\u306b\u3088\u308b\u7269\u4f53\u306e\u79fb\u52d5","title":"7. \u529b\u306b\u3088\u308b\u7269\u4f53\u306e\u79fb\u52d5","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092 1280x720 \u306b\u30ea\u30b5\u30a4\u30ba\nWindow::Resize(1280, 720);\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b9\u30c6\u30c3\u30d7\uff08\u79d2\uff09\nconstexpr double StepTime = (1.0 / 200.0);\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\n// \u91cd\u529b\u52a0\u901f\u5ea6 (cm/s^2)\nconstexpr double Gravity = 980;\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\nP2World world{ Gravity };\n// [_] \u5730\u9762 (\u5e45 1200 cm \u306e\u5e8a\uff09\nconst P2Body ground = world.createLine(P2Static, Vec2{ 0, 0 }, Line{ -600, 0, 600, 0 });\n// \u7269\u4f53\nP2Body box = world.createRect(P2Dynamic, Vec2{ -400, -100 }, SizeF{ 50, 100 })\n.setFixedRotation(true); // \u56de\u8ee2\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\n// 2D \u30ab\u30e1\u30e9\nCamera2D camera{ Vec2{ 0, -300 }, 1.0, CameraControl::Mouse };\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; box.getVelocity();\nfor (accumulatedTime += Scene::DeltaTime(); StepTime &lt;= accumulatedTime; accumulatedTime -= StepTime)\n{\n// [\u2190] \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\nif (KeyLeft.pressed())\n{\n// \u30dc\u30c7\u30a3\u306b\u53f3\u5411\u304d\u306e\u529b\u3092\u52a0\u3048\u308b\nbox.applyForce(Vec2{ -60000, 0 } * StepTime);\n}\n// [\u2192] \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\nif (KeyRight.pressed())\n{\n// \u30dc\u30c7\u30a3\u306b\u53f3\u5411\u304d\u306e\u529b\u3092\u52a0\u3048\u308b\nbox.applyForce(Vec2{ 60000, 0 } * StepTime);\n}\n// [\u2191] \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\nif (KeyUp.down())\n{\n// \u30dc\u30c7\u30a3\u306b\u4e0a\u5411\u304d\u306e\u529b\u3092\u52a0\u3048\u308b\nbox.applyLinearImpulse(Vec2{ 0, -80 });\n}\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\u3092\u66f4\u65b0\u3059\u308b\nworld.update(StepTime);\n}\n// 2D \u30ab\u30e1\u30e9\u3092\u66f4\u65b0\u3059\u308b\ncamera.update();\n{\n// 2D \u30ab\u30e1\u30e9\u304b\u3089 Transformer2D \u3092\u4f5c\u6210\u3059\u308b\nconst auto t = camera.createTransformer();\n// \u3059\u3079\u3066\u306e\u30dc\u30c7\u30a3\u3092\u63cf\u753b\u3059\u308b\nbox.draw();\n// \u5730\u9762\u3092\u63cf\u753b\u3059\u308b\nground.draw(Palette::Skyblue);\n}\n// 2D \u30ab\u30e1\u30e9\u306e\u64cd\u4f5c\u3092\u63cf\u753b\u3059\u308b\ncamera.draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"samples/physics2d/#8-\u885d\u7a81\u306e\u691c\u51fa","title":"8. \u885d\u7a81\u306e\u691c\u51fa","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092 1280x720 \u306b\u30ea\u30b5\u30a4\u30ba\u3059\u308b\nWindow::Resize(1280, 720);\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b9\u30c6\u30c3\u30d7\uff08\u79d2\uff09\nconstexpr double StepTime = (1.0 / 200.0);\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\n// \u91cd\u529b\u52a0\u901f\u5ea6 (cm/s^2)\nconstexpr double Gravity = 980;\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\nP2World world{ Gravity };\n// [_] \u5730\u9762 (\u5e45 1200 cm \u306e\u5e8a\uff09\nconst P2Body ground = world.createLine(P2Static, Vec2{ 0, 0 }, Line{ -600, 0, 600, 0 });\n// \u7269\u4f53\nArray&lt;P2Body&gt; bodies;\n// 2D \u30ab\u30e1\u30e9\nCamera2D camera{ Vec2{ 0, -300 } };\nwhile (System::Update())\n{\nfor (accumulatedTime += Scene::DeltaTime(); StepTime &lt;= accumulatedTime; accumulatedTime -= StepTime)\n{\nClearPrint();\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\u3092\u66f4\u65b0\u3059\u308b\nworld.update(StepTime);\n// \u63a5\u89e6\u304c\u767a\u751f\u3057\u3066\u3044\u308b\u30dc\u30c7\u30a3\u306e ID \u3092\u8868\u793a\u3059\u308b\nfor (auto&amp;&amp; [pair, collision] : world.getCollisions())\n{\nPrint &lt;&lt; pair.a &lt;&lt; U\" vs \" &lt;&lt; pair.b;\n}\n}\n// \u5730\u9762\u3088\u308a\u4e0b\u306b\u843d\u3061\u305f\u7269\u4f53\u306f\u524a\u9664\u3059\u308b\nbodies.remove_if([](const P2Body&amp; b) { return (200 &lt; b.getPos().y); });\n// 2D \u30ab\u30e1\u30e9\u3092\u66f4\u65b0\u3059\u308b\ncamera.update();\n{\n// 2D \u30ab\u30e1\u30e9\u304b\u3089 Transformer2D \u3092\u4f5c\u6210\u3059\u308b\nconst auto t = camera.createTransformer();\n// \u5de6\u30af\u30ea\u30c3\u30af\u3057\u305f\u3089\nif (MouseL.down())\n{\n// \u30af\u30ea\u30c3\u30af\u3057\u305f\u5834\u6240\u306b\u534a\u5f84 10 cm \u306e\u30dc\u30fc\u30eb\u3092\u4f5c\u6210\u3059\u308b\nbodies &lt;&lt; world.createCircle(P2Dynamic, Cursor::PosF(), 10);\n}\n// \u3059\u3079\u3066\u306e\u30dc\u30c7\u30a3\u3092\u63cf\u753b\u3059\u308b\nfor (const auto&amp; body : bodies)\n{\nbody.draw(HSV{ body.id() * 10.0 });\n}\n// \u5730\u9762\u3092\u63cf\u753b\u3059\u308b\nground.draw(Palette::Skyblue);\n}\n// 2D \u30ab\u30e1\u30e9\u306e\u64cd\u4f5c\u3092\u63cf\u753b\u3059\u308b\ncamera.draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"samples/physics2d/#9-\u885d\u6483\u306e\u691c\u51fa","title":"9. \u885d\u6483\u306e\u691c\u51fa","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// \u885d\u7a81\u30a8\u30d5\u30a7\u30af\u30c8\nstruct DamageEffect : IEffect\n{\nVec2 m_center;\ndouble m_scale;\nTexture m_texture;\nDamageEffect(const Vec2&amp; center, double scale, const Texture&amp; texture)\n: m_center{ center }\n, m_scale{ scale }\n, m_texture{ texture } {}\nbool update(double t) override\n{\nconst double scale = (m_scale * (t - 0.5));\nm_texture.scaled(scale).drawAt(m_center);\nreturn (t &lt; 0.5);\n}\n};\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.94, 0.91, 0.86 });\nconst Font font{ 80, Typeface::Bold };\nconst Font damageFont{ FontMethod::MSDF, 48, Typeface::Heavy };\nconst Texture face0{ U\"\ud83d\ude2e\u200d\ud83d\udca8\"_emoji };\nconst Texture face1{ U\"\ud83d\ude41\"_emoji };\nconst Texture face2{ U\"\ud83d\ude23\"_emoji };\nconst Texture collisionTexture{ U\"\ud83d\udca5\"_emoji };\nEffect effect;\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b9\u30c6\u30c3\u30d7\uff08\u79d2\uff09\nconstexpr double StepTime = (1.0 / 200.0);\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\n// \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\nP2World world;\n// \u9854\u306e\u30dc\u30c7\u30a3\nconst P2Body faceBody = world.createCircle(P2Static, Vec2{ 0, 0 }, 110, P2Material{ 1.0, 0.1, 1.0 });\n// \u6587\u5b57\u306e\u30d1\u30fc\u30c4\nArray&lt;P2Body&gt; bodies;\nString text;\n// \u30dc\u30c7\u30a3\u306e ID \u3068\u4e0e\u3048\u305f\u30c0\u30e1\u30fc\u30b8\u91cf\u306e\u30c6\u30fc\u30d6\u30eb\nHashTable&lt;P2BodyID, int32&gt; table;\n// 2D \u30ab\u30e1\u30e9\nCamera2D camera{ Vec2{ 0, -180 }, 1.0, Camera2DParameters::NoControl() };\nconstexpr Vec2 TextPos{ -120, -480 };\n// \u75db\u307f\u306e\u91cf\ndouble pain = 0.0;\ndouble painVelocity = 0.0;\nwhile (System::Update())\n{\nfor (accumulatedTime += Scene::DeltaTime(); StepTime &lt;= accumulatedTime; accumulatedTime -= StepTime)\n{\n// 2D \u7269\u7406\u6f14\u7b97\u306e\u30ef\u30fc\u30eb\u30c9\u3092\u66f4\u65b0\u3059\u308b\nworld.update(StepTime);\n// \u63a5\u89e6\u304c\u767a\u751f\u3057\u3066\u3044\u308b\u30dc\u30c7\u30a3\nfor (auto&amp;&amp; [pair, collision] : world.getCollisions())\n{\n// \u5404\u63a5\u89e6\u306b\u3064\u3044\u3066\nfor (const auto&amp; contact : collision)\n{\n// \u30c0\u30e1\u30fc\u30b8\u91cf\nconst int32 damage = (contact.normalImpulse / 4.0);\n// \u30c0\u30e1\u30fc\u30b8\u91cf\u304c 1.0 \u4ee5\u4e0a\u306a\u3089\nif (1.0 &lt; damage)\n{\n// \u63a5\u89e6\u76f8\u624b\u304c\u9854\u306e\u30dc\u30c7\u30a3\u306a\u3089\nif (pair.a == faceBody.id())\n{\ntable[pair.b] += damage;\n}\nelse if (pair.b == faceBody.id())\n{\ntable[pair.a] += damage;\n}\n// \u75db\u307f\u306e\u91cf\u3092\u5897\u3084\u3059\npain += damage;\n// \u885d\u7a81\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\neffect.add&lt;DamageEffect&gt;(contact.point, (damage / 10.0), collisionTexture);\n}\n}\n}\n}\n// \u4e0b\u306b\u843d\u3061\u305f\u7269\u4f53\u306f\u524a\u9664\u3059\u308b\nbodies.remove_if([&amp;](const P2Body&amp; b)\n{\nif (200 &lt; b.getPos().y)\n{\ntable.erase(b.id());\nreturn true;\n}\nreturn false;\n});\n// \u75db\u307f\u3092\u6e1b\u8870\u3055\u305b\u308b\npain = Math::SmoothDamp(pain, 0.0, painVelocity, 0.5);\n// \u30c6\u30ad\u30b9\u30c8\u306e\u5165\u529b\u3092\u884c\u3046\nTextInput::UpdateText(text);\n// 2D \u30ab\u30e1\u30e9\u3092\u66f4\u65b0\u3059\u308b\ncamera.update();\n{\nScene::Rect().draw(Arg::top(0.3, 0.6, 1.0), Arg::bottom(0.6, 0.9, 1.0));\n// 2D \u30ab\u30e1\u30e9\u3092\u9069\u7528\u3059\u308b Transformer2D \u3092\u4f5c\u6210\u3059\u308b\nconst auto t = camera.createTransformer();\n// \u75db\u307f\u306e\u91cf\u306b\u5fdc\u3058\u3066\u9854\u306e\u8868\u60c5\u3092\u5909\u3048\u308b\n((pain &lt; 10.0) ? face0 : (pain &lt; 100.0) ? face1 : face2)\n.scaled(2.0)\n.drawAt(0, 0);\n// \u843d\u4e0b\u3059\u308b\u6587\u5b57\u3092\u63cf\u753b\u3059\u308b\nfor (const auto&amp; body : bodies)\n{\nbody.draw(ColorF{ 0.11 });\n}\n// \u6587\u5b57\u306e\u7d2f\u7a4d\u30c0\u30e1\u30fc\u30b8\u3092\u63cf\u753b\u3059\u308b\nfor (const auto&amp; body : bodies)\n{\ndamageFont(table[body.id()]).drawAt(28, body.getPos().movedBy(0, -50), ColorF{ 0.1, 0.5, 0.2 });\n}\n// \u885d\u7a81\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u63cf\u753b\u3059\u308b\neffect.update();\n// \u5165\u529b\u6587\u5b57\u3092\u63cf\u753b\u3059\u308b\nconst String currentText = (text + TextInput::GetEditingText());\nfont(currentText).draw(TextPos, ColorF{ 0.11 });\n// \u6539\u884c\u6587\u5b57\u304c\u5165\u529b\u3055\u308c\u305f\u3089\u30c6\u30ad\u30b9\u30c8\u3092 P2Body \u306b\u3059\u308b\nif (currentText.includes(U'\\n'))\n{\n// \u5165\u529b\u6587\u5b57\u3092 PolygonGlyph \u5316\u3059\u308b\nconst Array&lt;PolygonGlyph&gt; glyphs = font.renderPolygons(currentText.removed(U'\\n'));\n// P2Body \u306b\u3059\u308b Polygon \u3092\u5f97\u308b\nArray&lt;Polygon&gt; polygons;\n{\nVec2 penPos{ TextPos };\nfor (const auto&amp; glyph : glyphs)\n{\nfor (const auto&amp; polygon : glyph.polygons)\n{\npolygons &lt;&lt; polygon\n.movedBy(penPos + glyph.getOffset());\n}\npenPos.x += glyph.xAdvance;\n}\n}\nfor (auto&amp; polygon : polygons)\n{\nconst Vec2 offset = polygon.boundingRect().center();\npolygon.moveBy(-offset);\nbodies &lt;&lt; world.createPolygon(P2Dynamic, offset, polygon, P2Material{ 1, 0.0, 0.4 });\n// \u305d\u306e\u6587\u5b57\u304c\u4e0e\u3048\u305f\u30c0\u30e1\u30fc\u30b8\u306e\u7d2f\u7a4d\u5024\ntable[bodies.back().id()] = 0;\n}\ntext.clear();\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/physics2d/#10-\u898b\u4e0b\u308d\u3057\u578b-2d-\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0","title":"10. \u898b\u4e0b\u308d\u3057\u578b 2D \u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0","text":"<p>2D \u7269\u7406\u6f14\u7b97\u6a5f\u80fd\u3092\u4f7f\u3063\u305f\u3001\u898b\u4e0b\u308d\u3057\u578b 2D \u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30b2\u30fc\u30e0\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002</p> <p></p> <p>Siv3D-Sample | \u898b\u4e0b\u308d\u3057\u578b 2D \u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0 </p>"},{"location":"samples/physics2d/#11-2d-\u7269\u7406\u6f14\u7b97\u306b\u3088\u308b\u7834\u58ca\u30b2\u30fc\u30e0","title":"11. 2D \u7269\u7406\u6f14\u7b97\u306b\u3088\u308b\u7834\u58ca\u30b2\u30fc\u30e0","text":"<p>\u30b2\u30fc\u30e0\u5178\u578b | 2D \u7269\u7406\u6f14\u7b97\u306b\u3088\u308b\u7834\u58ca\u30b2\u30fc\u30e0 </p>"},{"location":"samples/shapes/","title":"\u56f3\u5f62\u306e\u30b5\u30f3\u30d7\u30eb","text":""},{"location":"samples/shapes/#1-\u5e02\u677e\u6a21\u69d8\u306e\u80cc\u666f","title":"1. \u5e02\u677e\u6a21\u69d8\u306e\u80cc\u666f","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8 });\nconstexpr int32 CellSize = 20;\nwhile (System::Update())\n{\nfor (int32 y = 0; y &lt; (Scene::Height() / CellSize); ++y)\n{\nfor (int32 x = 0; x &lt; (Scene::Width() / CellSize); ++x)\n{\nif (IsEven(y + x))\n{\nRect{ (x * CellSize), (y * CellSize), CellSize }.draw(ColorF{ 0.75 });\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/shapes/#2-\u4e0d\u898f\u5247\u306b\u898b\u3048\u308b\u9577\u65b9\u5f62\u30b0\u30ea\u30c3\u30c9","title":"2. \u4e0d\u898f\u5247\u306b\u898b\u3048\u308b\u9577\u65b9\u5f62\u30b0\u30ea\u30c3\u30c9","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n//\n// \u53c2\u8003: OffGrid by Chris Cox\n// https://gitlab.com/chriscox/offgrid\n//\nuint64 g_seed = RandomUint64();\nVec2 PointToRandomVector(int32 x, int32 y)\n{\nPRNG::SplitMix64 rng{ (Point{ x, y }.hash() ^ g_seed) };\nreturn RandomVec2(Circle{ 1 }, rng);\n}\nVec2 GetXY(int32 x, int32 y, double t, const Vec2&amp; offset, const double cellSize)\n{\nconst Vec2 pos{ offset + (cellSize * Vec2{ x, y }) };\nreturn (pos + (PointToRandomVector(x, y) * t * (cellSize * 0.5)));\n}\nColorF GetColor(int32 x, int32 y)\n{\nPRNG::SplitMix64 rng{ (Point{ x, y }.hash() ^ g_seed) };\nreturn HSV{ Random(60.0, 140.0, rng), Random(0.5, 0.9, rng), Random(0.4, 1.0, rng) };\n}\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 1.0 });\nconstexpr Size CellCount{ 10, 6 };\nconstexpr Vec2 Offset{ 60, 80 };\nconstexpr double CellSize = 90.0;\nconstexpr ColorF LineColor{ 0.15 };\nconstexpr double LineThickness = 4.0;\nconstexpr double LineLengthHalf = (CellSize * 0.4);\ndouble t = 0.0;\nbool showLine = true;\nwhile (System::Update())\n{\nSimpleGUI::Slider(t, Vec2{ 1030, 60 }, 160);\nSimpleGUI::CheckBox(showLine, U\"Show line\", Vec2{ 1030, 100 });\nif (SimpleGUI::Button(U\"New seed\", Vec2{ 1030, 140 }))\n{\ng_seed = RandomUint64();\n}\nfor (int32 y = 0; y &lt; CellCount.y; ++y)\n{\nfor (int32 x = 0; x &lt; CellCount.x; ++x)\n{\nconst Vec2 p0 = GetXY(x, y, t, Offset, CellSize);\nconst Vec2 p1 = GetXY(x + 1, y, t, Offset, CellSize);\nconst Vec2 p2 = GetXY(x, y + 1, t, Offset, CellSize);\nconst Vec2 p3 = GetXY(x + 1, y + 1, t, Offset, CellSize);\nconst ColorF color = GetColor(x, y);\nif (IsEven(x + y))\n{\nconst double top = p0.y;\nconst double bottom = p3.y;\nconst double left = p2.x;\nconst double right = p1.x;\nRectF{ left, top, (right - left), (bottom - top) }.stretched(-1).draw(color);\n}\nelse\n{\nconst double top = p1.y;\nconst double bottom = p2.y;\nconst double left = p0.x;\nconst double right = p3.x;\nRectF{ left, top, (right - left), (bottom - top) }.stretched(-1).draw(color);\n}\n}\n}\nif (showLine)\n{\nfor (int32 y = 0; y &lt;= CellCount.y; ++y)\n{\nfor (int32 x = 0; x &lt;= CellCount.x; ++x)\n{\nconst Vec2 p0 = GetXY(x, y, t, Offset, CellSize);\nif (IsEven(x + y))\n{\nLine{ p0.movedBy(-LineLengthHalf, 0), p0.movedBy(LineLengthHalf, 0) }\n.draw(LineStyle::RoundCap, LineThickness, LineColor);\n}\nelse\n{\nLine{ p0.movedBy(0, -LineLengthHalf), p0.movedBy(0, LineLengthHalf) }\n.draw(LineStyle::RoundCap, LineThickness, LineColor);\n}\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/shapes/#3-\u30dc\u30ed\u30ce\u30a4\u56f3","title":"3. \u30dc\u30ed\u30ce\u30a4\u56f3","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconstexpr Size SceneSize{ 1280, 720 };\nconstexpr Rect SceneRect{ SceneSize };\nWindow::Resize(SceneSize);\nSubdivision2D subdiv{ SceneRect };\n// \u30b7\u30fc\u30f3\u306e\u9577\u65b9\u5f62\u5185\u306b\u307b\u3069\u3088\u3044\u9593\u9694\u3067\u70b9\u3092\u751f\u6210\u3059\u308b\nfor (const PoissonDisk2D pd{ SceneSize, 40 };\nconst auto&amp; point : pd.getPoints())\n{\nif (SceneRect.contains(point))\n{\nsubdiv.addPoint(point);\n}\n}\nconst Array&lt;Polygon&gt; facetPolygons = subdiv\n.calculateVoronoiFacets() // \u30dc\u30ed\u30ce\u30a4\u56f3\u3092\u8a08\u7b97\u3059\u308b\n.map([SceneRect](const VoronoiFacet&amp; f) // \u30b7\u30fc\u30f3\u306e\u9577\u65b9\u5f62\u5185\u306b\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u3059\u308b\n{\nreturn Geometry2D::And(Polygon{ f.points }, SceneRect).front();\n});\nwhile (System::Update())\n{\nfor (auto&amp;&amp; [i, facetPolygon] : Indexed(facetPolygons))\n{\nfacetPolygon\n.draw(HSV{ (i * 25.0), 0.5, 0.9 })\n.drawFrame(3, ColorF{ 1.0 });\n}\n}\n}\n</code></pre>"},{"location":"samples/shapes/#4-\u30dc\u30ed\u30ce\u30a4\u56f3\u30c9\u30ed\u30cd\u30fc\u56f3\u306e\u52d5\u7684\u306a\u751f\u6210","title":"4. \u30dc\u30ed\u30ce\u30a4\u56f3\u30fb\u30c9\u30ed\u30cd\u30fc\u56f3\u306e\u52d5\u7684\u306a\u751f\u6210","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconstexpr Size SceneSize{ 1280, 720 };\nconstexpr Rect SceneRect{ SceneSize };\nconstexpr Rect AreaRect = SceneRect.stretched(-50);\nWindow::Resize(SceneSize);\nScene::SetBackground(ColorF{ 0.99 });\nSubdivision2D subdiv{ AreaRect };\n// \u30c9\u30ed\u30cd\u30fc\u4e09\u89d2\u5f62\u5206\u5272\u306e\u4e09\u89d2\u5f62\u30ea\u30b9\u30c8\nArray&lt;Triangle&gt; triangles;\n// \u30dc\u30ed\u30ce\u30a4\u56f3\u306e\u60c5\u5831\u306e\u30ea\u30b9\u30c8\nArray&lt;VoronoiFacet&gt; facets;\n// facets \u3092\u9577\u65b9\u5f62\u3067\u30af\u30ea\u30c3\u30d7\u3057 Polygon \u306b\u5909\u63db\u3057\u305f\u30ea\u30b9\u30c8\nArray&lt;Polygon&gt; facetPolygons;\nwhile (System::Update())\n{\nconst Vec2 pos = Cursor::PosF();\n// \u9577\u65b9\u5f62\u4e0a\u3092\u30af\u30ea\u30c3\u30af\u3057\u305f\u3089\nif (AreaRect.leftClicked())\n{\n// \u70b9\u3092\u8ffd\u52a0\nsubdiv.addPoint(pos);\n// \u30c9\u30ed\u30cd\u30fc\u4e09\u89d2\u5f62\u5206\u5272\u306e\u8a08\u7b97\nsubdiv.calculateTriangles(triangles);\n// \u30dc\u30ed\u30ce\u30a4\u56f3\u3092\u8a08\u7b97\u3059\u308b\nsubdiv.calculateVoronoiFacets(facets);\n// \u30a8\u30ea\u30a2\u306e\u7bc4\u56f2\u5185\u306b\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u3059\u308b\nfacetPolygons = facets.map([AreaRect](const VoronoiFacet&amp; f)\n{\nreturn Geometry2D::And(Polygon{ f.points }, AreaRect).front();\n});\n}\nAreaRect.draw(ColorF{ 0.75 });\nfor (auto&amp;&amp; [i, facetPolygon] : Indexed(facetPolygons))\n{\nfacetPolygon.draw(HSV{ (i * 25.0), 0.65, 0.8 }).drawFrame(3, ColorF{ 0.25 });\n}\nfor (const auto&amp; triangle : triangles)\n{\ntriangle.drawFrame(2.5, ColorF{ 0.9 });\n}\nfor (const auto&amp; facet : facets)\n{\nCircle{ facet.center, 6 }.drawFrame(5).draw(ColorF{ 0.25 });\n}\n// \u73fe\u5728\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304b\u3089\u6700\u77ed\u8ddd\u96e2\u306b\u3042\u308b\u70b9\u3092\u63a2\u3059\nif (const auto nearestVertexID = subdiv.findNearest(pos))\n{\nconst Vec2 nearestVertex = subdiv.getVertex(nearestVertexID.value());\nLine{ pos, nearestVertex }.draw(LineStyle::RoundDot, 6, ColorF{ 0.75 });\nCircle{ nearestVertex, 16 }.drawFrame(3.5);\n}\n}\n}\n</code></pre>"},{"location":"samples/shapes/#5-\u56f3\u5f62\u306e\u8f2a\u90ed\u306e\u4e00\u90e8\u3092-linestring-\u3068\u3057\u3066\u53d6\u5f97\u3059\u308b","title":"5. \u56f3\u5f62\u306e\u8f2a\u90ed\u306e\u4e00\u90e8\u3092 LineString \u3068\u3057\u3066\u53d6\u5f97\u3059\u308b","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.15 });\nconst Polygon polygon0 = Shape2D::Plus(180, 100, Scene::Center().movedBy(-350, -120));\nconst Polygon polygon1 = Shape2D::Heart(180, Scene::Center().movedBy(0, 120));\nconst Polygon polygon2 = Shape2D::NStar(8, 180, 140, Scene::Center().movedBy(350, -120));\nwhile (System::Update())\n{\nconst double t = (Scene::Time() * 720);\npolygon0.draw(ColorF{ 0.4 });\npolygon0.outline(t, 200).draw(LineStyle::RoundCap, 8, ColorF{ 0, 1, 0.5 });\npolygon1.draw(ColorF{ 0.4 });\npolygon1.outline(t, 200).draw(LineStyle::RoundCap, 8, ColorF{ 0, 1, 0.5 });\npolygon2.draw(ColorF{ 0.4 });\npolygon2.outline(t, 200).draw(LineStyle::RoundCap, 8, ColorF{ 0, 1, 0.5 });\n}\n}\n</code></pre>"},{"location":"samples/shapes/#6-gpu-\u3067\u306e\u9802\u70b9\u751f\u6210","title":"6. GPU \u3067\u306e\u9802\u70b9\u751f\u6210","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst VertexShader vs\n= HLSL{ U\"example/shader/hlsl/soft_shape.hlsl\" }\n| GLSL{ U\"example/shader/glsl/soft_shape.vert\", { { U\"VSConstants2D\", 0 }, { U\"SoftShape\", 1 } }};\nif (not vs)\n{\nthrow Error{ U\"Failed to load a shader file\" };\n}\nConstantBuffer&lt;float&gt; cb;\nwhile (System::Update())\n{\ncb = static_cast&lt;float&gt;(Scene::Time());\nGraphics2D::SetVSConstantBuffer(1, cb);\n{\nconst ScopedCustomShader2D shader{ vs };\n// \u9802\u70b9\u60c5\u5831\u306e\u7121\u3044\u4e09\u89d2\u5f62\u3092 360 \u500b\u63cf\u753b\u3059\u308b\n// \uff08\u9802\u70b9\u60c5\u5831\u306f\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3067\u8a2d\u5b9a\u3059\u308b\uff09\nGraphics2D::DrawTriangles(360);\n}\n}\n}\n</code></pre>"},{"location":"samples/shapes/#7-\u9577\u65b9\u5f62\u8a70\u8fbc\u307f","title":"7. \u9577\u65b9\u5f62\u8a70\u8fbc\u307f","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// \u753b\u9762\u4e0a\u306b\u6563\u3089\u3070\u308b\u30e9\u30f3\u30c0\u30e0\u306a\u9577\u65b9\u5f62\u306e\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\u95a2\u6570\nArray&lt;Rect&gt; GenerateRandomRects()\n{\nArray&lt;Rect&gt; rects(Random(4, 32));\nfor (auto&amp; rect : rects)\n{\nconst Point center = RandomPoint(Scene::Rect().stretched(-80));\nrect = Rect{ Arg::center = center, Random(20, 150), Random(20, 150) };\n}\nreturn rects;\n}\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.99 });\nArray&lt;Rect&gt; input;\nArray&lt;double&gt; rotations;\nRectanglePack output;\nPoint offset{ 0, 0 };\nStopwatch stopwatch;\nwhile (System::Update())\n{\nif ((not stopwatch.isStarted()) || (1.8s &lt; stopwatch))\n{\ninput = GenerateRandomRects();\nrotations.resize(input.size());\nrotations.fill(0.0);\n// AllowFlip::Yes \u3092\u6307\u5b9a\u3059\u308b\u3068\u300190\u00b0 \u56de\u8ee2\u306b\u3088\u308b\u8a70\u3081\u8fbc\u307f\u3092\u8a31\u53ef\u3059\u308b\noutput = RectanglePacking::Pack(input, 1024, AllowFlip::Yes);\nfor (size_t i = 0; i &lt; input.size(); ++i)\n{\nif (input[i].w != output.rects[i].w)\n{\nrotations[i] = 270_deg;\n}\n}\n// \u753b\u9762\u4e2d\u592e\u306b\u8868\u793a\u3059\u308b\u3088\u3046\u4f4d\u7f6e\u3092\u8abf\u6574\noffset = ((Scene::Size() - output.size) / 2);\nfor (auto&amp; rect : output.rects)\n{\nrect.moveBy(offset);\n}\nstopwatch.restart();\n}\n// \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\nconst double k = Min(stopwatch.sF() * 10, 1.0);\nconst double t = Math::Saturate(stopwatch.sF() - 0.2);\nconst double e = EaseInOutExpo(t);\nRect{ offset, output.size }.draw(ColorF{ 0.7, e });\nfor (size_t i = 0; i &lt; input.size(); ++i)\n{\nconst RectF in = input[i].scaledAt(input[i].center(), k);\nconst RectF out = output.rects[i];\nconst Vec2 center = in.center().lerp(out.center(), e);\nconst RectF rect{ Arg::center = center, in.size };\nrect.rotatedAt(rect.center(), Math::Lerp(0.0, rotations[i], e))\n.draw(HSV{ i * 25.0, 0.65, 0.9 })\n.drawFrame(2, 0, ColorF{ 0.25 });\n}\n}\n}\n</code></pre>"},{"location":"samples/shapes/#8-\u516d\u89d2\u5f62\u30bf\u30a4\u30eb","title":"8. \u516d\u89d2\u5f62\u30bf\u30a4\u30eb","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nnamespace Hex\n{\ninline constexpr Vec2 IndexToPixel(const Point&amp; index, const double hexR) noexcept\n{\nconst double tileWidth = (hexR * Math::Sqrt3);\nconst double halfWidth = (tileWidth * 0.5);\nconst double tileHeight = (hexR * 1.5);\nreturn{ (index.x * tileWidth + IsOdd(index.y) * halfWidth), (index.y * tileHeight) };\n}\n// \u53c2\u8003\n// https://stackoverflow.com/questions/7705228/hexagonal-grids-how-do-you-find-which-hexagon-a-point-is-in\ninline Point PixelToIndex(const Vec2&amp; _pos, const double hexR)\n{\nconst double tileWidth = (hexR * Math::Sqrt3);\nconst double halfWidth = (tileWidth * 0.5);\nconst double tileHeight = (hexR * 1.5);\nconst Vec2 pos{ (_pos.x + halfWidth), (_pos.y + hexR) };\nint32 row = static_cast&lt;int32&gt;(Math::Floor(pos.y / tileHeight));\nconst bool rowIsOdd = IsOdd(row);\nint32 column = static_cast&lt;int32&gt;(Math::Floor(rowIsOdd ? ((pos.x - halfWidth) / tileWidth) : (pos.x / tileWidth)));\nconst double relY = (pos.y - (row * tileHeight));\nconst double relX = (rowIsOdd ? ((pos.x - (column * tileWidth)) - halfWidth) : (pos.x - (column * tileWidth)));\nconst double c = (hexR * 0.5);\nconst double m = (c / halfWidth);\nif (relY &lt; (-m * relX) + c)\n{\nreturn{ (column - (not rowIsOdd)), (row - 1) };\n}\nelse if (relY &lt; (m * relX) - c)\n{\nreturn{ (column + rowIsOdd), (row - 1) };\n}\nreturn{ column, row };\n}\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.5, 0.6, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nconstexpr Vec2 Offset{ 60, 60 };\nconstexpr double HexRadius = 50.0;\nconst Size GridSize{ 8, 7 };\nwhile (System::Update())\n{\nfor (auto p : step(GridSize))\n{\nconst Vec2 center = (Hex::IndexToPixel(p, HexRadius) + Offset);\nShape2D::Hexagon(HexRadius, center)\n.draw(ColorF{ 0.75 })\n.drawFrame(2);\nfont(p).drawAt(16, center);\n}\n{\nconst Point index = Hex::PixelToIndex(Cursor::Pos() - Offset, HexRadius);\nconst Vec2 center = (Hex::IndexToPixel(index, HexRadius) + Offset);\nShape2D::Hexagon(HexRadius, center).drawFrame(10);\n}\n}\n}\n</code></pre>"},{"location":"samples/shapes/#9-2d-\u30de\u30c3\u30d7\u306e\u53ef\u8996\u9818\u57df","title":"9. 2D \u30de\u30c3\u30d7\u306e\u53ef\u8996\u9818\u57df","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nclass VisibilityMap\n{\npublic:\nexplicit VisibilityMap(const RectF&amp; region)\n: m_region{ region }\n, m_maxDistance{ m_region.w + m_region.h }\n{\nadd(m_region);\n}\nvoid add(const Triangle&amp; t)\n{\nm_lines &lt;&lt; t.side(0) &lt;&lt; t.side(1) &lt;&lt; t.side(2);\n}\nvoid add(const RectF&amp; r)\n{\nm_lines &lt;&lt; r.top() &lt;&lt; r.right() &lt;&lt; r.bottom() &lt;&lt; r.left();\n}\nvoid add(const Quad&amp; q)\n{\nm_lines &lt;&lt; q.side(0) &lt;&lt; q.side(1) &lt;&lt; q.side(2) &lt;&lt; q.side(3);\n}\nvoid add(const Circle&amp; c, int32 quality = 8)\n{\nconst double da = (2_pi / Max(quality, 6));\nfor (int32 i = 0; i &lt; quality; ++i)\n{\nm_lines.emplace_back(c.getPointByAngle(da * i), c.getPointByAngle(da * (i + 1)));\n}\n}\nvoid add(const Polygon&amp; p)\n{\nconst auto&amp; outer = p.outer();\nfor (size_t i = 0; i &lt; outer.size(); ++i)\n{\nm_lines.emplace_back(outer[i], outer[(i + 1) % outer.size()]);\n}\n}\ntemplate &lt;class Shape&gt;\nvoid add(const Array&lt;Shape&gt;&amp; shapes)\n{\nfor (const auto&amp; shape : shapes)\n{\nadd(shape);\n}\n}\nconst RectF&amp; getRegion() const\n{\nreturn m_region;\n}\nArray&lt;Triangle&gt; calculateVisibilityTriangles(const Vec2&amp; eyePos) const\n{\nconst auto points = calculateCollidePoints(eyePos);\nArray&lt;Triangle&gt; triangles(points.size());\nfor (size_t i = 0; i &lt; triangles.size(); ++i)\n{\ntriangles[i].set(eyePos, points[i].second, points[(i + 1) % points.size()].first);\n}\nreturn triangles;\n}\nprivate:\nstatic constexpr double m_epsilon = 1e-10;\nRectF m_region;\ndouble m_maxDistance = 0.0;\nArray&lt;Line&gt; m_lines;\nconst Array&lt;std::pair&lt;Vec2, Vec2&gt;&gt; calculateCollidePoints(const Vec2&amp; eyePos) const\n{\nif (not m_region.stretched(-1).contains(eyePos))\n{\nreturn{};\n}\nArray&lt;double&gt; angles{ Arg::reserve = m_lines.size() };\n{\nfor (const auto&amp; line : m_lines)\n{\nconst Vec2 v = (line.begin - eyePos);\nangles.push_back(Math::Atan2(v.y, v.x));\n}\nangles.sort();\n}\nArray&lt;std::pair&lt;Vec2, Vec2&gt;&gt; points{ Arg::reserve = angles.size() };\nfor (auto angle : angles)\n{\nconst double left = (angle - m_epsilon);\nconst double right = (angle + m_epsilon);\nconst Line leftRay{ eyePos, Arg::direction = (Vec2::Right().rotated(left) * m_maxDistance) };\nconst Line rightRay{ eyePos, Arg::direction = (Vec2::Right().rotated(right) * m_maxDistance) };\nVec2 leftCollidePoint = leftRay.end;\nVec2 rightCollidePoint = rightRay.end;\nfor (const auto&amp; line : m_lines)\n{\nif (const auto p = leftRay.intersectsAt(line))\n{\nif (p-&gt;distanceFromSq(eyePos) &lt; leftCollidePoint.distanceFromSq(eyePos))\n{\nleftCollidePoint = *p;\n}\n}\nif (const auto p = rightRay.intersectsAt(line))\n{\nif (p-&gt;distanceFromSq(eyePos) &lt; rightCollidePoint.distanceFromSq(eyePos))\n{\nrightCollidePoint = *p;\n}\n}\n}\npoints.emplace_back(leftCollidePoint, rightCollidePoint);\n}\nreturn points;\n}\n};\nvoid Main()\n{\nWindow::Resize(1280, 720);\nconstexpr ColorF objectColor = Palette::Deepskyblue;\nconst Array&lt;Triangle&gt; triangles{ Triangle{ 120, 120, 300, 120, 120, 500 } };\nconst Array&lt;RectF&gt; rects{ Rect{ 600, 40, 40, 260 }, Rect{ 440, 300, 440, 40 }, Rect{ 1040, 300, 200, 40 }, Rect{ 480, 480, 240, 100 } };\nconst Array&lt;Circle&gt; circles{ Circle{ 1000, 500, 80 }, Circle{ 460, 180, 30 }, Circle{ 240, 480, 30 }, Circle{ 300, 560, 30 } };\nconst Array&lt;Polygon&gt; polygons{ Shape2D::Star(60, Vec2{ 940, 180 }) };\nVisibilityMap map(Rect{ 40, 40, 1200, 640 });\n{\nmap.add(triangles);\nmap.add(rects);\nmap.add(circles);\nmap.add(polygons);\n}\nwhile (System::Update())\n{\nCursor::RequestStyle(CursorStyle::Hidden);\nfor (const auto&amp; triangle : triangles)\n{\ntriangle.draw(objectColor);\n}\nfor (const auto&amp; rect : rects)\n{\nrect.draw(objectColor);\n}\nfor (const auto&amp; circle : circles)\n{\ncircle.draw(objectColor);\n}\nfor (const auto&amp; polygon : polygons)\n{\npolygon.draw(objectColor);\n}\nmap.getRegion().drawFrame(0, 8, objectColor);\nconst Vec2 eyePos = Cursor::Pos();\nconst auto vTriangles = map.calculateVisibilityTriangles(eyePos);\nfor (const auto&amp; vTriangle : vTriangles)\n{\nvTriangle.draw(ColorF{ 1.0, 0.5 });\n}\nCircle{ eyePos, 20 }.draw(Palette::Orange).drawFrame(1, 2);\n}\n}\n</code></pre>"},{"location":"samples/shapes/#10-\u307b\u3069\u3088\u3044\u8ddd\u96e2\u3067\u91cd\u306a\u3089\u306a\u3044\u70b9\u7fa4\u3092\u751f\u6210\u3059\u308b","title":"10. \u307b\u3069\u3088\u3044\u8ddd\u96e2\u3067\u91cd\u306a\u3089\u306a\u3044\u70b9\u7fa4\u3092\u751f\u6210\u3059\u308b","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconstexpr Rect AreaRect{ 100, 120, 600, 400 };\ndouble r = 15.0;\n// \u70b9\u7fa4\u3092\u751f\u6210\u3059\u308b\nPoissonDisk2D pd{ AreaRect.size, r };\nwhile (System::Update())\n{\nAreaRect.stretched(r).draw(ColorF{ 0.7 });\nAreaRect.draw(ColorF{ 0.2 });\nfor (const auto&amp; point : pd.getPoints())\n{\nCircle{ point, (r / 4) }.movedBy(AreaRect.pos).draw();\n}\nif (SimpleGUI::Slider(r, 5.0, 40.0, Vec2{ 40, 40 }))\n{\n// \u70b9\u7fa4\u3092\u518d\u751f\u6210\u3059\u308b\npd = PoissonDisk2D{ AreaRect.size, r };\n}\n}\n}\n</code></pre>"},{"location":"samples/shapes/#11-sketch-to-polygon","title":"11. Sketch to Polygon","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u4f5c\u6210\u3057\u305f Polygon \u306e\u914d\u5217\nArray&lt;Polygon&gt; polygons;\n// \u66f8\u304d\u9014\u4e2d\u306e LineString\nLineString points;\nwhile (System::Update())\n{\n// \u5de6\u30af\u30ea\u30c3\u30af\u3082\u3057\u304f\u306f\u30af\u30ea\u30c3\u30af\u3057\u305f\u307e\u307e\u306e\u79fb\u52d5\u304c\u767a\u751f\u3057\u305f\u3089\nif (MouseL.down() ||\n(MouseL.pressed() &amp;&amp; (not Cursor::DeltaF().isZero())))\n{\npoints &lt;&lt; Cursor::PosF();\n}\nelse if (MouseL.up())\n{\npoints = points.simplified(2.0);\nif (const Polygon polygon = Polygon::CorrectOne(points))\n{\npolygons &lt;&lt; polygon;\n}\npoints.clear();\n}\n// \u305d\u308c\u305e\u308c\u306e Polygon \u3092\u63cf\u753b\u3059\u308b\nfor (auto&amp;&amp; [i, polygon] : Indexed(polygons))\n{\npolygon.draw(HSV{ (i * 20), 0.4, 1.0 })\n.drawWireframe(1, Palette::Gray)\n.drawFrame(4, HSV{ i * 20 });\n}\npoints.draw(4);\n}\n}\n</code></pre>"},{"location":"samples/sound/","title":"\u97f3\u306e\u30b5\u30f3\u30d7\u30eb","text":""},{"location":"samples/sound/#1-\u30d4\u30a2\u30ce","title":"1. \u30d4\u30a2\u30ce","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u767d\u9375\u306e\u5927\u304d\u3055\nconstexpr Size KeySize{ 55, 400 };\n// \u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u30ea\u30b5\u30a4\u30ba\u3059\u308b\nWindow::Resize((12 * KeySize.x), KeySize.y);\n// \u697d\u5668\u306e\u7a2e\u985e\nconstexpr GMInstrument Instrument = GMInstrument::Piano1;\n// \u9375\u76e4\u306e\u6570\nconstexpr int32 NumKeys = 20;\n// \u97f3\u3092\u4f5c\u6210\nstd::array&lt;Audio, NumKeys&gt; sounds;\nfor (int32 i = 0; i &lt; NumKeys; ++i)\n{\nsounds[i] = Audio{ Instrument, static_cast&lt;uint8&gt;(PianoKey::A3 + i), 0.5s };\n}\n// \u5bfe\u5fdc\u3059\u308b\u30ad\u30fc\nconstexpr std::array&lt;Input, NumKeys&gt; Keys =\n{\nKeyTab, Key1, KeyQ,\nKeyW, Key3, KeyE, Key4, KeyR, KeyT, Key6, KeyY, Key7, KeyU, Key8, KeyI,\nKeyO, Key0, KeyP, KeyMinus, KeyEnter,\n};\n// \u63cf\u753b\u4f4d\u7f6e\u8a08\u7b97\u7528\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u5024\uff08\u767d\u9375\u306f\u5076\u6570\u3001\u9ed2\u9375\u306f\u5947\u6570\uff09\nconstexpr std::array&lt;int32, NumKeys&gt; KeyPositions =\n{\n0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22\n};\nwhile (System::Update())\n{\n// \u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u3089\u5bfe\u5fdc\u3059\u308b\u97f3\u3092\u518d\u751f\nfor (int32 i = 0; i &lt; NumKeys; ++i)\n{\nif (Keys[i].down())\n{\nsounds[i].playOneShot(0.5);\n}\n}\n// \u767d\u9375\u3092\u63cf\u753b\u3059\u308b\nfor (int32 i = 0; i &lt; NumKeys; ++i)\n{\n// \u30aa\u30d5\u30bb\u30c3\u30c8\u5024\u304c\u5076\u6570\u3067\u3042\u308b\u3082\u306e\u304c\u767d\u9375\nif (IsEven(KeyPositions[i]))\n{\nRectF{ (KeyPositions[i] / 2 * KeySize.x), 0, KeySize.x, KeySize.y }\n.stretched(-1).draw(Keys[i].pressed() ? Palette::Pink : Palette::White);\n}\n}\n// \u9ed2\u9375\u3092\u63cf\u753b\u3059\u308b\nfor (int32 i = 0; i &lt; NumKeys; ++i)\n{\n// \u30aa\u30d5\u30bb\u30c3\u30c8\u5024\u304c\u5947\u6570\u3067\u3042\u308b\u3082\u306e\u304c\u9ed2\u9375\nif (IsOdd(KeyPositions[i]))\n{\nRectF{ (KeySize.x * 0.68 + KeyPositions[i] / 2 * KeySize.x), 0, (KeySize.x * 0.58), (KeySize.y * 0.62) }\n.draw(Keys[i].pressed() ? Palette::Pink : Color{ 24 });\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/sound/#2-\u97f3\u697d\u30d7\u30ec\u30a4\u30e4\u30fc","title":"2. \u97f3\u697d\u30d7\u30ec\u30a4\u30e4\u30fc","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\ndouble ConvertVolume(double volume)\n{\nreturn ((volume == 0.0) ? 0.0 : Math::Eerp(0.01, 1.0, volume));\n}\nvoid Main()\n{\n// \u97f3\u697d\nAudio audio;\n// \u97f3\u91cf\ndouble volume = 1.0;\n// FFT \u306e\u7d50\u679c\nFFTResult fft;\n// \u518d\u751f\u4f4d\u7f6e\u306e\u5909\u66f4\u306e\u6709\u7121\nbool seeking = false;\nwhile (System::Update())\n{\nClearPrint();\n// \u518d\u751f\u30fb\u6f14\u594f\u6642\u9593\nconst String time = FormatTime(SecondsF{ audio.posSec() }, U\"M:ss\")\n+ U\" / \" + FormatTime(SecondsF{ audio.lengthSec() }, U\"M:ss\");\n// \u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u9032\u307f\u5177\u5408\ndouble progress = static_cast&lt;double&gt;(audio.posSample()) / audio.samples();\nif (audio.isPlaying())\n{\n// FFT \u89e3\u6790\nFFT::Analyze(fft, audio);\n// \u7d50\u679c\u3092\u53ef\u8996\u5316\nfor (int32 i = 0; i &lt; Min(Scene::Width(), static_cast&lt;int32&gt;(fft.buffer.size())); ++i)\n{\nconst double size = Pow(fft.buffer[i], 0.6f) * 1000;\nRectF{ Arg::bottomLeft(i, 480), 1, size }.draw(HSV{ 240.0 - i });\n}\n// \u5468\u6ce2\u6570\u8868\u793a\nif (InRange(Cursor::Pos().x, 0, 800))\n{\nRect{ Cursor::Pos().x, 0, 1, 480 }.draw();\nPrint &lt;&lt; U\"{:.1f} Hz\"_fmt(Cursor::Pos().x * fft.resolution);\n}\n}\nRect{ 0, 480, Scene::Width(), 120 }.draw(ColorF{ 0.5 });\n// \u30d5\u30a9\u30eb\u30c0\u304b\u3089\u97f3\u697d\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\nif (SimpleGUI::Button(U\"Open\", Vec2{ 40, 500 }, 100))\n{\naudio.stop(0.5s);\naudio = Dialog::OpenAudio();\naudio.setVolume(ConvertVolume(volume));\naudio.play();\n}\n// \u518d\u751f\nif (SimpleGUI::Button(U\"\\U000F040A\", Vec2{ 150, 500 }, 60, (audio &amp;&amp; (not audio.isPlaying()))))\n{\naudio.setVolume(ConvertVolume(volume));\naudio.play(0.2s);\n}\n// \u4e00\u6642\u505c\u6b62\nif (SimpleGUI::Button(U\"\\U000F03E4\", Vec2{ 220, 500 }, 60, audio.isPlaying()))\n{\naudio.pause(0.2s);\n}\n// \u97f3\u91cf\nif (SimpleGUI::Slider(((volume == 0.0) ? U\"\\U000F075F\" : (volume &lt; 0.5) ? U\"\\U000F0580\" : U\"\\U000F057E\"),\nvolume, Vec2{ 40, 540 }, 30, 120, (not audio.isEmpty())))\n{\naudio.setVolume(ConvertVolume(volume));\n}\n// \u30b9\u30e9\u30a4\u30c0\u30fc\nif (SimpleGUI::Slider(time, progress, Vec2{ 200, 540 }, 130, 420, (not audio.isEmpty())))\n{\naudio.pause(0.05s);\nwhile (audio.isPlaying()) // \u518d\u751f\u304c\u6b62\u307e\u308b\u307e\u3067\u5f85\u6a5f\n{\nSystem::Sleep(0.01s);\n}\n// \u518d\u751f\u4f4d\u7f6e\u3092\u5909\u66f4\naudio.seekSamples(static_cast&lt;size_t&gt;(audio.samples() * progress));\n// \u30ce\u30a4\u30ba\u3092\u907f\u3051\u308b\u305f\u3081\u3001\u30b9\u30e9\u30a4\u30c0\u30fc\u304b\u3089\u624b\u3092\u96e2\u3059\u307e\u3067\u518d\u751f\u306f\u518d\u958b\u3057\u306a\u3044\nseeking = true;\n}\nelse if (seeking &amp;&amp; MouseL.up())\n{\n// \u518d\u751f\u3092\u518d\u958b\naudio.play(0.05s);\nseeking = false;\n}\n}\n// \u7d42\u4e86\u6642\u306b\u518d\u751f\u4e2d\u306e\u5834\u5408\u3001\u97f3\u91cf\u3092\u30d5\u30a7\u30fc\u30c9\u30a2\u30a6\u30c8\nif (audio.isPlaying())\n{\naudio.fadeVolume(0.0, 0.3s);\nSystem::Sleep(0.3s);\n}\n}\n</code></pre>"},{"location":"samples/sound/#3-\u30de\u30a4\u30af\u3067\u5165\u529b\u3057\u305f\u97f3\u306e\u5468\u6ce2\u6570\u89e3\u6790","title":"3. \u30de\u30a4\u30af\u3067\u5165\u529b\u3057\u305f\u97f3\u306e\u5468\u6ce2\u6570\u89e3\u6790","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30de\u30a4\u30af\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\uff08\u305f\u3060\u3061\u306b\u9332\u97f3\u3092\u30b9\u30bf\u30fc\u30c8\uff09\nMicrophone mic{ StartImmediately::Yes };\nif (not mic)\n{\n// \u30de\u30a4\u30af\u3092\u5229\u7528\u3067\u304d\u306a\u3044\u5834\u5408\u3001\u7d42\u4e86\nthrow Error{ U\"Microphone not available\" };\n}\nFFTResult fft;\nwhile (System::Update())\n{\n// FFT \u306e\u7d50\u679c\u3092\u53d6\u5f97\nmic.fft(fft);\nClearPrint();\nif (InRange(Cursor::Pos().x, 0, 800))\n{\nPrint &lt;&lt; U\"{:.1f} Hz\"_fmt(Cursor::Pos().x * fft.resolution);\n}\n// \u7d50\u679c\u3092\u53ef\u8996\u5316\nfor (int32 i = 0; i &lt; 800; ++i)\n{\nconst double size = (Pow(fft.buffer[i], 0.6f) * 1200);\nRectF{ Arg::bottomLeft(i, 600), 1, size }.draw(HSV{ 240 - i });\n}\n// \u5468\u6ce2\u6570\u8868\u793a\nRect{ Cursor::Pos().x, 0, 1, Scene::Height() }.draw();\nClearPrint();\nPrint &lt;&lt; U\"{:.1f} Hz\"_fmt(Cursor::Pos().x * fft.resolution);\n}\n}\n</code></pre>"},{"location":"samples/sound/#4-zip-\u30d5\u30a1\u30a4\u30eb\u306b\u542b\u307e\u308c\u308b\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u3092\u518d\u751f\u3059\u308b","title":"4. ZIP \u30d5\u30a1\u30a4\u30eb\u306b\u542b\u307e\u308c\u308b\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u3092\u518d\u751f\u3059\u308b","text":"<p>\u4e8b\u524d\u306b <code>music/test.mp3</code> \u3092 <code>music.zip</code> \u306b\u5727\u7e2e\u3057\u3066\u304a\u304d\u307e\u3059\u3002</p> \u30b3\u30fc\u30c9 \u975e\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nZIPReader zip{ U\"music.zip\" };\nPrint &lt;&lt; zip.enumPaths();\nconst Audio audio{ zip.extract(U\"music/test.mp3\") };\naudio.play();\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p>\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u306b\u5c55\u958b\u3057\u3066\u304b\u3089\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u3057\u307e\u3059\u3002 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nZIPReader zip{ U\"music.zip\" };\nPrint &lt;&lt; zip.enumPaths();\nFilePath temporaryFilePath;\nif (const Blob blob = zip.extractToBlob(U\"music/test.mp3\"))\n{\nPrint &lt;&lt; U\"ZIP \u30c7\u30fc\u30bf\u5c55\u958b\u5b8c\u4e86\";\ntemporaryFilePath = FileSystem::UniqueFilePath();\nPrint &lt;&lt; temporaryFilePath &lt;&lt; U\" \u306b\u4fdd\u5b58\";\nif (blob.save(temporaryFilePath))\n{\nPrint &lt;&lt; U\"\u4fdd\u5b58\u306b\u6210\u529f\";\n}\nelse\n{\nPrint &lt;&lt; U\"\u4fdd\u5b58\u306b\u5931\u6557\";\n}\n}\nelse\n{\nPrint &lt;&lt; U\"\u30c7\u30fc\u30bf\u5c55\u958b\u306b\u5931\u6557\";\n}\nAudio audio{ Audio::Stream, temporaryFilePath };\nPrint &lt;&lt; U\"isStreaming: \" &lt;&lt; audio.isStreaming();\naudio.play();\nwhile (System::Update())\n{\n}\n// Audio \u3092\u30ea\u30ea\u30fc\u30b9\naudio.release();\n// \u3069\u306e Audio \u304b\u3089\u3082\u53c2\u7167\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u30d5\u30a1\u30a4\u30eb\u524a\u9664\u53ef\u80fd\nFileSystem::Remove(temporaryFilePath);\n}\n</code></pre></p>"},{"location":"samples/sound/#5-\u697d\u8b5c\u8a18\u8ff0\u8a00\u8a9e\u306e\u81ea\u4f5c","title":"5. \u697d\u8b5c\u8a18\u8ff0\u8a00\u8a9e\u306e\u81ea\u4f5c","text":"\u30b3\u30fc\u30c9 score.txt<pre><code>\u30c9\u30ec\u30df\u30c9\u30ec\u30df\n</code></pre> <pre><code># include &lt;Siv3D.hpp&gt;\nString LoadScore(const FilePath&amp; path)\n{\n// \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\nTextReader reader{ path };\nif (not reader)\n{\nthrow Error{ U\"score.txt \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\" };\n}\nString result;\nString line;\n// \u4e00\u884c\u305a\u3064\u8aad\u307f\u8fbc\u3080\nwhile (reader.readLine(line))\n{\n// score \u306e\u672b\u5c3e\u306b\u8ffd\u52a0\nresult += line;\n}\nreturn result;\n}\nvoid Main()\n{\n// \u697d\u8b5c\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570\nconst String score = LoadScore(U\"score.txt\");\nPrint &lt;&lt; U\"\u8aad\u307f\u8fbc\u3093\u3060\u697d\u8b5c: \" &lt;&lt; score;\n// \u30c9\u3001\u30ec\u3001\u30df\u306e\u97f3\u3092\u7528\u610f\nconst Audio soundDo{ s3d::GMInstrument::Piano1, PianoKey::C4, 0.5s };\nconst Audio soundRe{ s3d::GMInstrument::Piano1, PianoKey::D4, 0.5s };\nconst Audio soundMi{ s3d::GMInstrument::Piano1, PianoKey::E4, 0.5s };\n// \u53c2\u8003\n// \u30c9: C4, \u30ec: D4, \u30df: E4, \u30d5\u30a1: F4, \u30bd: G4, \u30e9: A4, \u30b7: B4, \u30c9: C5, ...\n// \u30c9#: CS4, \u30ec#: DS4, ...\n// \u518d\u751f\u4f4d\u7f6e\nint32 pos = -1;\n// \u97f3\u91cf\ndouble volume = 0.5;\n// \u5373\u5ea7\u306b\u958b\u59cb\u3059\u308b\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\nStopwatch stopwatch{ StartImmediately::Yes };\nwhile (System::Update())\n{\n// \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u7d4c\u904e\u6642\u9593\uff08\u30df\u30ea\u79d2\uff09/ 1000 \u3092 newPos \u3068\u3059\u308b\nconst int32 newPos = (stopwatch.ms() / 1000);\nif (pos != newPos)\n{\npos = newPos;\n// \u7bc4\u56f2\u5185\u3067\u3042\u308c\u3070\nif (pos &lt; score.size())\n{\n// pos \u756a\u76ee\u306e\u6587\u5b57\nconst char32 ch = score[pos];\nPrint &lt;&lt; U\"{}: {}\"_fmt(pos, ch);\nif (ch == U'\u30c9')\n{\nsoundDo.playOneShot(volume);\n}\nelse if (ch == U'\u30ec')\n{\nsoundRe.playOneShot(volume);\n}\nelse if (ch == U'\u30df')\n{\nsoundMi.playOneShot(volume);\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/sound/#6-\u97f3\u306e\u9ad8\u3055\u3092\u5909\u3048\u305a\u306b\u518d\u751f\u901f\u5ea6\u3092\u5909\u66f4\u3059\u308b","title":"6. \u97f3\u306e\u9ad8\u3055\u3092\u5909\u3048\u305a\u306b\u518d\u751f\u901f\u5ea6\u3092\u5909\u66f4\u3059\u308b","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8,0.7 });\nconst Audio audio = Dialog::OpenAudio(Audio::Stream);\nif (not audio)\n{\nreturn;\n}\ndouble speed = 1.0;\ndouble pitchShift = 0.0;\naudio.play();\nwhile (System::Update())\n{\nif (SimpleGUI::Slider(U\"Speed: {:.2f}\"_fmt(speed), speed, 0.25, 4.0, Vec2{ 40, 40 }, 180, 240))\n{\n// \u518d\u751f\u901f\u5ea6\u306e\u5909\u66f4\naudio.setSpeed(speed);\n// \u30d4\u30c3\u30c1\u30b7\u30d5\u30c8\u306e\u8a08\u7b97\npitchShift = -(Math::Log2(speed) * 12);\n// \u30d4\u30c3\u30c1\u30b7\u30d5\u30c8\u306e\u9069\u7528\nGlobalAudio::BusSetPitchShiftFilter(MixBus0, 0, pitchShift);\n}\n// \u30d4\u30c3\u30c1\u30b7\u30d5\u30c8\u306b\u9023\u52d5\u3057\u3066\u52d5\u304f\u30b9\u30e9\u30a4\u30c0\u30fc\nif (SimpleGUI::Slider(U\"PitchShift: {:.2f}\"_fmt(pitchShift), pitchShift, -24, 24, Vec2{ 40, 80 }, 180, 240, false)) {}\n}\n}\n</code></pre>"},{"location":"samples/sound/#7-bgm-\u30af\u30ed\u30b9\u30d5\u30a7\u30fc\u30c9","title":"7. BGM \u30af\u30ed\u30b9\u30d5\u30a7\u30fc\u30c9","text":"<p>Siv3D-Sample | BGM \u30af\u30ed\u30b9\u30d5\u30a7\u30fc\u30c9 </p>"},{"location":"samples/text/","title":"\u6587\u5b57\u8868\u793a\u306e\u30b5\u30f3\u30d7\u30eb","text":""},{"location":"samples/text/#1-\u30c6\u30ad\u30b9\u30c8\u306e\u767b\u5834","title":"1. \u30c6\u30ad\u30b9\u30c8\u306e\u767b\u5834","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// Glyph \u3068\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u95a2\u6570\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u753b\nvoid DrawText(const Font&amp; font, double fontSize, const String&amp; text, const Vec2&amp; pos, const ColorF&amp; color, double t,\nvoid f(const Vec2&amp;, double, const Glyph&amp;, const ColorF&amp;, double), double characterPerSec)\n{\nconst double scale = (fontSize / font.fontSize());\nVec2 penPos = pos;\nconst ScopedCustomShader2D shader{ Font::GetPixelShader(font.method()) };\nfor (auto&amp;&amp; [i, glyph] : Indexed(font.getGlyphs(text)))\n{\nif (glyph.codePoint == U'\\n')\n{\npenPos.x = pos.x;\npenPos.y += (font.height() * scale);\ncontinue;\n}\nconst double targetTime = (i * characterPerSec);\nif (t &lt; targetTime)\n{\nbreak;\n}\nf(penPos, scale, glyph, color, (t - targetTime));\npenPos.x += (glyph.xAdvance * scale);\n}\n}\n// \u6587\u5b57\u304c\u4e0a\u304b\u3089\u3086\u3063\u304f\u308a\u964d\u3063\u3066\u304f\u308b\u8868\u73fe\nvoid TextEffect1(const Vec2&amp; penPos, double scale, const Glyph&amp; glyph, const ColorF&amp; color, double t)\n{\nconst double y = EaseInQuad(Saturate(1 - t / 0.3)) * -20.0;\nconst double a = Min(t / 0.3, 1.0);\nglyph.texture.scaled(scale).draw(penPos + glyph.getOffset(scale) + Vec2{ 0, y }, ColorF{color, a});\n}\n// \u6587\u5b57\u304c\u52e2\u3044\u3088\u304f\u73fe\u308c\u308b\u8868\u73fe\nvoid TextEffect2(const Vec2&amp; penPos, double scale, const Glyph&amp; glyph, const ColorF&amp; color, double t)\n{\nconst double s = Min(t / 0.1, 1.0);\nconst double a = Min(t / 0.2, 1.0);\nglyph.texture.scaled(scale * (3.0 - s * 2)).draw(penPos + glyph.getOffset(scale), ColorF{ color, a });\n}\n// \u843d\u3061\u3066\u304d\u305f\u6587\u5b57\u304c\u3057\u3070\u3089\u304f\u63fa\u308c\u308b\u8868\u73fe\nvoid TextEffect3(const Vec2&amp; penPos, double scale, const Glyph&amp; glyph, const ColorF&amp; color, double t)\n{\nconst double angle = Sin(t * 1440_deg) * 25_deg * Saturate(1.0 - t / 0.6);\nconst double y = Saturate(1 - t / 0.05) * -20.0;\nglyph.texture.scaled(scale).rotated(angle).draw(penPos + glyph.getOffset(scale) + Vec2{ 0, y }, color);\n}\nvoid Main()\n{\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nconst String text = U\"Lorem ipsum dolor sit amet, consectetur\\n\"\nU\"adipiscing elit, sed do eiusmod tempor\\n\"\nU\"incididunt ut labore et dolore magna aliqua.\";\nStopwatch stopwatch{ StartImmediately::Yes };\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Restart\", Vec2{ 620, 520 }))\n{\nstopwatch.restart();\n}\nconst double t = stopwatch.sF();\nDrawText(font, 30, text, Vec2{ 40, 40 }, Palette::Skyblue, t, TextEffect1, 0.1);\nDrawText(font, 30, text, Vec2{ 40, 200 }, Palette::Orange, t, TextEffect2, 0.1);\nDrawText(font, 30, text, Vec2{ 40, 360 }, Palette::Seagreen, t, TextEffect3, 0.1);\n}\n}\n</code></pre>"},{"location":"samples/text/#2-\u30e9\u30f3\u30c0\u30e0\u306a\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u76ee\u7684\u306e\u30c6\u30ad\u30b9\u30c8\u306b\u5909\u5316\u3059\u308b","title":"2. \u30e9\u30f3\u30c0\u30e0\u306a\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u76ee\u7684\u306e\u30c6\u30ad\u30b9\u30c8\u306b\u5909\u5316\u3059\u308b","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Font font{ FontMethod::MSDF, 48 };\nconst Array&lt;char32&gt; chars = Range(U'A', U'Z').asArray().append(Range(U'a', U'z'));\nconst String targetText = U\"C++/OpenSiv3D\";\nArray&lt;int32&gt; delays = targetText.map([](auto) { return Random(20, 60); });\nString randomText = targetText;\nconstexpr double Scale = 1.5;\nconstexpr double displayTime = 0.05;\ndouble accumulatedTime = 0.0;\nwhile (System::Update())\n{\naccumulatedTime += Scene::DeltaTime();\nif (MouseL.down())\n{\ndelays = targetText.map([](auto) { return Random(20, 60); });\n}\nif (displayTime &lt;= accumulatedTime)\n{\naccumulatedTime -= displayTime;\nfor (size_t i = 0; i &lt; targetText.size(); ++i)\n{\nif (delays[i])\n{\nrandomText[i] = chars.choice();\n--delays[i];\n}\nelse\n{\nrandomText[i] = targetText[i];\n}\n}\n}\n{\nconst ScopedCustomShader2D shader{ Font::GetPixelShader(font.method()) };\nVec2 penPos{ 50, 240 };\nfor (auto&amp;&amp; [i, glyph] : Indexed(font.getGlyphs(targetText)))\n{\nconst auto glyph2 = font.getGlyph(randomText[i]);\nglyph2.texture.scaled(Scale).draw(penPos + glyph2.getOffset(Scale));\npenPos.x += (Scale * glyph.xAdvance * 1.2);\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/text/#3-\u30eb\u30d3\u3092\u632f\u308b","title":"3. \u30eb\u30d3\u3092\u632f\u308b","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30eb\u30d3\u306e\u60c5\u5831\nstruct Ruby\n{\n// \u30eb\u30d3\u3092\u632f\u308b\u6587\u5b57\u5217\u306e\u5148\u982d\u306e\u6587\u5b57\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\nint32 indexBegin;\n// \u30eb\u30d3\u3092\u632f\u308b\u6587\u5b57\u5217\u306e\u672b\u5c3e\u306e\u6587\u5b57\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\nint32 indexEnd;\n// \u30eb\u30d3\u306e\u6587\u5b57\u5217\nString text;\n};\nvoid DrawTextWithRuby(const Vec2&amp; basePos, const Font&amp; font, const String&amp; text, const Array&lt;Ruby&gt;&amp; rubyList, double mainFontSize, double rubyFontSize, double rubyYOffset)\n{\nconst double mainFontScale = (mainFontSize / font.fontSize());\nconst Array&lt;double&gt; xAdvances = font(text).getXAdvances();\nArray&lt;Vec2&gt; allPenPos;\n{\nconst ScopedCustomShader2D shader{ Font::GetPixelShader(font.method()) };\nVec2 penPos{ basePos };\n// \u6587\u5b57\u5358\u4f4d\u3067\u63cf\u753b\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u30eb\u30fc\u30d7\nfor (const auto&amp; glyph : font.getGlyphs(text))\n{\nallPenPos &lt;&lt; penPos;\n// \u6539\u884c\u6587\u5b57\u306a\u3089\nif (glyph.codePoint == U'\\n')\n{\n// \u30da\u30f3\u306e X \u5ea7\u6a19\u3092\u30ea\u30bb\u30c3\u30c8\npenPos.x = basePos.x;\n// \u30da\u30f3\u306e Y \u5ea7\u6a19\u3092\u30d5\u30a9\u30f3\u30c8\u306e\u9ad8\u3055\u5206\u9032\u3081\u308b\npenPos.y += (font.height() * mainFontScale);\ncontinue;\n}\n// \u6587\u5b57\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u30da\u30f3\u306e\u4f4d\u7f6e\u306b\u6587\u5b57\u3054\u3068\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u3092\u52a0\u7b97\u3057\u3066\u63cf\u753b\n// FontMethod \u304c\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u65b9\u5f0f\u306e\u5834\u5408\u306b\u9650\u308a\u3001Math::Round() \u3067\u6574\u6570\u5ea7\u6a19\u306b\u3059\u308b\u3068\u54c1\u8cea\u304c\u5411\u4e0a\nglyph.texture.scaled(mainFontScale).draw(penPos + glyph.getOffset(mainFontScale), ColorF{ 0.11 });\n// \u30da\u30f3\u306e X \u5ea7\u6a19\u3092\u6587\u5b57\u306e\u5e45\u306e\u5206\u9032\u3081\u308b\npenPos.x += (glyph.xAdvance * mainFontScale);\n}\n}\nfor (const auto&amp; ruby : rubyList)\n{\nconst Vec2 beginPenPos = (allPenPos[ruby.indexBegin] + Vec2{ 0, rubyYOffset });\nconst Vec2 endPenPos = (allPenPos[ruby.indexEnd] + Vec2{ (xAdvances[ruby.indexEnd] * mainFontScale), rubyYOffset });\nconst Vec2 center = ((beginPenPos + endPenPos) / 2);\nLine{ beginPenPos, endPenPos }.draw(2, Palette::Orange);\nfont(ruby.text).draw(rubyFontSize, Arg::bottomCenter = center, ColorF{ 0.11 });\n}\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.99 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nconstexpr double RubyYOffset = 8;\nconst String text = U\"\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u3002\u540d\u524d\u306f\u307e\u3060\u7121\u3044\u3002\";\nconst Array&lt;Ruby&gt; rubyList{\n{ 0, 1, U\"\u308f\u304c\u306f\u3044\" },\n{ 3, 3, U\"\u306d\u3053\" },\n{ 8, 9, U\"\u306a\u307e\u3048\" },\n{ 13, 13, U\"\u306a\" },\n};\nwhile (System::Update())\n{\nDrawTextWithRuby(Vec2{ 60, 60 }, font, text, rubyList, 36, 16, RubyYOffset);\n}\n}\n</code></pre>"},{"location":"samples/text/#4-\u6587\u5b57\u3068\u56f3\u5f62\u306e\u4ea4\u5dee\u5224\u5b9a","title":"4. \u6587\u5b57\u3068\u56f3\u5f62\u306e\u4ea4\u5dee\u5224\u5b9a","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Font font{ 100, Typeface::Bold };\nPolygonGlyph polygonGlyph = font.renderPolygon(U'%');\npolygonGlyph.polygons = polygonGlyph.polygons.scaled(5);\nwhile (System::Update())\n{\nCircle circle{ Cursor::Pos(), 20 };\nfor (const auto&amp; polygon : polygonGlyph.polygons)\n{\nif (polygon.intersects(circle))\n{\npolygon.draw(Palette::Yellow);\n}\nelse\n{\npolygon.draw();\n}\n}\ncircle.draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"samples/text/#5-outlineglyph-\u306e\u5fdc\u7528","title":"5. OutlineGlyph \u306e\u5fdc\u7528","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.99, 0.96, 0.93 });\nconst Font font{ 130, U\"example/font/RocknRoll/RocknRollOne-Regular.ttf\" };\nconst Array&lt;OutlineGlyph&gt; glyphs = font.renderOutlines(U\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!?\");\nwhile (System::Update())\n{\nconst double t = Periodic::Sawtooth0_1(2.6s);\nconst double len = Periodic::Sine0_1(16s) * 0.5;\nconstexpr Vec2 BasePos{ 70, 0 };\nVec2 penPos{ BasePos };\nfor (const auto&amp; glyph : glyphs)\n{\nconst Transformer2D transform{ Mat3x2::Translate(penPos + glyph.getOffset()) };\nfor (const auto&amp; ring : glyph.rings)\n{\nconst double length = ring.calculateLength(CloseRing::Yes);\nLineString z1 = ring.extractLineString(t * length, length * len, CloseRing::Yes);\nconst LineString z2 = ring.extractLineString((t + 0.5) * length, length * len, CloseRing::Yes);\nz1.append(z2.reversed()).drawClosed(3, ColorF{ 0.25 });\n}\nif (penPos.x += glyph.xAdvance;\n1120 &lt; penPos.x)\n{\npenPos.x = BasePos.x;\npenPos.y += font.fontSize();\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/text/#6-\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u3042\u308b\u30c6\u30ad\u30b9\u30c8","title":"6. \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u3042\u308b\u30c6\u30ad\u30b9\u30c8","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid DrawGradientText(const Font&amp; font, const String&amp; text, const Vec2&amp; basePos, const ColorF&amp; topColor, const ColorF&amp; bottomColor)\n{\nVec2 penPos{ basePos };\n// \u6587\u5b57\u5358\u4f4d\u3067\u63cf\u753b\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u30eb\u30fc\u30d7\nfor (const auto&amp; glyph : font.getGlyphs(text))\n{\nif (glyph.codePoint == U'\\n')\n{\npenPos.x = basePos.x;\npenPos.y += font.height();\ncontinue;\n}\nconst Vec2 offset = glyph.getOffset();\nconst double topPos = offset.y;\nconst double bottomPos = (offset.y + glyph.texture.size.y);\nconst double topT = (topPos / font.height());\nconst double bottomT = (bottomPos / font.height());\n// \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u8272\nconst ColorF c1 = topColor.lerp(bottomColor, topT);\nconst ColorF c2 = topColor.lerp(bottomColor, bottomT);\n// \u6587\u5b57\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\nglyph.texture\n.draw(penPos + offset, Arg::top = c1, Arg::bottom = c2);\npenPos.x += glyph.xAdvance;\n}\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.99 });\nconst Font font{ 60, Typeface::Heavy };\nHSV topColor{ 180, 0.6, 1 };\nHSV bottomColor{ 240, 0.8, 0.8 };\nwhile (System::Update())\n{\nconst String text = U\"OpenSiv3D\\nABCDEFG\\n1234567\\n\u3042\u3044\u3046\u3048\u304a\\n{}\"_fmt(Cursor::Pos());\nDrawGradientText(font, text,\nVec2{ 40, 40 }, topColor, bottomColor);\nSimpleGUI::ColorPicker(topColor, Vec2{ 560, 40 });\nSimpleGUI::ColorPicker(bottomColor, Vec2{ 560, 180 });\n}\n}\n</code></pre>"},{"location":"samples/text/#7-\u5149\u5f69\u306e\u3042\u308b\u30c6\u30ad\u30b9\u30c8","title":"7. \u5149\u5f69\u306e\u3042\u308b\u30c6\u30ad\u30b9\u30c8","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// \u5149\u5f69\u7528\u306e RenderTexture \u7ba1\u7406\u30af\u30e9\u30b9\nclass GlowText\n{\nprivate:\nSize m_baseSize{ 0, 0 };\nmutable RenderTexture m_gaussianA1, m_gaussianB1;\nmutable RenderTexture m_gaussianA4, m_gaussianB4;\nmutable RenderTexture m_gaussianA8, m_gaussianB8;\npublic:\nGlowText() = default;\nGlowText(int32 width, int32 height)\n: GlowText{ Size{ width, height } } {}\nexplicit GlowText(const Size&amp; size)\n: m_baseSize{ size }\n, m_gaussianA1{ size }, m_gaussianB1{ size }\n, m_gaussianA4{ size / 4 }, m_gaussianB4{ size / 4 }\n, m_gaussianA8{ size / 8 }, m_gaussianB8{ size / 8 } {}\nvoid renderGlow(const Font&amp; font, double size, const String&amp; text, const Vec2&amp; pos) const\n{\n{\nconst ScopedRenderTarget2D target{ m_gaussianA1.clear(ColorF{ 0.0 }) };\nfont(text).draw(size, pos);\n}\n// \u30aa\u30ea\u30b8\u30ca\u30eb\u30b5\u30a4\u30ba\u306e\u30ac\u30a6\u30b9\u307c\u304b\u3057 (A1)\n// A1 \u3092 1/4 \u30b5\u30a4\u30ba\u306b\u3057\u3066\u30ac\u30a6\u30b9\u307c\u304b\u3057 (A4)\n// A4 \u3092 1/2 \u30b5\u30a4\u30ba\u306b\u3057\u3066\u30ac\u30a6\u30b9\u307c\u304b\u3057 (A8)\nShader::GaussianBlur(m_gaussianA1, m_gaussianB1, m_gaussianA1);\nShader::Downsample(m_gaussianA1, m_gaussianA4);\nShader::GaussianBlur(m_gaussianA4, m_gaussianB4, m_gaussianA4);\nShader::Downsample(m_gaussianA4, m_gaussianA8);\nShader::GaussianBlur(m_gaussianA8, m_gaussianB8, m_gaussianA8);\n}\nvoid draw(const Vec2&amp; pos, const ColorF&amp; glowColor, double a1, double a4, double a8, bool subtractive = false) const\n{\nconst ScopedRenderStates2D blend{ subtractive ? BlendState::Subtractive : BlendState::Additive };\nif (a1)\n{\nm_gaussianA1.resized(m_baseSize)\n.draw(pos, ColorF{ glowColor, a1 });\n}\nif (a4)\n{\nm_gaussianA4.resized(m_baseSize)\n.draw(pos, ColorF{ glowColor, a4 });\n}\nif (a8)\n{\nm_gaussianA8.resized(m_baseSize)\n.draw(pos, ColorF{ glowColor, a8 });\n}\n}\n};\nvoid Main()\n{\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nGlowText glowText{ 800, 600 }; // \u5fc5\u8981\u6700\u5c0f\u9650\u306e\u30b5\u30a4\u30ba\u306b\u3059\u308b\u3068\u5b9f\u884c\u6642\u6027\u80fd\u5411\u4e0a\ndouble a8 = 0.6, a4 = 0.45, a1 = 0.2;\nHSV backgroundColor = ColorF{ 0.1, 0.2, 0.3 };\nHSV textColor = Palette::White;\nHSV glowColor{ 120 };\nbool subtractive = false;\nwhile (System::Update())\n{\nScene::SetBackground(backgroundColor);\nconst String text = U\"OpenSiv3D\\nABCDEFG\\n1234567\\n\u3042\u3044\u3046\u3048\u304a\\n{}\"_fmt(Cursor::Pos());\nconst Vec2 pos{ 320, 80 };\n// \u5149\u5f69\u3092\u4f5c\u6210\n// \u524d\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u5185\u5bb9\u3092\u66f4\u65b0\u3057\u306a\u3044\u5834\u5408\u3001\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u3053\u3068\u3067\u5b9f\u884c\u6642\u306e\u30b3\u30b9\u30c8\u3092\u7bc0\u7d04\u3067\u304d\u308b\nglowText.renderGlow(font, 60, text, pos);\n// \u5149\u5f69\u3092\u63cf\u753b\nglowText.draw(Vec2{ 0, 0 }, glowColor, a1, a4, a8, subtractive);\n// \u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u753b\nfont(text).draw(60, pos, textColor);\n// \u5149\u5f69\u306e\u5f37\u3055\u3084\u8272\u3092\u8abf\u6574\nSimpleGUI::Slider(U\"a8: {:.2f}\"_fmt(a8), a8, 0.0, 4.0, Vec2{ 20, 20 });\nSimpleGUI::Slider(U\"a4: {:.2f}\"_fmt(a4), a4, 0.0, 4.0, Vec2{ 20, 60 });\nSimpleGUI::Slider(U\"a1: {:.2f}\"_fmt(a1), a1, 0.0, 4.0, Vec2{ 20, 100 });\nSimpleGUI::ColorPicker(backgroundColor, Vec2{ 20, 140 });\nSimpleGUI::ColorPicker(textColor, Vec2{ 20, 260 });\nSimpleGUI::ColorPicker(glowColor, Vec2{ 20, 380 });\nSimpleGUI::CheckBox(subtractive, U\"Subtractive\", Vec2{ 20, 500 }, 160);\n}\n}\n</code></pre>"},{"location":"samples/text/#8-\u30c6\u30ad\u30b9\u30c8\u306e\u53cd\u5c04","title":"8. \u30c6\u30ad\u30b9\u30c8\u306e\u53cd\u5c04","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid DrawTextWithReflection(const Font&amp; font, const String&amp; text, const Vec2&amp; basePos, double offsetY, const ColorF&amp; color)\n{\nVec2 penPos{ basePos };\nfor (const auto&amp; glyph : font.getGlyphs(text))\n{\nif (glyph.codePoint == U'\\n')\n{\npenPos.x = basePos.x;\npenPos.y += font.height();\ncontinue;\n}\nconst Vec2 offset = glyph.getOffset();\nglyph.texture.draw((penPos + offset), color);\n// \u53cd\u5c04\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b\nglyph.texture.flipped()\n.draw(penPos.x + offset.x, penPos.y + (font.height() * 2) - offset.y - glyph.texture.size.y + offsetY,\nArg::top = ColorF{ color, 0.5 }, Arg::bottom = ColorF{ color, 0.0 });\npenPos.x += glyph.xAdvance;\n}\n}\nvoid Main()\n{\nconst Font font{ 50 };\nconst String text = U\"OpenSiv3D \u3042\u3044\u3046\u3048\u304a 12345\";\nwhile (System::Update())\n{\nDrawTextWithReflection(font, text, Vec2{ 40, 40 }, -5, HSV{ 40 });\n}\n}\n</code></pre>"},{"location":"samples/text/#9-\u6587\u5b57\u306e\u5f8c\u308d\u306b\u56f3\u5f62","title":"9. \u6587\u5b57\u306e\u5f8c\u308d\u306b\u56f3\u5f62","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nclass CharacterShape\n{\nprivate:\nPolygon m_polygon;\npublic:\nCharacterShape() = default;\nCharacterShape(const Font&amp; font, const Glyph&amp; glyph, double buffer)\n{\nImage image{ static_cast&lt;size_t&gt;(font.height()),  static_cast&lt;size_t&gt;(font.height()), Color{ 0, 0 } };\nfont(glyph.codePoint).overwrite(image, Vec2{ 0, 0 });\nconst MultiPolygon polygons = image.alphaToPolygons();\nArray&lt;Vec2&gt; points;\nfor (const auto&amp; polygon : polygons)\n{\nfor (const auto&amp; point : polygon.outer())\n{\npoints &lt;&lt; point;\n}\n}\nm_polygon = Geometry2D::ConvexHull(points)\n.calculateRoundBuffer(buffer);\n}\nvoid draw(const Vec2&amp; pos, const ColorF&amp; color) const\n{\nm_polygon.draw(pos, color);\n}\n};\nvoid DrawCharacterShapes(const Array&lt;CharacterShape&gt;&amp; shapes,\nconst Font&amp; font, const String&amp; text, const Vec2&amp; basePos, const ColorF&amp; color, double margin = 0.0)\n{\nVec2 penPos{ basePos };\nsize_t i = 0;\nfor (const auto&amp; glyph : font.getGlyphs(text))\n{\nif (glyph.codePoint == U'\\n')\n{\npenPos.x = basePos.x;\npenPos.y += font.height();\ncontinue;\n}\nshapes[i].draw(penPos, color);\npenPos.x += (glyph.xAdvance + margin);\n++i;\n}\n}\nvoid DrawTextWithMargin(const Font&amp; font, const String&amp; text, const Vec2&amp; basePos, const ColorF&amp; color, double margin = 0.0)\n{\nVec2 penPos{ basePos };\nfor (const auto&amp; glyph : font.getGlyphs(text))\n{\nif (glyph.codePoint == U'\\n')\n{\npenPos.x = basePos.x;\npenPos.y += font.height();\ncontinue;\n}\nglyph.texture.draw((penPos + glyph.getOffset()), color);\npenPos.x += (glyph.xAdvance + margin);\n}\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.7, 0.9, 0.8 });\nconst Font font{ 66, Typeface::Heavy };\nconstexpr double BufferWidth = 14;\nconst String text = U\"\u3042\u3044\u3046\u3048\u304a12345\";\nArray&lt;CharacterShape&gt; shapes;\nfor (const auto&amp; glyph : font.getGlyphs(text))\n{\nshapes.emplace_back(font, glyph, BufferWidth);\n}\nHSV shapeColor = Palette::Seagreen;\nHSV textColor = Palette::White;\ndouble margin = 0.0;\nwhile (System::Update())\n{\nconst Vec2 pos{ 40, 40 };\nDrawCharacterShapes(shapes, font, text, pos, shapeColor, margin);\nDrawTextWithMargin(font, text, pos, textColor, margin);\nSimpleGUI::Slider(margin, 0.0, 20.0, Vec2{ 20, 160 });\nSimpleGUI::ColorPicker(shapeColor, Vec2{ 20, 200 });\nSimpleGUI::ColorPicker(textColor, Vec2{ 20, 320 });\n}\n}\n</code></pre>"},{"location":"samples/text/#10-\u7d75\u6587\u5b57\u3092\u30a8\u30a4\u30ea\u30a2\u30b9\u3067\u5165\u529b\u3059\u308b","title":"10. \u7d75\u6587\u5b57\u3092\u30a8\u30a4\u30ea\u30a2\u30b9\u3067\u5165\u529b\u3059\u308b","text":"<p>\u30b3\u30fc\u30c9\u5185\u306e\u6307\u793a\u306b\u5f93\u3044\u3001\u4e8b\u524d\u306b <code>emoji.json</code> \u3092\u7528\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p></p> \u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30a8\u30a4\u30ea\u30a2\u30b9\u3068\u7d75\u6587\u5b57\u306e\u30da\u30a2\nstruct EmojiAlias\n{\n// \u30a8\u30a4\u30ea\u30a2\u30b9\u3068\u3057\u3066\u4f7f\u3046\u5358\u8a9e\nString alias;\n// \u30a8\u30a4\u30ea\u30a2\u30b9\u306b\u5bfe\u5fdc\u3059\u308b\u7d75\u6587\u5b57\nString emoji;\n};\nclass EmojiDictionary\n{\npublic:\nEmojiDictionary() = default;\nexplicit EmojiDictionary(FilePathView path)\n{\nconst JSON json = JSON::Load(path);\nfor (const auto&amp; element : json)\n{\nconst String alias = element.key;\nconst String emoji = element.value.getString();\nm_emojis.push_back(EmojiAlias{ alias, emoji });\nm_hashTable.emplace(alias, emoji);\n}\n// \u30a8\u30a4\u30ea\u30a2\u30b9\u306e\u6587\u5b57\u6570\u3067\u30bd\u30fc\u30c8\nm_emojis.sort_by([]\n(const EmojiAlias&amp; a, const EmojiAlias&amp; b)\n{\nreturn (a.alias.size() &lt; b.alias.size());\n});\n}\n[[nodiscard]]\nexplicit operator bool() const noexcept\n{\nreturn (not m_emojis.isEmpty());\n}\n[[nodiscard]]\nString getEmoji(StringView alias) const\n{\nauto it = m_hashTable.find(alias);\nif (it == m_hashTable.end())\n{\nreturn{};\n}\nreturn it-&gt;second;\n}\n[[nodiscard]]\nArray&lt;EmojiAlias&gt; getCandidates(const String&amp; emojiAlias, size_t maxCandidates) const\n{\nif (not emojiAlias)\n{\nreturn{};\n}\nArray&lt;EmojiAlias&gt; candidates;\nfor (const auto&amp; emoji : m_emojis)\n{\nif (emoji.alias.includes(emojiAlias))\n{\ncandidates &lt;&lt; emoji;\nif (maxCandidates &lt;= candidates.size())\n{\nbreak;\n}\n}\n}\nreturn candidates;\n}\nprivate:\nArray&lt;EmojiAlias&gt; m_emojis;\nHashTable&lt;String, String&gt; m_hashTable;\n};\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 36, Typeface::Medium };\nconst Font emojiFont{ 24, Typeface::ColorEmoji };\nfont.addFallback(emojiFont);\n// \u30a8\u30a4\u30ea\u30a2\u30b9\u3068\u7d75\u6587\u5b57\u306e\u30da\u30a2\u3092, \u30a8\u30a4\u30ea\u30a2\u30b9\u306e\u6587\u5b57\u6570\u3067\u30bd\u30fc\u30c8\n// emoji.json \u306f\u4e0b\u8a18\u304b\u3089\u5165\u624b\n// https://raw.githubusercontent.com/omnidan/node-emoji/master/lib/emoji.json\nconst EmojiDictionary emojiDictionary{ U\"emoji.json\" };\nif (not emojiDictionary)\n{\nthrow Error{ U\"Failed to load emoji.json\" };\n}\nString previousText, text;\nString emojiAlias;\n// \u5019\u88dc\u3068\u3057\u3066\u8868\u793a\u3059\u308b\u7d75\u6587\u5b57\u306e\u6700\u5927\u500b\u6570\nconstexpr size_t MaxCandidates = 8;\nArray&lt;EmojiAlias&gt; candidates;\nOptional&lt;size_t&gt; aliasBeginAt;\nsize_t candidateIndex = 0;\nwhile (System::Update())\n{\n// \u30c6\u30ad\u30b9\u30c8\u5165\u529b\u306e\u51e6\u7406\n{\nTextInput::UpdateText(text, TextInputMode::AllowBackSpace);\nif (text != previousText)\n{\naliasBeginAt.reset();\nfor (size_t i = 0; i &lt; text.size(); ++i)\n{\nconst auto ch = text[i];\nif (ch == U':')\n{\nif (not aliasBeginAt)\n{\nemojiAlias.clear();\naliasBeginAt = i;\n}\nelse\n{\nif (String emoji = emojiDictionary.getEmoji(emojiAlias))\n{\ntext.replace((text.begin() + *aliasBeginAt), (text.begin() + i + 1), emoji);\n}\nemojiAlias.clear();\naliasBeginAt.reset();\n}\n}\nelse if (aliasBeginAt)\n{\nemojiAlias &lt;&lt; ch;\n}\n}\npreviousText = text;\ncandidates = emojiDictionary.getCandidates(emojiAlias, MaxCandidates);\ncandidateIndex = 0;\n// \u30c7\u30d0\u30c3\u30b0\u8868\u793a\n{\nClearPrint();\nPrint &lt;&lt; U\"emojiAlias: \" &lt;&lt; emojiAlias;\nPrint &lt;&lt; U\"aliasBeginAt: \" &lt;&lt; aliasBeginAt;\n}\n}\n}\n// \u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u306b\u3088\u308b\u5019\u88dc\u306e\u9078\u629e\nfor (auto&amp;&amp; [i, candidate] : Indexed(candidates))\n{\nconst Rect rect{ 40, (400 - candidates.size() * 40 + i * 40), 720, 38 };\nif (rect.mouseOver())\n{\ncandidateIndex = i;\nCursor::RequestStyle(CursorStyle::Hand);\nbreak;\n}\n}\n// \u30ad\u30fc\u30dc\u30fc\u30c9\u306b\u3088\u308b\u5019\u88dc\u306e\u9078\u629e\nif (candidates)\n{\nif (KeyUp.down())\n{\ncandidateIndex = (candidateIndex + candidates.size() - 1) % candidates.size();\n}\nelse if (KeyDown.down())\n{\n++candidateIndex %= candidates.size();\n}\n}\n// \u5019\u88dc\u306e\u8868\u793a\u3068\u51e6\u7406\nfor (auto&amp;&amp; [i, candidate] : Indexed(candidates))\n{\nconst Rect rect{ 40, (400 - candidates.size() * 40 + i * 40), 720, 38 };\nconst bool selected = (candidateIndex == i);\nrect.rounded(4).draw(selected ? ColorF{ 0.7, 0.8, 0.9 } : ColorF{ 0.9 });\nemojiFont(candidate.emoji).draw(32, rect.pos.movedBy(10, 4));\nfont(U':' + candidate.alias + U':').draw(24, rect.pos.movedBy(50, 2), ColorF{ 0.11 });\n// \u5019\u88dc\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u304b\u3001\u30a8\u30f3\u30bf\u30fc\u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u3089\nif (rect.leftClicked()\n|| (selected &amp;&amp; KeyEnter.down()))\n{\ntext.replace((text.begin() + *aliasBeginAt + 1), text.end(), (candidate.alias + U':'));\nbreak;\n}\n}\n// \u30c6\u30ad\u30b9\u30c8\u306e\u8868\u793a\n{\nRect{ 40, 400, 720, 50 }.draw();\nfont(text).draw(32, Vec2{ 50, 402 }, ColorF{ 0.11 });\n}\n}\n}\n</code></pre>"},{"location":"samples/ui/","title":"UI \u306e\u30b5\u30f3\u30d7\u30eb","text":""},{"location":"samples/ui/#1-\u9078\u629e\u9818\u57df\u3092\u70b9\u7dda\u3067\u63cf\u753b\u3059\u308b","title":"1. \u9078\u629e\u9818\u57df\u3092\u70b9\u7dda\u3067\u63cf\u753b\u3059\u308b","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n/// @brief \u9577\u65b9\u5f62\u306e\u9818\u57df\u3092\u9078\u629e\u3059\u308b\u70b9\u7dda\u3092\u63cf\u753b\u3057\u307e\u3059\u3002\n/// @param start \u9078\u629e\u306e\u958b\u59cb\u4f4d\u7f6e\n/// @param cursorPos \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u4f4d\u7f6e\n/// @param thickness \u7dda\u306e\u592a\u3055\n/// @param lineColor \u7dda\u306e\u8272\nvoid DrawSelectRect(const Vec2&amp; start, const Vec2&amp; cursorPos, double thickness, const ColorF&amp; lineColor = Palette::White)\n{\nconst RectF rect = RectF::FromPoints(start, cursorPos);\nLine top = rect.top(), right = rect.right(), bottom = rect.bottom(), left = rect.left();\n// \u59cb\u70b9\u304b\u3089\u306e\u70b9\u7dda\u306e\u4f38\u7e2e\u304c\u81ea\u7136\u306b\u306a\u308b\u3088\u3046\u3001\u7dda\u306e\u65b9\u5411\u3092\u8abf\u6574\u3059\u308b\n{\nif (cursorPos.x &lt; start.x)\n{\ntop.reverse();\n}\nif (start.x &lt; cursorPos.x)\n{\nbottom.reverse();\n}\nif (cursorPos.y &lt; start.y)\n{\nright.reverse();\n}\nif (start.y &lt; cursorPos.y)\n{\nleft.reverse();\n}\n}\ntop.draw(LineStyle::SquareDot, thickness, lineColor);\nright.draw(LineStyle::SquareDot, thickness, lineColor);\nbottom.draw(LineStyle::SquareDot, thickness, lineColor);\nleft.draw(LineStyle::SquareDot, thickness, lineColor);\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconstexpr double Thickness = 4.0;\nOptional&lt;Point&gt; start;\nwhile (System::Update())\n{\nif (MouseL.down())\n{\nstart = Cursor::Pos();\n}\nelse if (MouseL.up())\n{\nstart.reset();\n}\nif (start &amp;&amp; MouseL.pressed())\n{\nDrawSelectRect(*start, Cursor::Pos(), Thickness);\n}\n}\n}\n</code></pre>"},{"location":"samples/ui/#2-\u30d7\u30eb\u30c0\u30a6\u30f3","title":"2. \u30d7\u30eb\u30c0\u30a6\u30f3","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nclass Pulldown\n{\npublic:\nPulldown() = default;\nPulldown(const Array&lt;String&gt;&amp; items, const Font&amp; font, const double fontSize, const Vec2&amp; pos)\n: m_font{ font }\n, m_fontSize{ fontSize }\n, m_items{ items }\n, m_maxitemWidth{ getMaxItemWidth() }\n, m_rect{ getRect(pos) } {}\nbool isEmpty() const noexcept\n{\nreturn m_items.empty();\n}\nvoid setPos(const Vec2&amp; pos) noexcept\n{\nm_rect.setPos(pos);\n}\n[[nodiscard]]\nconst RectF&amp; getRect() const noexcept\n{\nreturn m_rect;\n}\n[[nodiscard]]\nsize_t getIndex() const noexcept\n{\nreturn m_index;\n}\n[[nodiscard]]\nconst Array&lt;String&gt;&amp; getItems() const noexcept\n{\nreturn m_items;\n}\nvoid update()\n{\nif (isEmpty())\n{\nreturn;\n}\nif (m_rect.leftClicked())\n{\nm_isOpen = (not m_isOpen);\nMouseL.clearInput();\n}\nif (not m_isOpen)\n{\nreturn;\n}\nVec2 itemPos = m_rect.pos.movedBy(0, m_rect.h);\nfor (size_t i = 0; i &lt; m_items.size(); ++i)\n{\nconst RectF itemRect{ itemPos, m_rect.w, m_rect.h };\nif (itemRect.leftClicked())\n{\nm_index = i;\nm_isOpen = false;\nMouseL.clearInput();\nbreak;\n}\nitemPos.y += m_rect.h;\n}\n}\nvoid draw() const\n{\nm_rect.draw();\nif (isEmpty())\n{\nreturn;\n}\nm_rect.drawFrame(1, 0, m_isOpen ? Palette::Orange : Palette::Gray);\nm_font(m_items[m_index]).draw(m_fontSize, (m_rect.pos + Padding), TextColor);\nTriangle{ (m_rect.rightX() - DownButtonSize / 2.0 - Padding.x), (m_rect.y + m_rect.h / 2.0),\n(DownButtonSize * 0.5), 180_deg }.draw(TextColor);\nif (not m_isOpen)\n{\nreturn;\n}\nVec2 itemPos = m_rect.bl();\nconst RectF backRect{ itemPos, m_rect.w, (m_rect.h * m_items.size()) };\nbackRect.drawShadow({ 1, 1 }, 5, 0).draw();\nfor (const auto&amp; item : m_items)\n{\nconst RectF rect{ itemPos, m_rect.size };\nif (rect.mouseOver())\n{\nrect.draw(Palette::Skyblue);\n}\nm_font(item).draw(m_fontSize, (itemPos + Padding), TextColor);\nitemPos.y += m_rect.h;\n}\nbackRect.drawFrame(1, 0, Palette::Gray);\n}\nprivate:\nstatic constexpr Size Padding{ 8, 2 };\nstatic constexpr int32 DownButtonSize = 16;\nstatic constexpr ColorF TextColor{ 0.11 };\nFont m_font;\ndouble m_fontSize = 12;\nArray&lt;String&gt; m_items;\nsize_t m_index = 0;\ndouble m_maxitemWidth = 0;\nRectF m_rect{ 0 };\nbool m_isOpen = false;\n[[nodiscard]]\ndouble getMaxItemWidth() const\n{\ndouble result = 0.0;\nfor (const auto&amp; item : m_items)\n{\nresult = Max(result, (m_font(item).region(m_fontSize).w));\n}\nreturn result;\n}\n[[nodiscard]]\nRectF getRect(const Vec2&amp; pos) const noexcept\n{\nconst double fontHeight = (m_font.height() * (m_fontSize / m_font.fontSize()));\nreturn{\npos,\n(m_maxitemWidth + (Padding.x * 3 + DownButtonSize)),\n(fontHeight + Padding.y * 2)\n};\n}\n};\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Font font{ FontMethod::MSDF, 48 };\nconst Array&lt;String&gt; items = { U\"\u65e5\u672c\u8a9e\", U\"English\", U\"\u4e2d\u6587\", U\"Espa\u00f1ol\", U\"Fran\u00e7ais\" };\nPulldown pulldown1{ items, font, 24, Vec2{ 160, 40 } };\nPulldown pulldown2{ items, font, 16, Vec2{ 320, 40 } };\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; pulldown1.getItems()[pulldown1.getIndex()];\nPrint &lt;&lt; pulldown2.getItems()[pulldown2.getIndex()];\npulldown1.update();\npulldown2.update();\npulldown1.draw();\npulldown2.draw();\n}\n}\n</code></pre>"},{"location":"samples/ui/#3-\u30c8\u30fc\u30b9\u30c8\u901a\u77e5windows-\u7248","title":"3. \u30c8\u30fc\u30b9\u30c8\u901a\u77e5\uff08Windows \u7248\uff09","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.9, 0.6, 0.3 });\n// \u901a\u77e5\u3054\u3068\u306b\u5272\u308a\u632f\u3089\u308c\u308b ID\nToastNotificationID latest = -1;\n// \u753b\u50cf\u3092\u4f5c\u6210\u30fb\u4fdd\u5b58\nEmoji::CreateImage(U\"\ud83c\udf55\").save(U\"pizza.png\");\nwhile (System::Update())\n{\nClearPrint();\n// \u901a\u77e5\u306e\u72b6\u614b\nPrint &lt;&lt; (int32)Platform::Windows::ToastNotification::GetState(latest);\n// \u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\u306e\u7d50\u679c\nPrint &lt;&lt; U\"Action: \" &lt;&lt; Platform::Windows::ToastNotification::GetAction(latest);\nif (SimpleGUI::Button(U\"Send a notification\", Vec2{ 10, 70 }))\n{\nconst ToastNotificationItem toast{\n.title = U\"Title\", // \u901a\u77e5\u306e\u30bf\u30a4\u30c8\u30eb\n.message = U\"Message\", // \u901a\u77e5\u306e\u672c\u6587\n.imagePath = U\"pizza.png\", // \u5927\u304d\u3044\u753b\u50cf\u3060\u3068\u4f7f\u308f\u308c\u306a\u3044\u3053\u3068\u304c\u3042\u308b\n.actions = { U\"Yes\", U\"No\" } // \u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\uff08\u4e0d\u8981\u306a\u5834\u5408\u306f\u8a2d\u5b9a\u3057\u306a\u3044\uff09\n};\n// \u901a\u77e5\u3054\u3068\u306b\u5272\u308a\u632f\u3089\u308c\u308b ID \u3092\u53d6\u5f97\nlatest = Platform::Windows::ToastNotification::Show(toast);\n}\n}\n}\n</code></pre>"},{"location":"samples/ui/#4-\u624b\u66f8\u304d\u98a8-ui","title":"4. \u624b\u66f8\u304d\u98a8 UI","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nstruct Button\n{\nRect rect;\nString label;\n};\nclass PenEffect\n{\npublic:\nPenEffect() = default;\nexplicit PenEffect(const Size&amp; size)\n: m_texture{ size, ColorF{ 1.0, 0.0 } }\n{\ninitLines();\n}\nvoid reset()\n{\ninitLines();\nm_texture.clear(ColorF{ 1.0, 0.0 });\nm_texture.resolve();\n}\nvoid update(double delta)\n{\nm_accumulatedLength = Min(m_accumulatedLength + (m_length * delta), m_length);\nif ((4.0 &lt;= (m_accumulatedLength - m_paintedLength)))\n{\nBlendState bs = BlendState::Default2D;\nbs.srcAlpha = Blend::SrcAlpha;\nbs.dstAlpha = Blend::DestAlpha;\nbs.opAlpha = BlendOp::Max;\nconst ScopedRenderStates2D blend(bs);\nconst ScopedRenderTarget2D target{ m_texture };\nwhile (4.0 &lt;= (m_accumulatedLength - m_paintedLength))\n{\nm_lines.calculatePointFromOrigin(m_paintedLength)\n.asCircle(6).draw(ColorF{ 1.0 });\nm_paintedLength += 4.0;\n}\nGraphics2D::Flush();\nm_texture.resolve();\n}\n}\nconst Texture&amp; getTexture() const\n{\nreturn m_texture;\n}\nprivate:\nvoid initLines()\n{\nm_lines.clear();\nconst Size size = m_texture.size();\nPoint penPos{ 8, (size.y - Random(8, 24)) };\nfor (;;)\n{\nm_lines &lt;&lt; penPos;\npenPos.x += Random(18, 28);\npenPos.y = Random(6, 20);\nif ((size.x - 8) &lt; penPos.x)\n{\nbreak;\n}\nm_lines &lt;&lt; penPos;\npenPos.x -= Random(8, 16);\npenPos.y = size.y - Random(6, 20);\n}\nm_length = m_lines.calculateLength();\nm_accumulatedLength = 0.0;\nm_paintedLength = 0.0;\n}\nMSRenderTexture m_texture;\nLineString m_lines;\ndouble m_length = 0.0;\ndouble m_accumulatedLength = 0.0;\ndouble m_paintedLength = 0.0;\n};\nvoid Main()\n{\nconst ColorF backgroundColor{ 1.0, 0.98, 0.96 };\nScene::SetBackground(backgroundColor);\nconst Array&lt;Button&gt; buttons =\n{\nButton{ Rect{ Arg::center(400, 300), 300, 80 }, U\"\u3042\u305d\u3076\" },\nButton{ Rect{ Arg::center(400, 400), 300, 80 }, U\"\u30b9\u30b3\u30a2\" },\nButton{ Rect{ Arg::center(400, 500), 300, 80 }, U\"\u304a\u308f\u308b\" },\n};\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nArray&lt;PenEffect&gt; penEffects =\n{\nPenEffect{ Size{300, 90} },\nPenEffect{ Size{300, 90} },\nPenEffect{ Size{300, 90} }\n};\nOptional&lt;size_t&gt; selectedItem;\nStopwatch stopwatch{ StartImmediately::Yes };\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Restart\", Vec2{ 20,20 }))\n{\nfor (auto&amp; penEffect : penEffects)\n{\npenEffect.reset();\n}\nstopwatch.restart();\n}\nfor (size_t i = 0; i &lt; penEffects.size(); ++i)\n{\nif ((i * 250) &lt; stopwatch.ms())\n{\npenEffects[i].update(Scene::DeltaTime() * 0.5);\n}\n}\nselectedItem.reset();\nfor (size_t i = 0; i &lt; buttons.size(); ++i)\n{\nconst auto&amp; button = buttons[i];\nif (button.rect.mouseOver())\n{\nselectedItem = i;\nCursor::RequestStyle(CursorStyle::Hand);\n}\nconst bool selected = (selectedItem == i);\npenEffects[i].getTexture().drawAt(button.rect.center(), HSV{ 30 + i * 60 });\nfont(button.label)\n.drawAt(TextStyle::OutlineShadow(0.3, HSV{ backgroundColor } - HSV{0.0, 0.0, 0.5}, Vec2{ 0, 0 }, backgroundColor),\n(selected ? 48 : 40), button.rect.center(), ColorF{ 1.0, 0.0 });\n}\n}\n}\n</code></pre>"},{"location":"samples/ui/#5-\u30e1\u30cb\u30e5\u30fc\u753b\u9762","title":"5. \u30e1\u30cb\u30e5\u30fc\u753b\u9762","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.9, 0.95, 1.0 });\nwhile (System::Update())\n{\nRect{ 450, 0, 100, 600 }\n.shearedX(150).draw(HSV{ 40, 0.5, 1.0 });\nRect{ 550, 0, 400, 600 }\n.shearedX(150).draw(HSV{ 40, 0.8, 1.0 });\nfor (int32 i = 0; i &lt; 5; ++i)\n{\nconst RoundRect rr{ 50, (60 + i * 100), 350, 80, 40 };\nrr.drawShadow(Vec2{ 4, 4 }, 18, 0)\n.draw();\nCircle{ rr.rect.pos.movedBy(rr.r, rr.r), rr.r }\n.stretched(-5)\n.draw(HSV{ 40, 0.5, 1.0 });\n}\n}\n}\n</code></pre>"},{"location":"samples/ui/#6-\u30b9\u30d7\u30ec\u30c3\u30c9\u30b7\u30fc\u30c8","title":"6. \u30b9\u30d7\u30ec\u30c3\u30c9\u30b7\u30fc\u30c8","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconstexpr int32 CellCountX = 8;\nconstexpr int32 CellCountY = 15;\nArray&lt;double&gt; minColumnWidths((CellCountX + 1), 120);\nminColumnWidths[0] = 20;\nArray&lt;String&gt; columnNames = { U\"\" };\nfor (int32 i = 1; i &lt; (CellCountX + 1); ++i)\n{\ncolumnNames.push_back(String{ (U'A' + i - 1) });\n}\nSimpleTable table{ minColumnWidths, {\n.cellHeight = 36,\n.variableWidth = true,\n} };\ntable.push_back_row(columnNames, Array&lt;int32&gt;((CellCountX + 1), 0));\ntable.setRowBackgroundColor(0, ColorF{ 0.9 });\nfor (int32 i = 1; i &lt; (CellCountY + 1); ++i)\n{\nArray&lt;String&gt; row(CellCountX + 1);\nrow[0] = U\"{}\"_fmt(i);\nArray&lt;int32&gt; rowAlignments((CellCountX + 1), 1);\nrowAlignments[0] = 0;\ntable.push_back_row(row, rowAlignments);\ntable.setBackgroundColor(i, 0, ColorF{ 0.9 });\n}\nOptional&lt;Point&gt; activeIndex;\nOptional&lt;Point&gt; nextActiveIndex;\nTextEditState textEditState;\nwhile (System::Update())\n{\nif (nextActiveIndex)\n{\nactiveIndex = *nextActiveIndex;\ntextEditState = TextEditState{ table.getItem(*activeIndex).text };\ntextEditState.cursorPos = textEditState.text.length();\ntextEditState.active = true;\nnextActiveIndex.reset();\n}\n{\nconstexpr Vec2 TablePos{ 40, 40 };\nif (MouseL.down())\n{\nconst auto newActiveIndex = table.cellIndex(TablePos, Cursor::Pos());\nif (newActiveIndex != activeIndex)\n{\nactiveIndex = table.cellIndex(TablePos, Cursor::Pos());\nif (activeIndex)\n{\ntextEditState = TextEditState{ table.getItem(*activeIndex).text };\ntextEditState.cursorPos = textEditState.text.length();\ntextEditState.active = true;\nMouseL.clearInput();\n}\n}\n}\ntable.draw(TablePos);\nif (activeIndex &amp;&amp; ((activeIndex-&gt;x != 0) &amp;&amp; (activeIndex-&gt;y != 0)))\n{\nconst RectF cellRegion = table.cellRegion(TablePos, *activeIndex);\nif (SimpleGUI::TextBox(textEditState, cellRegion.pos, cellRegion.w))\n{\ntable.setText(*activeIndex, textEditState.text);\n}\nif (textEditState.enterKey)\n{\nnextActiveIndex = Point{ activeIndex-&gt;x, (activeIndex-&gt;y + 1) };\n}\nif ((1 &lt; activeIndex-&gt;y) &amp;&amp; KeyUp.down())\n{\nnextActiveIndex = Point{ activeIndex-&gt;x, (activeIndex-&gt;y - 1) };\n}\nif ((activeIndex-&gt;y &lt; CellCountY) &amp;&amp; KeyDown.down())\n{\nnextActiveIndex = Point{ activeIndex-&gt;x, (activeIndex-&gt;y + 1) };\n}\nif ((1 &lt; activeIndex-&gt;x) &amp;&amp; KeyLeft.down())\n{\nnextActiveIndex = Point{ (activeIndex-&gt;x - 1), activeIndex-&gt;y };\n}\nif ((activeIndex-&gt;x &lt; CellCountX) &amp;&amp; KeyRight.down())\n{\nnextActiveIndex = Point{ (activeIndex-&gt;x + 1), activeIndex-&gt;y };\n}\nif (KeyDelete.down())\n{\ntextEditState.clear();\ntable.setText(*activeIndex, U\"\");\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/ui/#7-\u7d75\u6587\u5b57\u4ed8\u304d\u306e\u30dc\u30bf\u30f3","title":"7. \u7d75\u6587\u5b57\u4ed8\u304d\u306e\u30dc\u30bf\u30f3","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30dc\u30bf\u30f3\u306e\u80cc\u666f\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\nTexture CreateButtonTexture()\n{\nMSRenderTexture renderTexture{ Size{ 160, 60 }, ColorF{ 0.96 } };\n{\nconst ScopedRenderTarget2D renderTarget{ renderTexture };\nconst ColorF PatternColor{ 0.85 };\nfor (int32 x = 0; x &lt;= 8; ++x)\n{\nRectF{ Arg::center((x * 20), 25), 2 }.rotated(45_deg).draw(PatternColor);\nRectF{ Arg::center((10 + x * 20), 30), 3 }.rotated(45_deg).draw(PatternColor);\nRectF{ Arg::center((x * 20), 35), 4 }.rotated(45_deg).draw(PatternColor);\nRectF{ Arg::center((10 + x * 20), 40), 5 }.rotated(45_deg).draw(PatternColor);\nRectF{ Arg::center((x * 20), 45), 6 }.rotated(45_deg).draw(PatternColor);\nRectF{ Arg::center((10 + x * 20), 50), 7 }.rotated(45_deg).draw(PatternColor);\nRectF{ Arg::center((x * 20), 55), 8 }.rotated(45_deg).draw(PatternColor);\nRectF{ Arg::center((10 + x * 20), 60), 9 }.rotated(45_deg).draw(PatternColor);\n}\n}\n// MSRenderTexture \u306e\u5b8c\u6210\u306b\u306f\n// 2D \u63cf\u753b\u547d\u4ee4\u306e\u767a\u884c (Flush) + MSAA \u306e\u89e3\u6c7a (Resolve) \u304c\u5fc5\u8981\nGraphics2D::Flush();\nrenderTexture.resolve();\n// \u5b8c\u6210\u3057\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u8fd4\u3059\nreturn renderTexture;\n}\nclass RichButton\n{\npublic:\nRichButton() = default;\nexplicit RichButton(const Emoji&amp; emoji)\n: m_emoji{ emoji }\n, m_bufferedEmoji{ MakeRoundBuffer(CreateEmojiPolygons(emoji), 5).scaled(EmojiScale) } {}\nvoid draw(const Rect&amp; rect, const Texture&amp; buttonTexture, const Font&amp; font, const String&amp; text)\n{\nconst ColorF PrimaryColor{ 0.3, 0.5, 1.0 };\nconst RoundRect roundRect{ rect, 10 };\nconst bool mouseOver = roundRect.mouseOver();\nm_transition.update((not roundRect.intersects(Cursor::PreviousPos())) &amp;&amp; mouseOver);\nif (mouseOver)\n{\nCursor::RequestStyle(CursorStyle::Hand);\nroundRect(buttonTexture).draw(MouseL.pressed() ? ColorF{ 0.95 } : ColorF{ 1.05 }).drawFrame(0, 3, PrimaryColor);\n}\nelse\n{\nroundRect(buttonTexture).draw().drawFrame(2);\n}\n{\ndouble angle = Math::Sin(m_transition.value() * 8_pi) * 5_deg * m_transition.value();\nconst Vec2 emojiCenter = rect.getRelativePoint(0.5, 0.05);\n{\nconst Transformer2D transformer{ Mat3x2::Rotate(angle, emojiCenter) };\nm_bufferedEmoji.draw(emojiCenter, mouseOver ? PrimaryColor : ColorF{ 0.3, 0.25, 0.2 });\nm_emoji.scaled(EmojiScale).rotated(angle).drawAt(emojiCenter);\n}\n}\nfont(text).drawAt(TextStyle::Outline(0.0, 0.2, ColorF{ 1.0 }), 26, rect.getRelativePoint(0.5, 0.7), PrimaryColor);\n}\nprivate:\nTexture m_emoji;\nMultiPolygon m_bufferedEmoji;\nTransition m_transition{ 0.0s, 0.8s };\nstatic constexpr double EmojiScale = 0.4;\nstatic MultiPolygon CreateEmojiPolygons(const Emoji&amp; emoji)\n{\nreturn Image{ emoji }.alphaToPolygonsCentered(160, AllowHoles::No);\n}\nstatic MultiPolygon MakeRoundBuffer(const MultiPolygon&amp; polygons, int32 distance)\n{\nMultiPolygon result;\nfor (const auto&amp; polygon : polygons)\n{\nresult = Geometry2D::Or(result, polygon.calculateRoundBuffer(distance));\n}\nreturn result;\n}\n};\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture buttonTexture = CreateButtonTexture();\nconst Font font{ FontMethod::MSDF, 48, Typeface::Heavy };\nRichButton button1{ U\"\ud83d\uddfa\"_emoji };\nRichButton button2{ U\"\ud83d\udee0\"_emoji };\nRichButton button3{ U\"\u2709\"_emoji };\nRichButton button4{ U\"\u2699\"_emoji };\nwhile (System::Update())\n{\nbutton1.draw(Rect{ 40, 500, 160, 60 }, buttonTexture, font, U\"\u30de\u30c3\u30d7\");\nbutton2.draw(Rect{ 220, 500, 160, 60 }, buttonTexture, font, U\"\u958b\u767a\");\nbutton3.draw(Rect{ 400, 500, 160, 60 }, buttonTexture, font, U\"\u304a\u77e5\u3089\u305b\");\nbutton4.draw(Rect{ 580, 500, 160, 60 }, buttonTexture, font, U\"\u8a2d\u5b9a\");\n}\n}\n</code></pre>"},{"location":"samples/ui/#8-\u5965\u884c\u304d\u578b-ui","title":"8. \u5965\u884c\u304d\u578b UI","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30db\u30e2\u30b0\u30e9\u30d5\u30a3\u5909\u63db\u30b7\u30a7\u30fc\u30c0\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\nstruct Homography\n{\nFloat4 m1;\nFloat4 m2;\nFloat4 m3;\n};\nvoid Main()\n{\nWindow::Resize(1000, 600);\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u30db\u30e2\u30b0\u30e9\u30d5\u30a3\u5909\u63db\u7528\u306e\u30b7\u30a7\u30fc\u30c0\nconst VertexShader vs = HLSL{ U\"example/shader/hlsl/homography.hlsl\", U\"VS\" }\n| GLSL{ U\"example/shader/glsl/homography.vert\", {{ U\"VSConstants2D\", 0 }, { U\"VSHomography\", 1} } };\nconst PixelShader ps = HLSL{ U\"example/shader/hlsl/homography.hlsl\", U\"PS\" }\n| GLSL{ U\"example/shader/glsl/homography.frag\", {{ U\"PSConstants2D\", 0 }, { U\"PSHomography\", 1} } };\nif ((not vs) || (not ps))\n{\nthrow Error{ U\"Failed to load shader files\" };\n}\n// \u30db\u30e2\u30b0\u30e9\u30d5\u30a3\u5909\u63db\u30b7\u30a7\u30fc\u30c0\u306e\u5b9a\u6570\u30d0\u30c3\u30d5\u30a1\uff08\u30d1\u30e9\u30e1\u30fc\u30bf\uff09\nConstantBuffer&lt;Homography&gt; vsHomography;\nConstantBuffer&lt;Homography&gt; psHomography;\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nconst Texture compassIcon{ 0xF018B_icon, 90 };\nconst Texture swordIcon{ 0xF18BE_icon, 90 };\nconst Texture plusIcon{ 0xF0417_icon, 42 };\nconst Texture moneyEmoji{ U\"\ud83d\udcb0\"_emoji };\nconst Texture gemEmoji{ U\"\ud83d\udc8e\"_emoji };\nconst ColorF PrimaryColor{ 0.98, 0.96, 0.94 };\nconst ColorF HoverColor{ 1.0, 0.96, 0.8 };\n// \u5909\u63db\u524d\u306e\u56db\u89d2\u5f62\nconst Rect BaseRect{ 0, 0, 600, 600 };\n// \u5909\u63db\u5f8c\u306e\u56db\u89d2\u5f62\nconst Quad TargetQuad{ 500, 60, 1000, 0, 1000, 600, 480, 520 };\n// \u30db\u30e2\u30b0\u30e9\u30d5\u30a3\u5909\u63db\u306e\u5c04\u5f71\u884c\u5217\u3092\u5f97\u308b\nconst Mat3x3 projection = Mat3x3::Homography(Rect{ 600 }.asQuad(), TargetQuad);\nconst Rect Button1{ 40, 40, 560, 200 };\nconst Rect Button2{ 100, 260, 240, 100 };\nconst Rect Button3{ 360, 260, 240, 100 };\nconst Rect Button4{ 160, 380, 440, 140 };\nconst Rect Button5{ Arg::center(230, 570), 40 };\n// \u5404\u30dc\u30bf\u30f3\u306e\u5c04\u5f71\u5f8c\u306e\u56db\u89d2\u5f62\nconst Quad Button1Quad = projection.transformRect(Button1);\nconst Quad Button2Quad = projection.transformRect(Button2);\nconst Quad Button3Quad = projection.transformRect(Button3);\nconst Quad Button4Quad = projection.transformRect(Button4);\nconst Quad Button5Quad = projection.transformRect(Button5);\n// UI \u306e\u63cf\u753b\u5148\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\nMSRenderTexture renderTexture{ BaseRect.size };\nwhile (System::Update())\n{\n// \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u306b UI \u3092\u63cf\u304f\n{\n// renderTexture \u3092 ColorF{ 1.0, 0.0 } \u3067\u30af\u30ea\u30a2\u3057,\n// renderTexture \u3092\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u3059\u308b\nconst ScopedRenderTarget2D renderTarget{ renderTexture.clear(ColorF{ 1.0, 0.0 }) };\n// renderTexture \u306e\u30a2\u30eb\u30d5\u30a1\u5024\u304c\u3059\u3079\u3066 0 \u306a\u306e\u3067\u3001\u6700\u5927\u306e\u30a2\u30eb\u30d5\u30a1\u5024\u3092\u66f8\u304d\u8fbc\u3080\u3088\u3046\u306a\u30d6\u30ec\u30f3\u30c9\u30b9\u30c6\u30fc\u30c8\u3092\u9069\u7528\u3059\u308b\nBlendState blend = BlendState::Default2D;\nblend.opAlpha = BlendOp::Max;\nblend.dstAlpha = Blend::DestAlpha;\nblend.srcAlpha = Blend::SrcAlpha;\nconst ScopedRenderStates2D renderState{ blend };\n// UI \u3092\u63cf\u753b\u3059\u308b\n{\n// \u63a2\u7d22\n{\nButton1.movedBy(12, 10).draw(ColorF{ 0.5, 0.4, 0.3 });\nButton1.draw(Button1Quad.mouseOver() ? HoverColor : PrimaryColor);\nfont(U\"\u63a2\u7d22\").draw(88, Arg::leftCenter(80, 140), ColorF{ 0.4, 0.3, 0.2 });\nif (Button1Quad.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n}\n// \u4efb\u52d9\n{\nButton2.movedBy(12, 10).draw(ColorF{ 0.5, 0.4, 0.3 });\nButton2.draw(Button2Quad.mouseOver() ? HoverColor : PrimaryColor);\nfont(U\"\u4efb\u52d9\").draw(44, Arg::leftCenter(120, 310), ColorF{ 0.4, 0.3, 0.2 });\ncompassIcon.drawAt(280, 310, ColorF{ 0.8 });\nif (Button2Quad.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n}\n// \u7de8\u6210\n{\nButton3.movedBy(12, 10).draw(ColorF{ 0.5, 0.4, 0.3 });\nButton3.draw(Button3Quad.mouseOver() ? HoverColor : PrimaryColor);\nfont(U\"\u7de8\u6210\").draw(44, Arg::leftCenter(380, 310), ColorF{ 0.4, 0.3, 0.2 });\nswordIcon.drawAt(540, 310, ColorF{ 0.8 });\nif (Button3Quad.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n}\n// \u30a4\u30d9\u30f3\u30c8\n{\nButton4.draw(ColorF{ 0.2, 0.4, 0.6 });\nfont(U\"\u30a4\u30d9\u30f3\u30c8\").draw(33, Arg::leftCenter(180, 415));\nif (Button4Quad.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n}\n// \u30b8\u30a7\u30e0\u3068\u304a\u91d1\n{\nRect{ 60, 540, 540, 60 }.draw(ColorF{ 0.0, 0.6 });\ngemEmoji.scaled(0.36).drawAt(120, 570);\nfont(U\"67\").draw(TextStyle::Outline(0.0, 0.2, ColorF{ 0.1 }), 36, Arg::leftCenter(150, 570));\nCircle{ Button5.center(), 20 }.draw(ColorF{ 0.2, 0.8 });\nplusIcon.drawAt(Button5.center(), Button5Quad.mouseOver() ? HoverColor : PrimaryColor);\nif (Button5Quad.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\nmoneyEmoji.scaled(0.36).drawAt(300, 570);\nfont(ThousandsSeparate(12345)).draw(TextStyle::Outline(0.0, 0.2, ColorF{ 0.1 }), 36, Arg::leftCenter(330, 570));\n}\n}\n// MSRenderTexture \u306e\u5b8c\u6210\u306b\u306f\n// 2D \u63cf\u753b\u547d\u4ee4\u306e\u767a\u884c (Flush) + MSAA \u306e\u89e3\u6c7a (Resolve) \u304c\u5fc5\u8981\nGraphics2D::Flush();\nrenderTexture.resolve();\n}\n// \u5965\u884c\u304d\u578b\u306e UI \u3092\u63cf\u304f\n{\n// \u53f3\u7aef\u306b\u5411\u304b\u3063\u3066\u5f71\u306e\u52b9\u679c\nRect{ 460, 0, 540, 600 }.draw(Arg::left = ColorF{ 0.0, 0.0 }, Arg::right = ColorF{ 0.0, 0.2 });\n// \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u30db\u30e2\u30b0\u30e9\u30d5\u30a3\u5909\u63db\u3067\u5c04\u5f71\u3059\u308b\n{\nconst ScopedCustomShader2D shader{ vs, ps };\nconst ScopedRenderStates2D sampler{ SamplerState::ClampAniso };\nconst Mat3x3 mat = Mat3x3::Homography(TargetQuad);\nvsHomography = { Float4{ mat._11_12_13, 0 }, Float4{ mat._21_22_23, 0 }, Float4{ mat._31_32_33, 0 } };\nGraphics2D::SetVSConstantBuffer(1, vsHomography);\nconst Mat3x3 inv = mat.inverse();\npsHomography = { Float4{ inv._11_12_13, 0 }, Float4{ inv._21_22_23, 0 }, Float4{ inv._31_32_33, 0 } };\nGraphics2D::SetPSConstantBuffer(1, psHomography);\n// 1x1 \u306e Rect \u306b\u8cbc\u308a\u4ed8\u3051\u3066\u63cf\u304f\u3068\u3001\u9069\u5207\u306b\u30db\u30e2\u30b0\u30e9\u30d5\u30a3\u5909\u63db\u3055\u308c\u308b\nRect{ 1 }(renderTexture).draw();\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/ui/#9-\u6587\u7ae0\u4e2d\u306b\u753b\u50cf\u3092\u633f\u5165\u3059\u308b","title":"9. \u6587\u7ae0\u4e2d\u306b\u753b\u50cf\u3092\u633f\u5165\u3059\u308b","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nstruct Item\n{\nTexture icon;\nString name;\nString desc;\n};\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font1{ 30, Typeface::Heavy }, font2{ 15, Typeface::Bold };\nconst Array&lt;Texture&gt; emojis = {\nTexture{ U\"\u2699\ufe0f\"_emoji }, Texture{ U\"\u26a1\"_emoji }, Texture{ U\"\u2665\"_emoji } };\nconst Array&lt;Item&gt; items =\n{\n{ Texture{ U\"\ud83c\udfed\"_emoji }, U\"\u5de5\u5834\", U\"\u6bce\u30bf\u30fc\u30f3 6 $0 \u3092\u751f\u7523\u3059\u308b\\n\u96fb\u529b 3 $1 \u304c\u5fc5\u8981\" },\n{ Texture{ U\"\ud83c\udfdf\"_emoji }, U\"\u30b9\u30bf\u30b8\u30a2\u30e0\", U\"\u6bce\u30bf\u30fc\u30f3 4 $2 \u3092\u4f9b\u7d66\u3059\u308b\\n\u96fb\u529b 2 $1 \u304c\u5fc5\u8981\" },\n{ Texture{ U\"\ud83c\udfd6\"_emoji }, U\"\u30d3\u30fc\u30c1\", U\"\u6bce\u30bf\u30fc\u30f3 2 $2 \u3092\u4f9b\u7d66\u3059\u308b\\n\u7802\u6d5c\u306b\u3057\u304b\u5efa\u8a2d\u3067\u304d\u306a\u3044\" }\n};\nconst RoundRect r0{ 0, 0, 360, 100, 6 };\nconst RoundRect r1{ 5, 5, 90, 90, 5 };\nconstexpr double EmojiSize = 22;\nwhile (System::Update())\n{\nfor (size_t i = 0; i &lt; items.size(); ++i)\n{\nconst auto&amp; item = items[i];\nconst Transformer2D t{ Mat3x2::Translate(40, (40 + i * 110.0)) };\nr0.drawShadow(Vec2{ 4, 4 }, 8, 1)\n.draw(ColorF{ 0.2, 0.25, 0.3 })\n.drawFrame(1, 1, ColorF{ 0.4, 0.5, 0.6 });\nr1.draw(ColorF{ 0.85, 0.9, 0.95 });\nitem.icon.resized(80).drawAt(r1.center());\nfont1(item.name).draw(r1.rect.pos.movedBy(102, 0));\nconst Vec2 penPos0 = r1.rect.pos.movedBy(102, 42);\nVec2 penPos = penPos0;\nbool onTag = false;\nfor (const auto&amp; glyph : font2.getGlyphs(item.desc))\n{\nif (onTag)\n{\nemojis[(glyph.codePoint - U'0')].resized(EmojiSize).draw(Arg::leftCenter(penPos.x, penPos.y + font2.height() * 0.5));\npenPos.x += EmojiSize;\nonTag = false;\ncontinue;\n}\nif (glyph.codePoint == U'$')\n{\nonTag = true;\ncontinue;\n}\nonTag = false;\nif (glyph.codePoint == U'\\n')\n{\npenPos.x = penPos0.x;\npenPos.y += font2.height();\n}\nelse\n{\nglyph.texture.draw(Math::Round(penPos + glyph.getOffset()));\npenPos.x += glyph.xAdvance;\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/ui/#10-\u30bf\u30a4\u30eb\u578b\u306e\u30dc\u30bf\u30f3","title":"10. \u30bf\u30a4\u30eb\u578b\u306e\u30dc\u30bf\u30f3","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nclass TileButton\n{\npublic:\nstruct Palette\n{\nColorF tileColor1;\nColorF tileColor2;\nColorF borderColor1;\nColorF borderColor2;\n};\nTileButton() = default;\nTileButton(const Icon&amp; icon, int32 iconSize, const Font&amp; font, double fontSize, const String&amp; text, const RectF&amp; rect, const Palette&amp; palette)\n: TileButton{ Texture{ icon, iconSize }, iconSize, font, fontSize, text, rect, palette } {}\n// Texture \u304b\u3089\u30a2\u30a4\u30b3\u30f3\u3092\u4f5c\u6210\nTileButton(const TextureRegion&amp; textureRegion, int32 iconSize, const Font&amp; font, double fontSize, const String&amp; text, const RectF&amp; rect, const Palette&amp; palette)\n: m_icon{ textureRegion }\n, m_iconSize{ iconSize }\n, m_font{ font }\n, m_fontSize{ fontSize }\n, m_text{ text }\n, m_rect{ rect }\n, m_palette{ palette } {}\nbool update()\n{\nconst bool mouseOver = m_rect.mouseOver();\nbool pushed = false;\nif (mouseOver)\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\nif (not m_pressed)\n{\nif (m_rect.leftClicked())\n{\nm_pressed = true;\n}\n}\nelse\n{\nif (m_rect.leftReleased())\n{\nm_pressed = false;\npushed = true;\n}\nelse if (not m_rect.mouseOver())\n{\nm_pressed = false;\n}\n}\nm_transitionPressed.update(m_pressed);\nreturn pushed;\n}\nvoid draw() const\n{\nconst double t = m_transitionPressed.value();\nconst Transformer2D transform{ Mat3x2::Scale((1 + t * 0.06), m_rect.center()) };\n// \u30bf\u30a4\u30eb\n{\nm_rect.draw(m_palette.tileColor1.lerp(m_palette.tileColor2, t));\nm_rect.stretched(Math::Lerp(-InnerBorderMargin, 0, t))\n.drawFrame(0.1, (1.0 + t * 2.0), m_palette.borderColor1.lerp(m_palette.borderColor2, t));\n}\n// \u30a2\u30a4\u30b3\u30f3\n{\nm_icon\n.drawAt(m_rect.getRelativePoint(0.5, 0.4), m_palette.tileColor2.lerp(m_palette.tileColor1, t));\n}\n// \u30e9\u30d9\u30eb\n{\nm_font(m_text)\n.drawAt(m_fontSize, m_rect.getRelativePoint(0.5, 0.8), m_palette.tileColor2.lerp(m_palette.tileColor1, t));\n}\n}\nprivate:\nstatic constexpr double InnerBorderMargin = 3.0;\nTextureRegion m_icon;\nint32 m_iconSize = 0;\nFont m_font;\ndouble m_fontSize = 0;\nString m_text;\nRectF m_rect;\nTransition m_transitionPressed{ 0.09s, 0.12s };\nPalette m_palette;\nbool m_pressed = false;\n};\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.3 });\nconst Font font1{ FontMethod::MSDF, 48, U\"example/font/RocknRoll/RocknRollOne-Regular.ttf\" };\nconst Font font2{ FontMethod::MSDF, 48, Typeface::Heavy };\nconstexpr int32 IconSize1 = 65;\nconstexpr int32 IconSize2 = 40;\nconstexpr int32 IconSize3 = 60;\nconstexpr double FontSize1 = 22;\nconstexpr double FontSize2 = 15.5;\nconstexpr double FontSize3 = 24;\nconstexpr TileButton::Palette Palette1{\n.tileColor1 = ColorF{ 0.3, 0.2, 0.0 },\n.tileColor2 = ColorF{ 1.0, 0.95, 0.75 },\n.borderColor1 = ColorF{ 1.0, 0.4 },\n.borderColor2 = ColorF{ 1.0, 0.8, 0.4 }\n};\nArray&lt;TileButton&gt; buttons = {\n{ 0xF034D_icon, IconSize1, font1, FontSize1, U\"\u30de\u30c3\u30d7\", Rect{40, 40, 130}, Palette1 },\n{ 0xF018B_icon, IconSize1, font1, FontSize1, U\"\u30a4\u30d9\u30f3\u30c8\", Rect{180, 40, 130}, Palette1 },\n{ 0xF0E10_icon, IconSize1, font1, FontSize1, U\"\u30d0\u30c3\u30b0\", Rect{ 320, 40, 130 }, Palette1 },\n{ 0xF05DA_icon, IconSize1, font1, FontSize1, U\"\u5192\u967a\u306e\u8a18\u9332\", Rect{ 460, 40, 130 }, Palette1 },\n{ 0xF0538_icon, IconSize1, font1, FontSize1, U\"\u5b9f\u7e3e\", Rect{ 600, 40, 130 }, Palette1 },\n{ 0xF0493_icon, IconSize1, font1, FontSize1, U\"\u8a2d\u5b9a\", Rect{ 740, 40, 130 }, Palette1 },\n{ 0xF034D_icon, IconSize2, font1, FontSize2, U\"\u30de\u30c3\u30d7\", Rect{ 40, 200, 90 }, Palette1 },\n{ 0xF018B_icon, IconSize2, font1, FontSize2, U\"\u30a4\u30d9\u30f3\u30c8\", Rect{ 140, 200, 90 }, Palette1 },\n{ 0xF0E10_icon, IconSize2, font1, FontSize2, U\"\u30d0\u30c3\u30b0\", Rect{ 240, 200, 90 }, Palette1 },\n{ 0xF05DA_icon, IconSize2, font1, FontSize2, U\"\u5192\u967a\u306e\u8a18\u9332\", Rect{ 340, 200, 90 }, Palette1 },\n{ 0xF0538_icon, IconSize2, font1, FontSize2, U\"\u5b9f\u7e3e\", Rect{ 440, 200, 90 }, Palette1 },\n{ 0xF0493_icon, IconSize2, font1, FontSize2, U\"\u8a2d\u5b9a\", Rect{ 540, 200, 90 }, Palette1 },\n{ 0xF0A70_icon, IconSize3, font2, FontSize3, U\"\u30e1\u30cb\u30e5\u30fc\", Rect{ 40, 360, 150, 120 }, { HSV{ 25, 1, 0.8 }, Palette::White, ColorF{ 1.0, 0.4 }, HSV{ 25, 0.5, 1 } } },\n{ 0xF0AAF_icon, IconSize3, font2, FontSize3, U\"\u5177\u6750\", Rect{ 200, 360, 150, 120 }, { HSV{ 75, 1, 0.8 }, Palette::White, ColorF{ 1.0, 0.4 }, HSV{ 75, 0.5, 1 } } },\n{ 0xF110E_icon, IconSize3, font2, FontSize3, U\"\u8abf\u5473\u6599\", Rect{ 360, 360, 150, 120 }, { HSV{ 125, 1, 0.8 }, Palette::White, ColorF{ 1.0, 0.4 }, HSV{ 125, 0.5, 1 } } },\n{ 0xF0110_icon, IconSize3, font2, FontSize3, U\"\u4ed5\u5165\u308c\", Rect{ 520, 360, 150, 120 }, { HSV{ 175, 1, 0.8 }, Palette::White, ColorF{ 1.0, 0.4 }, HSV{ 175, 0.5, 1 } } },\n{ 0xF04DE_icon, IconSize3, font2, FontSize3, U\"\u8a2d\u5099\", Rect{ 680, 360, 150, 120 }, { HSV{ 225, 1, 0.8 }, Palette::White, ColorF{ 1.0, 0.4 }, HSV{ 225, 0.5, 1 } } },\n{ 0xF00E6_icon, IconSize3, font2, FontSize3, U\"\u5ba3\u4f1d\", Rect{ 840, 360, 150, 120 }, { HSV{ 275, 1, 0.8 }, Palette::White, ColorF{ 1.0, 0.4 }, HSV{ 275, 0.5, 1 } } },\n{ 0xF012A_icon, IconSize3, font2, FontSize3, U\"\u58f2\u308a\u4e0a\u3052\", Rect{ 1000, 360, 150, 120 }, { HSV{ 325, 1, 0.8 }, Palette::White, ColorF{ 1.0, 0.4 }, HSV{ 325, 0.5, 1 } } },\n};\nwhile (System::Update())\n{\nRect{ 0, 0, Scene::Width(), 320 }.draw(ColorF{ 0.8, 0.7, 0.6 });\nfor (auto&amp; button : buttons)\n{\nbutton.update();\n}\nfor (const auto&amp; button : buttons)\n{\nbutton.draw();\n}\n}\n}\n</code></pre>"},{"location":"samples/ui/#11-\u30b2\u30fc\u30e0\u306b\u4fbf\u5229\u306a\u30a2\u30a4\u30b3\u30f3\u96c6","title":"11. \u30b2\u30fc\u30e0\u306b\u4fbf\u5229\u306a\u30a2\u30a4\u30b3\u30f3\u96c6","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Font iconFont{ FontMethod::MSDF, 40, Typeface::Icon_MaterialDesign };\nconst Texture faceEmoji{ U\"\ud83d\udc31\"_emoji };\ndouble volume = 1.0;\nint32 up = 0, down = 0;\nwhile (System::Update())\n{\nSimpleGUI::Button(U\"\\U000F0009 \u30a2\u30ab\u30a6\u30f3\u30c8\", Vec2{ 20, 20 }, 220);\nSimpleGUI::Button(U\"\\U000F01F0 \u304a\u77e5\u3089\u305b\", Vec2{ 20, 60 }, 220);\nSimpleGUI::Button(U\"\\U000F01DA \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\", Vec2{ 20, 100 }, 220);\nSimpleGUI::Button(U\"\\U000F01A5 \u6700\u9ad8\u8a18\u9332\", Vec2{ 20, 140 }, 220);\nSimpleGUI::Button(U\"\\U000F0193 \u4fdd\u5b58\", Vec2{ 20, 180 }, 220);\nSimpleGUI::Button(U\"\\U000F1268 Copy to clipboard\", Vec2{ 20, 220 }, 220);\nSimpleGUI::Button(U\"\\U000F0189 \u30e1\u30c3\u30bb\u30fc\u30b8\", Vec2{ 20, 260 }, 220);\nSimpleGUI::Button(U\"\\U000F0493 \u8a2d\u5b9a\", Vec2{ 20, 300 }, 220);\nSimpleGUI::Button(U\"\\U000F1398 \u4e2d\u65ad\u3059\u308b\", Vec2{ 20, 340 }, 220);\nSimpleGUI::Button(U\"\\U000F0E1E OK\", Vec2{ 20, 380 }, 220);\nSimpleGUI::Button(U\"\\U000F0639 \u30ab\u30fc\u30c9\u3092\u914d\u308b\", Vec2{ 20, 420 }, 220);\nSimpleGUI::Button(U\"\\U000F0240 \u9818\u571f\u3092\u5e83\u3052\u308b\", Vec2{ 20, 460 }, 220);\nSimpleGUI::Button(U\"\\U000F02A1 \u30d7\u30ec\u30bc\u30f3\u30c8\u3059\u308b\", Vec2{ 20, 500 }, 220);\nSimpleGUI::Button(U\"\\U000F02DA \u5c65\u6b74\", Vec2{ 20, 540 }, 220);\n// \u97f3\u91cf\u8abf\u6574\nSimpleGUI::Slider((0.5 &lt; volume) ? U\"\\U000F057E\"\n: (0.0 &lt; volume) ? U\"\\U000F0580\" : U\"\\U000F0581\", volume, Vec2{ 260, 20 }, 30, 170);\n// Undo / Redo\nSimpleGUI::Button(U\"\\U000F054C\", Vec2{ 260, 60 }, 40);\nSimpleGUI::Button(U\"\\U000F044E\", Vec2{ 310, 60 }, 40);\n// upvote\nif (SimpleGUI::Button(U\"\\U000F0513  {}\"_fmt(up), Vec2{ 260, 100 }, 90))\n{\n++up;\n}\n// downvote\nif (SimpleGUI::Button(U\"\\U000F0511  {}\"_fmt(down), Vec2{ 370, 100 }, 90))\n{\n++down;\n}\nSimpleGUI::Button(U\"\u516c\u5f0f\u30b5\u30a4\u30c8 \\U000F0327\", Vec2{ 260, 140 }, 200);\nSimpleGUI::Button(U\"\\U000F0544 \u516c\u5f0f Twitter\", Vec2{ 260, 180 }, 200);\nSimpleGUI::Button(U\"\\U000F018C \u4efb\u52d9\u4e00\u89a7\", Vec2{ 260, 220 }, 200);\nSimpleGUI::Button(U\"\\U000F0982 \u30de\u30c3\u30d7\", Vec2{ 260, 260 }, 200);\nSimpleGUI::Button(U\"\\U000F034E \u73fe\u5728\u5730\", Vec2{ 260, 300 }, 200);\nSimpleGUI::Button(U\"\\U000F0A7A \u524a\u9664\", Vec2{ 260, 340 }, 200);\nSimpleGUI::Button(U\"\\U000F05B7 \u4fee\u7e55\", Vec2{ 260, 380 }, 200);\nSimpleGUI::Button(U\"\\U000F0349 \u691c\u7d22\", Vec2{ 260, 420 }, 200);\nSimpleGUI::Button(U\"\\U000F0432 QR \u4f5c\u6210\", Vec2{ 260, 460 }, 200);\nSimpleGUI::Button(U\"\\U000F0433 QR \u8aad\u307f\u8fbc\u307f\", Vec2{ 260, 500 }, 200);\nSimpleGUI::Button(U\"\\U000F04E6 \u540c\u671f\", Vec2{ 260, 540 }, 200);\n// \u30cf\u30fc\u30c8\niconFont(U\"\\U000F02D1\\U000F02D1\\U000F02D1\\U000F06DF\").draw(500, 20, ColorF{ 0.8, 0.2, 0.2 });\n// \u30b5\u30a4\u30b3\u30ed\niconFont(U\"\\U000F037D\\U000F030C\\U000F0297\").draw(500, 80, ColorF{ 0.25 });\n// \u64cd\u4f5c\u65b9\u6cd5\niconFont(U\"\\U000F114A\\U000F114B\\U000F114C\\U000F114D\\U000F114E\\U000F114F\").draw(500, 140, ColorF{ 0.25 });\n// \u52d5\u753b\u306e\u518d\u751f\nRect{ 500, 200, 240, 160 }.draw(ColorF{ 0.6 });\niconFont(U\"\\U000F040C\").drawAt(80, 620, 280, ColorF{ 1.0 });\n// \u30bb\u30ea\u30d5\u30a2\u30a4\u30b3\u30f3\nfaceEmoji.scaled(0.75).drawAt(560, 440);\niconFont(U\"\\U000F1170\").drawAt(50, 630, 400, ColorF{ 0.1 });\n// \u62e1\u5927\u7e2e\u5c0f\nCircle{ 540, 530, 30 }.draw();\niconFont(U\"\\U000F06EC\").drawAt(50, 540, 530, ColorF{ 0.1 });\nCircle{ 620, 530, 30 }.draw();\niconFont(U\"\\U000F06ED\").drawAt(50, 620, 530, ColorF{ 0.1 });\n}\n}\n</code></pre>"},{"location":"samples/ui/#12-\u30bf\u30d6","title":"12. \u30bf\u30d6","text":"<p>Siv3D-Sample | \u30bf\u30d6 </p>"},{"location":"samples/ui/#13-hp-\u30d0\u30fc","title":"13. HP \u30d0\u30fc","text":"<p>Siv3D-Sample | HP \u30d0\u30fc </p>"},{"location":"samples/ui/#14-\u30d1\u30a4\u30e1\u30cb\u30e5\u30fc","title":"14. \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u7528\u306e\u30a2\u30a4\u30b3\u30f3\nclass PieMenuIcon\n{\npublic:\nPieMenuIcon() = default;\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u7528\u306e\u30a2\u30a4\u30b3\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n/// @param texture \u30a2\u30a4\u30b3\u30f3\u306e\u30c6\u30af\u30b9\u30c1\u30e3\n/// @param color \u30a2\u30a4\u30b3\u30f3\u306e\u63cf\u753b\u8272\nPieMenuIcon(const Texture&amp; texture, const ColorF&amp; color)\n: m_texture{ texture }\n, m_blurTexture{ m_texture.size(), ColorF{ 0.0, 1.0 } }\n, m_color{ color }\n{\nRenderTexture m_internalTexture{ m_texture.size() };\n// \u30a2\u30a4\u30b3\u30f3\u3092\u3084\u3084\u5c0f\u3055\u3081\u306b\u63cf\u753b\u3059\u308b\n{\nconst ScopedRenderTarget2D target{ m_blurTexture };\nm_texture.scaled(0.8).drawAt(m_blurTexture.size() * 0.5);\n}\n// \u30ac\u30a6\u30b9\u307c\u304b\u3057\u3092 2 \u56de\u304b\u3051\u308b\nShader::GaussianBlur(m_blurTexture, m_internalTexture, m_blurTexture);\nShader::GaussianBlur(m_blurTexture, m_internalTexture, m_blurTexture);\n}\nvoid draw() const\n{\n// \u80cc\u666f\u306e\u307c\u304b\u3057\u305f\u5f71\u3092\u6e1b\u7b97\u30d6\u30ec\u30f3\u30c7\u30a3\u30f3\u30b0\u3067\u63cf\u753b\u3059\u308b\n{\nconst ScopedRenderStates2D blend{ BlendState::Subtractive };\nm_blurTexture.scaled(1.35).drawAt(Vec2{ 0, 0 }, ColorF{ 0.25 });\n}\nm_texture.drawAt(Vec2{ 0, 0 }, m_color);\n}\nprivate:\nTexture m_texture;\nRenderTexture m_blurTexture;\nColorF m_color;\n};\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u30af\u30e9\u30b9\nclass PieMenu\n{\npublic:\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u306e\u30b9\u30bf\u30a4\u30eb\nstruct Style\n{\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u306e\u5916\u5074\u306e\u534a\u5f84\ndouble outerRadius = 180.0;\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u306e\u5185\u5074\u306e\u534a\u5f84\ndouble innerRadius = 90.0;\n/// @brief \u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30a2\u30a4\u30c6\u30e0\u304c\u5916\u5074\u306b\u79fb\u52d5\u3059\u308b\u8ddd\u96e2\ndouble pieOuterOffset = 10.0;\n/// @brief \u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30a2\u30a4\u30c6\u30e0\u306e\u67a0\u306e\u592a\u3055\ndouble outlineThickness = 8.0;\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u306e\u8272\nColorF pieColor{ 0.0, 0.75 };\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u306e\u5185\u5074\u306e\u67a0\u306e\u8272\nColorF pieInnerFrameColor{ 0.6 };\n/// @brief \u7121\u52b9\u306a\u30a2\u30a4\u30c6\u30e0\u306e\u8272\nColorF disabledPieColor{ 0.36, 0.4 };\n/// @brief \u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30a2\u30a4\u30c6\u30e0\u306e\u8272\nColorF activePieColor{ 0.36, 0.84, 1.0 };\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u306e\u5916\u5074\u306e\u67a0\u306e\u8272\nColorF activePieOutlineColor{ 1.0, 0.9, 0.2 };\n/// @brief \u30a2\u30a4\u30c6\u30e0\u3092\u6307\u3059\u77e2\u5370\u306e\u8272\nColorF arrowColor{ 1.0, 0.9, 0.2 };\n[[nodiscard]]\nstatic constexpr Style Default() noexcept\n{\nreturn{};\n}\n};\nSIV3D_NODISCARD_CXX20\nPieMenu() = default;\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n/// @param icons \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u306e\u30a2\u30a4\u30b3\u30f3\n/// @param center \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u306e\u4e2d\u5fc3\u5ea7\u6a19\n/// @param style \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u306e\u30b9\u30bf\u30a4\u30eb\nSIV3D_NODISCARD_CXX20\nPieMenu(const Array&lt;PieMenuIcon&gt;&amp; icons, const Vec2&amp; center, const Style&amp; style = Style::Default())\n: m_itemCount{ static_cast&lt;int32&gt;(icons.size()) }\n, m_pieAngle{ Math::TwoPi / m_itemCount }\n, m_style{ style }\n, m_center{ center }\n, m_transitions{ icons.size(), Transition{ 0.1s, 0.2s } }\n, m_icons{ icons }\n, m_enabled(m_itemCount, true)\n{\nconst Circle circle{ m_style.outerRadius - m_style.pieOuterOffset };\nconst double activePieOffset = 0;\nconst double outlineThicknessHalf = (m_style.outlineThickness * 0.5);\n{\nm_defaultPolygon = Polygon::CorrectOne(circle.arcAsPolygon((-m_pieAngle / 2), m_pieAngle, (m_style.outerRadius - m_style.innerRadius), 0.0).outer());\n}\n{\nm_innerOutline = m_defaultPolygon.calculateBuffer(-3).outer();\n}\n{\nconst Array&lt;Vec2&gt; outline = circle.stretched(activePieOffset + outlineThicknessHalf)\n.arcAsPolygon((-m_pieAngle / 2), m_pieAngle, (m_style.outerRadius + activePieOffset - m_style.innerRadius + m_style.outlineThickness), 0.0).outer();\n// m_outlinePolygon \u306e\u751f\u6210\u306b\u5931\u6557\u3059\u308b\u78ba\u7387\u3092\u4e0b\u3052\u308b\u305f\u3081\u306e\u304a\u307e\u3058\u306a\u3044\n{\nm_outlinePolygon = LineString{ outline.rotated(2) }.densified(4.0).calculateRoundBufferClosed(outlineThicknessHalf);\nif ((not m_outlinePolygon) || (not m_outlinePolygon.hasHoles()))\n{\nm_outlinePolygon = LineString{ outline.rotated(1) }.calculateRoundBufferClosed(outlineThicknessHalf);\n}\n}\n}\n}\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u306e\u30a2\u30a4\u30c6\u30e0\u6570\u3092\u8fd4\u3057\u307e\u3059\u3002\n/// @return \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u306e\u30a2\u30a4\u30c6\u30e0\u6570\n[[nodiscard]]\nsize_t size() const noexcept\n{\nreturn m_itemCount;\n}\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u306e\u6307\u5b9a\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u6709\u52b9\u30fb\u7121\u52b9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n/// @param index \u30a2\u30a4\u30c6\u30e0\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n/// @param enabled \u6709\u52b9\u306b\u3059\u308b\u5834\u5408 true, \u7121\u52b9\u306b\u3059\u308b\u5834\u5408\u306f false\n/// @return *this\nPieMenu&amp; setEnabled(size_t index, bool enabled) noexcept\n{\nm_enabled[index] = enabled;\nreturn *this;\n}\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u306e\u6307\u5b9a\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u304c\u6709\u52b9\u304b\u3092\u8fd4\u3057\u307e\u3059\u3002\n/// @param index \u30a2\u30a4\u30c6\u30e0\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n/// @return \u30a2\u30a4\u30c6\u30e0\u304c\u6709\u52b9\u306a\u5834\u5408 true, \u7121\u52b9\u306a\u5834\u5408\u306f false\n[[nodiscard]]\nbool getEnabled(size_t index) const noexcept\n{\nreturn m_enabled[index];\n}\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\nvoid reset() noexcept\n{\nm_selectedPie.reset();\nm_transitions.fill(Transition{ 0.1s, 0.2s });\n}\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\n/// @return \u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3002\u9078\u629e\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f none\nOptional&lt;int32&gt; update()\n{\nm_selectedPie.reset();\nconst Vec2 cursorVector = (Cursor::PosF() - m_center).limitLengthSelf(Math::Lerp(m_style.innerRadius, m_style.outerRadius, 0.55));\nif (m_style.innerRadius &lt;= cursorVector.length())\n{\nm_selectedPie = (static_cast&lt;int32&gt;((cursorVector.getAngle() + Math::TwoPi + (m_pieAngle / 2)) / m_pieAngle) % m_itemCount);\n}\nif (m_selectedPie &amp;&amp; (not m_enabled[*m_selectedPie]))\n{\nm_selectedPie.reset();\n}\nfor (int32 i = 0; i &lt; m_itemCount; ++i)\n{\nconst bool hovered = (i == m_selectedPie);\nm_transitions[i].update(hovered);\n}\nreturn m_selectedPie;\n}\n/// @brief \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u3092\u63cf\u753b\u3057\u307e\u3059\u3002\nvoid draw() const\n{\nfor (int32 i = 0; i &lt; m_itemCount; ++i)\n{\nconst double centerAngle = (i * m_pieAngle);\nconst bool hovered = (i == m_selectedPie);\nconst Vec2 offset = Circular{ (m_style.pieOuterOffset + m_style.outlineThickness * m_transitions[i].value()), centerAngle };\nconst Vec2 scalingCenter = Circular{ ((m_style.innerRadius + m_style.outerRadius) / 2), centerAngle };\nif (m_enabled[i])\n{\n{\nconst Transformer2D transformer{ Mat3x2::Rotate(centerAngle).translated(m_center + offset) };\nm_defaultPolygon.draw(hovered ? m_style.activePieColor : m_style.pieColor);\nif (hovered)\n{\nm_outlinePolygon.draw(m_style.activePieOutlineColor);\n}\nelse\n{\nm_innerOutline.drawClosed(m_style.pieInnerFrameColor);\n}\n}\n{\nconst Vec2 iconOffset = Circular{ Math::Lerp(m_style.innerRadius, m_style.outerRadius, 0.53) + (m_style.outlineThickness * m_transitions[i].value()), centerAngle };\nconst Transformer2D transformer{ Mat3x2::Translate(m_center + iconOffset) };\nm_icons[i].draw();\n}\n}\nelse\n{\nconst Transformer2D transformer{ Mat3x2::Rotate(centerAngle).translated(m_center + offset) };\nm_defaultPolygon.draw(m_style.disabledPieColor);\nif (hovered)\n{\nm_outlinePolygon.draw(m_style.activePieOutlineColor);\n}\n}\n}\n{\nconst Vec2 cursorVector = (Cursor::PosF() - m_center).limitLengthSelf(Math::Lerp(m_style.innerRadius, m_style.outerRadius, 0.55));\nconst double lineLength = Max(0.0, cursorVector.length() - (m_selectedPie ? 14 : 18));\nLine{ m_center, (m_center + cursorVector.withLength(lineLength)) }.draw(4, m_style.arrowColor);\nconst Vec2 triangleCenter = (m_center + cursorVector);\nif (m_selectedPie)\n{\nTriangle{ triangleCenter, 12, cursorVector.getAngle() }.draw(m_style.arrowColor);\nTriangle{ triangleCenter, 26, cursorVector.getAngle() }.drawFrame(4, m_style.arrowColor);\n}\nelse\n{\nCircle{ triangleCenter, 7 }.draw(m_style.arrowColor);\nCircle{ triangleCenter, 12 }.drawFrame(4, m_style.arrowColor);\n}\n}\n}\nprivate:\nint32 m_itemCount = 0;\ndouble m_pieAngle = 0.0;\nStyle m_style;\nVec2 m_center{ 0, 0 };\nPolygon m_defaultPolygon;\nLineString m_innerOutline;\nPolygon m_outlinePolygon;\nArray&lt;Transition&gt; m_transitions;\nArray&lt;PieMenuIcon&gt; m_icons;\nArray&lt;bool&gt; m_enabled;\nOptional&lt;int32&gt; m_selectedPie;\n};\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8 });\nconst Array&lt;PieMenuIcon&gt; icons =\n{\nPieMenuIcon{ Texture{ 0xF064C_icon, 60 }, ColorF{ 0.86, 0.98, 0.80 }},\nPieMenuIcon{ Texture{ 0xF0100_icon, 60 }, ColorF{ 0.60, 0.98, 0.60 }},\nPieMenuIcon{ Texture{ 0xF0E46_icon, 60 }, ColorF{ 1.00, 0.50, 0.31 }},\nPieMenuIcon{ Texture{ 0xF194B_icon, 60 }, ColorF{ 0.73, 0.33, 0.83 }},\nPieMenuIcon{ Texture{ 0xF18BF_icon, 60 }, ColorF{ 0.50, 1.00, 0.83 }},\nPieMenuIcon{ Texture{ 0xF0BEB_icon, 60 }, ColorF{ 1.0 }},\nPieMenuIcon{ Texture{ 0xF11DE_icon, 60 }, ColorF{ 1.00, 0.65, 0.00 }},\nPieMenuIcon{ Texture{ 0xF018C_icon, 60 }, ColorF{ 0.68, 1.00, 0.18 }},\n};\nstd::unique_ptr&lt;PieMenu&gt; pieMenu;\nconstexpr int32 CellSize = 20;\nwhile (System::Update())\n{\n// \u53f3\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u3092\u767b\u5834\u3055\u305b\u308b\nif (MouseR.down())\n{\npieMenu = std::make_unique&lt;PieMenu&gt;(icons, Cursor::PosF());\n// 1 \u756a\u76ee\u3068 3 \u756a\u76ee\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u7121\u52b9\u5316\u3059\u308b\npieMenu-&gt;setEnabled(1, false).setEnabled(3, false);\n}\n// \u80cc\u666f\u306e\u5e02\u677e\u6a21\u69d8\u3092\u63cf\u753b\u3059\u308b\nfor (int32 y = 0; y &lt; (Scene::Height() / CellSize); ++y)\n{\nfor (int32 x = 0; x &lt; (Scene::Width() / CellSize); ++x)\n{\nif (IsEven(y + x))\n{\nRect{ (x * CellSize), (y * CellSize), CellSize }.draw(ColorF{ 0.75 });\n}\n}\n}\n// \u30d1\u30a4\u30e1\u30cb\u30e5\u30fc\u304c\u3042\u308c\u3070\nif (pieMenu)\n{\nconst Optional&lt;int32&gt; selected = pieMenu-&gt;update();\npieMenu-&gt;draw();\n// \u53f3\u30af\u30ea\u30c3\u30af\u304c\u96e2\u3055\u308c\u305f\u3089\u3001\u9078\u629e\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\u3092\u8868\u793a\u3059\u308b\nif (MouseR.up())\n{\nClearPrint();\nPrint &lt;&lt; selected;\npieMenu.reset();\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/visualize/","title":"\u30c7\u30fc\u30bf\u53ef\u8996\u5316\u306e\u30b5\u30f3\u30d7\u30eb","text":""},{"location":"samples/visualize/#1-\u6709\u5411\u30b0\u30e9\u30d5\u306e\u63cf\u753b","title":"1. \u6709\u5411\u30b0\u30e9\u30d5\u306e\u63cf\u753b","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nusing VertexID = int32;\nstruct Vertex\n{\nString name;\nVec2 pos;\nvoid draw() const\n{\npos.asCircle(40).draw(ColorF{ 0.95 }).drawFrame(2, ColorF{ 0.11 });\n}\nvoid drawLabel(const Font&amp; font) const\n{\nfont(name).drawAt(40, pos, ColorF{ 0.11 });\n}\n};\nvoid DrawEdge(const Vertex&amp; from, const Vertex&amp; to)\n{\nLine{ from.pos, to.pos }.stretched(-40).drawArrow(3, Vec2{ 15, 15 }, ColorF{ 0.11 });\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 36, Typeface::Bold };\nArray&lt;Array&lt;VertexID&gt;&gt; graph(6);\ngraph[0] = { 1, 3 };\ngraph[1] = { 2 };\ngraph[2] = { 3 };\ngraph[3] = { 4 };\ngraph[4] = { 5 };\ngraph[5] = { 0 };\nArray&lt;Vertex&gt; vertices;\nfor (size_t i = 0; i &lt; graph.size(); ++i)\n{\nconst double rad = (i * (Math::TwoPi / graph.size()));\nvertices.push_back(Vertex{ Format(i), OffsetCircular{ Scene::Center(), 200, rad } });\n}\nwhile (System::Update())\n{\nfor (const auto&amp; v : vertices)\n{\nv.draw();\n}\nfor (size_t from = 0; from &lt; graph.size(); ++from)\n{\nfor (const auto&amp; to : graph[from])\n{\nDrawEdge(vertices[from], vertices[to]);\n}\n}\nfor (const auto&amp; v : vertices)\n{\nv.drawLabel(font);\n}\n}\n}\n</code></pre>"},{"location":"samples/visualize/#2-\u6709\u5411\u30b0\u30e9\u30d5\u306e\u63cf\u753b3d","title":"2. \u6709\u5411\u30b0\u30e9\u30d5\u306e\u63cf\u753b\uff083D\uff09","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nusing VertexID = int32;\nstruct Vertex\n{\nString name;\nVec3 pos;\nvoid draw() const\n{\nSphere{ pos, 1 }.draw();\n}\nvoid drawLabel(const Font&amp; font, const BasicCamera3D&amp; camera) const\n{\nfont(name).drawAt(40, camera.worldToScreenPoint(pos).xy(), ColorF{ 0.11 });\n}\n};\nvoid DrawEdge(const Vertex&amp; from, const Vertex&amp; to)\n{\nconst Vec3 dir = (to.pos - from.pos).normalized();\nCylinder{ from.pos, (to.pos - dir * 2.0), 0.05 }.draw(ColorF{ 0.11 }.removeSRGBCurve());\nCone{ (to.pos - dir * 2.0), (to.pos - dir * 1.0), 0.3 }.draw(ColorF{ 0.11 }.removeSRGBCurve());\n}\nvoid Main()\n{\nconst Font font{ FontMethod::MSDF, 36, Typeface::Bold };\nconst ColorF BackgroundColor = ColorF{ 0.6, 0.8, 0.7 }.removeSRGBCurve();\nconst MSRenderTexture renderTexture{ Scene::Size(), TextureFormat::R8G8B8A8_Unorm_SRGB, HasDepth::Yes };\nconstexpr Vec3 focusPosition{ 0, 0, 0 };\nVec3 eyePosition{ 0, 10, 0 };\nBasicCamera3D camera{ renderTexture.size(), 45_deg, eyePosition, focusPosition};\nGraphics3D::SetSunColor(ColorF{ 0.5 });\nGraphics3D::SetGlobalAmbientColor(ColorF{ 0.5 });\nArray&lt;Array&lt;VertexID&gt;&gt; graph(5);\ngraph[0] = { 1, 2, 3, 4 };\ngraph[1] = { 2, 3, 4 };\ngraph[2] = { 3, 4 };\nconst Array&lt;Vertex&gt; vertices =\n{\n{ U\"0\", Vec3{ 0, 6, 0 } },\n{ U\"1\", Vec3{ -6, 0.5, 0 } },\n{ U\"2\", Vec3{ 6, 0.5, 0 } },\n{ U\"3\", Vec3{ 0, 0.5, 8 } },\n{ U\"4\", Vec3{ 0, 0.5, -8 } },\n};\nwhile (System::Update())\n{\n// \u30ab\u30e1\u30e9\u3092\u66f4\u65b0\u3059\u308b\n{\neyePosition = Cylindrical{ 20, Scene::Time() * 30_deg, 8 + Periodic::Sine0_1(4s) * 8 };\ncamera.setView(eyePosition, focusPosition);\nGraphics3D::SetCameraTransform(camera);\n}\n{\nconst ScopedRenderTarget3D target{ renderTexture.clear(BackgroundColor) };\nfor (auto i : Range(-10, 10))\n{\nLine3D{ Vec3{ -10, 0, i }, Vec3{ 10, 0, i } }.draw(Linear::Palette::Seagreen);\nLine3D{ Vec3{ i, 0, -10 }, Vec3{ i, 0, 10 } }.draw(Linear::Palette::Seagreen);\n}\nfor (size_t from = 0; from &lt; graph.size(); ++from)\n{\nfor (const auto&amp; to : graph[from])\n{\nDrawEdge(vertices[from], vertices[to]);\n}\n}\nfor (const auto&amp; v : vertices)\n{\nv.draw();\n}\n}\n// 3D \u30b7\u30fc\u30f3\u3092 2D \u30b7\u30fc\u30f3\u306b\u63cf\u753b\n{\nGraphics3D::Flush();\nrenderTexture.resolve();\nShader::LinearToScreen(renderTexture);\n}\n{\nconst Mat4x4 mat = camera.getMat4x4();\nfor (const auto&amp; v : vertices)\n{\nv.drawLabel(font, camera);\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/visualize/#3-\u4e8c\u6b21\u5143\u306e\u30d2\u30fc\u30c8\u30de\u30c3\u30d7","title":"3. \u4e8c\u6b21\u5143\u306e\u30d2\u30fc\u30c8\u30de\u30c3\u30d7","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nGrid&lt;double&gt; GenerateGrid()\n{\nGrid&lt;double&gt; grid(20, 20);\nPerlinNoise perlin{ RandomUint64() };\nfor (int32 y = 0; y &lt; grid.height(); ++y)\n{\nfor (int32 x = 0; x &lt; grid.width(); ++x)\n{\ngrid[y][x] = perlin.octave2D0_1((x / 24.0), (y / 24.0), 4);\n}\n}\nreturn grid;\n}\nImage ToImage(const Grid&lt;double&gt;&amp; grid, ColormapType colormapType)\n{\nImage image(grid.size());\nfor (int32 y = 0; y &lt; grid.height(); ++y)\n{\nfor (int32 x = 0; x &lt; grid.width(); ++x)\n{\nconst double value = grid[y][x];\nimage[y][x] = Colormap01(value, colormapType);\n}\n}\nreturn image;\n}\nImage MakeColorBar(ColormapType colormapType)\n{\nImage image{ 1, 256 };\nfor (int32 y = 0; y &lt; image.height(); ++y)\n{\nconst double value = (1.0 - y / 255.0);\nimage[y][0] = Colormap01(value, colormapType);\n}\nreturn image;\n}\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst Font font{ FontMethod::MSDF, 36 };\nconstexpr int32 CellSize = 30;;\nconstexpr ColormapType ColorType = ColormapType::Turbo;\nconst Texture colorBar{ MakeColorBar(ColorType), TextureDesc::Mipped };\nGrid&lt;double&gt; grid = GenerateGrid();\nDynamicTexture texture{ ToImage(grid, ColorType) };\nwhile (System::Update())\n{\n// \u30c7\u30fc\u30bf\u3092\u518d\u751f\u6210\u3059\u308b\nif (SimpleGUI::Button(U\"Generate\", Vec2{ 630, 40 }))\n{\ngrid = GenerateGrid();\ntexture.fill(ToImage(grid, ColorType));\n}\n// \u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u3092\u8868\u793a\u3059\u308b\n{\nconst ScopedRenderStates2D sampler{ SamplerState::ClampNearest };\ntexture.scaled(CellSize).draw();\n}\n// \u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u4e0a\u3067\u5024\u3092\u8868\u793a\u3059\u308b\n{\nconst Point index = (Cursor::Pos() / CellSize);\nif (InRange(index.x, 0, (static_cast&lt;int32&gt;(grid.width()) - 1))\n&amp;&amp; InRange(index.y, 0, (static_cast&lt;int32&gt;(grid.height()) - 1)))\n{\nconst double value = grid[index.y][index.x];\nRect{ (index * CellSize), CellSize }.drawFrame(2);\nPutText(U\"{:.3f}\"_fmt(value), Arg::leftCenter = Cursor::Pos().movedBy(20, 0));\n}\n}\n// \u30ab\u30e9\u30fc\u30d0\u30fc\u3092\u8868\u793a\u3059\u308b\n{\nconst Rect colorBarRect{ 630, 320, 30, 200 };\nconst int32 step = ((colorBarRect.h) / 10);\ncolorBarRect(colorBar).draw().drawFrame(0, 1, Palette::Black);\nfor (int32 i = 0; i &lt;= 10; i += 2)\n{\nRect{ (colorBarRect.rightX() - 4), (colorBarRect.y + (i * step)), 4, 1 }.draw(Palette::Black);\n}\nfor (int32 i = 0; i &lt;= 10; i += 2)\n{\nfont(U\"{:.1f}\"_fmt(1.0 - i / 10.0)).drawAt(14, Vec2{ (colorBarRect.rightX() + 18), (colorBarRect.y + (i * step)) }, Palette::Black);\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/visualize/#4-\u6298\u308c\u7dda\u30b0\u30e9\u30d5","title":"4. \u6298\u308c\u7dda\u30b0\u30e9\u30d5","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid DrawLineGraph(const Rect&amp; graphArea, const Array&lt;double&gt;&amp; values, double maxValue, const ColorF&amp; color, double thickness)\n{\nconst double xStep = (graphArea.w / (values.size() - 1.0));\nconst double yStep = (graphArea.h / maxValue);\nLineString lines;\nfor (size_t i = 0; i &lt; values.size(); ++i)\n{\nconst double x = (graphArea.x + xStep * i);\nconst double y = (graphArea.y + graphArea.h - yStep * values[i]);\nlines &lt;&lt; Vec2{ x, y };\n}\nlines.draw(LineStyle::RoundCap, thickness, color);\n}\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst Rect graphArea{ 40, 40, 600, 400 };\nArray&lt;double&gt; valuesA = { 10, 40, 20, 50, 30, 60 };\nArray&lt;double&gt; valuesB = { 5, 30, 50, 40, 40, 30 };\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Add\", Vec2{ 660, 40 }))\n{\nvaluesA &lt;&lt; (valuesA.back() * Random(0.8, 1.25));\nvaluesB &lt;&lt; (valuesB.back() * Random(0.8, 1.25));\n}\ngraphArea.left().draw(ColorF{ 0.11 });\ngraphArea.bottom().draw(ColorF{ 0.11 });\nconst double maxValue = Max(*std::max_element(valuesA.begin(), valuesA.end())\n, *std::max_element(valuesB.begin(), valuesB.end())) * 1.1;\nDrawLineGraph(graphArea, valuesA, maxValue, HSV{ 160, 1.0, 0.9 }, 4);\nDrawLineGraph(graphArea, valuesB, maxValue, HSV{ 220, 1.0, 0.9 }, 4);\n}\n}\n</code></pre>"},{"location":"samples/visualize/#5-\u95a2\u6570\u30b0\u30e9\u30d5","title":"5. \u95a2\u6570\u30b0\u30e9\u30d5","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid ToLineString(const Array&lt;double&gt;&amp; values, const Vec2&amp; start, LineString&amp; ls, double yScale)\n{\nls.resize(values.size());\nfor (size_t i = 0; i &lt; values.size(); ++i)\n{\nls[i] = (start + Vec2{ i, (values[i] * -yScale) });\n}\n}\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconstexpr size_t N = 600;\nconst Rect graphArea{ 40, 40, N, 400 };\nconst double xStart = -3.00;\nconst double xEnd = 3.0;\nconst double xStep = ((xEnd - xStart) / graphArea.w);\nArray&lt;double&gt; valuesA(N + 1);\nArray&lt;double&gt; valuesB(N + 1);\nfor (size_t i = 0; i &lt; (N + 1); ++i)\n{\nconst double x = (xStart + xStep * i);\nvaluesA[i] = Math::Sin(x);\nvaluesB[i] = Math::Cos(x);\n}\nconst double yStart = -2.0;\nconst double yEnd = 2.0;\nconst double yStep = ((yEnd - yStart) / graphArea.h);\nLineString lsA(N + 1), lsB(N + 1);\nToLineString(valuesA, graphArea.leftCenter(), lsA, (1.0 / yStep));\nToLineString(valuesB, graphArea.leftCenter(), lsB, (1.0 / yStep));\nconst double xAxisStep = 0.5;\nconst double yAxisStep = 0.5;\nwhile (System::Update())\n{\nfor (int32 x = static_cast&lt;int32&gt;(xStart / xAxisStep); x &lt;= static_cast&lt;int32&gt;(xEnd / xAxisStep); ++x)\n{\nconst double xAxis = (graphArea.x + (x * xAxisStep - xStart) / xStep);\nconst double thickness = ((x == 0) ? 2.0 : 0.3);\nRectF{ Arg::topCenter(xAxis, graphArea.y), thickness, static_cast&lt;double&gt;(graphArea.h) }.draw(ColorF{ 0.11 });\n}\nfor (int32 y = static_cast&lt;int32&gt;(yStart / yAxisStep); y &lt;= static_cast&lt;int32&gt;(yEnd / yAxisStep); ++y)\n{\nconst double yAxis = (graphArea.y + (y * yAxisStep - yStart) / yStep);\nconst double thickness = ((y == 0) ? 2.0 : 0.3);\nRectF{ Arg::leftCenter(graphArea.x, yAxis), static_cast&lt;double&gt;(graphArea.w), thickness }.draw(ColorF{ 0.11 });\n}\nlsA.draw(3, HSV{ 160 });\nlsB.draw(3, HSV{ 220 });\n}\n}\n</code></pre>"},{"location":"samples/visualize/#6-\u5186\u30b0\u30e9\u30d5","title":"6. \u5186\u30b0\u30e9\u30d5","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nArray&lt;double&gt; ToRatios(const Array&lt;double&gt;&amp; values)\n{\nconst double sum = values.sumF();\nArray&lt;double&gt; ratios;\nfor (const auto&amp; value : values)\n{\nratios &lt;&lt; (value / sum);\n}\nreturn ratios;\n}\nArray&lt;double&gt; CumulativeSum(const Array&lt;double&gt;&amp; values)\n{\nArray&lt;double&gt; sums = { 0.0 };\nfor (const auto&amp; value : values)\n{\nsums &lt;&lt; (sums.back() + value);\n}\nreturn sums;\n}\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u30e9\u30d9\u30eb\nconst Array&lt;String&gt; labels = { U\"Apple\", U\"Bird\", U\"Cat\", U\"Dog\" };\n// \u6570\u5024\nconst Array&lt;double&gt; values = { 15.0, 10.0, 5.0, 2.0 };\n// \u5186\u30b0\u30e9\u30d5\u3067\u5360\u3081\u308b\u5272\u5408\nconst Array&lt;double&gt; ratios = ToRatios(values);\n// \u5186\u30b0\u30e9\u30d5\u306e\u958b\u59cb\u4f4d\u7f6e\uff08\u5272\u5408\uff09\nconst Array&lt;double&gt; starts = CumulativeSum(ratios);\nconst Circle circle{ Scene::Center(), 180.0 };\nwhile (System::Update())\n{\n// \u5186\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3059\u308b\nfor (size_t i = 0; i &lt; values.size(); ++i)\n{\nconst double startAngle = (starts[i] * 360_deg);\nconst double angle = (ratios[i] * 360_deg);\ncircle.drawPie(startAngle, angle, HSV{(120 + 70 * i), 0.5, 0.95});\n}\n// \u5883\u754c\u7dda\u3092\u63cf\u753b\u3059\u308b\nfor (size_t i = 0; i &lt; values.size(); ++i)\n{\nconst double startAngle = (starts[i] * 360_deg);\nLine{ circle.center, Arg::angle = startAngle, circle.r }.draw(3);\n}\n// \u30e9\u30d9\u30eb\u3092\u63cf\u753b\u3059\u308b\nfor (size_t i = 0; i &lt; values.size(); ++i)\n{\nconst double startAngle = (starts[i] * 360_deg);\nconst double angle = (ratios[i] * 360_deg);\nconst double midAngle = (startAngle + angle / 2.0);\n// \u5272\u5408\u306b\u5fdc\u3058\u3066\u30e9\u30d9\u30eb\u306e\u4f4d\u7f6e\u3092\u8abf\u6574\u3059\u308b\nconst Vec2 pos = OffsetCircular{ circle.center, ((ratios[i] &lt; 0.1) ? 220.0 : (ratios[i] &lt; 0.4) ? 120.0 : 90.0), midAngle };\nfont(labels[i]).draw(24, Arg::bottomCenter = pos, ColorF{ 0.11 });\nfont(U\"{:.1f}%\"_fmt(ratios[i] * 100.0)).draw(18, Arg::topCenter = pos, ColorF{ 0.11 });\n}\n}\n}\n</code></pre>"},{"location":"samples/visualize/#7-kd-\u6728","title":"7. kd \u6728","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nstruct Unit\n{\nCircle circle;\nColorF color;\nvoid draw() const\n{\ncircle.draw(color);\n}\n};\n// Unit \u3092 KDTree \u3067\u6271\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u30a2\u30c0\u30d7\u30bf\nstruct UnitAdapter : KDTreeAdapter&lt;Array&lt;Unit&gt;, Vec2&gt;\n{\nstatic const element_type* GetPointer(const point_type&amp; point)\n{\nreturn point.getPointer();\n}\nstatic element_type GetElement(const dataset_type&amp; dataset, size_t index, size_t dim)\n{\nreturn dataset[index].circle.center.elem(dim);\n}\n};\nvoid Main()\n{\n// 4000 \u500b\u306e Unit \u3092\u751f\u6210\u3059\u308b\nArray&lt;Unit&gt; units;\nfor (size_t i = 0; i &lt; 4000; ++i)\n{\nconst Unit unit\n{\n.circle = Circle{ RandomVec2(Circle{100}), 0.25 },\n.color = RandomColorF(),\n};\nunits &lt;&lt; unit;\n}\n// kd-tree \u3092\u69cb\u7bc9\u3059\u308b\nKDTree&lt;UnitAdapter&gt; kdTree{ units };\n// \u63a2\u7d22\u306e\u7a2e\u985e\uff08\u30e9\u30b8\u30aa\u30dc\u30bf\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff09\nsize_t searchTypeIndex = 0;\n// radius search \u3059\u308b\u969b\u306e\u63a2\u7d22\u8ddd\u96e2\ndouble searchDistance = 4.0;\n// 2D \u30ab\u30e1\u30e9\nCamera2D camera{ Vec2{ 0, 0 }, 24.0 };\nwhile (System::Update())\n{\n// 2D \u30ab\u30e1\u30e9\u3092\u66f4\u65b0\u3059\u308b\ncamera.update();\n// \u753b\u9762\u5185\u306e\u30e6\u30cb\u30c3\u30c8\u3060\u3051\u51e6\u7406\u3059\u308b\u305f\u3081\u306e\u57fa\u6e96\u306e\u9577\u65b9\u5f62\nconst RectF viewRect = camera.getRegion();\nconst RectF viewRectScaled = viewRect.scaledAt(viewRect.center(), 1.2);\n{\nconst auto transformer = camera.createTransformer();\nconst Vec2 cursorPos = Cursor::PosF();\nif (searchTypeIndex == 0) // radius search\n{\nCircle{ cursorPos, searchDistance }.draw(ColorF{ 1.0, 0.2 });\n// searchDistance \u4ee5\u5185\u306e\u8ddd\u96e2\u306b\u3042\u308b Unit \u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u53d6\u5f97\nfor (auto index : kdTree.radiusSearch(cursorPos, searchDistance))\n{\nLine{ cursorPos, units[index].circle.center }.draw(0.1);\n}\n}\nelse // k-NN search\n{\nconst size_t k = ((searchTypeIndex == 1) ? 1 : 5);\n// \u6700\u3082\u8fd1\u3044 k \u500b\u306e Unit \u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u53d6\u5f97\nfor (auto index : kdTree.knnSearch(k, cursorPos))\n{\nLine{ cursorPos, units[index].circle.center }.draw(0.1);\n}\n}\n// \u30e6\u30cb\u30c3\u30c8\u3092\u63cf\u753b\u3059\u308b\nfor (const auto&amp; unit : units)\n{\n// \u63cf\u753b\u8ca0\u8377\u524a\u6e1b\u306e\u305f\u3081\u3001\u753b\u9762\u5185 (viewRectScaled) \u306b\u7121\u3051\u308c\u3070\u30b9\u30ad\u30c3\u30d7\u3059\u308b\nif (not unit.circle.center.intersects(viewRectScaled))\n{\ncontinue;\n}\nunit.draw();\n}\n}\nSimpleGUI::RadioButtons(searchTypeIndex, { U\"radius\", U\"k-NN (k=1)\", U\"k-NN (k=5)\" }, Vec2{ 20, 20 });\nSimpleGUI::Slider(U\"searchDistance\", searchDistance, 0.0, 20.0, Vec2{ 180, 20 }, 160, 120, (searchTypeIndex == 0));\nif (SimpleGUI::Button(U\"Move units\", Vec2{ 180, 60 }))\n{\n// Unit \u3092\u30e9\u30f3\u30c0\u30e0\u306b\u79fb\u52d5\u3059\u308b\nfor (auto&amp; unit : units)\n{\nunit.circle.moveBy(RandomVec2(0.5));\n}\n// Unit \u306e\u5ea7\u6a19\u304c\u66f4\u65b0\u3055\u308c\u305f\u306e\u3067 kd-tree \u3092\u518d\u69cb\u7bc9\u3059\u308b\nkdTree.rebuildIndex();\n}\ncamera.draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"samples/visualize/#8-disjointset","title":"8. DisjointSet","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\n// \u30d5\u30a9\u30f3\u30c8\nconst Font font{ FontMethod::MSDF, 48, Typeface::Heavy };\n// \u30bb\u30eb\u306e\u5927\u304d\u3055\nconstexpr int32 CellSize = 16;\n// \u30de\u30b9\u76ee\u306e\u6570\nconstexpr Size GridSize{ 1280 / CellSize, 720 / CellSize };\n// \u5857\u308a\u3064\u3076\u3057 (\u767d: true, \u9ed2: false)\nGrid&lt;bool&gt; grid(GridSize, true);\n// Disjoint Set (Union-Find)\nDisjointSet&lt;int32&gt; ds{ GridSize.x* GridSize.y };\n// \u73fe\u5728\u5b58\u5728\u3059\u308b\u9818\u57df\u306e root \u3068, \u9818\u57df\u306e\u5ea7\u6a19\u306e\u5408\u8a08\u5024 (\u4e2d\u5fc3\u8a08\u7b97\u7528)\nHashTable&lt;int32, Vec2&gt; currentRoots;\n// root \u306e\u756a\u53f7\u3068\u8272 (hue) \u306e\u5bfe\u5fdc\u8868\nHashTable&lt;int32, int32&gt; globalColorTable;\nint32 colorIndex = 0;\n// UnionFind \u3092\u66f4\u65b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\nbool isDirty = true;\nwhile (System::Update())\n{\nif (isDirty)\n{\n// Disjoint Set \u3092\u66f4\u65b0\u3059\u308b\n{\nds.reset();\nfor (int32 y = 0; y &lt; GridSize.y; ++y)\n{\nfor (int32 x = 0; x &lt; GridSize.x; ++x)\n{\nif (grid[y][x])\n{\nconst int32 index = (y * GridSize.x + x);\nif (int32 nx = (x + 1); nx &lt; GridSize.x)\n{\nif (grid[y][nx])\n{\nds.merge(index, index + 1);\n}\n}\nif (int32 ny = (y + 1); ny &lt; GridSize.y)\n{\nif (grid[ny][x])\n{\nds.merge(index, (index + GridSize.x));\n}\n}\n}\n}\n}\n}\n// \u5b58\u5728\u3059\u308b root \u4e00\u89a7\u3092\u4f5c\u6210\u3059\u308b\n{\ncurrentRoots.clear();\nfor (int32 y = 0; y &lt; GridSize.y; ++y)\n{\nfor (int32 x = 0; x &lt; GridSize.x; ++x)\n{\nif (grid[y][x])\n{\nconst int32 index = (y * GridSize.x + x);\nconst int32 root = ds.find(index);\nconst Vec2 pos{ x, y };\nif (auto it = currentRoots.find(root); it == currentRoots.end())\n{\ncurrentRoots.emplace(root, pos);\n}\nelse\n{\nit-&gt;second += pos;\n}\n}\n}\n}\n}\n// root \u3068\u8272\u306e\u5bfe\u5fdc\u8868\u3092\u66f4\u65b0\u3059\u308b\n{\nfor (auto&amp; currentRoot : currentRoots)\n{\nif (not globalColorTable.contains(currentRoot.first))\n{\nglobalColorTable.emplace(currentRoot.first, (colorIndex++ * 55));\n}\n}\nEraseNodes_if(globalColorTable, [&amp;](const auto&amp; p) { return (not currentRoots.contains(p.first)); });\n}\nisDirty = false;\n}\n// \u3059\u3079\u3066\u306e\u30de\u30b9\u3092\u63cf\u753b\u3059\u308b\nfor (auto p : step(GridSize))\n{\nconst Rect rect = Rect{ (p * CellSize), CellSize }.stretched(-1);\nif (grid[p])\n{\nconst int32 index = (p.y * GridSize.x + p.x);\nconst int32 root = ds.find(index);\nrect.draw(HSV{ globalColorTable[root], 0.25, 1.0 });\n}\nelse\n{\nrect.draw(ColorF{ 0.4 });\n}\n}\n// \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\u30de\u30b9\u306e\u72b6\u614b\u3092\u66f4\u65b0\u3059\u308b\nif ((MouseL | MouseR).pressed())\n{\nconst Point pos = (Cursor::Pos() / CellSize);\nif (InRange(pos.x, 0, (GridSize.x - 1))\n&amp;&amp; InRange(pos.y, 0, (GridSize.y - 1)))\n{\nconst bool old = grid[pos];\ngrid[pos] = MouseL.pressed() ? false : true;\nisDirty = (old != grid[pos]);\n}\n}\n// \u9818\u57df\u306e\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\nfor (const auto&amp; currentRoot : currentRoots)\n{\nconst int32 root = currentRoot.first;\nconst int32 size = static_cast&lt;int32&gt;(ds.size(root));\nconst Vec2 center = currentRoot.second / size;\nconst HSV textColor = HSV{ globalColorTable[root], 0.55, 0.9 };\nconst Vec2 pos = (center * CellSize) + (Vec2::All(CellSize) * 0.5);\nconst double fontSize = (20 + 2 * Sqrt(size));\nconst double w = font(size).region(fontSize).w;\nCircle{ pos, (w / 1.66 + 10) }.draw(ColorF{ 1.0, 0.88 }).drawFrame(3, textColor);\nfont(size).drawAt(fontSize, pos, textColor);\n}\n}\n}\n</code></pre>"},{"location":"samples/visualize/#9-disjointset-\u306b\u3088\u308b\u753b\u50cf\u306e\u5857\u308a\u3064\u3076\u3057\u9818\u57df\u306e\u691c\u51fa","title":"9. DisjointSet \u306b\u3088\u308b\u753b\u50cf\u306e\u5857\u308a\u3064\u3076\u3057\u9818\u57df\u306e\u691c\u51fa","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30b0\u30eb\u30fc\u30d7\u60c5\u5831\u3092\u69cb\u7bc9\u3059\u308b\u95a2\u6570\nvoid RebuildGroup(DisjointSet&lt;int32&gt;&amp; ds, const Image&amp; image)\n{\nassert(ds.size() == image.num_pixels());\nds.reset();\nfor (int32 y = 0; y &lt; image.height(); ++y)\n{\nfor (int32 x = 0; x &lt; image.width(); ++x)\n{\nconst int32 i = (y * image.width() + x);\nif ((x + 1) &lt; image.width())\n{\nif (image[y][x] == image[y][x + 1]) // \u53f3\u96a3\u306e\u30d4\u30af\u30bb\u30eb\u3068\u540c\u3058\u8272\u306a\u3089\n{\nds.merge(i, (i + 1)); // \u30b0\u30eb\u30fc\u30d7\u5316\n}\n}\nif ((y + 1) &lt; image.height())\n{\nif (image[y][x] == image[y + 1][x]) // \u4e0b\u306e\u30d4\u30af\u30bb\u30eb\u3068\u540c\u3058\u8272\u306a\u3089\n{\nds.merge(i, (i + image.width())); // \u30b0\u30eb\u30fc\u30d7\u5316\n}\n}\n}\n}\n}\n[[nodiscard]]\nOptional&lt;Point&gt; GetPixelIndexFromCursorPos(const Size&amp; canvasSize, const Point&amp; canvasPos, int32 canvasScale)\n{\nconst Vec2 cursorPos = Cursor::PosF();\nconst int32 x = static_cast&lt;int32&gt;(Math::Floor((cursorPos.x - canvasPos.x) / canvasScale));\nconst int32 y = static_cast&lt;int32&gt;(Math::Floor((cursorPos.y - canvasPos.y) / canvasScale));\nif (InRange(x, 0, (canvasSize.x - 1))\n&amp;&amp; InRange(y, 0, (canvasSize.y - 1)))\n{\nreturn Point{ x, y };\n}\nreturn none;\n}\n[[nodiscard]]\nRect PixelIndexToRect(const Point&amp; pixelIndex, const Point&amp; canvasPos, int32 canvasScale)\n{\nreturn Rect{ (canvasPos.x + pixelIndex.x * canvasScale), (canvasPos.y + pixelIndex.y * canvasScale), canvasScale, canvasScale };\n}\n[[nodiscard]]\nColor GetPixel(Image&amp; image, const Point&amp; pixelIndex)\n{\nassert(InRange(pixelIndex.x, 0, (image.width() - 1)));\nassert(InRange(pixelIndex.y, 0, (image.height() - 1)));\nreturn image[pixelIndex];\n}\nbool SetPixel(Image&amp; image, const Point&amp; pixelIndex, const Color&amp; color)\n{\nassert(InRange(pixelIndex.x, 0, (image.width() - 1)));\nassert(InRange(pixelIndex.y, 0, (image.height() - 1)));\nconst Color oldColor = image[pixelIndex];\nimage[pixelIndex] = color;\nreturn (color != oldColor);\n}\nbool FillPixel(Image&amp; image, const Point&amp; pixelIndex, DisjointSet&lt;int32&gt;&amp; ds, const Color&amp; color)\n{\nassert(InRange(pixelIndex.x, 0, (image.width() - 1)));\nassert(InRange(pixelIndex.y, 0, (image.height() - 1)));\nconst int32 index = (pixelIndex.y * image.width() + pixelIndex.x);\nconst int32 group = ds.find(index);\nbool updated = false;\nfor (int32 y = 0; y &lt; image.height(); ++y)\n{\nfor (int32 x = 0; x &lt; image.width(); ++x)\n{\nconst int32 i = (y * image.width() + x);\nif (ds.find(i) == group)\n{\nupdated |= SetPixel(image, Point{ x, y }, color);\n}\n}\n}\nreturn updated;\n}\n// \u753b\u50cf\u3092\u63cf\u753b\u3059\u308b\u95a2\u6570\nvoid DrawImage(const Texture&amp; texture, const Point&amp; canvasPos, int32 canvasScale)\n{\nconst ScopedRenderStates2D sampler{ SamplerState::ClampNearest };\ntexture.scaled(canvasScale).draw(canvasPos);\nfor (int32 y = 0; y &lt;= texture.height(); ++y)\n{\nRect{ (canvasPos.x - 1), (canvasPos.y + y * canvasScale - 1), (texture.width() * canvasScale + 2), 2 }.draw();\n}\nfor (int32 x = 0; x &lt;= texture.width(); ++x)\n{\nRect{ (canvasPos.x + x * canvasScale - 1), (canvasPos.y - 1), 2, (texture.height() * canvasScale + 2) }.draw();\n}\n}\n// \u30b0\u30eb\u30fc\u30d7\u756a\u53f7\u3092\u53ef\u8996\u5316\u3059\u308b\u95a2\u6570\nvoid DrawGroup(const Font&amp; font, DisjointSet&lt;int32&gt;&amp; ds, const Size&amp; canvasSize, const Point&amp; canvasPos, int32 canvasScale)\n{\nassert(ds.size() == (canvasSize.x * canvasSize.y));\nfor (int32 y = 0; y &lt; canvasSize.y; ++y)\n{\nfor (int32 x = 0; x &lt; canvasSize.x; ++x)\n{\nconst int32 i = (y * canvasSize.x + x);\nconst int32 group = ds.find(i);\nconst Rect rect = PixelIndexToRect(Point{ x, y }, canvasPos, canvasScale);\nfont(group).drawAt(12, rect.center());\n}\n}\n}\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Font font{ FontMethod::MSDF, 36, Typeface::Bold };\n// \u753b\u50cf\u306e\u30b5\u30a4\u30ba\nconstexpr Size CanvasSize{ 16, 16 };\n// \u7dcf\u30d4\u30af\u30bb\u30eb\u6570\nconstexpr int32 NumPixels = (CanvasSize.x * CanvasSize.y);\n// \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8272\nconstexpr Color DefaultColor{ 255, 255, 255, 0 };\n// \u753b\u50cf\u306e\u62e1\u5927\u7387\nconstexpr int32 CanvasScale = 32;\n// \u753b\u50cf\u306e\u63cf\u753b\u4f4d\u7f6e\nconstexpr Point CanvasPos{ 200, 60 };\n// \u30da\u30f3\u306e\u8272\nColor penColor{ 0, 0, 0, 255 };\nHSV penColorHSV = penColor;\n// \u753b\u50cf\nImage image{ CanvasSize, DefaultColor };\n// \u5857\u308a\u3064\u3076\u3057\u30b0\u30eb\u30fc\u30d7\u60c5\u5831\uff08\u4e0a\u4e0b\u5de6\u53f3\u3067\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u540c\u3058\u8272 \u2192 \u540c\u3058\u30b0\u30eb\u30fc\u30d7\u756a\u53f7\uff09\nDisjointSet&lt;int32&gt; ds(NumPixels);\n// \u30b0\u30eb\u30fc\u30d7\u60c5\u5831\u3092\u66f4\u65b0\u3059\u308b\nRebuildGroup(ds, image);\n// \u52d5\u7684\u30c6\u30af\u30b9\u30c1\u30e3\nDynamicTexture dtexture{ image };\nwhile (System::Update())\n{\n// \u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30d4\u30af\u30bb\u30eb\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\nconst Optional&lt;Point&gt; pixelIndex = GetPixelIndexFromCursorPos(CanvasSize, CanvasPos, CanvasScale);\nClearPrint();\nPrint &lt;&lt; pixelIndex;\n// \u66f4\u65b0\nif (pixelIndex)\n{\n// \u5de6\u30af\u30ea\u30c3\u30af\u3067\u30d4\u30af\u30bb\u30eb\u306e\u66f4\u65b0\nif (MouseL.pressed())\n{\nif (SetPixel(image, *pixelIndex, penColor))\n{\ndtexture.fill(image);\nRebuildGroup(ds, image);\n}\n}\n// \u53f3\u30af\u30ea\u30c3\u30af\u3067\u5857\u308a\u3064\u3076\u3057\nif (MouseR.pressed())\n{\nif (FillPixel(image, *pixelIndex, ds, penColor))\n{\ndtexture.fill(image);\nRebuildGroup(ds, image);\n}\n}\n}\n// \u63cf\u753b\n{\n// \u753b\u50cf\u306e\u63cf\u753b\nDrawImage(dtexture, CanvasPos, CanvasScale);\n// \u30b0\u30eb\u30fc\u30d7\u756a\u53f7\u306e\u53ef\u8996\u5316\nDrawGroup(font, ds, CanvasSize, CanvasPos, CanvasScale);\n// \u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u6642\u306e\u30d4\u30af\u30bb\u30eb\u306e\u67a0\u7dda\nif (pixelIndex)\n{\nCursor::RequestStyle(CursorStyle::Hand);\nPixelIndexToRect(*pixelIndex, CanvasPos, CanvasScale).drawFrame(4, 0, penColor);\n}\n// \u30ab\u30e9\u30fc\u30d4\u30c3\u30ab\u30fc\nif (SimpleGUI::ColorPicker(penColorHSV, Vec2{ 900, 40 }))\n{\npenColor = penColorHSV;\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/visualize/#10-\u5e45\u512a\u5148\u63a2\u7d22\u306e\u53ef\u8996\u5316","title":"10. \u5e45\u512a\u5148\u63a2\u7d22\u306e\u53ef\u8996\u5316","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u80cc\u666f\u8272\u3092\u6c34\u8272\u306b\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\n// \u8ddd\u96e2\u306e\u8868\u793a\u7528\u30d5\u30a9\u30f3\u30c8\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u8ff7\u8def\u3092\u53ef\u8996\u5316\u3059\u308b\u3068\u304d\u306e\u30de\u30b9\u306e\u30b5\u30a4\u30ba\uff08\u30d4\u30af\u30bb\u30eb\uff09\nconstexpr int32 CellSize = 40;\n// \u4e8c\u6b21\u5143\u914d\u5217: \u8ff7\u8def (0: \u901a\u884c\u53ef\u80fd, 1: \u58c1)\nconst Grid&lt;int32&gt; maze =\n{\n{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },\n{ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },\n{ 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1 },\n{ 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 },\n{ 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1 },\n{ 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1 },\n{ 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1 },\n{ 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1 },\n{ 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 },\n{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },\n};\n// \u7121\u9650\u5927\u3092\u8868\u73fe\u3059\u308b\u6570\nconstexpr int32 INF = 10000;\n// \u4e8c\u6b21\u5143\u914d\u5217: maze \u3068\u540c\u3058\u30b5\u30a4\u30ba\u3001\u3059\u3079\u3066\u306e\u8981\u7d20\u3092 INF \u306b\u30bb\u30c3\u30c8\nGrid&lt;int32&gt; distances(maze.size(), INF);\n// \u4e0a\u3001\u5de6\u3001\u53f3\u3001\u4e0b\u306e\u30de\u30b9\u3078\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\nconstexpr Point Offsets[4] = { Point{ 0, -1 }, Point{ -1, 0 }, Point{ 1, 0 }, Point{ 0, 1 } };\n// \u5168\u8981\u7d20\u3092\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u3001std::queue \u306e\u4ee3\u308f\u308a\u306b std::deque \u3092\u4f7f\u3046\nstd::deque&lt;Point&gt; q;\n// \u30b9\u30bf\u30fc\u30c8\u4f4d\u7f6e\nconst Point start{ 1, 1 };\nq.push_back(start);\ndistances[start] = 0;\n// \u66f4\u65b0\u306e\u9593\u9694\uff08\u79d2\uff09\nconstexpr double UpdateTime = 0.5;\n// \u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\nwhile (System::Update())\n{\n// \u72b6\u614b\u66f4\u65b0\u30d5\u30e9\u30b0\nbool update = false;\n// \u524d\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\u3092\u52a0\u7b97\naccumulatedTime += Scene::DeltaTime();\n// \u66f4\u65b0\u9593\u9694\u3092\u8d85\u3048\u3066\u3044\u305f\u3089\nif (UpdateTime &lt;= accumulatedTime)\n{\naccumulatedTime -= UpdateTime;\nupdate = true;\n}\n// \u5e45\u512a\u5148\u63a2\u7d22\nif (update &amp;&amp; (not q.empty()))\n{\nconst Point currentPos = q.front(); q.pop_front();\nconst int32 currentDistance = distances[currentPos];\nfor (const auto&amp; offset : Offsets)\n{\nconst Point nextPos = (currentPos + offset);\nif ((maze[nextPos] == 0) &amp;&amp; ((currentDistance + 1) &lt; distances[nextPos]))\n{\ndistances[nextPos] = (currentDistance + 1);\nq.push_back(nextPos);\n}\n}\n}\n// \u8ff7\u8def\u306e\u72b6\u614b\u3092\u53ef\u8996\u5316\nfor (int32 y = 0; y &lt; maze.height(); ++y)\n{\nfor (int32 x = 0; x &lt; maze.width(); ++x)\n{\n// \u30de\u30b9\u306e\u6b63\u65b9\u5f62\nconst Rect rect = Rect{ (x * CellSize), (y * CellSize), CellSize }.stretched(-1);\nif (maze[y][x] == 1) // \u58c1\u306e\u30de\u30b9\n{\n// \u9ed2\u3067\u8868\u793a\nrect.draw(ColorF{ 0.25 });\n}\nelse // \u901a\u884c\u53ef\u80fd\u306a\u30de\u30b9\n{\n// \u8ddd\u96e2\u60c5\u5831\nconst int32 distance = distances[y][x];\nif (distance == INF)\n{\n// \u7070\u8272\u3067\u8868\u793a\nrect.draw(ColorF{ 0.75 });\nfont(U\"\u221e\").drawAt(18, rect.center(), ColorF{ 0.25 });\n}\nelse\n{\n// \u767d\u3067\u8868\u793a\nrect.draw();\nfont(distances[y][x]).drawAt(18, rect.center(), ColorF{ 0.25 });\n}\n}\n}\n}\n// queue \u306b\u5165\u3063\u3066\u3044\u308b\u30de\u30b9\u306e\u53ef\u8996\u5316\nfor (const auto&amp; point : q)\n{\n// \u8d64\u3044\u534a\u900f\u660e\u306e\u6b63\u65b9\u5f62\u3092\u91cd\u306d\u308b\nRect{ (point * CellSize), CellSize }.draw(ColorF{ 1.0, 0.0, 0.0, 0.5 });\n}\n}\n}\n</code></pre>"},{"location":"samples/visualize/#11-\u4e8c\u6b21\u5143\u3044\u3082\u3059\u6cd5\u306e\u53ef\u8996\u5316","title":"11. \u4e8c\u6b21\u5143\u3044\u3082\u3059\u6cd5\u306e\u53ef\u8996\u5316","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\n// \u30d5\u30a9\u30f3\u30c8\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u30bb\u30eb\u306e\u5927\u304d\u3055\nconstexpr int32 CellSize = 40;\n// \u30de\u30b9\u76ee\u306e\u6570\nconstexpr Size GridSize{ 1080 / CellSize, 720 / CellSize };\nGrid&lt;int32&gt; grid(GridSize);\n// \u9078\u629e\u958b\u59cb\u3057\u305f\u30bb\u30eb\nOptional&lt;Point&gt; grabbed;\n// \u9577\u65b9\u5f62\u9818\u57df\nArray&lt;Rect&gt; rects;\n// \u7d2f\u7a4d\u548c\u8a08\u7b97\u4f4d\u7f6e\nint32 iX = GridSize.x;\nint32 iY = GridSize.y;\n// \u7d2f\u7a4d\u548c\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\nStopwatch stopwatch;\n// \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u901f\u3055\ndouble speed = 0.4;\nwhile (System::Update())\n{\n// \u3059\u3079\u3066\u306e\u30de\u30b9\u3092\u63cf\u753b\nfor (auto p : step(GridSize))\n{\nconst Rect rect{ (p * CellSize), CellSize };\nif (auto value = grid[p])\n{\nconst ColorF color = (value &lt; 0)\n? ColorF{ 0.0, 0.4, 0.8 } : Colormap01F((value / 6.0), ColormapType::Viridis);\nrect.stretched(1).draw(color);\n}\nelse\n{\nrect.stretched(-1).draw();\n}\n}\n// \u30bb\u30eb\u306e\u6570\u5024\u3092\u63cf\u753b\nfor (auto p : step(GridSize))\n{\nconst Rect rect = Rect{ (p * CellSize), CellSize }.stretched(-1);\nfont(grid[p]).drawAt(24, rect.center(), ColorF{ grid[p] ? 1.0 : 0.8 });\n}\n// \u9577\u65b9\u5f62\u306e\u9818\u57df\u3092\u63cf\u753b\nfor (const auto&amp; rect : rects)\n{\nRect{ (rect.pos * CellSize), (rect.size * CellSize) }\n.drawFrame(3, 1, ColorF{ 0.7 });\n}\n// \u9818\u57df\u306e\u9078\u629e\u3092\u958b\u59cb\nif (MouseL.down())\n{\nconst Point pos = (Cursor::Pos() / CellSize);\nif (InRange(pos.x, 0, (GridSize.x - 1))\n&amp;&amp; InRange(pos.y, 0, (GridSize.y - 1)))\n{\ngrabbed = pos;\n}\n}\n// \u9818\u57df\u9078\u629e\u4e2d\nif (grabbed)\n{\nPoint pos = (Cursor::Pos() / CellSize);\npos.x = Clamp(pos.x, 0, (GridSize.x - 1));\npos.y = Clamp(pos.y, 0, (GridSize.y - 1));\nconst Size size = (pos - *grabbed);\nRect rect{ *grabbed, size };\nif (rect.w &lt; 0)\n{\nrect.x += rect.w;\nrect.w *= -1;\n}\nif (rect.h &lt; 0)\n{\nrect.y += rect.h;\nrect.h *= -1;\n}\nrect.size += Size::One();\nRect{ rect.pos * CellSize, rect.size * CellSize }\n.draw(ColorF{ 0.1, 0.4, 0.7, 0.4 })\n.drawFrame(3, 1, ColorF{ 0.7 });\nif (MouseL.up())\n{\nrects &lt;&lt; rect;\nconst Point tl = rect.tl();\nconst Point br = rect.br();\n++grid[tl];\nif ((br.x &lt; GridSize.x) &amp;&amp; (br.y &lt; GridSize.y))\n{\n++grid[br];\n}\nif (br.x &lt; GridSize.x)\n{\n--grid[{ br.x, tl.y }];\n}\nif (br.y &lt; GridSize.y)\n{\n--grid[{ tl.x, br.y }];\n}\ngrabbed.reset();\n}\n}\nif (SimpleGUI::Button(U\"X \u2192\", Vec2{ 1100, 20 }, 140))\n{\niX = 1;\nstopwatch.restart();\n}\nif (SimpleGUI::Button(U\"Y \u2193\", Vec2{ 1100, 80 }, 140))\n{\niY = 1;\nstopwatch.restart();\n}\nif (SimpleGUI::Button(U\"Reset\", Vec2{ 1100, 140 }, 140))\n{\nrects.clear();\ngrid.fill(0);\niX = GridSize.x;\niY = GridSize.y;\n}\nSimpleGUI::Slider(U\"&gt;&gt;\", speed, 0.0, 0.5, Vec2{ 1100, 200 }, 30, 110);\n// X \u65b9\u5411\u7d2f\u7a4d\u548c\uff08\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\uff09\nif (iX &lt; GridSize.x)\n{\nLine{ (iX * CellSize), 0, (iX * CellSize), 720 }.draw(4, Palette::Red);\nif (SecondsF{ 0.5 - speed } &lt;= stopwatch)\n{\nfor (int32 y = 0; y &lt; GridSize.y; ++y)\n{\ngrid[y][iX] += grid[y][iX - 1];\n}\n++iX;\nstopwatch.restart();\n}\n}\n// Y \u65b9\u5411\u7d2f\u7a4d\u548c\uff08\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\uff09\nif (iY &lt; GridSize.y)\n{\nLine{ 0, (iY * CellSize), 1080, (iY * CellSize) }.draw(4, Palette::Red);\nif (SecondsF{ 0.5 - speed } &lt;= stopwatch)\n{\nfor (int32 x = 0; x &lt; GridSize.x; ++x)\n{\ngrid[iY][x] += grid[iY - 1][x];\n}\n++iY;\nstopwatch.restart();\n}\n}\n}\n}\n</code></pre>"},{"location":"samples/web/","title":"Web \u30b5\u30fc\u30d3\u30b9\u3068\u306e\u9023\u4fc2\u30b5\u30f3\u30d7\u30eb","text":""},{"location":"samples/web/#1-\u30a2\u30f3\u30b1\u30fc\u30c8\u56de\u7b54\u3067\u30a2\u30a4\u30c6\u30e0\u3092\u7372\u5f97\u3059\u308b","title":"1. \u30a2\u30f3\u30b1\u30fc\u30c8\u56de\u7b54\u3067\u30a2\u30a4\u30c6\u30e0\u3092\u7372\u5f97\u3059\u308b","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nTextEditState textEditState;\nbool received = false;\nbool pushed = false;\nwhile (System::Update())\n{\nRect{ 40, 40, 480, 140 }.rounded(10).drawShadow(Vec2{ 2, 2 }, 12, 0).draw();\nif (not received)\n{\nif (SimpleGUI::Button(U\"\u30a2\u30f3\u30b1\u30fc\u30c8\u306b\u56de\u7b54\u3057\u3066\u79d8\u5bc6\u306e\u30b3\u30fc\u30c9\u3092\u5165\u624b\", Vec2{ 60, 60 }, 440))\n{\npushed = true;\nSystem::LaunchBrowser(U\"https://forms.gle/vyiwgwNFSvZPZ8fu5\");\n}\nSimpleGUI::Headline(U\"\u30b3\u30fc\u30c9\u3092\u5165\u529b\", Vec2{ 60, 118 }, unspecified, pushed);\nSimpleGUI::TextBox(textEditState, Vec2{ 220, 120 }, 160, 8, pushed);\nif (SimpleGUI::Button(U\"\u78ba\u8a8d\", Vec2{ 400, 120 }, 60, pushed))\n{\nif (textEditState.text == U\"123\")\n{\nreceived = true;\nPrint &lt;&lt; U\"\u30a2\u30a4\u30c6\u30e0\u3092\u7372\u5f97\u3057\u307e\u3057\u305f\u3002\";\n}\nelse\n{\nPrint &lt;&lt; U\"\u7121\u52b9\u306a\u30b3\u30fc\u30c9\u3067\u3059\u3002\";\n}\n}\n}\nelse\n{\nSimpleGUI::Headline(U\"\u30a2\u30f3\u30b1\u30fc\u30c8\u3078\u306e\u56de\u7b54\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\", Vec2{ 60, 90 });\n}\n}\n}\n</code></pre>"},{"location":"samples/web/#2-\u30b2\u30fc\u30e0\u306e\u30b9\u30b3\u30a2\u3092\u30c4\u30a4\u30fc\u30c8\u3059\u308b","title":"2. \u30b2\u30fc\u30e0\u306e\u30b9\u30b3\u30a2\u3092\u30c4\u30a4\u30fc\u30c8\u3059\u308b","text":"\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nint32 score = 12345;\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"\u30b9\u30b3\u30a2\u3092\u30c4\u30a4\u30fc\u30c8\", Vec2{ 40, 40 }))\n{\n// \u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u3084 URL \u3092\u542b\u3081\u308b\u3068\u5e83\u307e\u308a\u3084\u3059\u3044\u3067\u3059\u3002\nconst String text = U\"\u30b2\u30fc\u30e0\u3067 {} \u70b9\u53d6\u3063\u305f\u3088\uff01\\n#Test #Siv3D\\nhttps://github.com/Siv3D/OpenSiv3D\"_fmt(ThousandsSeparate(score));\n// \u30c4\u30a4\u30fc\u30c8\u6295\u7a3f\u753b\u9762\u3092\u958b\u304f\nTwitter::OpenTweetWindow(text);\n}\n}\n}\n</code></pre>"},{"location":"samples/web/#3-\u30c1\u30e3\u30c3\u30c8","title":"3. \u30c1\u30e3\u30c3\u30c8","text":"<p>Photon \u3068\u306e\u9023\u4fc2\u65b9\u6cd5\u306f\u3001\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 66. \u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4f5c\u6210\u3057\u305f\u30eb\u30fc\u30e0\u306b\u53c2\u52a0\u3057\u305f\u30d7\u30ec\u30a4\u30e4\u30fc\u540c\u58eb\u3067\u30c7\u30fc\u30bf\u306e\u9001\u53d7\u4fe1\u3092\u884c\u3046\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002</p> <p></p> \u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\n# include \"Multiplayer_Photon.hpp\"\n# include \"PHOTON_APP_ID.SECRET\"\n// \u30e6\u30fc\u30b6\u5b9a\u7fa9\u578b\nstruct MyData\n{\nString word;\nPoint pos;\n// \u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306b\u5bfe\u5fdc\u3055\u305b\u308b\u305f\u3081\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\ntemplate &lt;class Archive&gt;\nvoid SIV3D_SERIALIZE(Archive&amp; archive)\n{\narchive(word, pos);\n}\n};\nclass MyNetwork : public Multiplayer_Photon\n{\npublic:\nstatic constexpr int32 MaxPlayers = 3;\nusing Multiplayer_Photon::Multiplayer_Photon;\nprivate:\nArray&lt;LocalPlayer&gt; m_localPlayers;\nvoid connectReturn([[maybe_unused]] const int32 errorCode, const String&amp; errorString, const String&amp; region, [[maybe_unused]] const String&amp; cluster) override\n{\nif (m_verbose)\n{\nPrint &lt;&lt; U\"MyNetwork::connectReturn() [\u30b5\u30fc\u30d0\u3078\u306e\u63a5\u7d9a\u3092\u8a66\u307f\u305f\u7d50\u679c\u3092\u51e6\u7406\u3059\u308b]\";\n}\nif (errorCode)\n{\nif (m_verbose)\n{\nPrint &lt;&lt; U\"[\u30b5\u30fc\u30d0\u3078\u306e\u63a5\u7d9a\u306b\u5931\u6557] \" &lt;&lt; errorString;\n}\nreturn;\n}\nif (m_verbose)\n{\nPrint &lt;&lt; U\"[\u30b5\u30fc\u30d0\u3078\u306e\u63a5\u7d9a\u306b\u6210\u529f]\";\nPrint &lt;&lt; U\"[region: {}]\"_fmt(region);\nPrint &lt;&lt; U\"[\u30e6\u30fc\u30b6\u540d: {}]\"_fmt(getUserName());\nPrint &lt;&lt; U\"[\u30e6\u30fc\u30b6 ID: {}]\"_fmt(getUserID());\n}\nScene::SetBackground(ColorF{ 0.4, 0.5, 0.6 });\n}\nvoid disconnectReturn() override\n{\nif (m_verbose)\n{\nPrint &lt;&lt; U\"MyNetwork::disconnectReturn() [\u30b5\u30fc\u30d0\u304b\u3089\u5207\u65ad\u3057\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b]\";\n}\nm_localPlayers.clear();\nScene::SetBackground(Palette::DefaultBackground);\n}\nvoid joinRandomRoomReturn([[maybe_unused]] const LocalPlayerID playerID, const int32 errorCode, const String&amp; errorString) override\n{\nif (m_verbose)\n{\nPrint &lt;&lt; U\"MyNetwork::joinRandomRoomReturn() [\u65e2\u5b58\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u30eb\u30fc\u30e0\u306b\u53c2\u52a0\u3092\u8a66\u307f\u305f\u7d50\u679c\u3092\u51e6\u7406\u3059\u308b]\";\n}\nif (errorCode == NoRandomMatchFound)\n{\nconst RoomName roomName = (getUserName() + U\"'s room-\" + ToHex(RandomUint32()));\nif (m_verbose)\n{\nPrint &lt;&lt; U\"[\u53c2\u52a0\u53ef\u80fd\u306a\u30e9\u30f3\u30c0\u30e0\u306a\u30eb\u30fc\u30e0\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f]\";\nPrint &lt;&lt; U\"[\u81ea\u5206\u3067\u30eb\u30fc\u30e0 \" &lt;&lt; roomName &lt;&lt; U\" \u3092\u65b0\u898f\u4f5c\u6210\u3059\u308b]\";\n}\ncreateRoom(roomName, MaxPlayers);\nreturn;\n}\nelse if (errorCode)\n{\nif (m_verbose)\n{\nPrint &lt;&lt; U\"[\u65e2\u5b58\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u30eb\u30fc\u30e0\u3078\u306e\u53c2\u52a0\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f] \" &lt;&lt; errorString;\n}\nreturn;\n}\nif (m_verbose)\n{\nPrint &lt;&lt; U\"[\u65e2\u5b58\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u30eb\u30fc\u30e0\u306b\u53c2\u52a0\u3067\u304d\u305f]\";\n}\n}\nvoid createRoomReturn([[maybe_unused]] const LocalPlayerID playerID, const int32 errorCode, const String&amp; errorString) override\n{\nif (m_verbose)\n{\nPrint &lt;&lt; U\"MyNetwork::createRoomReturn() [\u30eb\u30fc\u30e0\u3092\u65b0\u898f\u4f5c\u6210\u3057\u305f\u7d50\u679c\u3092\u51e6\u7406\u3059\u308b]\";\n}\nif (errorCode)\n{\nif (m_verbose)\n{\nPrint &lt;&lt; U\"[\u30eb\u30fc\u30e0\u306e\u65b0\u898f\u4f5c\u6210\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f] \" &lt;&lt; errorString;\n}\nreturn;\n}\nif (m_verbose)\n{\nPrint &lt;&lt; U\"[\u30eb\u30fc\u30e0 \" &lt;&lt; getCurrentRoomName() &lt;&lt; U\" \u306e\u4f5c\u6210\u306b\u6210\u529f]\";\n}\n}\nvoid joinRoomEventAction(const LocalPlayer&amp; newPlayer, [[maybe_unused]] const Array&lt;LocalPlayerID&gt;&amp; playerIDs, const bool isSelf) override\n{\nif (m_verbose)\n{\nPrint &lt;&lt; U\"MyNetwork::joinRoomEventAction() [\u8ab0\u304b\uff08\u81ea\u5206\u3092\u542b\u3080\uff09\u304c\u73fe\u5728\u306e\u30eb\u30fc\u30e0\u306b\u53c2\u52a0\u3057\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b]\";\n}\nif (m_verbose)\n{\nPrint &lt;&lt; U\"[{} (ID: {}) \u304c\u30eb\u30fc\u30e0\u306b\u53c2\u52a0\u3057\u305f\u3002\u30ed\u30fc\u30ab\u30eb ID: {}] {}\"_fmt(newPlayer.userName, newPlayer.userID, newPlayer.localID, (isSelf ? U\"(\u81ea\u5206\u81ea\u8eab)\" : U\"\"));\nm_localPlayers = getLocalPlayers();\nPrint &lt;&lt; U\"\u73fe\u5728\u306e \" &lt;&lt; getCurrentRoomName() &lt;&lt; U\" \u306e\u30eb\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc\";\nfor (const auto&amp; player : m_localPlayers)\n{\nPrint &lt;&lt; U\"- [{}] {} (id: {}) {}\"_fmt(player.localID, player.userName, player.userID, player.isHost ? U\"(host)\" : U\"\");\n}\n}\n}\nvoid leaveRoomEventAction(const LocalPlayerID playerID, [[maybe_unused]] const bool isInactive) override\n{\nif (m_verbose)\n{\nPrint &lt;&lt; U\"MyNetwork::joinRoomEventAction() [\u8ab0\u304b\u304c\u30eb\u30fc\u30e0\u304b\u3089\u9000\u51fa\u3057\u305f\u3089\u547c\u3070\u308c\u308b]\";\n}\nif (m_verbose)\n{\nfor (const auto&amp; player : m_localPlayers)\n{\nif (player.localID == playerID)\n{\nPrint &lt;&lt; U\"[{} (ID: {}, \u30ed\u30fc\u30ab\u30eb ID: {}) \u304c\u30eb\u30fc\u30e0\u304b\u3089\u9000\u51fa\u3057\u305f]\"_fmt(player.userName, player.userID, player.localID);\n}\n}\nm_localPlayers = getLocalPlayers();\nPrint &lt;&lt; U\"\u73fe\u5728\u306e \" &lt;&lt; getCurrentRoomName() &lt;&lt; U\" \u306e\u30eb\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc\";\nfor (const auto&amp; player : m_localPlayers)\n{\nPrint &lt;&lt; U\"- [{}] {} (ID: {}) {}\"_fmt(player.localID, player.userName, player.userID, player.isHost ? U\"(host)\" : U\"\");\n}\n}\n}\nvoid leaveRoomReturn(int32 errorCode, const String&amp; errorString) override\n{\nif (m_verbose)\n{\nPrint &lt;&lt; U\"MyNetwork::leaveRoomReturn() [\u30eb\u30fc\u30e0\u304b\u3089\u9000\u51fa\u3057\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b]\";\n}\nm_localPlayers.clear();\nif (errorCode)\n{\nif (m_verbose)\n{\nPrint &lt;&lt; U\"[\u30eb\u30fc\u30e0\u304b\u3089\u306e\u9000\u51fa\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f] \" &lt;&lt; errorString;\n}\nreturn;\n}\n}\nvoid customEventAction(const LocalPlayerID playerID, const uint8 eventCode, const int32 data) override\n{\nPrint &lt;&lt; U\"&lt;&lt;&lt; [\" &lt;&lt; playerID &lt;&lt; U\"] \u304b\u3089\u306e eventCode: \" &lt;&lt; eventCode &lt;&lt; U\", data: int32(\" &lt;&lt; data &lt;&lt; U\") \u3092\u53d7\u4fe1\";\n}\nvoid customEventAction(const LocalPlayerID playerID, const uint8 eventCode, const String&amp; data) override\n{\nPrint &lt;&lt; U\"&lt;&lt;&lt; [\" &lt;&lt; playerID &lt;&lt; U\"] \u304b\u3089\u306e eventCode: \" &lt;&lt; eventCode &lt;&lt; U\", data: String(\" &lt;&lt; data &lt;&lt; U\") \u3092\u53d7\u4fe1\";\n}\nvoid customEventAction(const LocalPlayerID playerID, const uint8 eventCode, const Point&amp; data) override\n{\nPrint &lt;&lt; U\"&lt;&lt;&lt; [\" &lt;&lt; playerID &lt;&lt; U\"] \u304b\u3089\u306e eventCode: \" &lt;&lt; eventCode &lt;&lt; U\", data: Point\" &lt;&lt; data &lt;&lt; U\" \u3092\u53d7\u4fe1\";\n}\nvoid customEventAction(const LocalPlayerID playerID, const uint8 eventCode, const Array&lt;int32&gt;&amp; data) override\n{\nPrint &lt;&lt; U\"&lt;&lt;&lt; [\" &lt;&lt; playerID &lt;&lt; U\"] \u304b\u3089\u306e eventCode: \" &lt;&lt; eventCode &lt;&lt; U\", data: Array&lt;int32&gt;\" &lt;&lt; data &lt;&lt; U\" \u3092\u53d7\u4fe1\";\n}\nvoid customEventAction(const LocalPlayerID playerID, const uint8 eventCode, const Array&lt;String&gt;&amp; data) override\n{\nPrint &lt;&lt; U\"&lt;&lt;&lt; [\" &lt;&lt; playerID &lt;&lt; U\"] \u304b\u3089\u306e eventCode: \" &lt;&lt; eventCode &lt;&lt; U\", data: Array&lt;String&gt;\" &lt;&lt; data &lt;&lt; U\" \u3092\u53d7\u4fe1\";\n}\n// \u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u30c7\u30fc\u30bf\u3092\u53d7\u4fe1\u3057\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\u95a2\u6570\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\nvoid customEventAction(const LocalPlayerID playerID, const uint8 eventCode, Deserializer&lt;MemoryViewReader&gt;&amp; reader) override\n{\nif (eventCode == 123)\n{\nMyData mydata;\nreader(mydata);\nPrint &lt;&lt; U\"&lt;&lt;&lt; [\" &lt;&lt; playerID &lt;&lt; U\"] \u304b\u3089\u306e MyData(\" &lt;&lt; mydata.word &lt;&lt; U\", \" &lt;&lt; mydata.pos &lt;&lt; U\") \u3092\u53d7\u4fe1\";\n}\n}\n};\nvoid Main()\n{\nWindow::Resize(1280, 720);\nconst std::string secretAppID{ SIV3D_OBFUSCATE(PHOTON_APP_ID) };\nMyNetwork network{ secretAppID, U\"1.0\", Verbose::Yes };\nwhile (System::Update())\n{\nnetwork.update();\nconst bool isActive = network.isActive();\nconst bool isInLobby = network.isInLobby();\nconst bool isInRoom = network.isInRoom();\nif (SimpleGUI::Button(U\"Connect\", Vec2{ 1000, 20 }, 160, (not isActive)))\n{\nconst String userName = U\"Siv\";\nnetwork.connect(userName);\n}\nif (SimpleGUI::Button(U\"Disconnect\", Vec2{ 1000, 60 }, 160, isActive))\n{\nnetwork.disconnect();\n}\nif (SimpleGUI::Button(U\"Join Room\", Vec2{ 1000, 100 }, 160, isInLobby))\n{\nnetwork.joinRandomRoom(MyNetwork::MaxPlayers);\n}\nif (SimpleGUI::Button(U\"Leave Room\", Vec2{ 1000, 140 }, 160, isInRoom))\n{\nnetwork.leaveRoom();\n}\nif (SimpleGUI::Button(U\"Send int32\", Vec2{ 1000, 180 }, 200, isInRoom))\n{\nconst int32 n = Random(0, 10000);\nPrint &lt;&lt; U\"eventCode: 0, int32(\" &lt;&lt; n &lt;&lt; U\") \u3092\u9001\u4fe1 &gt;&gt;&gt;\";\nnetwork.sendEvent(0, n);\n}\nif (SimpleGUI::Button(U\"Send String\", Vec2{ 1000, 220 }, 200, isInRoom))\n{\nconst String s = Sample({ U\"Hello!\", U\"Thank you!\", U\"Nice!\" });\nPrint &lt;&lt; U\"eventCode: 0, String(\" &lt;&lt; s &lt;&lt; U\") \u3092\u9001\u4fe1 &gt;&gt;&gt;\";\nnetwork.sendEvent(0, s);\n}\nif (SimpleGUI::Button(U\"Send Point\", Vec2{ 1000, 260 }, 200, isInRoom))\n{\nconst Point pos = RandomPoint(Scene::Rect());\nPrint &lt;&lt; U\"eventCode: 0, Point\" &lt;&lt; pos &lt;&lt; U\" \u3092\u9001\u4fe1 &gt;&gt;&gt;\";\nnetwork.sendEvent(0, pos);\n}\nif (SimpleGUI::Button(U\"Send Array&lt;int32&gt;\", Vec2{ 1000, 300 }, 200, isInRoom))\n{\nArray&lt;int32&gt; v(3);\nfor (auto&amp; n : v)\n{\nn = Random(0, 1000);\n}\nPrint &lt;&lt; U\"eventCode: 0, Array&lt;int32&gt;\" &lt;&lt; v &lt;&lt; U\" \u3092\u9001\u4fe1 &gt;&gt;&gt;\";\nnetwork.sendEvent(0, v);\n}\nif (SimpleGUI::Button(U\"Send Array&lt;String&gt;\", Vec2{ 1000, 340 }, 200, isInRoom))\n{\nArray&lt;String&gt; words(3);\nfor (auto&amp; word : words)\n{\nword = Sample({ U\"apple\", U\"bird\", U\"cat\", U\"dog\" });\n}\nPrint &lt;&lt; U\"eventCode: 0, Array&lt;String&gt;\" &lt;&lt; words &lt;&lt; U\" \u3092\u9001\u4fe1 &gt;&gt;&gt;\";\nnetwork.sendEvent(0, words);\n}\n// \u30e9\u30f3\u30c0\u30e0\u306a MyData \u3092\u9001\u308b\u30dc\u30bf\u30f3\nif (SimpleGUI::Button(U\"Send MyData\", Vec2{ 1000, 380 }, 200, isInRoom))\n{\nMyData myData;\nmyData.word = Sample({ U\"apple\", U\"bird\", U\"cat\", U\"dog\" });\nmyData.pos = RandomPoint(Scene::Rect());\nPrint &lt;&lt; U\"eventCode: 123, MyData(\" &lt;&lt; myData.word &lt;&lt; U\", \" &lt;&lt; myData.pos &lt;&lt; U\") \u3092\u9001\u4fe1 &gt;&gt;&gt;\";\nnetwork.sendEvent(123, Serializer&lt;MemoryWriter&gt;{}(myData));\n}\n}\n}\n</code></pre>"},{"location":"samples/web/#4-\u30aa\u30f3\u30e9\u30a4\u30f3-\u30ea\u30fc\u30c0\u30fc\u30dc\u30fc\u30c9","title":"4. \u30aa\u30f3\u30e9\u30a4\u30f3 \u30ea\u30fc\u30c0\u30fc\u30dc\u30fc\u30c9","text":"<p>Siv3D-Sample | \u30aa\u30f3\u30e9\u30a4\u30f3 \u30ea\u30fc\u30c0\u30fc\u30dc\u30fc\u30c9 </p>"},{"location":"sponsorship/corporate-sponsor-guideline/","title":"\u5354\u8cdb\u7279\u5178","text":"<p>\u6cd5\u4eba\u5354\u8cdb\u306e\u7279\u5178\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002</p>"},{"location":"sponsorship/corporate-sponsor-guideline/#1-\u30d0\u30ca\u30fc\u63b2\u8f09","title":"1. \u30d0\u30ca\u30fc\u63b2\u8f09","text":""},{"location":"sponsorship/corporate-sponsor-guideline/#11-\u30d0\u30ca\u30fc\u306e\u6761\u4ef6","title":"1.1 \u30d0\u30ca\u30fc\u306e\u6761\u4ef6","text":"\u5c5e\u6027 \u8aac\u660e \u753b\u50cf\u5f62\u5f0f PNG / JPEG / SVG \u63d0\u51fa\u30b5\u30a4\u30ba \u9577\u8fba 400px\uff5e1200px \u76ee\u5b89 \u900f\u904e\u753b\u50cf \u53ef \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3 \u4e0d\u53ef \u30ea\u30f3\u30af <code>&lt;a href=\"\" target=\"_blank\"&gt;</code> \u306b\u3066\u30ea\u30f3\u30af\u4ed8\u4e0e <ul> <li>\u500b\u4eba\u30b9\u30dd\u30f3\u30b5\u30fc\u3088\u308a\u5927\u304d\u3044\u9762\u7a4d\uff08\u30da\u30fc\u30b8\u5e45\u306e 20\uff5e50% \u306e\u7bc4\u56f2\u3067\u30c7\u30b6\u30a4\u30f3\u306b\u5fdc\u3058\u3066\uff09</li> <li>\u6cd5\u4eba\u30ed\u30b4\u306e\u30c7\u30b6\u30a4\u30f3\u5909\u66f4\u306a\u3069\u3001\u91cd\u8981\u306a\u5909\u66f4\u304c\u3042\u3063\u305f\u5834\u5408\u306f\u671f\u9593\u9014\u4e2d\u3067\u5dee\u3057\u66ff\u3048\u53ef</li> <li>\u5354\u8cdb\u6cd5\u4eba\u304c\u5897\u3048\u3001\u8907\u6570\u306e\u30d0\u30ca\u30fc\u3092\u63b2\u8f09\u3059\u308b\u3053\u3068\u306b\u306a\u3063\u305f\u5834\u5408\u3001\u5927\u304d\u3055\u306e\u30d0\u30e9\u30f3\u30b9\u3092\u8abf\u6574\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059</li> <li>\u5354\u8cdb\u984d\u304c\u540c\u4e00\u306e\u5834\u5408\u3001\u7d2f\u8a08\u671f\u9593\u304c\u9577\u3044\u9806\u3067\u306e\u63b2\u8f09\u3068\u306a\u308a\u307e\u3059</li> </ul>"},{"location":"sponsorship/corporate-sponsor-guideline/#12-\u63b2\u8f09\u5834\u6240","title":"1.2 \u63b2\u8f09\u5834\u6240","text":""},{"location":"sponsorship/corporate-sponsor-guideline/#siv3d-\u516c\u5f0f\u30b5\u30a4\u30c8-\u30c8\u30c3\u30d7\u30da\u30fc\u30b8","title":"Siv3D \u516c\u5f0f\u30b5\u30a4\u30c8 \u30c8\u30c3\u30d7\u30da\u30fc\u30b8","text":"<ul> <li>\u65e5\u672c\u8a9e: https://siv3d.github.io/ja-jp/</li> <li>\u82f1\u8a9e: https://siv3d.github.io/</li> </ul>"},{"location":"sponsorship/corporate-sponsor-guideline/#siv3d-studio-web-ide-\u30e9\u30f3\u30c7\u30a3\u30f3\u30b0\u30da\u30fc\u30b8","title":"Siv3D Studio (Web IDE) \u30e9\u30f3\u30c7\u30a3\u30f3\u30b0\u30da\u30fc\u30b8","text":"<ul> <li>\u65e5\u672c\u8a9e: https://siv3d.github.io/ja-jp/studio/ (\u516c\u958b\u6e96\u5099\u4e2d)</li> <li>\u82f1\u8a9e: https://siv3d.github.io/studio/ (\u516c\u958b\u6e96\u5099\u4e2d)</li> </ul>"},{"location":"sponsorship/corporate-sponsor-guideline/#\u52c9\u5f37\u4f1a\u30a4\u30d9\u30f3\u30c8\u30da\u30fc\u30b8","title":"\u52c9\u5f37\u4f1a\u30a4\u30d9\u30f3\u30c8\u30da\u30fc\u30b8","text":"<ul> <li>\u4f8b: https://connpass.com/event/276228/ </li> </ul> <p>Info</p> <p>2022 \u5e74\u306e\u52c9\u5f37\u4f1a\u306f\u53c2\u52a0\u8005 98 \u540d\u30016 \u6821\u8a2a\u554f\u30022023 \u5e74\u306f 150 \u4eba\u4ee5\u4e0a\u300110 \u6821\u8a2a\u554f\u3092\u898b\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002</p>"},{"location":"sponsorship/corporate-sponsor-guideline/#2-\u516c\u5f0f\u30d5\u30a9\u30fc\u30e9\u30e0\u306b\u304a\u3051\u308b-sponsor-\u30ed\u30fc\u30eb\u4ed8\u4e0e","title":"2. \u516c\u5f0f\u30d5\u30a9\u30fc\u30e9\u30e0\u306b\u304a\u3051\u308b Sponsor \u30ed\u30fc\u30eb\u4ed8\u4e0e","text":"<p>Siv3D Discord \u30b5\u30fc\u30d0\u306b\u53c2\u52a0\u3059\u308b\u30a2\u30ab\u30a6\u30f3\u30c8\uff08\u6700\u5927 3 \u540d\uff09\u306b \u300ccorporate sponsor\u300d\u30ed\u30fc\u30eb\u3092\u4ed8\u4e0e\u3057\u307e\u3059\u3002\u30ed\u30fc\u30eb\u304c\u4ed8\u4e0e\u3055\u308c\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u306f\u3001\u30c1\u30e3\u30c3\u30c8\u306b\u304a\u3044\u3066\u30e6\u30fc\u30b6 ID \u304c\u9ec4\u8272\u3067\u8868\u793a\u3055\u308c\u3001\u30b9\u30dd\u30f3\u30b5\u30fc\u6295\u7a3f\u3067\u3042\u308b\u3053\u3068\u304c\u307b\u304b\u306e\u53c2\u52a0\u8005\u306b\u4f1d\u308f\u308a\u307e\u3059\u3002</p>"},{"location":"sponsorship/corporate-sponsor-guideline/#\u516c\u5f0f\u30d5\u30a9\u30fc\u30e9\u30e0\u3078\u306e\u53c2\u52a0\u65b9\u6cd5","title":"\u516c\u5f0f\u30d5\u30a9\u30fc\u30e9\u30e0\u3078\u306e\u53c2\u52a0\u65b9\u6cd5","text":"<p>\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30da\u30fc\u30b8\u5185\u306e\u300cDiscord Siv3D \u30b5\u30fc\u30d0\u306b\u53c2\u52a0\u3059\u308b\u300d\u304b\u3089\u3001\u3054\u81ea\u8eab\u306e Discord \u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u53c2\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u53c2\u52a0\u5f8c\u3001\u30e6\u30fc\u30b6 ID (\u4f8b: <code>\u3057\u3076#1234</code>\uff09\u3092\u304a\u77e5\u3089\u305b\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"sponsorship/corporate-sponsor-guideline/#\u4f01\u696d\u60c5\u5831\u306e\u767a\u4fe1\u306b\u9069\u3057\u305f\u30c1\u30e3\u30f3\u30cd\u30eb","title":"\u4f01\u696d\u60c5\u5831\u306e\u767a\u4fe1\u306b\u9069\u3057\u305f\u30c1\u30e3\u30f3\u30cd\u30eb","text":"\u30c1\u30e3\u30f3\u30cd\u30eb\u540d \u30c1\u30e3\u30f3\u30cd\u30eb\u6982\u8981 <code>#\u5916\u90e8\u30a4\u30d9\u30f3\u30c8</code> \u30a4\u30d9\u30f3\u30c8\u3084\u6c42\u4eba\u306b\u95a2\u3059\u308b\u6295\u7a3f <code>#random</code> Siv3D \u3068\u95a2\u4fc2\u3057\u306a\u3044\u81ea\u7531\u306a\u8a71\u984c <code>#questions</code> Siv3D \u3078\u306e\u8cea\u554f <p>\u516c\u5f0f\u30d5\u30a9\u30fc\u30e9\u30e0\u306e\u767b\u9332\u4eba\u6570</p> <p>Siv3D Discord \u30b5\u30fc\u30d0\u306e\u767b\u9332\u8005\u306f 2023 \u5e74 5 \u6708\u6642\u70b9\u3067 \u7d04 300 \u4eba\u3067\u3059\u3002600 \u4eba\u8d85\u304c\u767b\u9332\u3059\u308b Siv3D Slack\uff08\u904b\u7528\u505c\u6b62\u6e08\u307f\uff09\u3088\u308a\u3082\u5c11\u306a\u3044\u3067\u3059\u304c\u3001Discord \u306f 2022 \u5e74 7 \u6708\u306b\u672c\u683c\u904b\u7528\u3092\u958b\u59cb\u3057\u305f\u3070\u304b\u308a\u3067\u3001\u4f11\u7720\u30e6\u30fc\u30b6\u304c\u5c11\u306a\u3044\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u30022023 \u5e74\u5185\u306b\u306f\u767b\u9332\u8005\u6570\u304c 400 \u4eba\u3092\u8d85\u3048\u308b\u3053\u3068\u3092\u898b\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\u767b\u9332\u8005\u306e\u69cb\u6210\u306f 1\uff5e2 \u5272\u304c\u793e\u4f1a\u4eba\u3001\u305d\u308c\u4ee5\u5916\u306f\u5927\u5b66\u751f\u3001\u9ad8\u5c02\u751f\u3001\u5927\u5b66\u9662\u751f\u3001\u9ad8\u6821\u751f\u3068\u63a8\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>\u516c\u5f0f\u30d5\u30a9\u30fc\u30e9\u30e0\u306b\u304a\u3051\u308b\u63a1\u7528\u95a2\u9023\u6295\u7a3f\u306e\u6ce8\u610f\u4e8b\u9805</p> <p>\u516c\u5f0f\u30d5\u30a9\u30fc\u30e9\u30e0\u4e0a\u3067\u3001\u5354\u8cdb\u6cd5\u4eba\u306e\u62c5\u5f53\u8005\u304c\u3001\u81ea\u8eab\u3067\u81ea\u793e\u306e\u63a1\u7528\u306b\u95a2\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6295\u7a3f\u3059\u308b\u3053\u3068\u306f\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\u305f\u3060\u3057\u3001Siv3D \u5074\u306f\u8077\u696d\u7d39\u4ecb\u4e8b\u696d\uff08\u8077\u696d\u5b89\u5b9a\u6cd5\u7b2c 4 \u6761 1 \u9805\uff09\u3078\u306e\u62b5\u89e6\u3092\u907f\u3051\u308b\u305f\u3081\u3001\u516c\u5f0f\u30d5\u30a9\u30fc\u30e9\u30e0\u4e0a\u306b\u304a\u3044\u3066\u3001\u63a1\u7528\u306b\u95a2\u3059\u308b\u544a\u77e5\u3078\u306e\u5354\u529b\u3084\u63a8\u85a6\u3092\u884c\u3046\u3053\u3068\u306f\u306a\u304f\u3001\u508d\u89b3\u8005\u3068\u3057\u3066\u306e\u7acb\u5834\u306b\u306a\u308a\u307e\u3059\u3002\u5b66\u751f\u30a4\u30f3\u30bf\u30fc\u30f3\u30b7\u30c3\u30d7\u306b\u3064\u3044\u3066\u306e\u6295\u7a3f\u3082\u540c\u69d8\u3067\u3059\u3002</p>"},{"location":"sponsorship/corporate-sponsor-guideline/#3-sns-\u3067\u306e-pr-\u5354\u529b","title":"3. SNS \u3067\u306e PR \u5354\u529b","text":"<p>\u6700\u5927\u6708 1 \u56de\u306e\u983b\u5ea6\u3092\u76ee\u5b89\u306b\u3001SNS \u3067\u306e\u4f01\u696d PR \u306b\u5354\u529b\u3044\u305f\u3057\u307e\u3059\u3002</p> <ul> <li>Siv3D \u4ee3\u8868\u500b\u4eba\u306e Twitter \u30a2\u30ab\u30a6\u30f3\u30c8 @Reputeless <ul> <li>\u30d5\u30a9\u30ed\u30ef\u30fc\u7d04 5,400 \u4eba</li> <li>\u30d5\u30a9\u30ed\u30ef\u30fc\u306e\u95a2\u5fc3: C++, \u30b2\u30fc\u30e0\u958b\u767a, \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3001\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3001\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0</li> </ul> </li> <li>\u30b9\u30c6\u30eb\u30b9\u30de\u30fc\u30b1\u30c6\u30a3\u30f3\u30b0\u306b\u306a\u3089\u306a\u3044\u5f62\u5f0f<ul> <li>\u4f8b:\u300cSiv3D \u306e\u5354\u8cdb\u6cd5\u4eba\u3067\u3042\u308b \u3007\u3007 \u304c \u00d7\u00d7 \u3092\u30a2\u30ca\u30a6\u30f3\u30b9\u3057\u307e\u3057\u305f\u3002\uff08\u500b\u4eba\u7684\u306a\u611f\u60f3\uff09\u3002\uff08\u516c\u5f0f\u306e\u30c4\u30a4\u30fc\u30c8\u30ea\u30f3\u30af / Web \u30da\u30fc\u30b8 URL\uff09\u300d</li> <li>\u6587\u9762\u306b\u3064\u3044\u3066\u306f\u4e8b\u524d\u78ba\u8a8d\u30fb\u8abf\u6574\u53ef\u3067\u3059</li> </ul> </li> </ul>"},{"location":"sponsorship/corporate-sponsor-guideline/#4-\u52c9\u5f37\u4f1a\u53c2\u52a0\u8005\u3078\u306e\u767a\u4fe1","title":"4. \u52c9\u5f37\u4f1a\u53c2\u52a0\u8005\u3078\u306e\u767a\u4fe1","text":"<p>Siv3D \u52c9\u5f37\u4f1a\u306e\u53c2\u52a0\u8005\u306b\u5bfe\u3057\u3066\u3001\u6b21\u306e\u3088\u3046\u306a\u767a\u4fe1\u304c\u53ef\u80fd\u3067\u3059\u3002</p> <ul> <li>\u30ce\u30d9\u30eb\u30c6\u30a3\u914d\u5e03</li> <li>\u30d1\u30f3\u30d5\u30ec\u30c3\u30c8\u914d\u5e03</li> <li>\u30e0\u30fc\u30d3\u30fc\u306e\u4e0a\u6620\uff083 \u5206\u4ee5\u5185\u76ee\u5b89\uff09</li> <li>\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306e\u8b1b\u6f14\uff083 \u5206\u4ee5\u5185\u76ee\u5b89\uff09</li> </ul>"},{"location":"sponsorship/corporate-sponsor-guideline/#5-\u5171\u50ac\u30a4\u30d9\u30f3\u30c8","title":"5. \u5171\u50ac\u30a4\u30d9\u30f3\u30c8","text":"<p>\u30b9\u30bf\u30b8\u30aa\u30c4\u30a2\u30fc\u3001\u30cf\u30c3\u30ab\u30bd\u30f3\u3001\u30b2\u30fc\u30e0\u30b8\u30e3\u30e0\u7b49\u306e\u5171\u50ac\u30a4\u30d9\u30f3\u30c8\u304c\u53ef\u80fd\u3067\u3059\u3002</p>"},{"location":"sponsorship/corporate-sponsor-guideline/#6-siv3d-\u6d3b\u52d5\u5831\u544a\u66f8","title":"6. Siv3D \u6d3b\u52d5\u5831\u544a\u66f8","text":"<p>\u5b63\u7bc0\u3054\u3068\u306b\u767a\u884c\u3055\u308c\u308b\u6d3b\u52d5\u5831\u544a\u66f8\u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u3001\u3054\u8981\u671b\u3084\u304a\u554f\u3044\u5408\u308f\u305b\u304c\u53ef\u80fd\u3067\u3059\u3002</p>"},{"location":"sponsorship/corporate-sponsor-guideline/#7-\u30c6\u30af\u30cb\u30ab\u30eb\u30d7\u30ec\u30d3\u30e5\u30fc\u3078\u306e\u30a2\u30af\u30bb\u30b9","title":"7. \u30c6\u30af\u30cb\u30ab\u30eb\u30d7\u30ec\u30d3\u30e5\u30fc\u3078\u306e\u30a2\u30af\u30bb\u30b9","text":"<p>Siv3D \u306e\u516c\u958b\u524d\u306e\u65b0\u30b5\u30fc\u30d3\u30b9\u3084\u30c4\u30fc\u30eb\u306b\u95a2\u3057\u3066\u3001\u8aac\u660e\u3084\u5148\u884c\u4f53\u9a13\u3092\u53d7\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002  </p>"},{"location":"sponsorship/corporate-sponsor/","title":"\u5354\u8cdb\u4f01\u696d\u306e\u52df\u96c6\u306b\u3064\u3044\u3066","text":""},{"location":"sponsorship/corporate-sponsor/#\u4f01\u696d\u306e\u7686\u69d8\u3078","title":"\u4f01\u696d\u306e\u7686\u69d8\u3078","text":"<p>Siv3D \u306f C++ \u306b\u3088\u308b\u30b2\u30fc\u30e0\u30fb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3092\u697d\u3057\u304f\u7c21\u5358\u306b\u3059\u308b\u30c4\u30fc\u30eb\u3068\u6280\u6cd5\u3092\u3059\u3079\u3066\u306e\u4eba\u3005\u3068\u5171\u6709\u3059\u308b\u3053\u3068\u3092\u76ee\u6a19\u306b\u3001\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u958b\u767a\u30fb\u63d0\u4f9b\u3001\u30e6\u30fc\u30b6\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u652f\u63f4\u3001\u56fd\u5185\u5404\u5730\u3067\u306e\u52c9\u5f37\u4f1a\u958b\u50ac\u3001\u82e5\u3044\u4e16\u4ee3\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u53c2\u52a0\u652f\u63f4\u306b\u9577\u5e74\u53d6\u308a\u7d44\u3093\u3067\u3044\u307e\u3059\u3002Siv3D \u306e\u8da3\u65e8\u306b\u3054\u8cdb\u540c\u306e\u3046\u3048\u3001\u3054\u652f\u63f4\u30fb\u3054\u5354\u8cdb\u3092\u8cdc\u308a\u307e\u3059\u3088\u3046\u304a\u9858\u3044\u7533\u3057\u4e0a\u3052\u307e\u3059\u3002</p> <ul> <li>\u3053\u308c\u307e\u3067\u306e\u30a4\u30d9\u30f3\u30c8</li> </ul>"},{"location":"sponsorship/corporate-sponsor/#\u5354\u8cdb\u306b\u95a2\u3059\u308b\u304a\u554f\u3044\u5408\u308f\u305b\u7a93\u53e3","title":"\u5354\u8cdb\u306b\u95a2\u3059\u308b\u304a\u554f\u3044\u5408\u308f\u305b\u7a93\u53e3","text":"<p>\uff08Siv3D \u4ee3\u8868\uff09\u9234\u6728 \u907c : <pre><code>reputeless@gmail.com\n</code></pre></p>"},{"location":"sponsorship/corporate-sponsor/#\u5354\u8cdb\u7533\u8fbc\u66f8","title":"\u5354\u8cdb\u7533\u8fbc\u66f8","text":"<ul> <li>\u66f8\u5f0f-1 \u5354\u8cdb\u7533\u8fbc\u66f8 </li> <li>\u66f8\u5f0f-2 \u5354\u8cdb\u91d1\u306e\u304a\u9858\u3044 </li> </ul>"},{"location":"sponsorship/corporate-sponsor/#\u5354\u8cdb\u7279\u5178","title":"\u5354\u8cdb\u7279\u5178","text":"<ul> <li>\u5354\u8cdb\u7279\u5178</li> </ul>"},{"location":"sponsorship/corporate-sponsor/#siv3d-\u6d3b\u52d5\u5831\u544a\u66f8","title":"Siv3D \u6d3b\u52d5\u5831\u544a\u66f8","text":"<ul> <li>\u7b2c 4 \u53f7 - 2023 \u5e74 9 \u6708 </li> <li>\u7b2c 3 \u53f7 - 2023 \u5e74 6 \u6708 </li> <li>\u7b2c 2 \u53f7 - 2023 \u5e74 3 \u6708 </li> <li>\u7b2c 1 \u53f7 - 2022 \u5e74 11 \u6708 </li> </ul>"},{"location":"sponsorship/corporate-sponsor/#\u30a4\u30d9\u30f3\u30c8\u5171\u50ac-\u4f01\u753b\u4f8b","title":"\u30a4\u30d9\u30f3\u30c8\u5171\u50ac \u4f01\u753b\u4f8b","text":"<ul> <li>\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 1: \u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306e\u30b2\u30fc\u30e0\u30b8\u30e3\u30e0 </li> </ul>"},{"location":"tools/easing/","title":"Easing Functions Cheat Sheet","text":""},{"location":"tools/easing/#easing-functions-cheat-sheet-\u306e\u6a5f\u80fd","title":"Easing Functions Cheat Sheet \u306e\u6a5f\u80fd","text":"<p>\u30a4\u30fc\u30b8\u30f3\u30b0\u95a2\u6570\u306e\u6642\u9593\u306b\u4f34\u3046\u5024\u306e\u5909\u5316\u3092\u30b0\u30e9\u30d5\u3067\u53ef\u8996\u5316\u3057\u3066\u3044\u308b Web \u30b5\u30a4\u30c8\u3067\u3059\u3002</p>"},{"location":"tools/easing/#\u5229\u7528\u624b\u9806","title":"\u5229\u7528\u624b\u9806","text":"<ul> <li>Easing Functions Cheat Sheet  \u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002</li> </ul>"},{"location":"tools/emoji/","title":"\u7d75\u6587\u5b57\u3068\u30a2\u30a4\u30b3\u30f3\u306e\u691c\u7d22","text":""},{"location":"tools/emoji/#\u7d75\u6587\u5b57\u306e\u691c\u7d22","title":"\u7d75\u6587\u5b57\u306e\u691c\u7d22","text":"<ul> <li>\u7d75\u6587\u5b57\u306f emojipedia  \u3067\u63a2\u3059\u3068\u4fbf\u5229\u3067\u3059\u3002</li> <li>Windows \u306e\u5834\u5408\u306f\u3001Win+. \u3067\u51fa\u3066\u304f\u308b\u7d75\u6587\u5b57\u5165\u529b\u30e1\u30cb\u30e5\u30fc\u3082\u4f7f\u3048\u307e\u3059\u3002</li> </ul>"},{"location":"tools/emoji/#\u30a2\u30a4\u30b3\u30f3\u306e\u691c\u7d22","title":"\u30a2\u30a4\u30b3\u30f3\u306e\u691c\u7d22","text":"<ul> <li>\u30a2\u30a4\u30b3\u30f3\u306f Material Design Icons  \u307e\u305f\u306f Font Awesome  \u3067\u8abf\u3079\u3089\u308c\u308b 16 \u9032\u6570\u30b3\u30fc\u30c9\u306b <code>_icon</code> \u3092\u4ed8\u3051\u305f\u5024\u3092\u4f7f\u3044\u307e\u3059\u3002</li> </ul>"},{"location":"tools/emoji/#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9","title":"\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9","text":"<pre><code>#include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.92 });\n// \u7d75\u6587\u5b57\nconst Texture t1{ U\"\ud83c\udf54\"_emoji };\n// \u30a2\u30a4\u30b3\u30f3\nconst Texture t2{ 0xF0431_icon, 80 };\nwhile (System::Update())\n{\nt1.drawAt(300, 300);\nt2.drawAt(500, 300, ColorF{ 0.25 });\nSimpleGUI::Button(U\"\\U000F0493\", Vec2{ 40, 40 });\n}\n}\n</code></pre>"},{"location":"tools/gamebar/","title":"Xbox Game Bar","text":""},{"location":"tools/gamebar/#xbox-game-bar-\u306e\u6a5f\u80fd","title":"Xbox Game Bar \u306e\u6a5f\u80fd","text":"<p>Xbox Game Bar \u306f\u3001Windows 10 / 11 \u306b\u6a19\u6e96\u3067\u642d\u8f09\u3055\u308c\u3066\u3044\u308b\u3001\u30b2\u30fc\u30e0\u30d7\u30ec\u30a4\u4e2d\u306b\u30b2\u30fc\u30e0\u306e\u9332\u753b\u3084\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u64ae\u5f71\u3067\u304d\u308b\u30c4\u30fc\u30eb\u3067\u3059\u3002Siv3D \u3067\u5236\u4f5c\u3057\u305f\u30a2\u30d7\u30ea\u3084\u30b2\u30fc\u30e0\u306b\u95a2\u3057\u3066\u3082\u3001Xbox Game Bar \u3092\u4f7f\u3063\u3066\u5b9f\u884c\u753b\u9762\u3092\u9332\u753b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"tools/gamebar/#xbox-game-bar-\u306e\u5229\u7528\u306b\u5fc5\u8981\u306a\u3082\u306e","title":"Xbox Game Bar \u306e\u5229\u7528\u306b\u5fc5\u8981\u306a\u3082\u306e","text":"<ul> <li>Windows 10 / 11</li> </ul>"},{"location":"tools/gamebar/#\u5229\u7528\u624b\u9806","title":"\u5229\u7528\u624b\u9806","text":"<ul> <li>\u516c\u5f0f\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 </li> <li>Siv3D \u306e\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3057\u3066\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u8868\u793a\u3057\u307e\u3059\u3002</li> <li>Win+G \u3092\u62bc\u3057\u3066 Xbox Game Bar \u3092\u8d77\u52d5\u3057\u307e\u3059\u3002</li> <li>Xbox Game Bar \u306e\u753b\u9762\u3067\u300c\u9332\u753b\u3092\u958b\u59cb\u300d\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002<ul> <li>Xbox Game Bar \u3092\u8d77\u52d5\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001Win+Alt+R \u3092\u62bc\u3057\u3066\u9332\u753b\u3092\u958b\u59cb\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</li> </ul> </li> </ul>"},{"location":"tools/gamebar/#\u985e\u4f3c\u306e\u30c4\u30fc\u30eb","title":"\u985e\u4f3c\u306e\u30c4\u30fc\u30eb","text":"<ul> <li>ScreenToGif </li> <li>Snipping Tool\uff08Windows 10 / 11 \u306e\u6a19\u6e96\u30a2\u30d7\u30ea\uff09<ul> <li>\u6700\u65b0\u306e Windows 11 \u3067\u306f \u753b\u9762\u306e\u6307\u5b9a\u3057\u305f\u7bc4\u56f2\u306e\u9332\u753b  \u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002</li> </ul> </li> </ul>"},{"location":"tools/gist/","title":"GitHub Gist","text":""},{"location":"tools/gist/#gist-\u306e\u6a5f\u80fd","title":"Gist \u306e\u6a5f\u80fd","text":"<p>GitHub Gist \u3092\u4f7f\u3046\u3068\u3001\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3092\u30ef\u30f3\u30af\u30ea\u30c3\u30af\u3067\u81ea\u5206\u306e GitHub \u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u4fdd\u5b58\u3057\u3001\u5171\u6709\u7528\u306e URL \u3092\u4f7f\u3063\u3066\u4ed6\u306e\u4eba\u3068\u30b7\u30a7\u30a2\u3067\u304d\u307e\u3059\u3002\u6b21\u306e\u3088\u3046\u306a\u6642\u306b\u4fbf\u5229\u306a\u30c4\u30fc\u30eb\u3067\u3059\u3002</p> <ul> <li> \u8cea\u554f\u3059\u308b\u3068\u304d\u306b\u30b3\u30fc\u30c9\u3092\u5171\u6709\u3057\u305f\u3044</li> <li> \u4ed6\u306e\u4eba\u306b\u30b3\u30fc\u30c9\u3092\u898b\u305b\u305f\u3044</li> <li> \u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3092\u4fdd\u5b58\u30fb\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u305f\u3044</li> <li> \u5c0f\u3055\u306a\u4f5c\u54c1\u306e\u30b3\u30fc\u30c9\u3092\u5171\u6709\u3057\u305f\u3044</li> </ul>"},{"location":"tools/gist/#gist-\u306e\u5229\u7528\u306b\u5fc5\u8981\u306a\u3082\u306e","title":"Gist \u306e\u5229\u7528\u306b\u5fc5\u8981\u306a\u3082\u306e","text":"<ul> <li>GitHub \u30a2\u30ab\u30a6\u30f3\u30c8\uff08\u7121\u6599\uff09</li> </ul>"},{"location":"tools/gist/#\u5229\u7528\u624b\u9806","title":"\u5229\u7528\u624b\u9806","text":"<ol> <li>GitHub Gist  \u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\uff08\u8981\u30ed\u30b0\u30a4\u30f3\uff09\u3002</li> <li>\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u5165\u529b\u3057\u307e\u3059\u3002<code>Main.cpp</code> \u306e\u3088\u3046\u306b\u3001\u62e1\u5f35\u5b50\u3092 .cpp \u306b\u3059\u308b\u3068\u3001C++ \u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\u304c\u9069\u7528\u3055\u308c\u307e\u3059\u3002</li> <li>\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3001\u307e\u305f\u306f\u8cbc\u308a\u4ed8\u3051\u307e\u3059\u3002</li> <li>\u300cCreate secret Gist\u300d\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002</li> <li>Gist \u4e0a\u306b\u30b3\u30fc\u30c9\u304c\u4fdd\u5b58\u3055\u308c\u3001\u4e00\u610f\u306a URL \u304c\u767a\u884c\u3055\u308c\u307e\u3059\u3002</li> <li>URL \u3092\u77e5\u3063\u3066\u3044\u308b\u4eba\u306f\u305d\u306e\u30b3\u30fc\u30c9\u3092\u95b2\u89a7\u3067\u304d\u307e\u3059\u3002</li> </ol>"},{"location":"tools/gist/#\u4f8b","title":"\u4f8b","text":"<p>https://gist.github.com/Reputeless/4d25a6032e4c84f0064b81dfafbbdce2 </p>"},{"location":"tools/gist/#\u767a\u5c55\u7684\u306a\u4f7f\u3044\u65b9","title":"\u767a\u5c55\u7684\u306a\u4f7f\u3044\u65b9","text":"<ul> <li>\u516c\u958b\u3057\u305f Gist \u306f\u3001\u53f3\u4e0a\u306e\u300cEdit\u300d\u3092\u62bc\u3059\u3053\u3068\u3067\u3001URL \u306f\u305d\u306e\u307e\u307e\u3067\u4e2d\u8eab\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\u5909\u66f4\u5c65\u6b74\u306f\u300cRevisions\u300d\u306b\u8a18\u9332\u3055\u308c\u307e\u3059\u3002</li> <li>\u8907\u6570\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002</li> <li>\u753b\u50cf\u3084\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u306f\u4fdd\u5b58\u3067\u304d\u307e\u305b\u3093\u304c\u3001JSON \u3084 XML \u306a\u3069\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306f\u4fdd\u5b58\u3067\u304d\u307e\u3059\u3002</li> <li>Markdown \u5f62\u5f0f\uff08\u62e1\u5f35\u5b50 .md\uff09\u3067\u8a18\u8ff0\u3059\u308b\u3068\u3001Gist \u306e\u30da\u30fc\u30b8\u306b\u30d7\u30ec\u30d3\u30e5\u30fc\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002</li> </ul>"},{"location":"tools/gitignore/","title":".gitignore","text":""},{"location":"tools/gitignore/#gitignore-\u306e\u6a5f\u80fd","title":".gitignore \u306e\u6a5f\u80fd","text":"<p>.gitignore \u30d5\u30a1\u30a4\u30eb\u306f\u3001Git \u306b\u3001\u7279\u5b9a\u306e\u30d5\u30a1\u30a4\u30eb\u3084\u30d5\u30a9\u30eb\u30c0\u3092\u7121\u8996\u3059\u308b\u3088\u3046\u306b\u6307\u793a\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3059\u3002\u30d3\u30eb\u30c9\u306e\u904e\u7a0b\u3067\u751f\u6210\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u3084\u3001Git \u306b\u8ffd\u8de1\u3055\u305b\u305f\u304f\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u7121\u8996\u3059\u308b\u305f\u3081\u306b\u4f7f\u3044\u307e\u3059\u3002Siv3D \u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306a .gitignore \u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>Siv3D \u7528\u306e .gitignore \u3092\u958b\u304f</p> <pre><code># Ignore Visual Studio temporary files, build results, and\n# files generated by popular Visual Studio add-ons.\n# https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Ll]ogs/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n*.lastcodeanalysissucceeded\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Coverlet is a free, cross platform Code Coverage Tool\ncoverage*[.json, .xml, .info]\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup &amp; report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n\n# Xcode\nxcshareddata/\nxcuserdata/\n*.dSYM\n*.xcworkspacedata\n\n# macOS\n# https://github.com/github/gitignore/blob/master/Global/macOS.gitignore\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# CMake\n# https://github.com/github/gitignore/blob/master/CMake.gitignore\nCMakeLists.txt.user\nCMakeCache.txt\nCMakeFiles\nCMakeScripts\nTesting\nMakefile\ncmake_install.cmake\ninstall_manifest.txt\ncompile_commands.json\nCTestTestfile.cmake\n_deps\n\n# Ninja\n# https://github.com/github/gitignore/blob/master/Global/Ninja.gitignore\n.ninja_deps\n.ninja_log\nbuild.ninja\nrules.ninja\n\n#\ngmon.out\n.vscode/\n*.PVS-Studio.stacktrace.txt\n\n# Siv3D\n# example Wavefront .obj files\n!**/example/obj/\n!**/example/obj/*.obj\n\n# Ignore compiled binaries\n**/App/*.app\n**/App/*.exe\n\n# Ignore any saved local files\n**/App/AS_DEBUG/\n**/App/Screenshot/\n\n# Ignore resource files\n#**/App/example\n#**/App/engine\n#**/App/dll\n</code></pre> <p>example, engine, dll \u30d5\u30a1\u30a4\u30eb\u3082\u30ea\u30dd\u30b8\u30c8\u30ea\u7ba1\u7406\u306b\u542b\u3081\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u672b\u5c3e\u306e 3 \u884c\u306e\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u5916\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code># Ignore resource files\n**/App/example\n**/App/engine\n**/App/dll\n</code></pre>"},{"location":"tools/hot-reload/","title":"\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9","text":""},{"location":"tools/hot-reload/#\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u306e\u6a5f\u80fd","title":"\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u306e\u6a5f\u80fd","text":"<p>Visual Studio \u306e\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u6a5f\u80fd\uff08Visual Studio \u30c7\u30d0\u30c3\u30b0\u30e1\u30cb\u30e5\u30fc\u306e \ud83d\udd25 \u30dc\u30bf\u30f3\uff09\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u518d\u8d77\u52d5\u3059\u308b\u3053\u3068\u306a\u304f\u3001\u6570\u5024\u306e\u5909\u66f4\u3084\u30b3\u30fc\u30c9\u306e\u8ffd\u52a0\u3092\u5b9f\u884c\u4e2d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u53cd\u6620\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a2d\u5b9a\u3067\u306f\u3001Debug \u30d3\u30eb\u30c8\u3067\u30c7\u30d0\u30c3\u30ac\u3092\u30a2\u30bf\u30c3\u30c1\u3057\u3066\u5b9f\u884c\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306e\u307f\u6709\u52b9\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p>"},{"location":"tools/hot-reload/#\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u306e\u6ce8\u610f","title":"\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u306e\u6ce8\u610f","text":"<p>\u56f3\u5f62\u306e\u8ffd\u52a0\u3084\u63cf\u753b\u4f4d\u7f6e\u306e\u5909\u66f4\u3001\u8272\u306e\u5909\u66f4\u306a\u3069\u306e\u8abf\u6574\u4f5c\u696d\u306f\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u3067\u304d\u308b\u5834\u5408\u304c\u591a\u304f\u3001\u8abf\u6574\u306e\u30b5\u30a4\u30af\u30eb\u3092\u52a0\u901f\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u306b\u5bfe\u5fdc\u3057\u306a\u3044\u30b3\u30fc\u30c9\u5909\u66f4\u306e\u64cd\u4f5c\u3082\u3042\u308b\u305f\u3081\u3001\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u3060\u3051\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b8c\u6210\u3055\u305b\u308b\u306e\u306f\u96e3\u3057\u3044\u3067\u3059\u3002\u5c06\u6765\u306e Visual Studio \u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3067\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u3067\u304d\u308b\u64cd\u4f5c\u306e\u7bc4\u56f2\u304c\u5e83\u304c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u51e6\u7406\u3092\u5dfb\u304d\u623b\u3059\u5f62\u3067\u306e\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u306f\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u3059\u3067\u306b\u30ed\u30fc\u30c9\u3057\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u3084\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u518d\u30ed\u30fc\u30c9\u306f\u884c\u308f\u308c\u307e\u305b\u3093\u3002\u30c6\u30af\u30b9\u30c1\u30e3\u3084\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u5909\u66f4\u3092\u53cd\u6620\u3055\u305b\u308b\u306b\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u518d\u8d77\u52d5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"tools/msvc-exception/","title":"\u4f8b\u5916\u306e\u767a\u751f\u7b87\u6240\u306e\u8868\u793a","text":""},{"location":"tools/msvc-exception/#\u8a2d\u5b9a\u65b9\u6cd5","title":"\u8a2d\u5b9a\u65b9\u6cd5","text":"<p>Windows \u7248\u306e Siv3D \u306f\u3001\u30b5\u30d6\u30b9\u30ec\u30c3\u30c9\u3067 <code>Main()</code> \u3092\u5b9f\u884c\u3059\u308b\u3068\u3044\u3046\u8a2d\u8a08\u306e\u305f\u3081\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a2d\u5b9a\u3067\u306f\u3001\u4f8b\u5916\u306e\u767a\u751f\u3057\u305f\u884c\u304c\u30b3\u30fc\u30c9\u30a8\u30c7\u30a3\u30bf\u4e0a\u306b\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u3002</p> <p>\u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u7b87\u6240\u3092\u30a8\u30c7\u30a3\u30bf\u4e0a\u3067\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001Visual Studio \u30e1\u30cb\u30e5\u30fc\u306e\u300c\u30c7\u30d0\u30c3\u30b0\u300d\u2192\u300c\u30a6\u30a3\u30f3\u30c9\u30a6\u300d\u2192\u300c\u4f8b\u5916\u8a2d\u5b9a\u300d\u3092\u958b\u304d\u3001\u300c\u30b9\u30ed\u30fc\u3055\u308c\u305f\u3068\u304d\u306b\u4e2d\u65ad\u300d\u306e\u30ea\u30b9\u30c8\u306b <code>s3d::Error</code> \u3092\u52a0\u3048\u307e\u3059\u3002\u3059\u308b\u3068\u3001\u305d\u306e\u7a2e\u985e\u306e\u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u6b21\u306e\u884c\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u4e2d\u65ad\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u4f8b\u5916\u767a\u751f\u500b\u6240\u306e\u7279\u5b9a\u304c\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002</p> <p></p>"},{"location":"tools/msvc-exception/#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9","title":"\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nint32 a = 10;\nif (a != 10)\n{\nthrow Error{ U\"A\" };\n}\nint32 b = 20;\nif (b != 10)\n{\nthrow Error{ U\"B\" }; // \u4f8b\u5916\u304c\u6295\u3052\u3089\u308c\u308b\n}\nPrint &lt;&lt; a &lt;&lt; b; // \u3053\u306e\u884c\u3067\u4e2d\u65ad\u3055\u308c\u308b\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tools/palette/","title":"Siv3D Palette Browser","text":""},{"location":"tools/palette/#siv3d-palette-browser-\u306e\u6a5f\u80fd","title":"Siv3D Palette Browser \u306e\u6a5f\u80fd","text":"<p>Siv3D \u3067\u8272\u3092\u8868\u73fe\u3059\u308b\u969b\u306b\u4f7f\u3046 <code>Palette</code>, <code>Color</code>, <code>ColorF</code>, <code>HSV</code> \u3092\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u78ba\u8a8d\u3057\u3001\u76f8\u4e92\u306b\u5909\u63db\u3057\u305f\u308a\u3001\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u306b\u30b3\u30d4\u30fc\u3057\u305f\u308a\u3067\u304d\u308b\u30c4\u30fc\u30eb\u3067\u3059\u3002</p>"},{"location":"tools/palette/#\u5229\u7528\u624b\u9806","title":"\u5229\u7528\u624b\u9806","text":"<ul> <li>Siv3D Palette Browser  \u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002</li> <li>\u516c\u5f0f\u306e README </li> </ul>"},{"location":"tools/scrapbox/","title":"Scrapbox","text":""},{"location":"tools/scrapbox/#scrapbox-\u306e\u6a5f\u80fd","title":"Scrapbox \u306e\u6a5f\u80fd","text":"<p>Scrapbox \u3092\u4f7f\u3046\u3068\u3001Wiki \u306e\u3088\u3046\u306a\u30da\u30fc\u30b8\u3092\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u4f5c\u54c1\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3068\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u3001\u30b5\u30f3\u30d7\u30eb\u96c6\u3084\u4f5c\u54c1\u96c6\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u6b21\u306e\u3088\u3046\u306a\u6642\u306b\u4fbf\u5229\u306a\u30c4\u30fc\u30eb\u3067\u3059\u3002</p> <ul> <li> \u30b5\u30f3\u30d7\u30eb\u96c6\u3092\u4f5c\u308a\u305f\u3044</li> <li> \u4f5c\u54c1\u96c6\u3092\u4f5c\u308a\u305f\u3044</li> <li> \u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3092\u4fdd\u5b58\u30fb\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u305f\u3044</li> <li> \u81ea\u5206\u306e Web \u30b5\u30a4\u30c8\u3092\u4f5c\u308a\u305f\u3044</li> </ul>"},{"location":"tools/scrapbox/#scrapbox-\u306e\u5229\u7528\u306b\u5fc5\u8981\u306a\u3082\u306e","title":"Scrapbox \u306e\u5229\u7528\u306b\u5fc5\u8981\u306a\u3082\u306e","text":"<ul> <li>Gmail \u30a2\u30ab\u30a6\u30f3\u30c8\uff08\u7121\u6599\uff09</li> </ul>"},{"location":"tools/scrapbox/#\u5229\u7528\u624b\u9806","title":"\u5229\u7528\u624b\u9806","text":"<p>Scrapbox  \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3001\u8aac\u660e\u306b\u3057\u305f\u304c\u3063\u3066\u30da\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p>"},{"location":"tools/scrapbox/#\u30e6\u30fc\u30b6\u306b\u3088\u308b\u30b5\u30f3\u30d7\u30eb\u96c6\u306e\u4f8b","title":"\u30e6\u30fc\u30b6\u306b\u3088\u308b\u30b5\u30f3\u30d7\u30eb\u96c6\u306e\u4f8b","text":"<ul> <li>Siv3D \u30df\u30cb\u30b5\u30f3\u30d7\u30eb\u96c6 </li> <li>Siv3D \u30d7\u30c1\u30b5\u30f3\u30d7\u30eb </li> </ul>"},{"location":"tools/scrapbox/#\u767a\u5c55\u7684\u306a\u4f7f\u3044\u65b9","title":"\u767a\u5c55\u7684\u306a\u4f7f\u3044\u65b9","text":"<ul> <li>1 \u3064\u306e Scrapbox \u3092\u8907\u6570\u4eba\u3067\u7de8\u96c6\u3067\u304d\u307e\u3059\u3002</li> </ul>"},{"location":"tools/vscoloroutput/","title":"VSColorOutput64","text":""},{"location":"tools/vscoloroutput/#vscoloroutput64-\u306e\u6a5f\u80fd","title":"VSColorOutput64 \u306e\u6a5f\u80fd","text":"<p>Windows \u7248 Visual Studio \u306e\u62e1\u5f35\u6a5f\u80fd\u300cVSColorOutput64\u300d\u3092\u4f7f\u3046\u3068\u3001\u30d3\u30eb\u30c9\u3084\u30c7\u30d0\u30c3\u30b0\u306e\u51fa\u529b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8272\u5206\u3051\u3057\u3066\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u30a8\u30e9\u30fc\u3092\u8d64\u3001\u8b66\u544a\u3092\u9ec4\u8272\u3067\u8868\u793a\u3057\u3001\u51fa\u529b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u4e2d\u306e\u91cd\u8981\u306a\u60c5\u5831\u3092\u898b\u3064\u3051\u3084\u3059\u304f\u3057\u307e\u3059\u3002</p>"},{"location":"tools/vscoloroutput/#vscoloroutput64-\u306e\u5229\u7528\u306b\u5fc5\u8981\u306a\u3082\u306e","title":"VSColorOutput64 \u306e\u5229\u7528\u306b\u5fc5\u8981\u306a\u3082\u306e","text":"<ul> <li>Visual Studio 2022</li> </ul>"},{"location":"tools/vscoloroutput/#\u5229\u7528\u624b\u9806","title":"\u5229\u7528\u624b\u9806","text":"<p>Visual Studio Marketplace \u306e VSColorOutput64 \u30da\u30fc\u30b8  \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3001\u62e1\u5f35\u6a5f\u80fd\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\u3042\u308b\u3044\u306f Visual Studio \u5185\u306e\u62e1\u5f35\u6a5f\u80fd\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u7d4c\u7531\u3067\u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"tools/vscoloroutput/#\u767a\u5c55\u7684\u306a\u4f7f\u3044\u65b9","title":"\u767a\u5c55\u7684\u306a\u4f7f\u3044\u65b9","text":"<ul> <li>\u8272\u306e\u8a2d\u5b9a\u306f\u300c\u30c4\u30fc\u30eb\u300d\u2192\u300c\u30aa\u30d7\u30b7\u30e7\u30f3\u300d\u2192\u300cVSColorOutput64\u300d\u304b\u3089\u884c\u3048\u307e\u3059\u3002</li> <li>\u521d\u671f\u8a2d\u5b9a\u3067\u306f\u5bc4\u4ed8\u306e\u304a\u9858\u3044\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u300c\u30c4\u30fc\u30eb\u300d\u2192\u300c\u30aa\u30d7\u30b7\u30e7\u30f3\u300d\u2192\u300cVSColorOutput64\u300d\u2192\u300cGeneral\u300d\u2192\u300cYes, I Donated!\u300d\u3092\u300cTrue\u300d\u306b\u5909\u66f4\u3059\u308b\u3068\u3001\u5bc4\u4ed8\u306e\u304a\u9858\u3044\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002</li> <li>VSColorOutput64 \u306e\u4f5c\u8005\u3078\u306e\u5bc4\u4ed8\u30da\u30fc\u30b8\u306f Become a sponsor to Mike Ward </li> </ul>"},{"location":"tutorial/app-basic/","title":"4. \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u57fa\u672c\u64cd\u4f5c","text":"<p>Siv3D \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u57fa\u672c\u7684\u306a\u64cd\u4f5c\u65b9\u6cd5\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial/app-basic/#41-\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u57fa\u672c\u64cd\u4f5c","title":"4.1 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u57fa\u672c\u64cd\u4f5c","text":""},{"location":"tutorial/app-basic/#411-\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3057\u3066\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b","title":"4.1.1 \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3057\u3066\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b","text":"<p>Siv3D \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u6b21\u306e\u3044\u305a\u308c\u304b\u306e\u65b9\u6cd5\u3067\u7d42\u4e86\u3057\u307e\u3059\u3002</p> <ul> <li>\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b</li> <li>Esc \u3092\u62bc\u3059</li> <li>\u30d7\u30ed\u30b0\u30e9\u30e0\u304c <code>System::Exit()</code> \u3092\u547c\u3076</li> </ul> <p>\u3053\u306e\u52d5\u4f5c\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u65b9\u6cd5\u306f\u3001\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 4.2 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"tutorial/app-basic/#412-\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u4fdd\u5b58\u3059\u308b","title":"4.1.2 \u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u4fdd\u5b58\u3059\u308b","text":"<p>Siv3D \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u6b21\u306e\u3044\u305a\u308c\u304b\u306e\u65b9\u6cd5\u3067\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002</p> <ul> <li>Print Screen \u3092\u62bc\u3059</li> <li>F12 \u3092\u62bc\u3059</li> </ul> <p>\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306e\u4fdd\u5b58\u5148\u306f OS \u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u3002</p> OS \u4fdd\u5b58\u5148 Windows \u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3068\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e <code>Screenshot</code> \u30d5\u30a9\u30eb\u30c0 macOS \u30d4\u30af\u30c1\u30e3\u30d5\u30a9\u30eb\u30c0\u5185\u306e <code>Screenshot</code> \u30d5\u30a9\u30eb\u30c0 Linux \u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3068\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e <code>Screenshot</code> \u30d5\u30a9\u30eb\u30c0 Windows \u3067\u306e\u753b\u9762\u306e\u9332\u753b <p>Windows 10, 11 \u3067\u306f\u3001Windows \u306b\u6a19\u6e96\u3067\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u308b\u753b\u9762\u306e\u9332\u753b\u6a5f\u80fd\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u52d5\u4f5c\u3092\u52d5\u753b\u306b\u4fdd\u5b58\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u8a73\u3057\u304f\u306f\u4e0b\u8a18\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <ul> <li>Xbox Game Bar</li> </ul> \u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u4fdd\u5b58\u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30ad\u30fc\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba <p><code>ScreenCapture::SetShortcutKeys()</code> \u3092\u4f7f\u3063\u3066\u3001\u5b9f\u884c\u4e2d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306e\u4fdd\u5b58\u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30ad\u30fc\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// [A] \u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u3068\u304d\u306e\u307f\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u4fdd\u5b58\u3059\u308b\u3088\u3046\u8a2d\u5b9a\u3059\u308b\nScreenCapture::SetShortcutKeys({ KeyA });\nwhile (System::Update())\n{\nCircle{ Scene::Center(), 100 }.draw();\n}\n}\n</code></pre>"},{"location":"tutorial/app-basic/#413-\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092\u8868\u793a\u3059\u308b","title":"4.1.3 \u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092\u8868\u793a\u3059\u308b","text":"<p>Siv3D \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u6b21\u306e\u3044\u305a\u308c\u304b\u306e\u65b9\u6cd5\u3067\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092\u8868\u793a\u3057\u307e\u3059\u3002</p> <ul> <li>F1 \u3092\u62bc\u3059</li> <li><code>LicenseManager::ShowInBrowser()</code> \u3092\u547c\u3076</li> </ul> <p>\u3053\u306e\u64cd\u4f5c\u306b\u3088\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30fb\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092 Web \u30d6\u30e9\u30a6\u30b6\u3067\u8868\u793a\u3057\u307e\u3059\u3002</p> \u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092\u8ffd\u52a0\u3059\u308b <p><code>LicenseManager::AddLicense()</code> \u3092\u4f7f\u3063\u3066\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nLicenseManager::AddLicense({\n.title = U\"My game\",\n.copyright = U\"(C) 2023 My name\",\n.text = U\"License\" });\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial/app-basic/#414-\u5168\u753b\u9762\u8868\u793a\u306b\u3059\u308bwindows-\u7248","title":"4.1.4 \u5168\u753b\u9762\u8868\u793a\u306b\u3059\u308b\uff08Windows \u7248\uff09","text":"<p>Windows \u3067\u306f\u3001\u6b21\u306e\u65b9\u6cd5\u3067\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u5168\u753b\u9762\u8868\u793a\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <ul> <li>Alt+Enter \u3092\u62bc\u3059</li> </ul> <p>\u518d\u3073 Alt+Enter \u3092\u62bc\u3059\u3068\u5143\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u8868\u793a\u306b\u623b\u308a\u307e\u3059\u3002</p>"},{"location":"tutorial/app-basic/#42-\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7d42\u4e86\u64cd\u4f5c\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b","title":"4.2 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7d42\u4e86\u64cd\u4f5c\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b","text":"<p><code>System::Update()</code> \u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3055\u305b\u308b\u7279\u5225\u306a \u30e6\u30fc\u30b6\u30a2\u30af\u30b7\u30e7\u30f3 \u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001\u4ee5\u964d\u305a\u3063\u3068 <code>false</code> \u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u4ee5\u4e0b\u306e 2 \u3064\u306e\u30e6\u30fc\u30b6\u30a2\u30af\u30b7\u30e7\u30f3\u3068 <code>System::Exit()</code> \u306e\u547c\u3073\u51fa\u3057\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3055\u305b\u308b\u64cd\u4f5c\u3068\u3057\u3066\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> \u30e6\u30fc\u30b6\u30a2\u30af\u30b7\u30e7\u30f3\u5b9a\u6570 \u8aac\u660e <code>UserAction::CloseButtonClicked</code> \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u9589\u3058\u308b\u30dc\u30bf\u30f3\u3092\u62bc\u3059 <code>UserAction::EscapeKeyDown</code> Esc \u3092\u62bc\u3059 <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3055\u305b\u308b\u30e6\u30fc\u30b6\u30a2\u30af\u30b7\u30e7\u30f3\u306f\u3001<code>System::SetTerminationTriggers()</code> \u306b <code>UserAction</code> \u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u6e21\u3059\u3053\u3068\u3067\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u307e\u3059\u3002\u7d44\u307f\u5408\u308f\u305b\u306f\u30d3\u30c3\u30c8\u548c\u3067\u8868\u73fe\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial/app-basic/#421-\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\u64cd\u4f5c\u306e\u307f\u3092\u7d42\u4e86\u64cd\u4f5c\u306b\u8a2d\u5b9a\u3059\u308b","title":"4.2.1 \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\u64cd\u4f5c\u306e\u307f\u3092\u7d42\u4e86\u64cd\u4f5c\u306b\u8a2d\u5b9a\u3059\u308b","text":"<p>Esc \u3092\u62bc\u3057\u3066\u3082\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001<code>System::SetTerminationTriggers()</code> \u306b <code>UserAction::CloseButtonClicked</code> \u306e\u307f\u3092\u6e21\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\u64cd\u4f5c\u306e\u307f\u3092\u7d42\u4e86\u64cd\u4f5c\u306b\u8a2d\u5b9a\u3059\u308b\u3002\nSystem::SetTerminationTriggers(UserAction::CloseButtonClicked);\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p>\u3053\u308c\u3067\u3001Esc \u3092\u62bc\u3057\u3066\u3082\u7d42\u4e86\u3057\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002</p>"},{"location":"tutorial/app-basic/#422-\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3088\u3063\u3066\u306e\u307f\u7d42\u4e86\u3055\u305b\u308b","title":"4.2.2 \u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3088\u3063\u3066\u306e\u307f\u7d42\u4e86\u3055\u305b\u308b","text":"<p>\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u9589\u3058\u308b\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u308a\u3001Esc \u3092\u62bc\u3057\u305f\u308a\u3057\u3066\u3082\u7d42\u4e86\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001<code>System::SetTerminationTriggers()</code> \u306b <code>UserAction::NoAction</code> \u3092\u6e21\u3057\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001<code>System::Exit()</code> \u3092\u547c\u3073\u51fa\u3059\u304b\u3001<code>Main()</code> \u3067 <code>return</code> \u3057\u306a\u3044\u9650\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3055\u305b\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u7d42\u4e86\u64cd\u4f5c\u3092\u8a2d\u5b9a\u3057\u306a\u3044\u3002\nSystem::SetTerminationTriggers(UserAction::NoAction);\nwhile (System::Update())\n{\n// \u5b9f\u884c\u6642\u9593\u304c 5 \u79d2\u4ee5\u4e0a\u7d4c\u904e\u3057\u305f\u3089\nif (5.0 &lt;= Scene::Time())\n{\nSystem::Exit();\n}\n}\n}\n</code></pre> <p>\u3053\u308c\u3067\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u9589\u3058\u308b\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u308a\u3001Esc \u3092\u62bc\u3057\u305f\u308a\u3057\u3066\u3082\u7d42\u4e86\u3057\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u5b9f\u884c\u6642\u9593\u304c 5 \u79d2\u4ee5\u4e0a\u7d4c\u904e\u3057\u305f\u3089\u3001<code>System::Exit()</code> \u3092\u547c\u3073\u51fa\u3057\u3066\u7d42\u4e86\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial/app-basic/#423-\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7d42\u4e86\u64cd\u4f5c\u306b\u623b\u3059","title":"4.2.3 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7d42\u4e86\u64cd\u4f5c\u306b\u623b\u3059","text":"<p>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7d42\u4e86\u64cd\u4f5c\uff08\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\u64cd\u4f5c\u3068 Esc \u3092\u62bc\u3059\u64cd\u4f5c\uff09\u306b\u623b\u3059\u306b\u306f\u3001<code>System::SetTerminationTriggers()</code> \u306b <code>UserAction::Default</code> \u3092\u6e21\u3057\u307e\u3059\u3002</p> <p><code>UserAction::Default</code> \u306f\u3001<code>(UserAction::CloseButtonClicked | UserAction::EscapeKeyDown)</code> \u3068\u540c\u3058\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u7d42\u4e86\u64cd\u4f5c\u3092\u8a2d\u5b9a\u3057\u306a\u3044\u3002\nSystem::SetTerminationTriggers(UserAction::NoAction);\n// \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7d42\u4e86\u64cd\u4f5c\u306b\u623b\u3059\u3002\nSystem::SetTerminationTriggers(UserAction::Default);\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p>\u3053\u308c\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7d42\u4e86\u64cd\u4f5c\u306b\u623b\u308a\u307e\u3057\u305f\u3002</p>"},{"location":"tutorial/app-basic/#\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","title":"\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"<ul> <li> \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3057\u3066\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306e\u64ae\u5f71\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7d42\u4e86\u64cd\u4f5c\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> </ul>"},{"location":"tutorial/background/","title":"7. \u80cc\u666f\u306e\u8272\u3092\u5909\u3048\u308b","text":"<p>\u753b\u9762\u306e\u80cc\u666f\u306e\u8272\u3092\u5909\u3048\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial/background/#71-\u80cc\u666f\u3092\u767d\u8272\u306b\u3059\u308b","title":"7.1 \u80cc\u666f\u3092\u767d\u8272\u306b\u3059\u308b","text":"<p>\u80cc\u666f\u306e\u8272\u3092\u5909\u66f4\u3059\u308b\u306b\u306f <code>Scene::SetBackground(\u8272)</code> \u3092\u547c\u3073\u307e\u3059\u3002\u767d\u8272\u306f <code>Palette::White</code> \u3067\u3059\u3002\u4e00\u5ea6\u5909\u66f4\u3057\u305f\u80cc\u666f\u8272\u306f\u3001\u518d\u5ea6\u5909\u66f4\u3059\u308b\u307e\u3067\u305d\u306e\u307e\u307e\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u80cc\u666f\u3092\u767d\u8272\u306b\u3059\u308b\nScene::SetBackground(Palette::White);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial/background/#72-\u80cc\u666f\u3092\u9ed2\u8272\u306b\u3059\u308b","title":"7.2 \u80cc\u666f\u3092\u9ed2\u8272\u306b\u3059\u308b","text":"<p>\u9ed2\u8272\u306f <code>Palette::Black</code> \u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u80cc\u666f\u3092\u9ed2\u8272\u306b\u3059\u308b\nScene::SetBackground(Palette::Black);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial/background/#73-\u80cc\u666f\u3092\u305d\u308c\u4ee5\u5916\u306e\u8272\u306b\u3059\u308b","title":"7.3 \u80cc\u666f\u3092\u305d\u308c\u4ee5\u5916\u306e\u8272\u306b\u3059\u308b","text":"<p><code>Palette::***</code> \u306b\u306f\u3001HTML \u30ab\u30e9\u30fc  \u306e\u8272\u540d\u3092\u4f7f\u3048\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u80cc\u666f\u8272\u3092 HTML \u30ab\u30e9\u30fc\u3067\u6307\u5b9a\u3059\u308b\nScene::SetBackground(Palette::Aliceblue);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial/background/#74-\u80cc\u666f\u8272\u3092-rgb-\u3067\u6307\u5b9a\u3059\u308b-1","title":"7.4 \u80cc\u666f\u8272\u3092 RGB \u3067\u6307\u5b9a\u3059\u308b (1)","text":"<p>\u8272\u3092 RGB \u3067\u6307\u5b9a\u3059\u308b\u306b\u306f\u3001<code>ColorF{ r, g, b }</code> \u3092\u4f7f\u3044\u307e\u3059\u3002<code>r</code>, <code>g</code>, <code>b</code> \u306f\u305d\u308c\u305e\u308c 0.0 \u304b\u3089 1.0 \u306e\u7bc4\u56f2\u306e\u5024\u3067\u3001\u305d\u308c\u305e\u308c\u8d64\u3001\u7dd1\u3001\u9752\u306e\u6210\u5206\u3092\u8868\u3057\u307e\u3059\u3002</p> <p>\u4f8b\u3048\u3070\u3001\u6de1\u3044\u6c34\u8272\u306f <code>ColorF{ 0.8, 0.9, 1.0 }</code> \u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f r = 80%, g = 90%, b = 100% \u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u80cc\u666f\u8272\u3092 RGB \u3067\u6307\u5b9a\u3059\u308b\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial/background/#75-\u80cc\u666f\u8272\u3092-rgb-\u3067\u6307\u5b9a\u3059\u308b-2","title":"7.5 \u80cc\u666f\u8272\u3092 RGB \u3067\u6307\u5b9a\u3059\u308b (2)","text":"<p>RGB \u306e\u5404\u6210\u5206\u304c\u7b49\u3057\u3044\u5834\u5408\u3001<code>ColorF{ gray }</code> \u3068\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070 <code>ColorF{ 0.8 }</code> \u306f <code>ColorF{ 0.8, 0.8, 0.8 }</code> \u3068\u540c\u3058\u3067\u3059\u3002</p> <p>\u767d\u8272\u306f <code>ColorF{ 1.0 }</code>, \u7070\u8272\u306f <code>ColorF{ 0.5 }</code>, \u9ed2\u8272\u306f <code>ColorF{ 0.0 }</code> \u3068\u8868\u73fe\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u80cc\u666f\u8272\u3092 RGB \u3067\u6307\u5b9a\u3059\u308b\nScene::SetBackground(ColorF{ 0.8 });\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial/background/#76-\u80cc\u666f\u8272\u3092-hsv-\u3067\u6307\u5b9a\u3059\u308b-1","title":"7.6 \u80cc\u666f\u8272\u3092 HSV \u3067\u6307\u5b9a\u3059\u308b (1)","text":"<p>\u56f3\u8868\u306f https://bootcamp.uxdesign.cc/hsb-hsv-color-system-d14697d7c485 \u3088\u308a\u5f15\u7528</p> <p>HSV \u8868\u8272\u7cfb\u3067\u8272\u3092\u6307\u5b9a\u3059\u308b\u306b\u306f\u3001<code>HSV{ h, s, v }</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> \u6210\u5206 \u5024\u306e\u7bc4\u56f2 \u8aac\u660e h 0.0 \u304b\u3089 360.0\uff08\u7bc4\u56f2\u5916\u3082\u53ef\u80fd\uff09 \u8272\u76f8 (hue)\u8272\u76f8\u74b0\uff08\u4e0a\u56f3\uff09\u306b\u5bfe\u5fdc\u3059\u308b\u8272\u3092\u8868\u3059\u3002 s 0.0 \u304b\u3089 1.0 \u5f69\u5ea6 (saturation) \u5c0f\u3055\u3044\u307b\u3069\u767d\u3063\u307d\u3044\u8272\uff08\u6de1\u3044\u8272\uff09\u306b\u306a\u308b\u3002 v 0.0 \u304b\u3089 1.0 \u660e\u5ea6 (value)\u5c0f\u3055\u3044\u307b\u3069\u9ed2\u3063\u307d\u3044\u8272\uff08\u6697\u3044\u8272\uff09\u306b\u306a\u308b\u3002 <p><code>h</code> \u306f\u8272\u76f8 (hue) \u3067\u901a\u5e38 0.0 \u304b\u3089 360.0 \u306e\u7bc4\u56f2\u306e\u5024\u3067\u3059\u304c\u3001\u89d2\u5ea6\u3068\u540c\u3058\u3067 370.0 \u306f 10.0 \u3068\u540c\u3058\u8272\u3092\u8868\u3057\u307e\u3059\u3002-10.0 \u306f 350.0 \u3068\u540c\u3058\u8272\u3092\u8868\u3057\u307e\u3059\u3002<code>s</code> \u306f\u5f69\u5ea6 (saturation) \u3067 0.0 \u304b\u3089 1.0 \u306e\u7bc4\u56f2\u306e\u5024\u3067\u3059\u3002<code>v</code> \u306f\u660e\u5ea6 (value) \u3067 0.0 \u304b\u3089 1.0 \u306e\u7bc4\u56f2\u306e\u5024\u3067\u3059\u3002</p> <p>\u6de1\u3044\u9752\u8272\u306f <code>HSV{ 220.0, 0.4, 1.0 }</code> \u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f h = 220.0\u00b0, s = 0.4, v = 1.0 \u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u80cc\u666f\u8272\u3092 HSV \u3067\u6307\u5b9a\u3059\u308b\nScene::SetBackground(HSV{ 220.0, 0.4, 1.0 });\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial/background/#77-\u80cc\u666f\u8272\u3092-hsv-\u3067\u6307\u5b9a\u3059\u308b-2","title":"7.7 \u80cc\u666f\u8272\u3092 HSV \u3067\u6307\u5b9a\u3059\u308b (2)","text":"<p><code>s</code> \u304c 1.0, <code>v</code> \u304c 1.0 \u306e\u5834\u5408\u3001<code>HSV{ h }</code> \u3068\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070 <code>HSV{ 220.0 }</code> \u306f <code>HSV{ 220.0, 1.0, 1.0 }</code> \u3068\u540c\u3058\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u80cc\u666f\u8272\u3092 HSV \u3067\u6307\u5b9a\u3059\u308b\nScene::SetBackground(HSV{ 220.0 });\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial/background/#78-\u80cc\u666f\u8272\u3092\u6642\u9593\u306e\u7d4c\u904e\u3068\u3068\u3082\u306b\u5909\u5316\u3055\u305b\u308b","title":"7.8 \u80cc\u666f\u8272\u3092\u6642\u9593\u306e\u7d4c\u904e\u3068\u3068\u3082\u306b\u5909\u5316\u3055\u305b\u308b","text":"<p>\u80cc\u666f\u8272\u306e\u5909\u66f4\u306f\u8efd\u91cf\u306a\u4ed5\u4e8b\u3067\u3059\u3002<code>Scene::SetBackground()</code> \u306f\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u5185\u306b\u66f8\u3044\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nconst double hue = (Scene::Time() * 60.0);\n// \u80cc\u666f\u8272\u3092 HSV \u3067\u6307\u5b9a\u3059\u308b\nScene::SetBackground(HSV{ hue });\n}\n}\n</code></pre> <p>\u3053\u306e\u30b3\u30fc\u30c9\u3067\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u8d77\u52d5\u3057\u3066\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\u3092<code>Scene::Time()</code> \u3067\u79d2\u5358\u4f4d\u3067\u53d6\u5f97\u3057\u300160.0 \u3067\u304b\u3051\u305f\u5024\u3092\u8272\u76f8\u3068\u3057\u3066\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u30016 \u79d2\u304b\u3051\u3066\u8272\u304c\u4e00\u5468\u3059\u308b\u80cc\u666f\u8272\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p> C++ \u306e\u6587\u6cd5\u5fa9\u7fd2\u300cconst\u300d <p>\u5909\u6570\u306e\u524d\u306b <code>const</code> \u3092\u3064\u3051\u308b\u3068\u3001\u305d\u306e\u5909\u6570\u3078\u306e\u518d\u4ee3\u5165\u3001\u3042\u308b\u3044\u306f\u5909\u66f4\u51e6\u7406\u3092\u7981\u6b62\u3067\u304d\u307e\u3059\u3002<code>const</code> \u304c\u3064\u3044\u3066\u3044\u308b\u5909\u6570\u306f\u3001\u5909\u66f4\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\u5909\u66f4\u3059\u308b\u5fc5\u8981\u306e\u306a\u3044\u5909\u6570\u306b\u306f <code>const</code> \u3092\u3064\u3051\u308b\u3053\u3068\u3067\u3001\u610f\u56f3\u3057\u306a\u3044\u5909\u66f4\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u300c\u5909\u66f4\u3057\u306a\u3044\u300d\u610f\u56f3\u304c\u4f1d\u308f\u308b\u305f\u3081\u3001\u30b3\u30fc\u30c9\u306e\u8aad\u307f\u3084\u3059\u3055\u304c\u6539\u5584\u3055\u308c\u307e\u3059\u3002\u4f7f\u3048\u308b\u5834\u9762\u3067\u306f\u7a4d\u6975\u7684\u306b <code>const</code> \u3092\u4f7f\u3046\u306e\u304c\u826f\u3044 C++ \u306e\u66f8\u304d\u65b9\u3067\u3059\u3002</p>"},{"location":"tutorial/background/#\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","title":"\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"<ul> <li> \u80cc\u666f\u8272\u3092\u6307\u5b9a\u3059\u308b\u306b\u306f <code>Scene::SetBackground()</code> \u3092\u4f7f\u3046\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> <code>Palette::***</code> \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u8272\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> \u8272\u3092 RGB \u3067\u6307\u5b9a\u3059\u308b\u306b\u306f <code>ColorF{ r, g, b }</code> \u307e\u305f\u306f <code>ColorF{ gray }</code> \u3092\u4f7f\u3046\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> \u8272\u3092 HSV \u3067\u6307\u5b9a\u3059\u308b\u306b\u306f <code>HSV{ h, s, v }</code> \u307e\u305f\u306f <code>HSV{ h }</code> \u3092\u4f7f\u3046\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> <code>Scene::SetBackground()</code> \u306f\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u5185\u3067\u547c\u3073\u51fa\u3057\u3066\u3082\u554f\u984c\u306a\u3044\u3053\u3068\u3092\u5b66\u3093\u3060</li> </ul>"},{"location":"tutorial/basic-types/","title":"6. \u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u578b","text":"<p>Siv3D \u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u4f7f\u7528\u3059\u308b\u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u578b\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial/basic-types/#61-\u57fa\u672c\u7684\u306a\u6570\u5024\u578b","title":"6.1 \u57fa\u672c\u7684\u306a\u6570\u5024\u578b","text":"<p>Siv3D \u306e\u57fa\u672c\u7684\u306a\u6570\u5024\u578b\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\u3088\u304f\u4f7f\u3046\u91cd\u8981\u306a\u3082\u306e\u306b \u2605 \u3092\u4ed8\u3051\u3066\u3044\u307e\u3059\u3002</p> \u578b\u540d \u8aac\u660e bool \u2605 \u30d6\u30fc\u30ea\u30a2\u30f3\u578b\uff08<code>false</code> \u307e\u305f\u306f <code>true</code>\uff09 int8 \u7b26\u53f7\u4ed8\u304d 8-bit \u6574\u6570\u578b\uff08-128 \uff5e 127\uff09 uint8 \u7b26\u53f7\u7121\u3057 8-bit \u6574\u6570\u578b\uff080 \uff5e 255\uff09 int16 \u7b26\u53f7\u4ed8\u304d 16-bit \u6574\u6570\u578b\uff08-32,768 \uff5e 32,767\uff09 uint16 \u7b26\u53f7\u7121\u3057 16-bit \u6574\u6570\u578b\uff080 \uff5e 65,535\uff09 int32 \u2605 \u7b26\u53f7\u4ed8\u304d 32-bit \u6574\u6570\u578b\uff08-2,147,483,648 \uff5e 2,147,483,647\uff09 uint32 \u7b26\u53f7\u7121\u3057 32-bit \u6574\u6570\u578b\uff080 \uff5e 4,294,967,295\uff09 int64 \u7b26\u53f7\u4ed8\u304d 64-bit \u6574\u6570\u578b\uff08-9,223,372,036,854,775,808 \uff5e 9,223,372,036,854,775,807\uff09 uint64 \u7b26\u53f7\u7121\u3057 64-bit \u6574\u6570\u578b\uff080 \uff5e 18,446,744,073,709,551,615\uff09 float \u5358\u7cbe\u5ea6\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b double \u2605 \u500d\u7cbe\u5ea6\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b size_t \u2605 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b5\u30a4\u30ba\u3092\u8868\u73fe\u3059\u308b\u7b26\u53f7\u7121\u3057 64-bit \u6574\u6570\u578b\uff080 \uff5e 18,446,744,073,709,551,615\uff09 <p>Siv3D \u3067\u6574\u6570\u3092\u6271\u3046\u3068\u304d\u306f\u3001<code>int</code>, <code>unsigned long long</code> \u306e\u3088\u3046\u306a\u578b\u540d\u306e\u4ee3\u308f\u308a\u306b\u3001<code>int32</code>, <code>uint64</code> \u306e\u3088\u3046\u306b\u660e\u793a\u7684\u306b\u30b5\u30a4\u30ba\u3092\u8868\u73fe\u3057\u305f\u578b\u540d\u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u9593\u3067\u306e\u79fb\u690d\u6027\u304c\u9ad8\u307e\u308a\u3001\u4e00\u8cab\u6027\u306e\u3042\u308b\u8aad\u307f\u3084\u3059\u3044\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nbool a = true;\nint32 b = 123;\ndouble c = 0.5;\nsize_t d = 100;\nPrint &lt;&lt; U\"a: \" &lt;&lt; a;\nPrint &lt;&lt; U\"b: \" &lt;&lt; b;\nPrint &lt;&lt; U\"c: \" &lt;&lt; c;\nPrint &lt;&lt; U\"d: \" &lt;&lt; d;\nwhile (System::Update())\n{\n}\n}\n</code></pre> Siv3D \u3067 float \u578b\u3092\u4f7f\u3046\u5834\u9762\u306f\u9650\u3089\u308c\u308b <p>\u5b9f\u884c\u74b0\u5883\u306e\u30e1\u30e2\u30ea\u3084\u6f14\u7b97\u306e\u30ea\u30bd\u30fc\u30b9\u304c\u9650\u3089\u308c\u308b\u30b2\u30fc\u30e0\u958b\u767a\u306b\u304a\u3044\u3066\u306f\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u51e6\u7406\u306b <code>float</code> \u578b\u3092\u4f7f\u3046\u3053\u3068\u304c\u4e00\u822c\u7684\u3067\u3059\u3002Siv3D \u3082\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u3084\u4e26\u5217\u51e6\u7406\u306b\u95a2\u9023\u3059\u308b\u5185\u90e8\u51e6\u7406\u3067\u306f <code>float</code> \u578b\u3092\u4f7f\u3046\u307b\u304b\u3001\u30b7\u30a7\u30fc\u30c0\u306e\u5b9a\u6570\u30d0\u30c3\u30d5\u30a1\u3001\u884c\u5217\u3001\u30af\u30a9\u30fc\u30bf\u30cb\u30aa\u30f3\u3001FFT \u306e\u7d50\u679c\u306a\u3069\u3001\u30e6\u30fc\u30b6\u306e\u4f7f\u3046 API \u306b\u3082 <code>float</code> \u578b\u304c\u767b\u5834\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u4e00\u65b9\u3067\u3001Siv3D \u306f\u7cbe\u5ea6\u304c\u8981\u6c42\u3055\u308c\u308b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3084\u79d1\u5b66\u6280\u8853\u8a08\u7b97\u3067\u4f7f\u308f\u308c\u308b\u3053\u3068\u3082\u60f3\u5b9a\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u4e3b\u8981\u306a\u30af\u30e9\u30b9\u3084\u95a2\u6570\u306f <code>double</code> \u578b\u3092\u6271\u3044\u3001\u63cf\u753b\u306a\u3069\u7cbe\u5ea6\u304c\u8981\u6c42\u3055\u308c\u306a\u3044\u51e6\u7406\u306b\u95a2\u3057\u3066\u306f\u5185\u90e8\u3067 <code>float</code> \u578b\u3092\u7528\u3044\u308b\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u65b9\u5f0f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002<code>double</code> \u578b\u306f\u7cbe\u5ea6\u306b\u95a2\u9023\u3057\u305f\u554f\u984c\u304c\u751f\u3058\u306b\u304f\u304f\u3001\u30b3\u30fc\u30c9\u306e\u8aad\u307f\u3084\u3059\u3055\u3082\u5411\u4e0a\u3057\u3001\u4e00\u822c\u7684\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3042\u308c\u3070\u5b9f\u884c\u901f\u5ea6\u3078\u306e\u5f71\u97ff\u3082\u307b\u3068\u3093\u3069\u3042\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"tutorial/basic-types/#62-\u6587\u5b57\u3068\u6587\u5b57\u5217\u306e\u57fa\u672c\u7684\u306a\u578b","title":"6.2 \u6587\u5b57\u3068\u6587\u5b57\u5217\u306e\u57fa\u672c\u7684\u306a\u578b","text":"<p>Siv3D \u306e\u6587\u5b57\u3068\u6587\u5b57\u5217\u306e\u57fa\u672c\u7684\u306a\u578b\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\u91cd\u8981\u306a\u3082\u306e\u306b \u2605 \u3092\u4ed8\u3051\u3066\u3044\u307e\u3059\u3002</p> \u578b\u540d \u8aac\u660e char32 \u2605 UTF-32 \u306e 1 \u8981\u7d20\uff08<code>char32_t</code> \u306e\u5225\u540d\uff09 String \u2605 \u6587\u5b57\u5217\u30af\u30e9\u30b9\u3002\u8981\u7d20\u306f <code>char32</code> StringView \u6587\u5b57\u5217\u306e\u30d3\u30e5\u30fc\u30af\u30e9\u30b9 FilePath \u2605 \u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u6587\u5b57\u5217\uff08<code>String</code> \u306e\u5225\u540d\uff09 FilePathView \u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u6587\u5b57\u5217\u306e\u30d3\u30e5\u30fc\uff08<code>StringView</code> \u306e\u5225\u540d\uff09 <p>Siv3D \u306e API \u306f\u3001\u6587\u5b57\u5217\u3092 UTF-32 \u3067\u51e6\u7406\u3059\u308b\u305f\u3081\u3001<code>std::string</code> \u306e\u4ee3\u308f\u308a\u306b <code>String</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u8a73\u3057\u304f\u306f \u6587\u5b57\u5217\u30af\u30e9\u30b9 \u3067\u6271\u3044\u307e\u3059\u3002</p> <p><code>FilePath</code> \u306f <code>String</code> \u306e\u578b\u30a8\u30a4\u30ea\u30a2\u30b9\u3067\u3069\u3061\u3089\u3082\u540c\u3058\u578b\u3067\u3059\u304c\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u6587\u5b57\u5217\u3092\u6271\u3046\u969b\u306b <code>String</code> \u306e\u4ee3\u308f\u308a\u306b <code>FilePath</code> \u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u5909\u6570\u306e\u76ee\u7684\u3092\u660e\u78ba\u306b\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nchar32 a = U'A';\nString b = U\"Hello\";\nFilePath c = U\"example/windmill.png\";\nPrint &lt;&lt; U\"a: \" &lt;&lt; a;\nPrint &lt;&lt; U\"b: \" &lt;&lt; b;\nPrint &lt;&lt; U\"c: \" &lt;&lt; c;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial/basic-types/#63-\u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u578b","title":"6.3 \u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u578b","text":"<p>Siv3D \u306e\u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u578b\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\u91cd\u8981\u306a\u3082\u306e\u306b \u2605 \u3092\u4ed8\u3051\u3066\u3044\u307e\u3059\u3002</p> \u578b\u540d \u8aac\u660e Array&lt;Type, Allocator&gt; \u2605 \u52d5\u7684\u914d\u5217\uff08C++ \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e <code>std::vector</code> \u306e\u7f6e\u304d\u63db\u3048\uff09 Grid&lt;Type, Allocator&gt; \u52d5\u7684\u306a\u4e8c\u6b21\u5143\u914d\u5217 HashSet&lt;Type, Hash, Eq, Alloc&gt; \u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u306b\u3088\u308b Set\uff08C++ \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e <code>std::unordered_set</code> \u306e\u7f6e\u304d\u63db\u3048\uff09 HashTable&lt;Key, Value, Hash, Eq, Alloc&gt; \u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u306b\u3088\u308b Map\uff08C++ \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e <code>std::unordered_map</code> \u306e\u7f6e\u304d\u63db\u3048\uff09 Optional&lt;Type&gt; \u2605 \u7121\u52b9\u5024\u3092\u8868\u73fe\u3067\u304d\u308b\u578b\uff08C++ \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e <code>std::optional</code> \u306e\u7f6e\u304d\u63db\u3048\uff09 std::array&lt;Type, size_t&gt; \u56fa\u5b9a\u9577\u914d\u5217 <p><code>Array</code> \u306f\u3001C++ \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e <code>std::vector</code> \u306e\u7f6e\u304d\u63db\u3048\u3067\u3059\u3002<code>std::vector</code> \u3068\u540c\u69d8\u306b\u3001\u52d5\u7684\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u30fb\u524a\u9664\u3067\u304d\u307e\u3059\u3002\u51e6\u7406\u30b3\u30b9\u30c8\u306f <code>std::vector</code> \u3068\u540c\u7b49\u3067\u3059\u3002\u8a73\u3057\u304f\u306f \u52d5\u7684\u914d\u5217 \u3067\u6271\u3044\u307e\u3059\u3002</p> <p><code>Optional</code> \u306f\u3001\u5024\u304c\u5b58\u5728\u3059\u308b\u304b\u3057\u306a\u3044\u304b\u3092\u8868\u73fe\u3067\u304d\u308b\u578b\u3067\u3059\u3002<code>std::optional</code> \u3068\u540c\u69d8\u306b\u3001<code>none</code> \u3068\u3044\u3046\u7121\u52b9\u5024\u3092\u8868\u73fe\u3059\u308b\u5024\u3092\u6301\u3061\u307e\u3059\u3002\u8a73\u3057\u304f\u306f \u7121\u52b9\u5024\u3092\u8868\u73fe\u3067\u304d\u308b\u578b \u3067\u6271\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;int32&gt; a = { 10, 20, 50, 100 };\nOptional&lt;double&gt; b;\nPrint &lt;&lt; U\"a: \" &lt;&lt; a;\nPrint &lt;&lt; U\"b: \" &lt;&lt; b;\nb = 12.3;\nPrint &lt;&lt; U\"b: \" &lt;&lt; b;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial/basic-types/#\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","title":"\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"<ul> <li> Siv3D \u306e\u57fa\u672c\u7684\u306a\u6570\u5024\u578b\u3001<code>bool</code>, <code>int32</code>, <code>double</code>, <code>size_t</code> \u3092\u7406\u89e3\u3057\u305f</li> <li> Siv3D \u306e\u57fa\u672c\u7684\u306a\u6587\u5b57\u578b\u3001<code>char32</code> \u3092\u7406\u89e3\u3057\u305f</li> <li> Siv3D \u306e\u57fa\u672c\u7684\u306a\u6587\u5b57\u5217\u578b\u3001<code>String</code>, <code>FilePath</code> \u3092\u7406\u89e3\u3057\u305f</li> <li> Siv3D \u306e\u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u578b\u3001<code>Array</code>, <code>Optional</code> \u3092\u7406\u89e3\u3057\u305f</li> </ul>"},{"location":"tutorial/basic/","title":"2. Siv3D \u306e\u57fa\u672c","text":"<p>Siv3D \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u57fa\u672c\u7684\u306a\u69cb\u6210\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial/basic/#21-\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u30d8\u30c3\u30c0","title":"2.1 \u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u30d8\u30c3\u30c0","text":"<p>Siv3D \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3068\u304d\u306f <code>&lt;Siv3D.hpp&gt;</code> \u30d8\u30c3\u30c0\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u307e\u3059\u3002 \u3053\u308c\u3060\u3051\u3067\u3001Siv3D \u306e\u95a2\u6570\u3084\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002  </p> <pre><code># include &lt;Siv3D.hpp&gt;\n</code></pre> <p>\u7d4c\u9a13\u306e\u3042\u308b C++ \u30d7\u30ed\u30b0\u30e9\u30de\u306e\u5834\u5408\u3001<code>&lt;iostream&gt;</code> \u3084 <code>&lt;vector&gt;</code> \u306a\u3069\u306e C++ \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u305f\u304f\u306a\u308b\u3067\u3057\u3087\u3046\u304c\u3001\u305d\u308c\u306f\u4e0d\u8981\u3067\u3059\u3002\u3059\u3067\u306b <code>&lt;Siv3D.hpp&gt;</code> \u306e\u4e2d\u3067\u3001Siv3D \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u3088\u304f\u4f7f\u308f\u308c\u308b\u4e3b\u8981\u306a C++ \u6a19\u6e96\u30d8\u30c3\u30c0\u304c\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002</p> <p>\u307e\u305f\u3001Siv3D \u306e\u95a2\u6570\u3084\u30af\u30e9\u30b9\u306f\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u6a5f\u80fd\uff08<code>std::vector</code> \u3084 <code>std::string</code> \u306a\u3069\uff09\u306e\u591a\u304f\u3092\u7f6e\u304d\u63db\u3048\u3001\u4e0d\u8981\u306b\u3057\u307e\u3059\u3002Siv3D \u306e\u5b66\u7fd2\u306e\u5e8f\u76e4\u3067 C++ \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3053\u3068\u306f\u3081\u3063\u305f\u306b\u3042\u308a\u307e\u305b\u3093\u3002</p> C++ \u306e\u6587\u6cd5\u5fa9\u7fd2\u300cinclude\u300d <p><code># include &lt;\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9&gt;</code> \u307e\u305f\u306f <code># include \"\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\"</code> \u3067\u3001\u30d8\u30c3\u30c0 <code>\u30d1\u30b9</code> \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u307e\u3059\u3002\u524d\u8005\u306e\u66f8\u304d\u65b9\u3067\u306f\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3084\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\u3067\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30d1\u30b9\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u5bfe\u8c61\u306b\u306a\u308a\u3001\u5f8c\u8005\u3067\u306f\u76f8\u5bfe\u30d1\u30b9\u307e\u305f\u306f\u7d76\u5bfe\u30d1\u30b9\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u691c\u7d22\u3057\u307e\u3059\u3002Siv3D \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001Siv3D \u306e\u30d8\u30c3\u30c0\u304c\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30d1\u30b9\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001<code># include &lt;Siv3D.hpp&gt;</code> \u3067 Siv3D \u306e\u30d8\u30c3\u30c0\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002Siv3D \u4ee5\u5916\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u540c\u3058\u3088\u3046\u306b\u66f8\u3044\u3066\u3082 <code>Siv3D.hpp</code> \u3092\u898b\u3064\u3051\u3089\u308c\u305a\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002</p> \u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u304c\u4e0d\u8981\u306a\u30d8\u30c3\u30c0\u306e\u4f8b"},{"location":"tutorial/basic/#_1","title":"<code>&lt;string&gt;</code>","text":"<p>Siv3D.hpp \u5185\u3067\u3059\u3067\u306b\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 <code>std::string</code> \u306e\u7f6e\u304d\u63db\u3048\u3068\u3057\u3066 <code>String</code> \u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"tutorial/basic/#_2","title":"<code>&lt;vector&gt;</code>","text":"<p>Siv3D.hpp \u5185\u3067\u3059\u3067\u306b\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 <code>std::vector</code> \u306e\u7f6e\u304d\u63db\u3048\u3068\u3057\u3066 <code>Array</code> \u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"tutorial/basic/#_3","title":"<code>&lt;fstream&gt;</code>","text":"<p><code>std::ofstream</code> \u306e\u7f6e\u304d\u63db\u3048\u3068\u3057\u3066 <code>TextWriter</code> \u3084 <code>BinaryWriter</code> \u304c\u3042\u308a\u307e\u3059\u3002 <code>std::ifstream</code> \u306e\u7f6e\u304d\u63db\u3048\u3068\u3057\u3066 <code>TextReader</code> \u3084 <code>BinaryReader</code> \u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"tutorial/basic/#_4","title":"<code>&lt;cmath&gt;</code>","text":"<p>Siv3D.hpp \u5185\u3067\u3059\u3067\u306b\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 <code>Math::</code> \u540d\u524d\u7a7a\u9593\u306b\u4e3b\u8981\u306a\u6570\u5b66\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"tutorial/basic/#_5","title":"<code>&lt;filesystem&gt;</code>","text":"<p>\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u95a2\u3059\u308b\u6a5f\u80fd\u304c <code>FileSystem::</code> \u540d\u524d\u7a7a\u9593\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"tutorial/basic/#22-\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8","title":"2.2 \u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8","text":"<p>\u901a\u5e38\u306e C++ \u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u306f <code>int main()</code> \u3067\u3059\u304c\u3001Siv3D \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f <code>main()</code> \u95a2\u6570\u306f Siv3D \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u306b\u65e2\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> Siv3D \u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u90e8\u306e\u30b3\u30fc\u30c9\uff08\u8aac\u660e\u306e\u305f\u3081\u306b\u7c21\u7565\u5316\u3057\u3066\u3044\u307e\u3059\uff09<pre><code>int main()\n{\nSiv3D\u521d\u671f\u5316(); // \u30b5\u30d6\u30b7\u30b9\u30c6\u30e0\u306e\u521d\u671f\u5316\u51e6\u7406\nMain(); // \u3053\u306e\u95a2\u6570\u3092\u30e6\u30fc\u30b6\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u3059\u308b\nSiv3D\u7d42\u4e86\u51e6\u7406(); // \u30b5\u30d6\u30b7\u30b9\u30c6\u30e0\u306e\u7d42\u4e86\u51e6\u7406\n}\n</code></pre> <p>\u307e\u305a\u30a6\u30a3\u30f3\u30c9\u30a6\u3084\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u306a\u3069\u306e\u30b5\u30d6\u30b7\u30b9\u30c6\u30e0\u306e\u521d\u671f\u5316\u51e6\u7406\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5b9f\u884c\u3055\u308c\u3001\u6b21\u306b\u3001\u30e6\u30fc\u30b6\u304c\u66f8\u3044\u305f <code>Main()</code> \u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u4ed5\u7d44\u307f\u306b\u3088\u308a\u3001<code>Main()</code> \u95a2\u6570\u3067\u306f\u521d\u671f\u5316\u51e6\u7406\u306a\u3069\u306e\u6e96\u5099\u3092\u884c\u308f\u305a\u76f4\u3061\u306b Siv3D \u306e\u6a5f\u80fd\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p><code>Main()</code> \u95a2\u6570\u306e\u5b9f\u884c\u304c\u7d42\u4e86\u3059\u308b\u3068\u3001\u518d\u3073 Siv3D \u306e\u5185\u90e8\u306e\u30b3\u30fc\u30c9\u304c\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u5f8c\u7247\u4ed8\u3051\u306a\u3069\u30b5\u30d6\u30b7\u30b9\u30c6\u30e0\u306e\u7d42\u4e86\u51e6\u7406\u3092\u81ea\u52d5\u7684\u306b\u884c\u3044\u307e\u3059\u3002</p>"},{"location":"tutorial/basic/#23-\u6700\u5c0f\u306e\u30d7\u30ed\u30b0\u30e9\u30e0","title":"2.3 \u6700\u5c0f\u306e\u30d7\u30ed\u30b0\u30e9\u30e0","text":"<p>\u624b\u5143\u306e\u30a8\u30c7\u30a3\u30bf\u3067 Siv3D \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30bc\u30ed\u304b\u3089\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3053\u308c\u304c Siv3D \u306e\u6700\u5c0f\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n}\n</code></pre> \u3053\u306e <code>Main()</code> \u95a2\u6570\u306f\u4f55\u3082\u3059\u308b\u3053\u3068\u304c\u306a\u3044\u305f\u3081\u3001\u4e00\u77ac\u3067\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u3082\u30a6\u30a3\u30f3\u30c9\u30a6\u306f\u8868\u793a\u3055\u308c\u305a\u3001\u4f55\u3082\u8d77\u3053\u3063\u3066\u3044\u306a\u3044\u3088\u3046\u306b\u898b\u3048\u308b\u3067\u3057\u3087\u3046\u3002</p> C++ \u306e\u6587\u6cd5\u5fa9\u7fd2\u300c\u95a2\u6570\u306e\u5b9a\u7fa9\u300d <p>\u3053\u308c\u306f\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002<code>Main</code> \u306f\u95a2\u6570\u306e\u540d\u524d\u3092\u3001<code>void</code> \u306f\u3053\u306e\u95a2\u6570\u304c\u7d50\u679c\u306e\u5024\u3092\u8fd4\u3055\u306a\u3044\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002<code>{ }</code> \u5185\u306b\u306f\u3001\u3053\u306e\u95a2\u6570\u3067\u5b9f\u884c\u3057\u305f\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4e0a\u304b\u3089\u9806\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\u9014\u4e2d\u3067 <code>return</code> \u3059\u308b\u304b\u3001\u7d42\u7aef\u307e\u3067\u305f\u3069\u308a\u7740\u304f\u3068\u95a2\u6570\u306e\u5b9f\u884c\u306f\u7d42\u4e86\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial/basic/#24-\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u8868\u793a\u3057\u7d9a\u3051\u308b","title":"2.4 \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u8868\u793a\u3057\u7d9a\u3051\u308b","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3059\u3050\u306b\u7d42\u4e86\u3057\u3066\u3057\u307e\u3063\u3066\u306f\u3001\u30e6\u30fc\u30b6\u3068\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308c\u307e\u305b\u3093\u3002<code>Main()</code> \u304c\u305a\u3063\u3068\u7d9a\u304f\u3088\u3046\u306b \u30e1\u30a4\u30f3\u30eb\u30fc\u30d7 \u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u6b21\u306e\u30b3\u30fc\u30c9\u3067\u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u8868\u793a\u3055\u308c\u7d9a\u3051\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p><code>while</code> \u6587\u306b\u3088\u3063\u3066\u3001\u30cf\u30a4\u30e9\u30a4\u30c8\u90e8\u5206\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u534a\u6c38\u4e45\u7684\u306b\u7e70\u308a\u8fd4\u3055\u308c\u307e\u3059\u3002</p> <p>\u7e70\u308a\u8fd4\u3057\u306e\u305f\u3073\u306b <code>System::Update()</code> \u304c\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u8868\u793a\u3084\u97f3\u697d\u306e\u518d\u751f\u3001\u30de\u30a6\u30b9\u3084\u30ad\u30fc\u30dc\u30fc\u30c9\u306e\u5165\u529b\u60c5\u5831\u306a\u3069\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u3067\u3001\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u306e\u8868\u793a\u3084\u30e6\u30fc\u30b6\u306e\u5165\u529b\u306e\u53d6\u5f97\u306a\u3069\u3092\u7d99\u7d9a\u7684\u306b\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> C++ \u306e\u6587\u6cd5\u5fa9\u7fd2\u300cwhile \u30eb\u30fc\u30d7\u300d <p><pre><code>while (\u6761\u4ef6)\n{\n\u6587\n}\n</code></pre> \u306f\u3001\u6761\u4ef6\u304c\u771f\u3067\u3042\u308b\u9593\u3001{ } \u306e\u6587\u3092\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial/basic/#25-\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7d42\u4e86","title":"2.5 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7d42\u4e86","text":""},{"location":"tutorial/basic/#251-\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u7d42\u4e86","title":"2.5.1 \u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u7d42\u4e86","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update()) // System::Update() \u304c false \u3092\u8fd4\u3059\u307e\u3067\u7e70\u308a\u8fd4\u3059\n{\n}\n}\n</code></pre> <p><code>System::Update()</code> \u95a2\u6570\u306f\u666e\u6bb5\u306f <code>true</code> \u3092\u8fd4\u3059\u305f\u3081\u3001\u534a\u6c38\u4e45\u7684\u306b\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u304c\u7d9a\u304d\u307e\u3059\u304c\u3001\u7279\u5b9a\u306e\u64cd\u4f5c\u3092\u3059\u308b\u3068\u3001\u305d\u308c\u4ee5\u964d\u306f <code>false</code> \u3092\u8fd4\u3059\u3053\u3068\u3067\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u3092\u7d42\u4e86\u3055\u305b\u3001\u305d\u306e\u307e\u307e <code>Main()</code> \u95a2\u6570\u306e\u7d42\u7aef\u307e\u3067\u5230\u9054\u3059\u308b\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7d42\u4e86\u3057\u307e\u3059\u3002</p> <p><code>System::Update()</code> \u304c <code>false</code> \u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u308b\uff08\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3055\u305b\u308b\uff09\u64cd\u4f5c\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u6b21\u306e 3 \u3064\u3067\u3059\u3002</p> <ul> <li>\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b</li> <li>Esc \u3092\u62bc\u3059</li> <li>\u30d7\u30ed\u30b0\u30e9\u30e0\u3067 <code>System::Exit()</code> \u3092\u547c\u3076</li> </ul>"},{"location":"tutorial/basic/#252-main-\u304b\u3089\u306e-return","title":"2.5.2 Main() \u304b\u3089\u306e return","text":"<p><code>Main()</code> \u306e\u4e2d\u3067 <code>return;</code> \u3057\u3066 <code>Main()</code> \u3092\u7d42\u4e86\u3059\u308b\u3053\u3068\u3082\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7d42\u4e86\u624b\u6bb5\u3068\u3057\u3066\u6709\u52b9\u3067\u3059\u3002\u3068\u304f\u306b\u3001<code>System::Update()</code> \u3092\u5f85\u305f\u305a\u3001\u76f4\u3061\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3057\u305f\u3044\u5834\u5408\u306b\u306f <code>return;</code> \u304c\u5f79\u306b\u7acb\u3064\u3067\u3057\u3087\u3046\u3002</p> <p>\u3069\u3061\u3089\u3092\u9078\u629e\u3059\u308b\u304b\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u76ee\u7684\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u3002\u4e0b\u8a18\u306e\u30bf\u30d6\u3092\u5207\u308a\u66ff\u3048\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u9055\u3044\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> 2.5.1 \u306e\u65b9\u6cd5\u306b\u3088\u308b\u7d42\u4e862.5.2 \u306e\u65b9\u6cd5\u306b\u3088\u308b\u7d42\u4e86 <p><code>System::Exit();</code> \u306e\u547c\u3073\u51fa\u3057\u5f8c\u3001<code>\u51e6\u7406 A</code> \u3068 <code>\u51e6\u7406 B</code> \u304c\u5b9f\u884c\u3055\u308c\u3066\u304b\u3089 <code>Main()</code> \u304c\u7d42\u4e86\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u5b9f\u884c\u6642\u9593\u304c 3 \u79d2\u4ee5\u4e0a\u7d4c\u904e\u3057\u305f\u3089\nif (3.0 &lt;= Scene::Time())\n{\nSystem::Exit(); // \u6b21\u306e System::Update() \u304c false \u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\n}\n\u51e6\u7406A();\n}\n\u51e6\u7406B();\n} // \u3053\u3053\u3067 Main() \u304c\u7d42\u4e86\n</code></pre> <p><code>return;</code> \u3059\u308b\u3068\u3001<code>\u51e6\u7406 A</code> \u3068 <code>\u51e6\u7406 B</code> \u306f\u5b9f\u884c\u3055\u308c\u305a\u306b <code>Main()</code> \u304c\u7d42\u4e86\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u5b9f\u884c\u6642\u9593\u304c 3 \u79d2\u4ee5\u4e0a\u7d4c\u904e\u3057\u305f\u3089\nif (3.0 &lt;= Scene::Time())\n{\nreturn; // \u3053\u3053\u3067\u76f4\u3061\u306b Main() \u304c\u7d42\u4e86\u3059\u308b\n}\n\u51e6\u7406A();\n}\n\u51e6\u7406B();\n}\n</code></pre>"},{"location":"tutorial/basic/#26-systemexit-\u306f\u5fc5\u9808\u3067\u306f\u306a\u3044","title":"2.6 System::Exit() \u306f\u5fc5\u9808\u3067\u306f\u306a\u3044","text":"<p><code>System::Exit()</code> \u306f\u3001\u305d\u306e\u5f8c\u306e <code>System::Update()</code> \u304c <code>false</code> \u3092\u8fd4\u3059\u3088\u3046\u8a2d\u5b9a\u3059\u308b\u3060\u3051\u306e\u95a2\u6570\u3067\u3059\u3002\u660e\u793a\u7684\u306b <code>System::Exit()</code> \u3092\u547c\u3073\u51fa\u3055\u306a\u304f\u3066\u3082\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u305f\u308a Esc \u3092\u62bc\u3059\u3053\u3068\u3067 <code>System::Update()</code> \u306b <code>false</code> \u3092\u8fd4\u3055\u305b\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3067\u304d\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001<code>System::Exit()</code> \u306e\u547c\u3073\u51fa\u3057\u306f\u5fc5\u9808\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"tutorial/basic/#\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","title":"\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"<ul> <li> Siv3D \u306e\u57fa\u672c\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f <code>&lt;Siv3D.hpp&gt;</code> \u306e\u307f\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> Siv3D \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30e1\u30a4\u30f3\u95a2\u6570\u304c <code>int main()</code> \u3067\u306f\u306a\u304f <code>void Main()</code> \u3067\u3042\u308b\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u8868\u793a\u3057\u7d9a\u3051\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\u304b Esc \u3092\u62bc\u3059\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u7d42\u4e86\u3059\u308b\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> <code>System::Update()</code> \u306e\u623b\u308a\u5024\u304c <code>false</code> \u306b\u306a\u308b\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u7d42\u4e86\u3059\u308b\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> <code>System::Exit()</code> \u3067 <code>System::Update()</code> \u306e\u623b\u308a\u5024\u3092 <code>false</code> \u306b\u8a2d\u5b9a\u3067\u304d\u308b\u3053\u3068\u3092\u5b66\u3093\u305f</li> <li> <code>return;</code> \u3092\u4f7f\u3046\u3053\u3068\u3067\u3082 <code>Main()</code> \u3092\u7d42\u4e86\u3067\u304d\u308b\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> <code>System::Exit()</code> \u306e\u547c\u3073\u51fa\u3057\u306f\u5fc5\u9808\u3067\u306f\u306a\u3044\u3053\u3068\u3092\u5b66\u3093\u3060</li> </ul>"},{"location":"tutorial/button/","title":"15. \u30dc\u30bf\u30f3\u3092\u4f5c\u308b","text":"<p>\u3053\u3053\u307e\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u4f7f\u3063\u3066\u3001\u30dc\u30bf\u30f3\u3092\u4f5c\u308b\u7df4\u7fd2\u3092\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial/button/#151-\u95a2\u6570\u306e\u6e96\u5099","title":"15.1 \u95a2\u6570\u306e\u6e96\u5099","text":"<p>\u30dc\u30bf\u30f3\u306e\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306e\u95a2\u6570\u3092\u4f5c\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Button()\n{\nRect{ 250, 300, 300, 80 }.draw(ColorF{ 0.3, 0.7, 1.0 });\n}\nvoid Main()\n{\nwhile (System::Update())\n{\nButton();\n}\n}\n</code></pre>"},{"location":"tutorial/button/#152-\u9818\u57df\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b","title":"15.2 \u9818\u57df\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b","text":"<p>\u597d\u304d\u306a\u5834\u6240\u306b\u597d\u304d\u306a\u5927\u304d\u3055\u306e\u30dc\u30bf\u30f3\u3092\u4f5c\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u95a2\u6570\u306e\u5f15\u6570\u306f\u3001<code>int32</code>, <code>bool</code>, <code>double</code> \u306a\u3069\u306e\u57fa\u672c\u7684\u306a\u6570\u5024\u578b\u4ee5\u5916\u306f\u3059\u3079\u3066 const \u53c2\u7167\u6e21\u3057 \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Button(const Rect&amp; rect)\n{\nrect.draw(ColorF{ 0.3, 0.7, 1.0 });\n}\nvoid Main()\n{\nwhile (System::Update())\n{\nButton(Rect{ 250, 300, 300, 80 });\nButton(Rect{ 250, 400, 300, 80 });\n}\n}\n</code></pre>"},{"location":"tutorial/button/#153-\u30c6\u30ad\u30b9\u30c8\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b","title":"15.3 \u30c6\u30ad\u30b9\u30c8\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b","text":"<p>\u30dc\u30bf\u30f3\u5185\u306b\u8868\u793a\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u6587\u5b57\u5217\u306f <code>String</code> \u578b\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Button(const Rect&amp; rect, const Font&amp; font, const String&amp; text)\n{\nrect.draw(ColorF{ 0.3, 0.7, 1.0 });\nfont(text).drawAt(40, (rect.x + rect.w / 2), (rect.y + rect.h / 2));\n}\nvoid Main()\n{\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nwhile (System::Update())\n{\nButton(Rect{ 250, 300, 300, 80 }, font, U\"\u3064\u3065\u304d\u304b\u3089\");\nButton(Rect{ 250, 400, 300, 80 }, font, U\"\u6700\u521d\u304b\u3089\");\n}\n}\n</code></pre>"},{"location":"tutorial/button/#154-\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u624b\u306e\u30a2\u30a4\u30b3\u30f3\u306b\u3059\u308b","title":"15.4 \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u624b\u306e\u30a2\u30a4\u30b3\u30f3\u306b\u3059\u308b","text":"<p>\u30dc\u30bf\u30f3\u306e\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u91cd\u306d\u308b\u3068\u3001\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u624b\u306e\u30a2\u30a4\u30b3\u30f3\u306b\u5909\u308f\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Button(const Rect&amp; rect, const Font&amp; font, const String&amp; text)\n{\nif (rect.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\nrect.draw(ColorF{ 0.3, 0.7, 1.0 });\nfont(text).drawAt(40, (rect.x + rect.w / 2), (rect.y + rect.h / 2));\n}\nvoid Main()\n{\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nwhile (System::Update())\n{\nButton(Rect{ 250, 300, 300, 80 }, font, U\"\u3064\u3065\u304d\u304b\u3089\");\nButton(Rect{ 250, 400, 300, 80 }, font, U\"\u6700\u521d\u304b\u3089\");\n}\n}\n</code></pre>"},{"location":"tutorial/button/#155-\u62bc\u305b\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b","title":"15.5 \u62bc\u305b\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b","text":"<p>\u62bc\u305b\u306a\u3044\u30dc\u30bf\u30f3\u3092\u4f5c\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Button(const Rect&amp; rect, const Font&amp; font, const String&amp; text, bool enabled)\n{\nif (enabled &amp;&amp; rect.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\nif (enabled)\n{\nrect.draw(ColorF{ 0.3, 0.7, 1.0 });\nfont(text).drawAt(40, (rect.x + rect.w / 2), (rect.y + rect.h / 2));\n}\nelse\n{\nrect.draw(ColorF{ 0.5 });\nfont(text).drawAt(40, (rect.x + rect.w / 2), (rect.y + rect.h / 2), ColorF{ 0.7 });\n}\n}\nvoid Main()\n{\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nwhile (System::Update())\n{\nButton(Rect{ 250, 300, 300, 80 }, font, U\"\u3064\u3065\u304d\u304b\u3089\", false);\nButton(Rect{ 250, 400, 300, 80 }, font, U\"\u6700\u521d\u304b\u3089\", true);\n}\n}\n</code></pre>"},{"location":"tutorial/button/#156-\u62bc\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u8fd4\u3059","title":"15.6 \u62bc\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u8fd4\u3059","text":"<p>\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u304b\u3092\u623b\u308a\u5024\u3067\u8fd4\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u62bc\u305b\u306a\u3044\u30dc\u30bf\u30f3\u306f\u3001\u62bc\u3057\u3066\u3082 <code>false</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nbool Button(const Rect&amp; rect, const Font&amp; font, const String&amp; text, bool enabled)\n{\nif (enabled &amp;&amp; rect.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\nif (enabled)\n{\nrect.draw(ColorF{ 0.3, 0.7, 1.0 });\nfont(text).drawAt(40, (rect.x + rect.w / 2), (rect.y + rect.h / 2));\n}\nelse\n{\nrect.draw(ColorF{ 0.5 });\nfont(text).drawAt(40, (rect.x + rect.w / 2), (rect.y + rect.h / 2), ColorF{ 0.7 });\n}\nreturn (enabled &amp;&amp; rect.leftClicked());\n}\nvoid Main()\n{\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nwhile (System::Update())\n{\nif (Button(Rect{ 250, 300, 300, 80 }, font, U\"\u3064\u3065\u304d\u304b\u3089\", false))\n{\nPrint &lt;&lt; U\"\u3064\u3065\u304d\u304b\u3089\";\n}\nif (Button(Rect{ 250, 400, 300, 80 }, font, U\"\u6700\u521d\u304b\u3089\", true))\n{\nPrint &lt;&lt; U\"\u6700\u521d\u304b\u3089\";\n}\n}\n}\n</code></pre>"},{"location":"tutorial/button/#157-\u7d75\u6587\u5b57\u3092\u8ffd\u52a0\u3059\u308b","title":"15.7 \u7d75\u6587\u5b57\u3092\u8ffd\u52a0\u3059\u308b","text":"<p>\u30dc\u30bf\u30f3\u306b\u7d75\u6587\u5b57\u3092\u8ffd\u52a0\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nbool Button(const Rect&amp; rect, const Texture&amp; emoji, const Font&amp; font, const String&amp; text, bool enabled)\n{\nif (enabled &amp;&amp; rect.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\nif (enabled)\n{\nrect.draw(ColorF{ 0.3, 0.7, 1.0 });\nfont(text).drawAt(40, (rect.x + rect.w / 2 + 30), (rect.y + rect.h / 2));\n}\nelse\n{\nrect.draw(ColorF{ 0.5 });\nfont(text).drawAt(40, (rect.x + rect.w / 2 + 30), (rect.y + rect.h / 2), ColorF{ 0.7 });\n}\nemoji.scaled(0.5).drawAt(rect.x + 60, rect.y + 40);\nreturn (enabled &amp;&amp; rect.leftClicked());\n}\nvoid Main()\n{\nconst Texture emojiBread{ U\"\ud83c\udf5e\"_emoji };\nconst Texture emojiRice{ U\"\ud83c\udf5a\"_emoji };\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nwhile (System::Update())\n{\nif (Button(Rect{ 250, 300, 300, 80 }, emojiBread, font, U\"\u30d1\u30f3\", false))\n{\nPrint &lt;&lt; U\"\u30d1\u30f3\";\n}\nif (Button(Rect{ 250, 400, 300, 80 }, emojiRice, font, U\"\u7c73\", true))\n{\nPrint &lt;&lt; U\"\u7c73\";\n}\n}\n}\n</code></pre>"},{"location":"tutorial/circle-rect/","title":"8. \u5186\u3068\u9577\u65b9\u5f62\u3092\u63cf\u304f","text":"<p>\u5186\u3068\u9577\u65b9\u5f62\u3092\u63cf\u304f\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial/circle-rect/#81-\u753b\u9762\u306e\u5ea7\u6a19\u7cfb","title":"8.1 \u753b\u9762\u306e\u5ea7\u6a19\u7cfb","text":"<p>\u30a6\u30a3\u30f3\u30c9\u30a6\u5185\u3067\u3001\u80cc\u666f\u8272\u3092\u5909\u3048\u3089\u308c\u308b\u90e8\u5206\u304c \u753b\u9762\uff08\u30b7\u30fc\u30f3\uff09\u3067\u3059\u3002Siv3D \u306f\u3053\u306e\u9818\u57df\u306b\u6587\u5b57\u3084\u56f3\u5f62\u3001\u753b\u50cf\u3092\u8868\u793a\u3067\u304d\u307e\u3059\u3002</p> <p>\u753b\u9762\u306e\u30b5\u30a4\u30ba\u306f\u3001\u57fa\u672c\u306e\u72b6\u614b\u3067\u306f\u5e45 800 \u30d4\u30af\u30bb\u30eb\u3001\u9ad8\u3055 600 \u30d4\u30af\u30bb\u30eb\u3067\u3059\u3002</p> <p>\u753b\u9762\u4e0a\u306e\u4f4d\u7f6e\u3092\u8868\u3059\u5ea7\u6a19\u7cfb\u306f\u3001\u6700\u3082\u5de6\u4e0a\u306e\u30d4\u30af\u30bb\u30eb\u304c\u300cX \u5ea7\u6a19 0\u300d\u300cY \u5ea7\u6a19 0\u300d\u3092\u8868\u3059 (0, 0) \u3067\u3059\u3002\u53f3\u306b\u9032\u3080\u3068 X \u5ea7\u6a19\u304c\u5927\u304d\u304f\u306a\u308a\u3001\u4e0b\u306b\u9032\u3080\u3068 Y \u5ea7\u6a19\u304c\u5927\u304d\u304f\u306a\u308a\u307e\u3059\u3002\u753b\u9762\u306e\u6700\u3082\u53f3\u4e0b\u306e\u30d4\u30af\u30bb\u30eb\u306e\u5ea7\u6a19\u306f (799, 599) \u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\n// \u73fe\u5728\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u5ea7\u6a19\u3092\u8868\u793a\u3059\u308b\nPrint &lt;&lt; Cursor::Pos();\n}\n}\n</code></pre> <p>\u3053\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u5ea7\u6a19\u304c\u753b\u9762\u306e\u5de6\u4e0a\u306b\u7c21\u6613\u8868\u793a\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"tutorial/circle-rect/#82-\u5186\u3092\u63cf\u304f-1","title":"8.2 \u5186\u3092\u63cf\u304f (1)","text":"<p>Siv3D \u3067\u306f\u3001\u4f55\u304b\u3092\u63cf\u304f\u547d\u4ee4\u306f\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u4e2d\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\u5186\u3092\u63cf\u304f\u3068\u304d\u306f <code>Circle</code> \u3092\u4f5c\u6210\u3057\u3001\u305d\u306e <code>.draw()</code> \u3092\u547c\u3073\u307e\u3059\u3002</p> <p><code>Circle</code> \u306f <code>Circle{ x, y, r }</code> \u306e\u3088\u3046\u306b\u3001\u4e2d\u5fc3\u306e X \u5ea7\u6a19\u3001Y \u5ea7\u6a19\u3001\u534a\u5f84\u3092\u6307\u5b9a\u3057\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u5186\u3092\u63cf\u304f\nCircle{ 400, 300, 20 }.draw();\n}\n}\n</code></pre> <p>\u4e2d\u5fc3\u306e\u5ea7\u6a19\u3084\u534a\u5f84\u3092\u5909\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> <p>Circle \u306e\u69cb\u9020</p> <p>\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u3001<code>Circle</code> \u306f\u6b21\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3067\u3059\uff08\u5b9f\u969b\u306b\u306f\u3053\u308c\u4ee5\u5916\u306b\u3082\u30e1\u30f3\u30d0\u95a2\u6570\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\uff09\u3002 <pre><code>struct Circle\n{\ndouble x;\ndouble y;\ndouble r;\n};\n</code></pre></p>"},{"location":"tutorial/circle-rect/#83-\u5186\u3092\u63cf\u304f-2","title":"8.3 \u5186\u3092\u63cf\u304f (2)","text":"<p><code>Circle</code> \u306f\u3001\u4e8c\u6b21\u5143\u5ea7\u6a19\u3092\u8868\u3059 <code>Point</code> \u578b\u3084 <code>Vec2</code> \u578b\u306e\u5024\u3092\u4f7f\u3063\u3066\u3001<code>Circle{ pos, r }</code> \u306e\u3088\u3046\u306b\u30012 \u3064\u306e\u5f15\u6570\u304b\u3089\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p>\u4f8b\u3048\u3070 <code>Cursor::Pos()</code> \u306f\u73fe\u5728\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u5ea7\u6a19\u3092 <code>Point</code> \u578b\u3067\u8fd4\u3059\u95a2\u6570\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066\u30de\u30a6\u30b9\u306b\u8ffd\u968f\u3059\u308b\u5186\u3092\u63cf\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u30de\u30a6\u30b9\u306b\u8ffd\u968f\u3059\u308b\u5186\u3092\u63cf\u304f\nCircle{ Cursor::Pos(), 100 }.draw();\n}\n}\n</code></pre> <p>Point \u3084 Vec2 \u306e\u69cb\u9020</p> <p>\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u3001<code>Point</code> \u3068 <code>Vec2</code> \u306f\u6b21\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3067\u3059\uff08\u5b9f\u969b\u306b\u306f\u3053\u308c\u4ee5\u5916\u306b\u3082\u30e1\u30f3\u30d0\u95a2\u6570\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\uff09\u3002 <pre><code>struct Point\n{\nint32 x;\nint32 y;\n};\nstruct Vec2\n{\ndouble x;\ndouble y;\n};\n</code></pre></p>"},{"location":"tutorial/circle-rect/#84-\u5186\u306e\u8272\u3092\u5909\u3048\u308b","title":"8.4 \u5186\u306e\u8272\u3092\u5909\u3048\u308b","text":"<p>\u56f3\u5f62\u306b\u8272\u3092\u4ed8\u3051\u305f\u3044\u3068\u304d\u306f <code>.draw()</code> \u95a2\u6570\u306e\u5f15\u6570\u306b\u8272\u3092\u6e21\u3057\u307e\u3059\u3002\u8272\u306f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 7 \u3067\u5b66\u3093\u3060\u3088\u3046\u306b\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <ul> <li><code>Palette::Red</code> \u306a\u3069\u306e\u8272\u540d\u3092\u4f7f\u3046</li> <li><code>ColorF{ r, g, b }</code>, <code>ColorF{ gray }</code> \u306e\u3088\u3046\u306b RGB \u5024\u3092\u6307\u5b9a\u3059\u308b</li> <li><code>HSV{ h, s, v }</code>, <code>HSV{ h }</code> \u306e\u3088\u3046\u306b HSV \u5024\u3092\u6307\u5b9a\u3059\u308b</li> </ul> <p><code>.draw()</code> \u306e\u5f15\u6570\u306b\u8272\u3092\u6e21\u3055\u306a\u3044\u3068\u3001\u56f3\u5f62\u306f\u767d\u8272\uff08<code>ColorF{ 1.0 }</code>\uff09\u3067\u63cf\u753b\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nCircle{ 100, 200, 40 }.draw(); // \u8272\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u767d\u8272\nCircle{ 200, 200, 40 }.draw(Palette::Green);\nCircle{ 300, 200, 40 }.draw(Palette::Skyblue);\nCircle{ 400, 200, 40 }.draw(ColorF{ 1.0, 0.8, 0.0 });\nCircle{ 500, 200, 40 }.draw(ColorF{ 0.8 });\nCircle{ 600, 200, 40 }.draw(HSV{ 160.0, 0.5, 1.0 });\nCircle{ 700, 200, 40 }.draw(HSV{ 160.0 });\n}\n}\n</code></pre>"},{"location":"tutorial/circle-rect/#85-\u534a\u900f\u660e\u306e\u8272\u3092\u6307\u5b9a\u3059\u308b","title":"8.5 \u534a\u900f\u660e\u306e\u8272\u3092\u6307\u5b9a\u3059\u308b","text":"<p><code>ColorF</code> \u3068 <code>HSV</code> \u306f\u3001\u4e0d\u900f\u660e\u5ea6\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u4e0d\u900f\u660e\u5ea6\u306f 0.0 \u304b\u3089 1.0 \u306e\u7bc4\u56f2\u3067\u6307\u5b9a\u3057\u307e\u3059\u30020.0 \u306f\u5b8c\u5168\u306b\u900f\u660e\u30011.0 \u306f\u5b8c\u5168\u306b\u4e0d\u900f\u660e\u3067\u30010.5 \u306e\u3068\u304d\u306f\u80cc\u666f\u8272\u3068\u63cf\u753b\u8272\u304c 50% \u305a\u3064\u6df7\u3056\u3063\u305f\u8272\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u4e0d\u900f\u660e\u5ea6 <code>a</code> \uff08\u30a2\u30eb\u30d5\u30a1\uff09\u306f\u3001<code>ColorF{ r, g, b, a }</code>, <code>ColorF{ gray, a }</code>, <code>HSV{ h, s, v, a }</code>, <code>HSV{ h, a }</code> \u306e\u3088\u3046\u306b\u3001\u6700\u5f8c\u306e\u5f15\u6570\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <p>\u4e0d\u900f\u660e\u5ea6\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 1.0 \u306b\u306a\u308a\u307e\u3059\u3002<code>Scene::SetBackground()</code> \u306b\u6307\u5b9a\u3059\u308b\u8272\u306b\u3064\u3044\u3066\u306f\u3001\u4e0d\u900f\u660e\u5ea6\u306f\u7121\u8996\u3055\u308c\u308b\u305f\u3081\u7121\u610f\u5473\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u4e2d\u592e\u306b\u767d\u3044\u5186\u3092\u63cf\u304f\nCircle{ 400, 300, 200 }.draw();\n// \u5de6\u306b\u534a\u900f\u660e\u306e\u5186\u3092\u63cf\u304f\nCircle{ 200, 300, 200 }.draw(ColorF{ 1.0, 0.0, 0.0, 0.9 });\n// \u53f3\u306b\u534a\u900f\u660e\u306e\u5186\u3092\u63cf\u304f\nCircle{ 600, 300, 200 }.draw(HSV{ 240.0, 0.5, 1.0, 0.2 });\n// \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u4f4d\u7f6e\u306b\u534a\u900f\u660e\u306e\u5186\u3092\u63cf\u304f\nCircle{ Cursor::Pos(), 100 }.draw(ColorF{ 0.0, 0.5 });\n}\n}\n</code></pre>"},{"location":"tutorial/circle-rect/#86-\u9577\u65b9\u5f62\u3092\u63cf\u304f-1","title":"8.6 \u9577\u65b9\u5f62\u3092\u63cf\u304f (1)","text":"<p>\u9577\u65b9\u5f62\u3092\u63cf\u304f\u3068\u304d\u306f <code>Rect</code> \u3092\u4f5c\u6210\u3057\u3066 <code>.draw()</code> \u3057\u307e\u3059\u3002</p> <p><code>Rect{ x, y, w, h }</code> \u306f\u3001\u5de6\u4e0a\u5ea7\u6a19\u304c (x, y), \u5e45\u304c w, \u9ad8\u3055\u304c h \u306e\u9577\u65b9\u5f62\u3067\u3059\u3002</p> <p><code>Rect{ x, y, s }</code> \u306f\u5f15\u6570\u3092\u7701\u7565\u3057\u305f\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3067\u3001\u6b63\u65b9\u5f62\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u4fbf\u5229\u3067\u3059\u3002\u5de6\u4e0a\u5ea7\u6a19\u304c (x, y), \u5e45\u3068\u9ad8\u3055\u304c s \u306e\u6b63\u65b9\u5f62\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u9577\u65b9\u5f62\u3092\u63cf\u304f \nRect{ 20, 40, 400, 100 }.draw();\n// \u6b63\u65b9\u5f62\u3092\u63cf\u304f \nRect{ 100, 200, 80 }.draw(Palette::Orange);\n}\n}\n</code></pre> <p>Rect \u306e\u69cb\u9020</p> <p>\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u3001<code>Rect</code> \u306f\u6b21\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3067\u3059\uff08\u5b9f\u969b\u306b\u306f\u3053\u308c\u4ee5\u5916\u306b\u3082\u30e1\u30f3\u30d0\u95a2\u6570\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\uff09\u3002 <pre><code>struct Rect\n{\nint32 x;\nint32 y;\nint32 w;\nint32 h;\n};\n</code></pre></p>"},{"location":"tutorial/circle-rect/#87-\u9577\u65b9\u5f62\u3092\u63cf\u304f-2","title":"8.7 \u9577\u65b9\u5f62\u3092\u63cf\u304f (2)","text":"<p>\u5ea7\u6a19\u3084\u5927\u304d\u3055\u3092 <code>double</code> \u578b\u3067\u6271\u3044\u305f\u3044\u5834\u5408\u306f\u3001<code>Rect</code> \u306e\u4ee3\u308f\u308a\u306b <code>RectF</code> \u4f7f\u3044\u307e\u3059\u3002</p> <p><code>Scene::Time()</code> \u306f\u3001\u30b2\u30fc\u30e0\u958b\u59cb\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\u3092\u79d2 \uff08<code>double</code> \u578b\uff09\u3067\u8fd4\u3057\u307e\u3059\u3002\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u306f\u3001\u9577\u65b9\u5f62\u306e\u5e45 <code>w</code> \u304c\u6bce\u79d2 20.0 \u306e\u30da\u30fc\u30b9\u3067\u5897\u3048\u3066\u3044\u304d\u307e\u3059\u3002<code>w</code> \u306f <code>double</code> \u578b\u306e\u305f\u3081\u3001<code>Rect</code> \u3067\u306f\u306a\u304f <code>RectF</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nconst double w = (Scene::Time() * 20.0);\n// \u9577\u65b9\u5f62\u3092\u63cf\u304f \nRectF{ 20, 40, w, 100 }.draw();\n}\n}\n</code></pre> <p>RectF \u306e\u69cb\u9020</p> <p>\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u3001<code>RectF</code> \u306f\u6b21\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3067\u3059\uff08\u5b9f\u969b\u306b\u306f\u3053\u308c\u4ee5\u5916\u306b\u3082\u30e1\u30f3\u30d0\u95a2\u6570\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\uff09\u3002 <pre><code>struct Rect\n{\ndouble x;\ndouble y;\ndouble w;\ndouble h;\n};\n</code></pre></p>"},{"location":"tutorial/circle-rect/#88-\u5186\u3084\u9577\u65b9\u5f62\u306e\u67a0\u3092\u63cf\u304f","title":"8.8 \u5186\u3084\u9577\u65b9\u5f62\u306e\u67a0\u3092\u63cf\u304f","text":"<p>\u5186\u3084\u9577\u65b9\u5f62\u306e\u67a0\u3060\u3051\u3092\u63cf\u304d\u305f\u3044\u5834\u5408\u3001<code>.draw()</code> \u306e\u4ee3\u308f\u308a\u306b <code>.drawFrame(innerThickness, outerThickness, color)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p><code>innerThickness</code> \u306f\u5185\u5074\u65b9\u5411\u3078\u306e\u592a\u3055\u3001<code>outerThickness</code> \u306f\u5916\u5074\u65b9\u5411\u3078\u306e\u592a\u3055\u3092\u8868\u3059 <code>double</code> \u578b\u306e\u5024\u3067\u3059\u3002<code>innerThickness</code> \u3068 <code>outerThickness</code> \u306b\u306f\u3001\u305d\u308c\u305e\u308c 0.0 \u4ee5\u4e0a\u306e\u5024\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <p><code>color</code> \u3092\u7701\u7565\u3057\u305f\u5834\u5408\u3001<code>.draw()</code> \u3068\u540c\u69d8\u306b\u767d\u8272\u3067\u63cf\u753b\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u9577\u65b9\u5f62\u306e\u67a0\u3092\u63cf\u304f\nRect{ 100, 100, 100, 30 }\n.drawFrame(3, 0);\n// \u9577\u65b9\u5f62\u306e\u67a0\u3092\u63cf\u304f\nRect{ 220, 100, 100, 30 }\n.drawFrame(0, 3);\n// \u9577\u65b9\u5f62\u306e\u67a0\u3092\u63cf\u304f\nRect{ 200, 200, 400, 100 }\n.drawFrame(3, 3, Palette::Orange);\n// \u5186\u306e\u67a0\u3092\u63cf\u304f\nCircle{ Cursor::Pos(), 40 }\n.drawFrame(1, 1, Palette::Seagreen);\n}\n}\n</code></pre>"},{"location":"tutorial/circle-rect/#89-\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u9577\u65b9\u5f62\u3092\u63cf\u304f-1","title":"8.9 \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u9577\u65b9\u5f62\u3092\u63cf\u304f (1)","text":"<p><code>Rect</code> \u3084 <code>RectF</code> \u3092 <code>.draw()</code> \u3059\u308b\u969b\u3001<code>.draw(Arg::top = \u8272, Arg::bottom = \u8272)</code> \u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3067\u3001\u4e0a\u4e0b\u65b9\u5411\u306e\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u9577\u65b9\u5f62\u3092\u63cf\u753b\u3067\u304d\u307e\u3059\u3002</p> <p><code>Arg::top = \u8272</code> \u3067\u306f\u4e0a\u5074\u306e\u8272\u3001<code>Arg::bottom = \u8272</code> \u3067\u306f\u4e0b\u5074\u306e\u8272\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002<code>top</code> \u3068 <code>bottom</code> \u306e\u5f15\u6570\u306e\u9806\u756a\u3092\u5165\u308c\u66ff\u3048\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nwhile (System::Update())\n{\n// \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u9577\u65b9\u5f62\u3092\u63cf\u304f\nRect{ 0, 0, 600, 500 }\n.draw(Arg::top = ColorF{ 0.5, 0.7, 0.9 }, Arg::bottom = ColorF{ 0.5, 0.9, 0.7 });\n}\n}\n</code></pre>"},{"location":"tutorial/circle-rect/#810-\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u9577\u65b9\u5f62\u3092\u63cf\u304f-2","title":"8.10 \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u9577\u65b9\u5f62\u3092\u63cf\u304f (2)","text":"<p><code>Rect</code> \u3084 <code>RectF</code> \u3092 <code>.draw()</code> \u3059\u308b\u969b\u3001<code>.draw(Arg::left = \u8272, Arg::right = \u8272)</code> \u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3067\u3001\u5de6\u53f3\u65b9\u5411\u306e\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u9577\u65b9\u5f62\u3092\u63cf\u753b\u3067\u304d\u307e\u3059\u3002</p> <p><code>Arg::left = \u8272</code> \u3067\u306f\u5de6\u5074\u306e\u8272\u3001<code>Arg::right = \u8272</code> \u3067\u306f\u53f3\u5074\u306e\u8272\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002<code>left</code> \u3068 <code>right</code> \u306e\u5f15\u6570\u306e\u9806\u756a\u3092\u5165\u308c\u66ff\u3048\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nwhile (System::Update())\n{\n// \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u9577\u65b9\u5f62\u3092\u63cf\u304f\nRect{ 0, 0, 600, 500 }\n.draw(Arg::left = ColorF{ 0.5, 0.7, 0.9 }, Arg::right = ColorF{ 0.5, 0.9, 0.7 });\n}\n}\n</code></pre>"},{"location":"tutorial/circle-rect/#\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","title":"\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"<ul> <li> \u753b\u9762\u306e\u5ea7\u6a19\u7cfb\u3068\u57fa\u672c\u306e\u753b\u9762\u30b5\u30a4\u30ba (800x600) \u3092\u7406\u89e3\u3057\u305f</li> <li> <code>Circle</code> \u3092\u4f7f\u3063\u3066\u5186\u3092\u63cf\u753b\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u534a\u900f\u660e\u306e\u8272\u306e\u6307\u5b9a\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> <code>Rect</code> \u307e\u305f\u306f <code>RectF</code> \u3092\u4f7f\u3063\u3066\u9577\u65b9\u5f62\u3092\u63cf\u753b\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u5186\u3084\u9577\u65b9\u5f62\u306e\u67a0\u3092\u63cf\u753b\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u9577\u65b9\u5f62\u3092\u63cf\u753b\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> </ul>"},{"location":"tutorial/cookie-clicker/","title":"16. \u30af\u30c3\u30ad\u30fc\u30af\u30ea\u30c3\u30ab\u30fc\u98a8\u306e\u30b2\u30fc\u30e0\u3092\u4f5c\u308b","text":"<p>\u3053\u3053\u307e\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u4f7f\u3063\u3066\u3001\u30af\u30c3\u30ad\u30fc\u30af\u30ea\u30c3\u30ab\u30fc\u98a8\u306e\u30b2\u30fc\u30e0\u3092\u4f5c\u308a\u307e\u3059\u3002</p> <p>\u30af\u30c3\u30ad\u30fc\u30af\u30ea\u30c3\u30ab\u30fc\u3068\u306f</p> <p>\u30af\u30c3\u30ad\u30fc\u30af\u30ea\u30c3\u30ab\u30fc\u3068\u306f\u3001\u30af\u30c3\u30ad\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u30af\u30c3\u30ad\u30fc\u306e\u6570\u3092\u5897\u3084\u3057\u3066\u3044\u304f\u30b2\u30fc\u30e0\u3067\u3059\u3002\u5897\u3084\u3057\u305f\u30af\u30c3\u30ad\u30fc\u306f\u3001\u30af\u30c3\u30ad\u30fc\u3092\u5897\u3084\u3059\u305f\u3081\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u8cb7\u3046\u305f\u3081\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u30022013 \u5e74\u306b\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30b2\u30fc\u30e0\u304c\u516c\u958b\u3055\u308c\u3066\u4eba\u6c17\u3092\u535a\u3057\u3001\u305d\u306e\u5f8c\u3001\u69d8\u3005\u306a\u30af\u30c3\u30ad\u30fc\u30af\u30ea\u30c3\u30ab\u30fc\u98a8\u306e\u30b2\u30fc\u30e0\u304c\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002</p> <ul> <li>Cookie Clicker \u516c\u5f0f\u30da\u30fc\u30b8 </li> <li>Wikipedia: Cookie Clicker </li> </ul>"},{"location":"tutorial/cookie-clicker/#\u5b8c\u6210\u56f3","title":"\u5b8c\u6210\u56f3","text":"\u5b8c\u6210\u30d7\u30ed\u30b0\u30e9\u30e0 <pre><code># include &lt;Siv3D.hpp&gt;\n/// @brief \u30a2\u30a4\u30c6\u30e0\u306e\u30dc\u30bf\u30f3\n/// @param rect \u30dc\u30bf\u30f3\u306e\u9818\u57df\n/// @param texture \u30dc\u30bf\u30f3\u306e\u7d75\u6587\u5b57\n/// @param font \u6587\u5b57\u63cf\u753b\u306b\u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\n/// @param name \u30a2\u30a4\u30c6\u30e0\u306e\u540d\u524d\n/// @param desc \u30a2\u30a4\u30c6\u30e0\u306e\u8aac\u660e\n/// @param count \u30a2\u30a4\u30c6\u30e0\u306e\u6240\u6301\u6570\n/// @param enabled \u30dc\u30bf\u30f3\u3092\u62bc\u305b\u308b\u304b\n/// @return \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u5834\u5408 true, \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f false\nbool Button(const Rect&amp; rect, const Texture&amp; texture, const Font&amp; font, const String&amp; name, const String&amp; desc, int32 count, bool enabled)\n{\nif (enabled)\n{\nrect.draw(ColorF{ 0.3, 0.5, 0.9, 0.8 });\nrect.drawFrame(2, 2, ColorF{ 0.5, 0.7, 1.0 });\nif (rect.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n}\nelse\n{\nrect.draw(ColorF{ 0.0, 0.4 });\nrect.drawFrame(2, 2, ColorF{ 0.5 });\n}\ntexture.scaled(0.5).drawAt(rect.x + 50, rect.y + 50);\nfont(name).draw(30, rect.x + 100, rect.y + 15, Palette::White);\nfont(desc).draw(18, rect.x + 102, rect.y + 60, Palette::White);\nfont(count).draw(50, Arg::rightCenter((rect.x + rect.w - 20), (rect.y + 50)), Palette::White);\nreturn (enabled &amp;&amp; rect.leftClicked());\n}\nvoid Main()\n{\n// \u30af\u30c3\u30ad\u30fc\u306e\u7d75\u6587\u5b57\nconst Texture texture{ U\"\ud83c\udf6a\"_emoji };\n// \u8fb2\u5834\u306e\u7d75\u6587\u5b57\nconst Texture farmEmoji{ U\"\ud83c\udf3e\"_emoji };\n// \u5de5\u5834\u306e\u7d75\u6587\u5b57\nconst Texture factoryEmoji{ U\"\ud83c\udfed\"_emoji };\n// \u30d5\u30a9\u30f3\u30c8\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u30af\u30c3\u30ad\u30fc\u306e\u30af\u30ea\u30c3\u30af\u5186\nconst Circle cookieCircle{ 170, 300, 100 };\n// \u30af\u30c3\u30ad\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\uff08\u500d\u7387\uff09\ndouble cookieScale = 1.5;\n// \u30af\u30c3\u30ad\u30fc\u306e\u500b\u6570\ndouble cookies = 0;\n// \u8fb2\u5834\u306e\u6240\u6709\u6570\nint32 farmCount = 0;\n// \u5de5\u5834\u306e\u6240\u6709\u6570\nint32 factoryCount = 0;\n// \u8fb2\u5834\u306e\u4fa1\u683c\nint32 farmCost = 10;\n// \u5de5\u5834\u306e\u4fa1\u683c\nint32 factoryCost = 100;\n// \u30b2\u30fc\u30e0\u306e\u7d4c\u904e\u6642\u9593\u306e\u84c4\u7a4d\ndouble accumulatedTime = 0.0;\nwhile (System::Update())\n{\n// \u30af\u30c3\u30ad\u30fc\u306e\u6bce\u79d2\u306e\u751f\u7523\u91cf (cookies per second) \u3092\u8a08\u7b97\u3059\u308b\nconst int32 cps = (farmCount + factoryCount * 10);\n// \u30b2\u30fc\u30e0\u306e\u7d4c\u904e\u6642\u9593\u3092\u52a0\u7b97\u3059\u308b\naccumulatedTime += Scene::DeltaTime();\n// 0.1 \u79d2\u4ee5\u4e0a\u84c4\u7a4d\u3057\u3066\u3044\u305f\u3089\nif (0.1 &lt;= accumulatedTime)\n{\naccumulatedTime -= 0.1;\n// 0.1 \u79d2\u5206\u306e\u30af\u30c3\u30ad\u30fc\u751f\u7523\u3092\u52a0\u7b97\u3059\u308b\ncookies += (cps * 0.1);\n}\n// \u8fb2\u5834\u306e\u4fa1\u683c\u3092\u8a08\u7b97\u3059\u308b\nfarmCost = 10 + (farmCount * 10);\n// \u5de5\u5834\u306e\u4fa1\u683c\u3092\u8a08\u7b97\u3059\u308b\nfactoryCost = 100 + (factoryCount * 100);\n// \u30af\u30c3\u30ad\u30fc\u5186\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308c\u3070\nif (cookieCircle.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n// \u30af\u30c3\u30ad\u30fc\u5186\u304c\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (cookieCircle.leftClicked())\n{\ncookieScale = 1.3;\n++cookies;\n}\n// \u30af\u30c3\u30ad\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\u3092\u56de\u5fa9\u3059\u308b\ncookieScale += Scene::DeltaTime();\nif (1.5 &lt; cookieScale)\n{\ncookieScale = 1.5;\n}\n// \u80cc\u666f\u3092\u63cf\u304f\nRect{ 0, 0, 800, 600 }.draw(Arg::top = ColorF{ 0.6, 0.5, 0.3 }, Arg::bottom = ColorF{ 0.2, 0.5, 0.3 });\n// \u30af\u30c3\u30ad\u30fc\u306e\u6570\u3092\u6574\u6570\u3067\u8868\u793a\u3059\u308b\nfont(U\"{:.0f}\"_fmt(cookies)).drawAt(60, 170, 100);\n// \u30af\u30c3\u30ad\u30fc\u306e\u751f\u7523\u91cf\u3092\u8868\u793a\u3059\u308b\nfont(U\"\u6bce\u79d2: {}\"_fmt(cps)).drawAt(24, 170, 160);\n// \u30af\u30c3\u30ad\u30fc\u3092\u63cf\u753b\u3059\u308b\ntexture.scaled(cookieScale).drawAt(cookieCircle.center);\n// \u8fb2\u5834\u30dc\u30bf\u30f3\nif (Button(Rect{ 340, 40, 420, 100 }, farmEmoji, font, U\"\u30af\u30c3\u30ad\u30fc\u8fb2\u5834\", U\"C{} / 1 CPS\"_fmt(farmCost), farmCount, (farmCost &lt;= cookies)))\n{\ncookies -= farmCost;\n++farmCount;\n}\n// \u5de5\u5834\u30dc\u30bf\u30f3\nif (Button(Rect{ 340, 160, 420, 100 }, factoryEmoji, font, U\"\u30af\u30c3\u30ad\u30fc\u5de5\u5834\", U\"C{} / 10 CPS\"_fmt(factoryCost), factoryCount, (factoryCost &lt;= cookies)))\n{\ncookies -= factoryCost;\n++factoryCount;\n}\n}\n}\n</code></pre>"},{"location":"tutorial/cookie-clicker/#161-\u80cc\u666f\u3068\u30af\u30c3\u30ad\u30fc\u3092\u63cf\u304f","title":"16.1 \u80cc\u666f\u3068\u30af\u30c3\u30ad\u30fc\u3092\u63cf\u304f","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30af\u30c3\u30ad\u30fc\u306e\u7d75\u6587\u5b57\nconst Texture texture{ U\"\ud83c\udf6a\"_emoji };\nwhile (System::Update())\n{\n// \u80cc\u666f\u3092\u63cf\u304f\nRect{ 0, 0, 800, 600 }.draw(Arg::top = ColorF{ 0.6, 0.5, 0.3 }, Arg::bottom = ColorF{ 0.2, 0.5, 0.3 });\n// \u30af\u30c3\u30ad\u30fc\u3092\u63cf\u753b\u3059\u308b\ntexture.scaled(1.5).drawAt(170, 300);\n}\n}\n</code></pre>"},{"location":"tutorial/cookie-clicker/#162-\u30af\u30c3\u30ad\u30fc\u306e\u500b\u6570\u3092\u8868\u793a\u3059\u308b","title":"16.2 \u30af\u30c3\u30ad\u30fc\u306e\u500b\u6570\u3092\u8868\u793a\u3059\u308b","text":"<p>\u3053\u306e\u5148\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u30010.1 \u79d2\u3054\u3068\u306b\u30af\u30c3\u30ad\u30fc\u306e\u679a\u6570\u3092\u66f4\u65b0\u3059\u308b\u305f\u3081\u3001\u30af\u30c3\u30ad\u30fc\u306e\u679a\u6570\u306f\u6574\u6570\u3067\u306f\u306a\u304f\u5c0f\u6570\u3067\u7ba1\u7406\u3057\u307e\u3059\u3002\u8868\u793a\u3059\u308b\u3068\u304d\u306f <code>U\"{:.0f}\"</code> \u3067\u5c0f\u6570\u4ee5\u4e0b\u306f\u8868\u793a\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30af\u30c3\u30ad\u30fc\u306e\u7d75\u6587\u5b57\nconst Texture texture{ U\"\ud83c\udf6a\"_emoji };\n// \u30d5\u30a9\u30f3\u30c8\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u30af\u30c3\u30ad\u30fc\u306e\u500b\u6570\ndouble cookies = 0;\nwhile (System::Update())\n{\n// \u80cc\u666f\u3092\u63cf\u304f\nRect{ 0, 0, 800, 600 }.draw(Arg::top = ColorF{ 0.6, 0.5, 0.3 }, Arg::bottom = ColorF{ 0.2, 0.5, 0.3 });\n// \u30af\u30c3\u30ad\u30fc\u306e\u6570\u3092\u6574\u6570\u3067\u8868\u793a\u3059\u308b\nfont(U\"{:.0f}\"_fmt(cookies)).drawAt(60, 170, 100);\n// \u30af\u30c3\u30ad\u30fc\u3092\u63cf\u753b\u3059\u308b\ntexture.scaled(1.5).drawAt(170, 300);\n}\n}\n</code></pre>"},{"location":"tutorial/cookie-clicker/#163-\u30af\u30c3\u30ad\u30fc\u3092\u62bc\u305b\u308b\u3088\u3046\u306b\u3059\u308b","title":"16.3 \u30af\u30c3\u30ad\u30fc\u3092\u62bc\u305b\u308b\u3088\u3046\u306b\u3059\u308b","text":"<p>\u30af\u30c3\u30ad\u30fc\u306e\u9818\u57df\u306b\u6cbf\u3063\u305f <code>Circle</code> \u3067\u30de\u30a6\u30b9\u5165\u529b\u3092\u51e6\u7406\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30af\u30c3\u30ad\u30fc\u306e\u7d75\u6587\u5b57\nconst Texture texture{ U\"\ud83c\udf6a\"_emoji };\n// \u30d5\u30a9\u30f3\u30c8\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u30af\u30c3\u30ad\u30fc\u306e\u30af\u30ea\u30c3\u30af\u5186\nconst Circle cookieCircle{ 170, 300, 100 };\n// \u30af\u30c3\u30ad\u30fc\u306e\u500b\u6570\ndouble cookies = 0;\nwhile (System::Update())\n{\n// \u30af\u30c3\u30ad\u30fc\u5186\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308c\u3070\nif (cookieCircle.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n// \u30af\u30c3\u30ad\u30fc\u5186\u304c\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (cookieCircle.leftClicked())\n{\n++cookies;\n}\n// \u80cc\u666f\u3092\u63cf\u304f\nRect{ 0, 0, 800, 600 }.draw(Arg::top = ColorF{ 0.6, 0.5, 0.3 }, Arg::bottom = ColorF{ 0.2, 0.5, 0.3 });\n// \u30af\u30c3\u30ad\u30fc\u306e\u6570\u3092\u6574\u6570\u3067\u8868\u793a\u3059\u308b\nfont(U\"{:.0f}\"_fmt(cookies)).drawAt(60, 170, 100);\n// \u30af\u30c3\u30ad\u30fc\u3092\u63cf\u753b\u3059\u308b\ntexture.scaled(1.5).drawAt(cookieCircle.center);\n}\n}\n</code></pre>"},{"location":"tutorial/cookie-clicker/#164-\u30af\u30c3\u30ad\u30fc\u3092\u62bc\u3057\u305f\u3068\u304d\u306e\u30e2\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u308b","title":"16.4 \u30af\u30c3\u30ad\u30fc\u3092\u62bc\u3057\u305f\u3068\u304d\u306e\u30e2\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u308b","text":"<p>\u30af\u30c3\u30ad\u30fc\u3092\u5de6\u30af\u30ea\u30c3\u30af\u3057\u305f\u3068\u304d\u306b\u30af\u30c3\u30ad\u30fc\u306e\u30b5\u30a4\u30ba\u3092\u5c0f\u3055\u304f\u3057\u3001\u6642\u9593\u306e\u7d4c\u904e\u3068\u3068\u3082\u306b\u30b5\u30a4\u30ba\u3092\u5143\u306b\u623b\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30af\u30c3\u30ad\u30fc\u306e\u7d75\u6587\u5b57\nconst Texture texture{ U\"\ud83c\udf6a\"_emoji };\n// \u30d5\u30a9\u30f3\u30c8\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u30af\u30c3\u30ad\u30fc\u306e\u30af\u30ea\u30c3\u30af\u5186\nconst Circle cookieCircle{ 170, 300, 100 };\n// \u30af\u30c3\u30ad\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\uff08\u500d\u7387\uff09\ndouble cookieScale = 1.5;\n// \u30af\u30c3\u30ad\u30fc\u306e\u500b\u6570\ndouble cookies = 0;\nwhile (System::Update())\n{\n// \u30af\u30c3\u30ad\u30fc\u5186\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308c\u3070\nif (cookieCircle.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n// \u30af\u30c3\u30ad\u30fc\u5186\u304c\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (cookieCircle.leftClicked())\n{\ncookieScale = 1.3;\n++cookies;\n}\n// \u30af\u30c3\u30ad\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\u3092\u56de\u5fa9\u3059\u308b\ncookieScale += Scene::DeltaTime();\nif (1.5 &lt; cookieScale)\n{\ncookieScale = 1.5;\n}\n// \u80cc\u666f\u3092\u63cf\u304f\nRect{ 0, 0, 800, 600 }.draw(Arg::top = ColorF{ 0.6, 0.5, 0.3 }, Arg::bottom = ColorF{ 0.2, 0.5, 0.3 });\n// \u30af\u30c3\u30ad\u30fc\u306e\u6570\u3092\u6574\u6570\u3067\u8868\u793a\u3059\u308b\nfont(U\"{:.0f}\"_fmt(cookies)).drawAt(60, 170, 100);\n// \u30af\u30c3\u30ad\u30fc\u3092\u63cf\u753b\u3059\u308b\ntexture.scaled(cookieScale).drawAt(cookieCircle.center);\n}\n}\n</code></pre>"},{"location":"tutorial/cookie-clicker/#165-\u30a2\u30a4\u30c6\u30e0\u306e\u30dc\u30bf\u30f3\u3092\u4f5c\u308b-1","title":"16.5 \u30a2\u30a4\u30c6\u30e0\u306e\u30dc\u30bf\u30f3\u3092\u4f5c\u308b (1)","text":"<p>\u30a2\u30a4\u30c6\u30e0\u7528\u306e\u30dc\u30bf\u30f3\u3092\u51e6\u7406\u3059\u308b\u95a2\u6570\u3092\u4f5c\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\n/// @brief \u30a2\u30a4\u30c6\u30e0\u306e\u30dc\u30bf\u30f3\n/// @param rect \u30dc\u30bf\u30f3\u306e\u9818\u57df\n/// @param texture \u30dc\u30bf\u30f3\u306e\u7d75\u6587\u5b57\n/// @param enabled \u30dc\u30bf\u30f3\u3092\u62bc\u305b\u308b\u304b\n/// @return \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u5834\u5408 true, \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f false\nbool Button(const Rect&amp; rect, const Texture&amp; texture, bool enabled)\n{\nif (enabled)\n{\nrect.draw(ColorF{ 0.3, 0.5, 0.9, 0.8 });\nrect.drawFrame(2, 2, ColorF{ 0.5, 0.7, 1.0 });\nif (rect.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n}\nelse\n{\nrect.draw(ColorF{ 0.0, 0.4 });\nrect.drawFrame(2, 2, ColorF{ 0.5 });\n}\ntexture.scaled(0.5).drawAt(rect.x + 50, rect.y + 50);\nreturn (enabled &amp;&amp; rect.leftClicked());\n}\nvoid Main()\n{\n// \u30af\u30c3\u30ad\u30fc\u306e\u7d75\u6587\u5b57\nconst Texture texture{ U\"\ud83c\udf6a\"_emoji };\n// \u8fb2\u5834\u306e\u7d75\u6587\u5b57\nconst Texture farmEmoji{ U\"\ud83c\udf3e\"_emoji };\n// \u5de5\u5834\u306e\u7d75\u6587\u5b57\nconst Texture factoryEmoji{ U\"\ud83c\udfed\"_emoji };\n// \u30d5\u30a9\u30f3\u30c8\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u30af\u30c3\u30ad\u30fc\u306e\u30af\u30ea\u30c3\u30af\u5186\nconst Circle cookieCircle{ 170, 300, 100 };\n// \u30af\u30c3\u30ad\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\uff08\u500d\u7387\uff09\ndouble cookieScale = 1.5;\n// \u30af\u30c3\u30ad\u30fc\u306e\u500b\u6570\ndouble cookies = 0;\nwhile (System::Update())\n{\n// \u30af\u30c3\u30ad\u30fc\u5186\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308c\u3070\nif (cookieCircle.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n// \u30af\u30c3\u30ad\u30fc\u5186\u304c\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (cookieCircle.leftClicked())\n{\ncookieScale = 1.3;\n++cookies;\n}\n// \u30af\u30c3\u30ad\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\u3092\u56de\u5fa9\u3059\u308b\ncookieScale += Scene::DeltaTime();\nif (1.5 &lt; cookieScale)\n{\ncookieScale = 1.5;\n}\n// \u80cc\u666f\u3092\u63cf\u304f\nRect{ 0, 0, 800, 600 }.draw(Arg::top = ColorF{ 0.6, 0.5, 0.3 }, Arg::bottom = ColorF{ 0.2, 0.5, 0.3 });\n// \u30af\u30c3\u30ad\u30fc\u306e\u6570\u3092\u6574\u6570\u3067\u8868\u793a\u3059\u308b\nfont(U\"{:.0f}\"_fmt(cookies)).drawAt(60, 170, 100);\n// \u30af\u30c3\u30ad\u30fc\u3092\u63cf\u753b\u3059\u308b\ntexture.scaled(cookieScale).drawAt(cookieCircle.center);\n// \u8fb2\u5834\u306e\u30dc\u30bf\u30f3\nButton(Rect{ 340, 40, 420, 100 }, farmEmoji, true);\n// \u5de5\u5834\u306e\u30dc\u30bf\u30f3\nButton(Rect{ 340, 160, 420, 100 }, factoryEmoji, false);\n}\n}\n</code></pre>"},{"location":"tutorial/cookie-clicker/#166-\u30a2\u30a4\u30c6\u30e0\u306e\u30dc\u30bf\u30f3\u3092\u4f5c\u308b-2","title":"16.6 \u30a2\u30a4\u30c6\u30e0\u306e\u30dc\u30bf\u30f3\u3092\u4f5c\u308b (2)","text":"<p>\u30dc\u30bf\u30f3\u306b\u4eee\u306e\u8aac\u660e\u6587\u3068\u6570\u5b57\u3092\u52a0\u3048\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\n/// @brief \u30a2\u30a4\u30c6\u30e0\u306e\u30dc\u30bf\u30f3\n/// @param rect \u30dc\u30bf\u30f3\u306e\u9818\u57df\n/// @param texture \u30dc\u30bf\u30f3\u306e\u7d75\u6587\u5b57\n/// @param font \u6587\u5b57\u63cf\u753b\u306b\u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\n/// @param name \u30a2\u30a4\u30c6\u30e0\u306e\u540d\u524d\n/// @param desc \u30a2\u30a4\u30c6\u30e0\u306e\u8aac\u660e\n/// @param count \u30a2\u30a4\u30c6\u30e0\u306e\u6240\u6301\u6570\n/// @param enabled \u30dc\u30bf\u30f3\u3092\u62bc\u305b\u308b\u304b\n/// @return \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u5834\u5408 true, \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f false\nbool Button(const Rect&amp; rect, const Texture&amp; texture, const Font&amp; font, const String&amp; name, const String&amp; desc, int32 count, bool enabled)\n{\nif (enabled)\n{\nrect.draw(ColorF{ 0.3, 0.5, 0.9, 0.8 });\nrect.drawFrame(2, 2, ColorF{ 0.5, 0.7, 1.0 });\nif (rect.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n}\nelse\n{\nrect.draw(ColorF{ 0.0, 0.4 });\nrect.drawFrame(2, 2, ColorF{ 0.5 });\n}\ntexture.scaled(0.5).drawAt(rect.x + 50, rect.y + 50);\nfont(name).draw(30, rect.x + 100, rect.y + 15, Palette::White);\nfont(desc).draw(18, rect.x + 102, rect.y + 60, Palette::White);\nfont(count).draw(50, Arg::rightCenter((rect.x + rect.w - 20), (rect.y + 50)), Palette::White);\nreturn (enabled &amp;&amp; rect.leftClicked());\n}\nvoid Main()\n{\n// \u30af\u30c3\u30ad\u30fc\u306e\u7d75\u6587\u5b57\nconst Texture texture{ U\"\ud83c\udf6a\"_emoji };\n// \u8fb2\u5834\u306e\u7d75\u6587\u5b57\nconst Texture farmEmoji{ U\"\ud83c\udf3e\"_emoji };\n// \u5de5\u5834\u306e\u7d75\u6587\u5b57\nconst Texture factoryEmoji{ U\"\ud83c\udfed\"_emoji };\n// \u30d5\u30a9\u30f3\u30c8\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u30af\u30c3\u30ad\u30fc\u306e\u30af\u30ea\u30c3\u30af\u5186\nconst Circle cookieCircle{ 170, 300, 100 };\n// \u30af\u30c3\u30ad\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\uff08\u500d\u7387\uff09\ndouble cookieScale = 1.5;\n// \u30af\u30c3\u30ad\u30fc\u306e\u500b\u6570\ndouble cookies = 0;\nwhile (System::Update())\n{\n// \u30af\u30c3\u30ad\u30fc\u5186\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308c\u3070\nif (cookieCircle.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n// \u30af\u30c3\u30ad\u30fc\u5186\u304c\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (cookieCircle.leftClicked())\n{\ncookieScale = 1.3;\n++cookies;\n}\n// \u30af\u30c3\u30ad\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\u3092\u56de\u5fa9\u3059\u308b\ncookieScale += Scene::DeltaTime();\nif (1.5 &lt; cookieScale)\n{\ncookieScale = 1.5;\n}\n// \u80cc\u666f\u3092\u63cf\u304f\nRect{ 0, 0, 800, 600 }.draw(Arg::top = ColorF{ 0.6, 0.5, 0.3 }, Arg::bottom = ColorF{ 0.2, 0.5, 0.3 });\n// \u30af\u30c3\u30ad\u30fc\u306e\u6570\u3092\u6574\u6570\u3067\u8868\u793a\u3059\u308b\nfont(U\"{:.0f}\"_fmt(cookies)).drawAt(60, 170, 100);\n// \u30af\u30c3\u30ad\u30fc\u3092\u63cf\u753b\u3059\u308b\ntexture.scaled(cookieScale).drawAt(cookieCircle.center);\n// \u8fb2\u5834\u306e\u30dc\u30bf\u30f3\nButton(Rect{ 340, 40, 420, 100 }, farmEmoji, font, U\"\u30af\u30c3\u30ad\u30fc\u8fb2\u5834\", U\"C10 / 1 CPS\", 0, true);\n// \u5de5\u5834\u306e\u30dc\u30bf\u30f3\nButton(Rect{ 340, 160, 420, 100 }, factoryEmoji, font, U\"\u30af\u30c3\u30ad\u30fc\u5de5\u5834\", U\"C100 / 10 CPS\", 0, false);\n}\n}\n</code></pre>"},{"location":"tutorial/cookie-clicker/#167-\u5909\u6570\u3068\u30dc\u30bf\u30f3\u306e\u8868\u793a\u3092\u9023\u52d5\u3055\u305b\u308b","title":"16.7 \u5909\u6570\u3068\u30dc\u30bf\u30f3\u306e\u8868\u793a\u3092\u9023\u52d5\u3055\u305b\u308b","text":"<p>\u30b2\u30fc\u30e0\u306e\u72b6\u614b\u3068\u30dc\u30bf\u30f3\u306e\u8868\u793a\u3092\u9023\u52d5\u3055\u305b\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\n/// @brief \u30a2\u30a4\u30c6\u30e0\u306e\u30dc\u30bf\u30f3\n/// @param rect \u30dc\u30bf\u30f3\u306e\u9818\u57df\n/// @param texture \u30dc\u30bf\u30f3\u306e\u7d75\u6587\u5b57\n/// @param font \u6587\u5b57\u63cf\u753b\u306b\u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\n/// @param name \u30a2\u30a4\u30c6\u30e0\u306e\u540d\u524d\n/// @param desc \u30a2\u30a4\u30c6\u30e0\u306e\u8aac\u660e\n/// @param count \u30a2\u30a4\u30c6\u30e0\u306e\u6240\u6301\u6570\n/// @param enabled \u30dc\u30bf\u30f3\u3092\u62bc\u305b\u308b\u304b\n/// @return \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u5834\u5408 true, \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f false\nbool Button(const Rect&amp; rect, const Texture&amp; texture, const Font&amp; font, const String&amp; name, const String&amp; desc, int32 count, bool enabled)\n{\nif (enabled)\n{\nrect.draw(ColorF{ 0.3, 0.5, 0.9, 0.8 });\nrect.drawFrame(2, 2, ColorF{ 0.5, 0.7, 1.0 });\nif (rect.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n}\nelse\n{\nrect.draw(ColorF{ 0.0, 0.4 });\nrect.drawFrame(2, 2, ColorF{ 0.5 });\n}\ntexture.scaled(0.5).drawAt(rect.x + 50, rect.y + 50);\nfont(name).draw(30, rect.x + 100, rect.y + 15, Palette::White);\nfont(desc).draw(18, rect.x + 102, rect.y + 60, Palette::White);\nfont(count).draw(50, Arg::rightCenter((rect.x + rect.w - 20), (rect.y + 50)), Palette::White);\nreturn (enabled &amp;&amp; rect.leftClicked());\n}\nvoid Main()\n{\n// \u30af\u30c3\u30ad\u30fc\u306e\u7d75\u6587\u5b57\nconst Texture texture{ U\"\ud83c\udf6a\"_emoji };\n// \u8fb2\u5834\u306e\u7d75\u6587\u5b57\nconst Texture farmEmoji{ U\"\ud83c\udf3e\"_emoji };\n// \u5de5\u5834\u306e\u7d75\u6587\u5b57\nconst Texture factoryEmoji{ U\"\ud83c\udfed\"_emoji };\n// \u30d5\u30a9\u30f3\u30c8\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u30af\u30c3\u30ad\u30fc\u306e\u30af\u30ea\u30c3\u30af\u5186\nconst Circle cookieCircle{ 170, 300, 100 };\n// \u30af\u30c3\u30ad\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\uff08\u500d\u7387\uff09\ndouble cookieScale = 1.5;\n// \u30af\u30c3\u30ad\u30fc\u306e\u500b\u6570\ndouble cookies = 0;\n// \u8fb2\u5834\u306e\u6240\u6709\u6570\nint32 farmCount = 0;\n// \u5de5\u5834\u306e\u6240\u6709\u6570\nint32 factoryCount = 0;\n// \u8fb2\u5834\u306e\u4fa1\u683c\nint32 farmCost = 10;\n// \u5de5\u5834\u306e\u4fa1\u683c\nint32 factoryCost = 100;\nwhile (System::Update())\n{\n// \u30af\u30c3\u30ad\u30fc\u5186\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308c\u3070\nif (cookieCircle.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n// \u30af\u30c3\u30ad\u30fc\u5186\u304c\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (cookieCircle.leftClicked())\n{\ncookieScale = 1.3;\n++cookies;\n}\n// \u30af\u30c3\u30ad\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\u3092\u56de\u5fa9\u3059\u308b\ncookieScale += Scene::DeltaTime();\nif (1.5 &lt; cookieScale)\n{\ncookieScale = 1.5;\n}\n// \u80cc\u666f\u3092\u63cf\u304f\nRect{ 0, 0, 800, 600 }.draw(Arg::top = ColorF{ 0.6, 0.5, 0.3 }, Arg::bottom = ColorF{ 0.2, 0.5, 0.3 });\n// \u30af\u30c3\u30ad\u30fc\u306e\u6570\u3092\u6574\u6570\u3067\u8868\u793a\u3059\u308b\nfont(U\"{:.0f}\"_fmt(cookies)).drawAt(60, 170, 100);\n// \u30af\u30c3\u30ad\u30fc\u3092\u63cf\u753b\u3059\u308b\ntexture.scaled(cookieScale).drawAt(cookieCircle.center);\n// \u8fb2\u5834\u30dc\u30bf\u30f3\nif (Button(Rect{ 340, 40, 420, 100 }, farmEmoji, font, U\"\u30af\u30c3\u30ad\u30fc\u8fb2\u5834\", U\"C{} / 1 CPS\"_fmt(farmCost), farmCount, (farmCost &lt;= cookies)))\n{\ncookies -= farmCost;\n++farmCount;\n}\n// \u5de5\u5834\u30dc\u30bf\u30f3\nif (Button(Rect{ 340, 160, 420, 100 }, factoryEmoji, font, U\"\u30af\u30c3\u30ad\u30fc\u5de5\u5834\", U\"C{} / 10 CPS\"_fmt(factoryCost), factoryCount, (factoryCost &lt;= cookies)))\n{\ncookies -= factoryCost;\n++factoryCount;\n}\n}\n}\n</code></pre>"},{"location":"tutorial/cookie-clicker/#168-\u30af\u30c3\u30ad\u30fc\u306e\u81ea\u52d5\u751f\u7523","title":"16.8 \u30af\u30c3\u30ad\u30fc\u306e\u81ea\u52d5\u751f\u7523","text":"<p>\u30a2\u30a4\u30c6\u30e0\u306e\u6240\u6709\u6570\u306b\u5fdc\u3058\u3066\u30af\u30c3\u30ad\u30fc\u304c\u81ea\u52d5\u3067\u5897\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u30010.1 \u79d2\u3054\u3068\u306b\u3001\u6bce\u79d2\u306e\u30af\u30c3\u30ad\u30fc\u751f\u7523\u91cf\u306e 10% \u3092\u7372\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\n/// @brief \u30a2\u30a4\u30c6\u30e0\u306e\u30dc\u30bf\u30f3\n/// @param rect \u30dc\u30bf\u30f3\u306e\u9818\u57df\n/// @param texture \u30dc\u30bf\u30f3\u306e\u7d75\u6587\u5b57\n/// @param font \u6587\u5b57\u63cf\u753b\u306b\u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\n/// @param name \u30a2\u30a4\u30c6\u30e0\u306e\u540d\u524d\n/// @param desc \u30a2\u30a4\u30c6\u30e0\u306e\u8aac\u660e\n/// @param count \u30a2\u30a4\u30c6\u30e0\u306e\u6240\u6301\u6570\n/// @param enabled \u30dc\u30bf\u30f3\u3092\u62bc\u305b\u308b\u304b\n/// @return \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u5834\u5408 true, \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f false\nbool Button(const Rect&amp; rect, const Texture&amp; texture, const Font&amp; font, const String&amp; name, const String&amp; desc, int32 count, bool enabled)\n{\nif (enabled)\n{\nrect.draw(ColorF{ 0.3, 0.5, 0.9, 0.8 });\nrect.drawFrame(2, 2, ColorF{ 0.5, 0.7, 1.0 });\nif (rect.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n}\nelse\n{\nrect.draw(ColorF{ 0.0, 0.4 });\nrect.drawFrame(2, 2, ColorF{ 0.5 });\n}\ntexture.scaled(0.5).drawAt(rect.x + 50, rect.y + 50);\nfont(name).draw(30, rect.x + 100, rect.y + 15, Palette::White);\nfont(desc).draw(18, rect.x + 102, rect.y + 60, Palette::White);\nfont(count).draw(50, Arg::rightCenter((rect.x + rect.w - 20), (rect.y + 50)), Palette::White);\nreturn (enabled &amp;&amp; rect.leftClicked());\n}\nvoid Main()\n{\n// \u30af\u30c3\u30ad\u30fc\u306e\u7d75\u6587\u5b57\nconst Texture texture{ U\"\ud83c\udf6a\"_emoji };\n// \u8fb2\u5834\u306e\u7d75\u6587\u5b57\nconst Texture farmEmoji{ U\"\ud83c\udf3e\"_emoji };\n// \u5de5\u5834\u306e\u7d75\u6587\u5b57\nconst Texture factoryEmoji{ U\"\ud83c\udfed\"_emoji };\n// \u30d5\u30a9\u30f3\u30c8\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u30af\u30c3\u30ad\u30fc\u306e\u30af\u30ea\u30c3\u30af\u5186\nconst Circle cookieCircle{ 170, 300, 100 };\n// \u30af\u30c3\u30ad\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\uff08\u500d\u7387\uff09\ndouble cookieScale = 1.5;\n// \u30af\u30c3\u30ad\u30fc\u306e\u500b\u6570\ndouble cookies = 0;\n// \u8fb2\u5834\u306e\u6240\u6709\u6570\nint32 farmCount = 0;\n// \u5de5\u5834\u306e\u6240\u6709\u6570\nint32 factoryCount = 0;\n// \u8fb2\u5834\u306e\u4fa1\u683c\nint32 farmCost = 10;\n// \u5de5\u5834\u306e\u4fa1\u683c\nint32 factoryCost = 100;\n// \u30b2\u30fc\u30e0\u306e\u7d4c\u904e\u6642\u9593\u306e\u84c4\u7a4d\ndouble accumulatedTime = 0.0;\nwhile (System::Update())\n{\n// \u30af\u30c3\u30ad\u30fc\u306e\u6bce\u79d2\u306e\u751f\u7523\u91cf (cookies per second) \u3092\u8a08\u7b97\u3059\u308b\nconst int32 cps = (farmCount + factoryCount * 10);\n// \u30b2\u30fc\u30e0\u306e\u7d4c\u904e\u6642\u9593\u3092\u52a0\u7b97\u3059\u308b\naccumulatedTime += Scene::DeltaTime();\n// 0.1 \u79d2\u4ee5\u4e0a\u84c4\u7a4d\u3057\u3066\u3044\u305f\u3089\nif (0.1 &lt;= accumulatedTime)\n{\naccumulatedTime -= 0.1;\n// 0.1 \u79d2\u5206\u306e\u30af\u30c3\u30ad\u30fc\u751f\u7523\u3092\u52a0\u7b97\u3059\u308b\ncookies += (cps * 0.1);\n}\n// \u30af\u30c3\u30ad\u30fc\u5186\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308c\u3070\nif (cookieCircle.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n// \u30af\u30c3\u30ad\u30fc\u5186\u304c\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (cookieCircle.leftClicked())\n{\ncookieScale = 1.3;\n++cookies;\n}\n// \u30af\u30c3\u30ad\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\u3092\u56de\u5fa9\u3059\u308b\ncookieScale += Scene::DeltaTime();\nif (1.5 &lt; cookieScale)\n{\ncookieScale = 1.5;\n}\n// \u80cc\u666f\u3092\u63cf\u304f\nRect{ 0, 0, 800, 600 }.draw(Arg::top = ColorF{ 0.6, 0.5, 0.3 }, Arg::bottom = ColorF{ 0.2, 0.5, 0.3 });\n// \u30af\u30c3\u30ad\u30fc\u306e\u6570\u3092\u6574\u6570\u3067\u8868\u793a\u3059\u308b\nfont(U\"{:.0f}\"_fmt(cookies)).drawAt(60, 170, 100);\n// \u30af\u30c3\u30ad\u30fc\u306e\u751f\u7523\u91cf\u3092\u8868\u793a\u3059\u308b\nfont(U\"\u6bce\u79d2: {}\"_fmt(cps)).drawAt(24, 170, 160);\n// \u30af\u30c3\u30ad\u30fc\u3092\u63cf\u753b\u3059\u308b\ntexture.scaled(cookieScale).drawAt(cookieCircle.center);\n// \u8fb2\u5834\u30dc\u30bf\u30f3\nif (Button(Rect{ 340, 40, 420, 100 }, farmEmoji, font, U\"\u30af\u30c3\u30ad\u30fc\u8fb2\u5834\", U\"C{} / 1 CPS\"_fmt(farmCost), farmCount, (farmCost &lt;= cookies)))\n{\ncookies -= farmCost;\n++farmCount;\n}\n// \u5de5\u5834\u30dc\u30bf\u30f3\nif (Button(Rect{ 340, 160, 420, 100 }, factoryEmoji, font, U\"\u30af\u30c3\u30ad\u30fc\u5de5\u5834\", U\"C{} / 10 CPS\"_fmt(factoryCost), factoryCount, (factoryCost &lt;= cookies)))\n{\ncookies -= factoryCost;\n++factoryCount;\n}\n}\n}\n</code></pre>"},{"location":"tutorial/cookie-clicker/#169-\u5b8c\u6210\u30a2\u30a4\u30c6\u30e0\u306e\u30a4\u30f3\u30d5\u30ec\u3092\u5b9f\u88c5\u3059\u308b","title":"16.9 \uff08\u5b8c\u6210\uff09\u30a2\u30a4\u30c6\u30e0\u306e\u30a4\u30f3\u30d5\u30ec\u3092\u5b9f\u88c5\u3059\u308b","text":"<p>\u30a2\u30a4\u30c6\u30e0\u306e\u6240\u6709\u6570\u304c\u5897\u3048\u305f\u3068\u304d\u306b\u3001\u30a2\u30a4\u30c6\u30e0\u306e\u4fa1\u683c\u304c\u30a4\u30f3\u30d5\u30ec\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\n/// @brief \u30a2\u30a4\u30c6\u30e0\u306e\u30dc\u30bf\u30f3\n/// @param rect \u30dc\u30bf\u30f3\u306e\u9818\u57df\n/// @param texture \u30dc\u30bf\u30f3\u306e\u7d75\u6587\u5b57\n/// @param font \u6587\u5b57\u63cf\u753b\u306b\u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\n/// @param name \u30a2\u30a4\u30c6\u30e0\u306e\u540d\u524d\n/// @param desc \u30a2\u30a4\u30c6\u30e0\u306e\u8aac\u660e\n/// @param count \u30a2\u30a4\u30c6\u30e0\u306e\u6240\u6301\u6570\n/// @param enabled \u30dc\u30bf\u30f3\u3092\u62bc\u305b\u308b\u304b\n/// @return \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u5834\u5408 true, \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f false\nbool Button(const Rect&amp; rect, const Texture&amp; texture, const Font&amp; font, const String&amp; name, const String&amp; desc, int32 count, bool enabled)\n{\nif (enabled)\n{\nrect.draw(ColorF{ 0.3, 0.5, 0.9, 0.8 });\nrect.drawFrame(2, 2, ColorF{ 0.5, 0.7, 1.0 });\nif (rect.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n}\nelse\n{\nrect.draw(ColorF{ 0.0, 0.4 });\nrect.drawFrame(2, 2, ColorF{ 0.5 });\n}\ntexture.scaled(0.5).drawAt(rect.x + 50, rect.y + 50);\nfont(name).draw(30, rect.x + 100, rect.y + 15, Palette::White);\nfont(desc).draw(18, rect.x + 102, rect.y + 60, Palette::White);\nfont(count).draw(50, Arg::rightCenter((rect.x + rect.w - 20), (rect.y + 50)), Palette::White);\nreturn (enabled &amp;&amp; rect.leftClicked());\n}\nvoid Main()\n{\n// \u30af\u30c3\u30ad\u30fc\u306e\u7d75\u6587\u5b57\nconst Texture texture{ U\"\ud83c\udf6a\"_emoji };\n// \u8fb2\u5834\u306e\u7d75\u6587\u5b57\nconst Texture farmEmoji{ U\"\ud83c\udf3e\"_emoji };\n// \u5de5\u5834\u306e\u7d75\u6587\u5b57\nconst Texture factoryEmoji{ U\"\ud83c\udfed\"_emoji };\n// \u30d5\u30a9\u30f3\u30c8\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u30af\u30c3\u30ad\u30fc\u306e\u30af\u30ea\u30c3\u30af\u5186\nconst Circle cookieCircle{ 170, 300, 100 };\n// \u30af\u30c3\u30ad\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\uff08\u500d\u7387\uff09\ndouble cookieScale = 1.5;\n// \u30af\u30c3\u30ad\u30fc\u306e\u500b\u6570\ndouble cookies = 0;\n// \u8fb2\u5834\u306e\u6240\u6709\u6570\nint32 farmCount = 0;\n// \u5de5\u5834\u306e\u6240\u6709\u6570\nint32 factoryCount = 0;\n// \u8fb2\u5834\u306e\u4fa1\u683c\nint32 farmCost = 10;\n// \u5de5\u5834\u306e\u4fa1\u683c\nint32 factoryCost = 100;\n// \u30b2\u30fc\u30e0\u306e\u7d4c\u904e\u6642\u9593\u306e\u84c4\u7a4d\ndouble accumulatedTime = 0.0;\nwhile (System::Update())\n{\n// \u30af\u30c3\u30ad\u30fc\u306e\u6bce\u79d2\u306e\u751f\u7523\u91cf (cookies per second) \u3092\u8a08\u7b97\u3059\u308b\nconst int32 cps = (farmCount + factoryCount * 10);\n// \u30b2\u30fc\u30e0\u306e\u7d4c\u904e\u6642\u9593\u3092\u52a0\u7b97\u3059\u308b\naccumulatedTime += Scene::DeltaTime();\n// 0.1 \u79d2\u4ee5\u4e0a\u84c4\u7a4d\u3057\u3066\u3044\u305f\u3089\nif (0.1 &lt;= accumulatedTime)\n{\naccumulatedTime -= 0.1;\n// 0.1 \u79d2\u5206\u306e\u30af\u30c3\u30ad\u30fc\u751f\u7523\u3092\u52a0\u7b97\u3059\u308b\ncookies += (cps * 0.1);\n}\n// \u8fb2\u5834\u306e\u4fa1\u683c\u3092\u8a08\u7b97\u3059\u308b\nfarmCost = 10 + (farmCount * 10);\n// \u5de5\u5834\u306e\u4fa1\u683c\u3092\u8a08\u7b97\u3059\u308b\nfactoryCost = 100 + (factoryCount * 100);\n// \u30af\u30c3\u30ad\u30fc\u5186\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308c\u3070\nif (cookieCircle.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n// \u30af\u30c3\u30ad\u30fc\u5186\u304c\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (cookieCircle.leftClicked())\n{\ncookieScale = 1.3;\n++cookies;\n}\n// \u30af\u30c3\u30ad\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\u3092\u56de\u5fa9\u3059\u308b\ncookieScale += Scene::DeltaTime();\nif (1.5 &lt; cookieScale)\n{\ncookieScale = 1.5;\n}\n// \u80cc\u666f\u3092\u63cf\u304f\nRect{ 0, 0, 800, 600 }.draw(Arg::top = ColorF{ 0.6, 0.5, 0.3 }, Arg::bottom = ColorF{ 0.2, 0.5, 0.3 });\n// \u30af\u30c3\u30ad\u30fc\u306e\u6570\u3092\u6574\u6570\u3067\u8868\u793a\u3059\u308b\nfont(U\"{:.0f}\"_fmt(cookies)).drawAt(60, 170, 100);\n// \u30af\u30c3\u30ad\u30fc\u306e\u751f\u7523\u91cf\u3092\u8868\u793a\u3059\u308b\nfont(U\"\u6bce\u79d2: {}\"_fmt(cps)).drawAt(24, 170, 160);\n// \u30af\u30c3\u30ad\u30fc\u3092\u63cf\u753b\u3059\u308b\ntexture.scaled(cookieScale).drawAt(cookieCircle.center);\n// \u8fb2\u5834\u30dc\u30bf\u30f3\nif (Button(Rect{ 340, 40, 420, 100 }, farmEmoji, font, U\"\u30af\u30c3\u30ad\u30fc\u8fb2\u5834\", U\"C{} / 1 CPS\"_fmt(farmCost), farmCount, (farmCost &lt;= cookies)))\n{\ncookies -= farmCost;\n++farmCount;\n}\n// \u5de5\u5834\u30dc\u30bf\u30f3\nif (Button(Rect{ 340, 160, 420, 100 }, factoryEmoji, font, U\"\u30af\u30c3\u30ad\u30fc\u5de5\u5834\", U\"C{} / 10 CPS\"_fmt(factoryCost), factoryCount, (factoryCost &lt;= cookies)))\n{\ncookies -= factoryCost;\n++factoryCount;\n}\n}\n}\n</code></pre>"},{"location":"tutorial/emoji/","title":"10. \u7d75\u6587\u5b57\u3092\u63cf\u304f","text":"<p>\u7d75\u6587\u5b57\u3092\u63cf\u304f\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial/emoji/#101-\u7d75\u6587\u5b57\u3092\u6307\u5b9a\u3057\u305f\u5834\u6240\u306b\u63cf\u304f","title":"10.1 \u7d75\u6587\u5b57\u3092\u6307\u5b9a\u3057\u305f\u5834\u6240\u306b\u63cf\u304f","text":"<p>\u7d75\u6587\u5b57\u3092\u81ea\u7531\u306a\u5834\u6240\u306b\u63cf\u304f\u306b\u306f\u3001\u7d75\u6587\u5b57\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\uff08<code>Texture</code> \u30af\u30e9\u30b9\uff09\u3092\u4f5c\u6210\u3057\u3001\u305d\u306e\u30e1\u30f3\u30d0\u95a2\u6570 <code>.drawAt()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p>\u307e\u305a\u3001<code>Texture \u5909\u6570\u540d{ U\"\u7d75\u6587\u5b57\"_emoji };</code> \u3067\u7d75\u6587\u5b57\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4f5c\u6210\u306f\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u305f\u3081\u3001\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d\u3067\u884c\u3044\u307e\u3059\u3002</p> <p>\u4f5c\u6210\u3057\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u753b\u9762\u306b\u8868\u793a\u3059\u308b\u306b\u306f\u3001<code>.drawAt(x, y)</code> \u307e\u305f\u306f <code>.drawAt(pos)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u6307\u5b9a\u3057\u305f\u5ea7\u6a19\u3092\u4e2d\u5fc3\u3068\u3057\u3066\u7d75\u6587\u5b57\u304c\u63cf\u304b\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture emoji1{ U\"\ud83d\udc08\"_emoji };\nconst Texture emoji2{ U\"\ud83c\udf4e\"_emoji };\nwhile (System::Update())\n{\nemoji1.drawAt(100, 100);\nemoji2.drawAt(200, 300);\nemoji1.drawAt(400, 300);\nemoji2.drawAt(Cursor::Pos());\n}\n}\n</code></pre> <p>\u7d75\u6587\u5b57\u3092\u63a2\u3059</p> <ul> <li>\u7d75\u6587\u5b57\u306e\u7a2e\u985e\u306f emojipedia  \u3067\u63a2\u3059\u3068\u4fbf\u5229\u3067\u3059\u3002\u5168\u90e8\u3067 3700 \u7a2e\u985e\u4ee5\u4e0a\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</li> <li>Windows \u306e\u5834\u5408\u306f\u3001Win+. \u3067\u51fa\u3066\u304f\u308b\u3001OS \u6a19\u6e96\u306e\u7d75\u6587\u5b57\u5165\u529b\u30e1\u30cb\u30e5\u30fc\u3082\u4f7f\u3048\u307e\u3059\u3002</li> </ul>"},{"location":"tutorial/emoji/#102-\u7d75\u6587\u5b57\u306e\u5927\u304d\u3055\u3092\u5909\u3048\u3066\u63cf\u304f","title":"10.2 \u7d75\u6587\u5b57\u306e\u5927\u304d\u3055\u3092\u5909\u3048\u3066\u63cf\u304f","text":"<p>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7d75\u6587\u5b57\u306e\u5927\u304d\u3055\u306f\u4f59\u767d\uff08\u900f\u660e\u90e8\u5206\uff09\u3082\u542b\u3081\u3066 136x128 \u30d4\u30af\u30bb\u30eb\u3067\u3059\u3002<code>.drawAt(x, y)</code> \u306e\u524d\u306b <code>.scaled(s)</code> \u3092\u631f\u3080\u3053\u3068\u3067\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u304c <code>s</code> \u500d\u62e1\u5927\u7e2e\u5c0f\u3055\u308c\u307e\u3059\u3002</p> <p>\u4f8b\u3048\u3070\u3001<code>0.5</code> \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u7d75\u6587\u5b57\u306e\u5927\u304d\u3055\u304c 136x128 \u306e\u534a\u5206\u306e 68x64 \u3067\u63cf\u304b\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture emoji1{ U\"\ud83d\udc08\"_emoji };\nconst Texture emoji2{ U\"\ud83c\udf4e\"_emoji };\nwhile (System::Update())\n{\nemoji1.scaled(0.6).drawAt(100, 100);\nemoji2.scaled(0.3).drawAt(200, 300);\nemoji1.drawAt(400, 300);\n}\n}\n</code></pre>"},{"location":"tutorial/emoji/#103-\u7d75\u6587\u5b57\u3092\u56de\u8ee2\u3055\u305b\u3066\u63cf\u304f","title":"10.3 \u7d75\u6587\u5b57\u3092\u56de\u8ee2\u3055\u305b\u3066\u63cf\u304f","text":"<p><code>.drawAt(x, y)</code> \u306e\u524d\u306b <code>.rotated(angle)</code> \u3092\u631f\u3080\u3068\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u304c\u6642\u8a08\u56de\u308a\u306b <code>angle</code> \u5ea6\u56de\u8ee2\u3057\u307e\u3059\u3002<code>angle</code> \u306f 1 \u5468 360\u00b0 \u3092 2\u03c0 \u3068\u3059\u308b\u30e9\u30b8\u30a2\u30f3\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002<code>45_deg</code>, <code>90_deg</code> \u306e\u3088\u3046\u306b <code>_deg</code> \u3092\u4ed8\u3051\u3066\u8868\u8a18\u3059\u308c\u3070\u3001\u5ea6\u6570\u6cd5\u306e\u89d2\u5ea6\u3092\u30e9\u30b8\u30a2\u30f3\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u307e\u3059\u3002</p> _deg \u8a18\u6cd5 \u30e9\u30b8\u30a2\u30f3 <code>0_deg</code> 0.0 <code>45_deg</code> 0.78539816339 <code>90_deg</code> 1.57079632679 <code>180_deg</code> 3.14159265359 <code>360_deg</code> 6.28318530718 <p>\u4f8b\u3048\u3070\u3001<code>10_deg</code> \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u7d75\u6587\u5b57\u304c\u6642\u8a08\u56de\u308a\u306b 10 \u5ea6\u56de\u8ee2\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture emoji1{ U\"\ud83d\udc08\"_emoji };\nconst Texture emoji2{ U\"\ud83c\udf4e\"_emoji };\nwhile (System::Update())\n{\nemoji1.rotated(10_deg).drawAt(100, 100);\nemoji2.rotated(180_deg).drawAt(200, 300);\nemoji1.rotated(45_deg).drawAt(400, 300);\n}\n}\n</code></pre>"},{"location":"tutorial/emoji/#104-\u7d75\u6587\u5b57\u3092\u5de6\u53f3\u53cd\u8ee2\u3055\u305b\u3066\u63cf\u304f","title":"10.4 \u7d75\u6587\u5b57\u3092\u5de6\u53f3\u53cd\u8ee2\u3055\u305b\u3066\u63cf\u304f","text":"<p><code>.drawAt(x, y)</code> \u306e\u524d\u306b <code>.mirrored(mirror)</code> \u3092\u631f\u3080\u3068\u3001<code>mirror</code> \u304c <code>true</code> \u306e\u3068\u304d\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u304c\u5de6\u53f3\u53cd\u8ee2\u3055\u308c\u307e\u3059\u3002<code>false</code> \u306e\u5834\u5408\u306f\u5143\u306e\u5411\u304d\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002</p> <p>\u6b21\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e X \u5ea7\u6a19\u3092 <code>Cursor::Pos().x</code> \u306b\u3088\u3063\u3066\u53d6\u5f97\u3057\u3001\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u7d75\u6587\u5b57\u306e\u53f3\u5074\u306b\u3042\u308b\u5834\u5408\u3001\u7d75\u6587\u5b57\u3092\u5de6\u53f3\u53cd\u8ee2\u3057\u3066\uff08\u732b\u3092\u53f3\u306b\u5411\u3051\u3066\uff09\u63cf\u753b\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture emoji1{ U\"\ud83d\udc08\"_emoji };\nwhile (System::Update())\n{\nconst int32 cursorX = Cursor::Pos().x;\nemoji1.mirrored(400 &lt;= cursorX).drawAt(400, 300);\n}\n}\n</code></pre>"},{"location":"tutorial/emoji/#\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","title":"\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"<ul> <li> \u7d75\u6587\u5b57\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4f5c\u6210\u306f\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u305f\u3081\u3001\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d\u3067\u884c\u3046\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> \u30c6\u30af\u30b9\u30c1\u30e3\u3092 <code>.drawAt(x, y)</code>, <code>.drawAt(pos)</code> \u3092\u4f7f\u3063\u3066\u6307\u5b9a\u3057\u305f\u5834\u6240\u306b\u63cf\u304f\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u30c6\u30af\u30b9\u30c1\u30e3\u3092 <code>.scaled(s)</code> \u3092\u4f7f\u3063\u3066\u62e1\u5927\u7e2e\u5c0f\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u30c6\u30af\u30b9\u30c1\u30e3\u3092 <code>.rotated(angle)</code> \u3092\u4f7f\u3063\u3066\u56de\u8ee2\u3055\u305b\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u5ea6\u6570\u6cd5\u3092\u30e9\u30b8\u30a2\u30f3\u306b\u5909\u63db\u3059\u308b <code>_deg</code> \u3092\u4f7f\u3046\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u30c6\u30af\u30b9\u30c1\u30e3\u3092 <code>.mirrored(mirrored)</code> \u3092\u4f7f\u3063\u3066\u5de6\u53f3\u53cd\u8ee2\u3055\u305b\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> </ul>"},{"location":"tutorial/hello/","title":"1. \u306f\u3058\u3081\u3066\u306e Siv3D","text":"<p>Siv3D \u306e\u57fa\u672c\u30b5\u30f3\u30d7\u30eb\u306e\u6539\u9020\u3092\u901a\u3057\u3066 Siv3D \u306e\u96f0\u56f2\u6c17\u3092\u4f53\u9a13\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial/hello/#11-\u57fa\u672c\u306e\u30b5\u30f3\u30d7\u30eb","title":"1.1 \u57fa\u672c\u306e\u30b5\u30f3\u30d7\u30eb","text":"<p>Siv3D \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001\u6700\u521d\u306b\u6b21\u306e\u3088\u3046\u306a\u30b5\u30f3\u30d7\u30eb\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p></p> <p>\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u901a\u3057\u3066\u3001\u6b21\u306e\u3088\u3046\u306a Siv3D \u306e\u6a5f\u80fd\u3092\u4f53\u9a13\u3067\u304d\u307e\u3059\u3002</p> <ul> <li>\u80cc\u666f\u8272\u3092\u5909\u66f4\u3059\u308b</li> <li>\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u63cf\u753b\u3059\u308b</li> <li>\u56f3\u5f62\u3092\u63cf\u753b\u3059\u308b</li> <li>\u6587\u7ae0\u3092\u8868\u793a\u3059\u308b</li> <li>\u30dc\u30bf\u30f3\u3084\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3001\u30b9\u30e9\u30a4\u30c0\u30fc\u3092\u8868\u793a\u3059\u308b</li> <li>\u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\uff08Left \u3068 Right \u3067\u30d7\u30ec\u30a4\u30e4\u30fc \ud83e\udd96 \u304c\u79fb\u52d5\u3057\u307e\u3059\uff09</li> </ul>"},{"location":"tutorial/hello/#12-\u30b5\u30f3\u30d7\u30eb\u3092\u6539\u9020\u3059\u308b","title":"1.2 \u30b5\u30f3\u30d7\u30eb\u3092\u6539\u9020\u3059\u308b","text":"\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u80cc\u666f\u306e\u8272\u3092\u8a2d\u5b9a\u3059\u308b | Set the background color\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 }); // (1)!\n// \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b | Create a texture from an image file\nconst Texture texture{ U\"example/windmill.png\" };\n// \u7d75\u6587\u5b57\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b | Create a texture from an emoji\nconst Texture emoji{ U\"\ud83e\udd96\"_emoji }; // (2)!\n// \u592a\u6587\u5b57\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b | Create a bold font with MSDF method\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u30c6\u30ad\u30b9\u30c8\u306b\u542b\u307e\u308c\u308b\u7d75\u6587\u5b57\u306e\u305f\u3081\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u3001font \u306b\u8ffd\u52a0\u3059\u308b | Create a font for emojis in text and add it to font as a fallback\nconst Font emojiFont{ 48, Typeface::ColorEmoji };\nfont.addFallback(emojiFont);\n// \u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u56de\u6570 | Number of button presses\nint32 count = 0;\n// \u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u306e\u72b6\u614b | Checkbox state\nbool checked = false;\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u79fb\u52d5\u30b9\u30d4\u30fc\u30c9 | Player's movement speed\ndouble speed = 200.0;\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u306e X \u5ea7\u6a19 | Player's X position\ndouble playerPosX = 400;\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u53f3\u3092\u5411\u3044\u3066\u3044\u308b\u304b | Whether player is facing right\nbool isPlayerFacingRight = true;\nwhile (System::Update())\n{\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304f | Draw the texture\ntexture.draw(20, 20); // (3)!\n// \u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f | Draw text\nfont(U\"Hello, Siv3D!\ud83c\udfae\").draw(64, Vec2{ 20, 340 }, ColorF{ 0.2, 0.4, 0.8 }); // (4)!\n// \u6307\u5b9a\u3057\u305f\u7bc4\u56f2\u5185\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f | Draw text within a specified area\nfont(U\"Siv3D (\u30b7\u30d6\u30b9\u30ea\u30fc\u30c7\u30a3\u30fc) \u306f\u3001\u30b2\u30fc\u30e0\u3084\u30a2\u30d7\u30ea\u3092\u697d\u3057\u304f\u7c21\u5358\u306a C++ \u30b3\u30fc\u30c9\u3067\u958b\u767a\u3067\u304d\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\")\n.draw(18, Rect{ 20, 430, 480, 200 }, Palette::Black);\n// \u9577\u65b9\u5f62\u3092\u63cf\u304f | Draw a rectangle\nRect{ 540, 20, 80, 80 }.draw();\n// \u89d2\u4e38\u9577\u65b9\u5f62\u3092\u63cf\u304f | Draw a rounded rectangle\nRoundRect{ 680, 20, 80, 200, 20 }.draw(ColorF{ 0.0, 0.4, 0.6 });\n// \u5186\u3092\u63cf\u304f | Draw a circle\nCircle{ 580, 180, 40 }.draw(Palette::Seagreen);\n// \u77e2\u5370\u3092\u63cf\u304f | Draw an arrow\nLine{ 540, 330, 760, 260 }.drawArrow(8, SizeF{ 20, 20 }, ColorF{ 0.4 });\n// \u534a\u900f\u660e\u306e\u5186\u3092\u63cf\u304f | Draw a semi-transparent circle\nCircle{ Cursor::Pos(), 40 }.draw(ColorF{ 1.0, 0.0, 0.0, 0.5 }); // (5)!\n// \u30dc\u30bf\u30f3 | Button\nif (SimpleGUI::Button(U\"count: {}\"_fmt(count), Vec2{ 520, 370 }, 120, (checked == false)))\n{\n// \u30ab\u30a6\u30f3\u30c8\u3092\u5897\u3084\u3059 | Increase the count\n++count;\n}\n// \u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9 | Checkbox\nSimpleGUI::CheckBox(checked, U\"Lock \\U000F033E\", Vec2{ 660, 370 }, 120);\n// \u30b9\u30e9\u30a4\u30c0\u30fc | Slider\nSimpleGUI::Slider(U\"speed: {:.1f}\"_fmt(speed), speed, 100, 400, Vec2{ 520, 420 }, 140, 120);\n// \u5de6\u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089 | If left key is pressed\nif (KeyLeft.pressed()) // (6)!\n{\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u5de6\u306b\u79fb\u52d5\u3059\u308b | Player moves left\nplayerPosX = Max((playerPosX - speed * Scene::DeltaTime()), 60.0);\nisPlayerFacingRight = false;\n}\n// \u53f3\u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089 | If right key is pressed\nif (KeyRight.pressed()) // (7)!\n{\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u53f3\u306b\u79fb\u52d5\u3059\u308b | Player moves right\nplayerPosX = Min((playerPosX + speed * Scene::DeltaTime()), 740.0);\nisPlayerFacingRight = true;\n}\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u63cf\u304f | Draw the player\nemoji.scaled(0.75).mirrored(isPlayerFacingRight).drawAt(playerPosX, 540); // (8)!\n}\n}\n</code></pre> <ol> <li>(R, G, B) = (0.6, 0.8, 0.7) \u3067\u30b7\u30fc\u30f3\u306e\u80cc\u666f\u8272\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u6570\u5b57\u3092 0.0\uff5e1.0 \u306e\u7bc4\u56f2\u3067\u5909\u66f4\u3057\u3066\u3001\u80cc\u666f\u8272\u3092\u5909\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002</li> <li>\u7d75\u6587\u5b57\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3057\u3066\u3044\u307e\u3059\u3002\ud83e\udd96 \u3092 \ud83d\udc15 \u3084 \ud83d\udc27, \ud83c\udf54 \u306b\u5909\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u7d75\u6587\u5b57\u306e\u524d\u5f8c\u306b\u4f59\u5206\u306a\u7a7a\u767d\u3092\u633f\u5165\u3057\u306a\u3044\u3088\u3046\u6c17\u3092\u4ed8\u3051\u3066\u304f\u3060\u3055\u3044\u3002</li> <li>\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u4f5c\u6210\u3057\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u3001\u753b\u9762\u4e0a\u306e\u4f4d\u7f6e (x, y) = (20, 20) \u306b\u63cf\u753b\u3057\u3066\u3044\u307e\u3059\u3002\u6570\u5b57\u3092\u5909\u3048\u3066\u3001\u63cf\u304b\u308c\u308b\u4f4d\u7f6e\u3092\u5909\u66f4\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</li> <li>\u300cHello, Siv3D!\ud83c\udfae\u300d\u3068\u3044\u3046\u6587\u7ae0\u3092\u753b\u9762\u306b\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u6587\u7ae0\u3092\u66f8\u304d\u63db\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002<code>.draw()</code> \u306e\u4e2d\u306e <code>64</code> \u306f\u6587\u5b57\u306e\u5927\u304d\u3055\u3067\u3059\u3002\u5c0f\u3055\u304f\u3057\u305f\u308a\u5927\u304d\u304f\u3057\u305f\u308a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</li> <li>\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306b\u8ffd\u968f\u3059\u308b\u5186\u3092\u3001\u534a\u5f84 40 \u30d4\u30af\u30bb\u30eb\u3001\u8272 (R, G, B, \u4e0d\u900f\u660e\u5ea6) = (1.0, 0.0, 0.0, 0.5) \u3067\u63cf\u3044\u3066\u3044\u307e\u3059\u3002\u5186\u306e\u534a\u5f84\u3084\u8272\u3001\u4e0d\u900f\u660e\u5ea6\u3092\u5909\u66f4\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</li> <li>Left \u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u5de6\u306b\u79fb\u52d5\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002<code>KeyLeft</code> \u3092 <code>KeyA</code> \u306b\u5909\u3048\u3066\u3001A \u30ad\u30fc\u3067\u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</li> <li>Right \u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u53f3\u306b\u79fb\u52d5\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002<code>KeyRight</code> \u3092 <code>KeyD</code> \u306b\u5909\u3048\u3066\u3001D \u30ad\u30fc\u3067\u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</li> <li><code>.scaled(0.75)</code> \u3067\u7d75\u6587\u5b57\u306e\u30b5\u30a4\u30ba\u3092 75% \u306b\u7e2e\u5c0f\u3057\u3066\u3044\u307e\u3059\u3002\u6570\u5b57\u3092\u5909\u3048\u3066\u3001\u7d75\u6587\u5b57\u306e\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</li> </ol> <p>\u4e0a\u8a18\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u30af\u30ea\u30c3\u30af\u3067\u5c55\u958b\u3059\u308b\u3068\u30018 \u7b87\u6240\u306b (+) \u30de\u30fc\u30af\u304c\u3042\u308a\u307e\u3059\u3002\u30af\u30ea\u30c3\u30af\u3057\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u308b\u8981\u7d20\u3092\u898b\u3064\u3051\u3001\u624b\u5143\u306e Siv3D \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6539\u9020\u306b\u6311\u6226\u3057\u307e\u3057\u3087\u3046\u3002</p> <p>Visual Studio \u3084 Xcode \u3067\u5909\u66f4\u3057\u305f\u30b3\u30fc\u30c9\u3092\u30d3\u30eb\u30c9\u3059\u308b\u3068\u304d\u3001\u4ee5\u524d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5b9f\u884c\u4e2d\u306e\u307e\u307e\u3060\u3068\u3001\u30d3\u30eb\u30c9\u306b\u5931\u6557\u3057\u307e\u3059\u3002\u5b9f\u884c\u4e2d\u306e Siv3D \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3059\u308b\u306b\u306f\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\u304b\u3001Esc \u3092\u62bc\u3057\u307e\u3059\u3002</p> \u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9 <p>Visual Studio \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u6761\u4ef6\u4e0b\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u305f\u307e\u307e\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u3092\u9069\u7528\u3059\u308b\u300c\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u300d\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u306e\u65b9\u6cd5\u3092\u77e5\u308a\u305f\u3044\u5834\u5408\u306f \u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"tutorial/hello/#\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","title":"\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"<ul> <li> Siv3D \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5909\u66f4\u3057\u3001\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u3092\u7406\u89e3\u3057\u305f</li> <li> \u80cc\u666f\u306e\u8272\u3092\u5909\u66f4\u3067\u304d\u305f</li> <li> \u7d75\u6587\u5b57\u3092\u5909\u66f4\u3067\u304d\u305f</li> <li> \u753b\u50cf\u304c\u8868\u793a\u3055\u308c\u308b\u4f4d\u7f6e\u3092\u5909\u66f4\u3067\u304d\u305f</li> <li> \u6587\u7ae0\u3092\u5909\u66f4\u3067\u304d\u305f</li> <li> \u5186\u306e\u534a\u5f84\u3084\u8272\u3001\u4e0d\u900f\u660e\u5ea6\u3092\u5909\u66f4\u3067\u304d\u305f</li> <li> \u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u64cd\u4f5c\u3059\u308b\u30ad\u30fc\u3092\u5909\u66f4\u3067\u304d\u305f</li> <li> \u7d75\u6587\u5b57\u306e\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3067\u304d\u305f</li> </ul>"},{"location":"tutorial/keyboard/","title":"13. \u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u3092\u6271\u3046","text":"<p>\u30ad\u30fc\u30dc\u30fc\u30c9\u306e\u5165\u529b\u3092\u8abf\u3079\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial/keyboard/#131-\u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u304b\u8abf\u3079\u308b","title":"13.1 \u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u304b\u8abf\u3079\u308b","text":"<p><code>if (\u30ad\u30fc\u540d.down())</code> \u3067\u3001\u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u304b\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> \u4e3b\u306a\u30ad\u30fc\u540d <ul> <li>A , B , C , ... \u306f <code>KeyA</code>, <code>KeyB</code>, <code>KeyC</code> , ...</li> <li>1 , 2 , 3 , ... \u306f <code>Key1</code>, <code>Key2</code>, <code>Key3</code>, ...</li> <li>F1 , F2 , F3 , ... \u306f <code>KeyF1</code>, <code>KeyF2</code>, <code>KeyF3</code>, ...</li> <li>Up , Down , Left , Right \u306f <code>KeyUp</code>, <code>KeyDown</code>, <code>KeyLeft</code>, <code>KeyRight</code></li> <li>Space \u306f <code>KeySpace</code></li> <li>Enter \u306f <code>KeyEnter</code></li> <li>Backspace \u306f <code>KeyBackspace</code></li> <li>Tab \u30ad\u30fc\u306f <code>KeyTab</code></li> <li>Esc \u30ad\u30fc\u306f <code>KeyEscape</code></li> <li>Page Up , Page Down \u306f <code>KeyPageUp</code>, <code>KeyPageDown</code></li> <li>Del \u30ad\u30fc\u306f <code>KeyDelete</code></li> <li>Numpad \u306e Num 0 , Num 1 , Num 2 , ... \u306f <code>KeyNum0</code>, <code>KeyNum1</code>, <code>KeyNum2</code>, ...</li> <li>Shift \u306f <code>KeyShift</code></li> <li>Left Shift (\u5de6\u30b7\u30d5\u30c8), Right Shift (\u53f3\u30b7\u30d5\u30c8) \u306f <code>KeyLShift</code>, <code>KeyRShift</code></li> <li>Ctrl \u306f <code>KeyControl</code></li> <li>(macOS) Cmd \u306f <code>KeyCommand</code></li> <li>, , . , / \u30ad\u30fc\u306f <code>KeyComma</code>, <code>KeyPeriod</code>, <code>KeySlash</code></li> </ul> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nwhile (System::Update())\n{\n// A \u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u3089\nif (KeyA.down())\n{\nPrint &lt;&lt; U\"A\";\n}\n// \u30b9\u30da\u30fc\u30b9\u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u3089\nif (KeySpace.down())\n{\nPrint &lt;&lt; U\"Space\";\n}\n// 1 \u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u3089\nif (Key1.down())\n{\nPrint &lt;&lt; U\"1\";\n}\t}\n}\n</code></pre>"},{"location":"tutorial/keyboard/#132-\u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u308b\u304b\u8abf\u3079\u308b","title":"13.2 \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u308b\u304b\u8abf\u3079\u308b","text":"<p><code>if (\u30ad\u30fc\u540d.pressed())</code> \u3067\u3001\u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>.down()</code> \u306f\u62bc\u3055\u308c\u305f\u77ac\u9593\u306e\u307f\u3001<code>.pressed()</code> \u306f\u62bc\u3055\u308c\u3066\u3044\u308b\u9593\u305a\u3063\u3068 <code>true</code> \u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nwhile (System::Update())\n{\n// A \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\nif (KeyA.pressed())\n{\nPrint &lt;&lt; U\"A\";\n}\n// \u30b9\u30da\u30fc\u30b9\u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\nif (KeySpace.pressed())\n{\nPrint &lt;&lt; U\"Space\";\n}\n// 1 \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\nif (Key1.pressed())\n{\nPrint &lt;&lt; U\"1\";\n}\t}\n}\n</code></pre>"},{"location":"tutorial/keyboard/#133-\u30ad\u30fc\u3067\u5de6\u53f3\u306b\u79fb\u52d5\u3059\u308b","title":"13.3 \u30ad\u30fc\u3067\u5de6\u53f3\u306b\u79fb\u52d5\u3059\u308b","text":"<p>\u77e2\u5370\u30ad\u30fc\u3092\u4f7f\u3063\u3066\u7d75\u6587\u5b57\u3092\u5de6\u53f3\u306b\u79fb\u52d5\u3055\u305b\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture emoji{ U\"\u2603\ufe0f\"_emoji };\n// \u79fb\u52d5\u306e\u901f\u3055\uff08\u30d4\u30af\u30bb\u30eb / \u79d2\uff09\nconst double speed = 200;\ndouble x = 400;\nwhile (System::Update())\n{\nconst double deltaTime = Scene::DeltaTime();\n// \u2190 \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\nif (KeyLeft.pressed())\n{\nx -= (speed * deltaTime);\n}\n// \u2192 \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\nif (KeyRight.pressed())\n{\nx += (speed * deltaTime);\n}\nemoji.drawAt(x, 300);\n}\n}\n</code></pre>"},{"location":"tutorial/keyboard/#134-\u30ad\u30fc\u3067\u4e0a\u4e0b\u5de6\u53f3\u306b\u79fb\u52d5\u3059\u308b","title":"13.4 \u30ad\u30fc\u3067\u4e0a\u4e0b\u5de6\u53f3\u306b\u79fb\u52d5\u3059\u308b","text":"<p>\u77e2\u5370\u30ad\u30fc\u3092\u4f7f\u3063\u3066\u7d75\u6587\u5b57\u3092\u4e0a\u4e0b\u5de6\u53f3\u306b\u79fb\u52d5\u3055\u305b\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002<code>x</code>, <code>y</code> \u306e 2 \u3064\u306e\u5909\u6570\u3092\u4f7f\u3046\u4ee3\u308f\u308a\u306b <code>Vec2</code> \u578b\u306e\u5909\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture emoji{ U\"\u2603\ufe0f\"_emoji };\n// \u79fb\u52d5\u306e\u901f\u3055\uff08\u30d4\u30af\u30bb\u30eb / \u79d2\uff09\nconst double speed = 200;\nVec2 pos{ 400, 300 };\nwhile (System::Update())\n{\nconst double deltaTime = Scene::DeltaTime();\n// \u2190 \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\nif (KeyLeft.pressed())\n{\npos.x -= (speed * deltaTime);\n}\n// \u2192 \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\nif (KeyRight.pressed())\n{\npos.x += (speed * deltaTime);\n}\n// \u2191 \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\nif (KeyUp.pressed())\n{\npos.y -= (speed * deltaTime);\n}\n// \u2193 \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\nif (KeyDown.pressed())\n{\npos.y += (speed * deltaTime);\n}\nemoji.drawAt(pos);\n}\n}\n</code></pre>"},{"location":"tutorial/keyboard/#\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","title":"\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"<ul> <li> \u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u304b\u8abf\u3079\u308b\u306b\u306f <code>if (\u30ad\u30fc\u540d.down())</code> \u3092\u4f7f\u3046\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u308b\u304b\u8abf\u3079\u308b\u306b\u306f <code>if (\u30ad\u30fc\u540d.pressed())</code> \u3092\u4f7f\u3046\u3053\u3068\u3092\u5b66\u3093\u3060</li> </ul>"},{"location":"tutorial/mainloop/","title":"3. Main \u95a2\u6570\u306e\u69cb\u6210","text":"<p>\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u3084\u305d\u306e\u524d\u5f8c\u306b\u5b9f\u884c\u3055\u308c\u308b\u51e6\u7406\u306e\u69cb\u6210\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial/mainloop/#31-main-\u95a2\u6570\u306e-3-\u3064\u306e\u30d1\u30fc\u30c8","title":"3.1 Main \u95a2\u6570\u306e 3 \u3064\u306e\u30d1\u30fc\u30c8","text":"<p><code>Main()</code> \u95a2\u6570\u306f 3 \u3064\u306e\u30d1\u30fc\u30c8\u306b\u5206\u3051\u3089\u308c\u307e\u3059\u3002</p> \u30d1\u30fc\u30c8 \u8aac\u660e \u3084\u308b\u3053\u3068 \u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u8d77\u52d5\u3057\u305f\u3068\u304d\u306b\u307e\u305a\u5b9f\u884c\u3055\u308c\u308b\u90e8\u5206 \u753b\u9762\u306e\u8a2d\u5b9a\u3084\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4f5c\u6210 \u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u4e2d \u6bce\u79d2\u6570\u5341\u56de\u4ee5\u4e0a\u7e70\u308a\u8fd4\u3055\u308c\u308b\u30eb\u30fc\u30d7\u306e\u4e2d\u306e\u90e8\u5206 \u5165\u529b\u51e6\u7406\u3084\u63cf\u753b \u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u5f8c \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7d42\u4e86\u3059\u308b\u3068\u304d\u306b\u5b9f\u884c\u3055\u308c\u308b\u90e8\u5206 \u3068\u304f\u306b\u306a\u3057 \u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u4e2d\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u5f8c <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n}\n}\n</code></pre> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n}\n}\n</code></pre> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial/mainloop/#32-\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u5468\u671f","title":"3.2 \u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u5468\u671f","text":"<p>\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u30e2\u30cb\u30bf \ud83d\udda5\ufe0f \u306e\u8868\u793a\u5468\u671f\uff08\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30ec\u30fc\u30c8\uff09\u306b\u5408\u308f\u305b\u3066\u7e70\u308a\u8fd4\u3055\u308c\u308b\u30eb\u30fc\u30d7\u3067\u3059\u3002\u4e00\u822c\u306b\u6bce\u79d2 60 \u56de\u3084 120 \u56de\u3067\u3059\u3002</p> <p>\u901a\u5e38\u306e C++ \u30d7\u30ed\u30b0\u30e9\u30e0\u3067 <code>for(;;)</code> \u306e\u3088\u3046\u306a\u30eb\u30fc\u30d7\u3092\u66f8\u304f\u3068\u3001\u6027\u80fd\u304c\u8a31\u3059\u9650\u308a 1 \u79d2\u9593\u306b\u4f55\u4e07\u56de\u3082\u30eb\u30fc\u30d7\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001<code>while (System::Update())</code> \u306f\u3001<code>System::Update()</code> \u95a2\u6570\u304c\u5185\u90e8\u3067\u30e2\u30cb\u30bf\u306e\u8868\u793a\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u5408\u308f\u305b\u305f\u5f85\u6a5f\u3092\u884c\u3046\u3053\u3068\u3067\u3001\u30e2\u30cb\u30bf\u306e\u8868\u793a\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u5408\u308f\u305b\u305f\u983b\u5ea6\u306e\u30eb\u30fc\u30d7\uff081 \u79d2\u9593\u306b\u6570\u5341\u56de\uff5e\uff09\u306b\u306a\u308b\u3088\u3046\u5236\u5fa1\u3057\u3066\u304f\u308c\u307e\u3059\u3002</p> <p>\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u30011 \u79d2\u9593\u306b\u4f55\u56de\u30eb\u30fc\u30d7\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30bf\u30a4\u30c8\u30eb\u306b\u8868\u793a\u3057\u3066\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// 1 \u79d2\u9593\u306b\u4f55\u56de\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u53d6\u5f97\u3059\u308b\nint32 fps = Profiler::FPS();\n// 1 \u79d2\u9593\u306b\u4f55\u56de\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\u306b\u8868\u793a\u3059\u308b\nWindow::SetTitle(fps);\n}\n}\n</code></pre>"},{"location":"tutorial/mainloop/#33-\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d\u306b\u3084\u308b\u3053\u3068","title":"3.3 \u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d\u306b\u3084\u308b\u3053\u3068","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u753b\u50cf\u3092\u8868\u793a\u3057\u305f\u3044\u3068\u304d\u3001\u300c\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\u4ed5\u4e8b\u300d\u306f 3 \u3064\u306e\u30d1\u30fc\u30c8\u306e\u3046\u3061\u3069\u3053\u306b\u66f8\u304f\u3079\u304d\u3067\u3057\u3087\u3046\u304b\u3002</p> <p>\u9069\u5207\u306a\u65b9\u6cd5\u306f\u3001\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d\u306b\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\u3001\u305d\u308c\u3092\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u4e2d\u3067\u63cf\u753b\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u3053\u3046\u3059\u308c\u3070\u6700\u3082\u5c11\u306a\u3044\u4ed5\u4e8b\u91cf\u3067\u76ee\u7684\u3092\u9054\u6210\u3067\u304d\u307e\u3059\u3002</p> <p>\u3082\u3057\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u4e2d\u306b\u300c\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\u4ed5\u4e8b\u300d\u3092\u66f8\u3044\u3066\u3057\u307e\u3046\u3068\u30011 \u79d2\u9593\u306b\u6570\u5341\u56de\u3082\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u306e\u4ed5\u4e8b\u304c\u767a\u751f\u3057\u3066\u52d5\u4f5c\u304c\u91cd\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002</p> <p>\u4e07\u304c\u4e00\u3001\u9593\u9055\u3063\u3066\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u4e2d\u306b\u300c\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\u4ed5\u4e8b\u300d\u3092\u66f8\u3044\u3066\u3057\u307e\u3063\u3066\u3082\u5b89\u5fc3\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u6bce\u79d2\u6570\u5341\u56de\u3082\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\u3088\u3046\u306a\u4ed5\u4e8b\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u3001Siv3D \u306f\u81ea\u52d5\u7684\u306b\u554f\u984c\u3092\u691c\u51fa\u3057\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3057\u3066\u304f\u308c\u307e\u3059\u3002</p> \u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u4e2d\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d <p>\u52d5\u4f5c\u304c\u91cd\u304f\u306a\u308b\uff08Siv3D \u306f\u8b66\u544a\u3092\u51fa\u529b\u3057\u3066\u81ea\u52d5\u7684\u306b\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u3092\u7d42\u4e86\u3057\u307e\u3059\uff09</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\nconst Texture texture{ U\"example/windmill.png\" };\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b\ntexture.draw();\n}\n}\n</code></pre> <p>OK</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\nconst Texture texture{ U\"example/windmill.png\" };\nwhile (System::Update())\n{\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b\ntexture.draw();\n}\n}\n</code></pre>"},{"location":"tutorial/mainloop/#\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","title":"\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"<ul> <li> Main \u95a2\u6570\u306e 3 \u3064\u306e\u30d1\u30fc\u30c8\u3092\u5b66\u3093\u3060</li> <li> <code>System::Update()</code> \u304c\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u983b\u5ea6\u3092\u5236\u5fa1\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> \u300c\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\u300d\u306e\u3088\u3046\u306a\u91cd\u3044\u4ed5\u4e8b\u306f\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d\u306b\u66f8\u304f\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> \u8aa4\u3063\u3066\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u4e2d\u306b\u300c\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\u300d\u306e\u3088\u3046\u306a\u91cd\u3044\u4ed5\u4e8b\u3092\u66f8\u3044\u3066\u3057\u307e\u3063\u305f\u5834\u5408\u3001Siv3D \u304c\u81ea\u52d5\u7684\u306b\u554f\u984c\u3092\u691c\u51fa\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3057\u3066\u304f\u308c\u308b\u3053\u3068\u3092\u5b66\u3093\u3060</li> </ul>"},{"location":"tutorial/motion/","title":"12. \u5909\u6570\u3068\u52d5\u304d","text":"<p>\u6642\u9593\u306e\u7d4c\u904e\u3092\u4f7f\u3063\u3066\u5909\u6570\u3092\u5909\u5316\u3055\u305b\u3066\u30e2\u30fc\u30b7\u30e7\u30f3\uff08\u52d5\u304d\uff09\u3092\u4f5c\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial/motion/#121-\u524d\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\u3092\u8abf\u3079\u308b","title":"12.1 \u524d\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\u3092\u8abf\u3079\u308b","text":"<p><code>Scene::DeltaTime()</code> \u306f\u3001\u524d\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\uff08\u79d2\uff09\u3092 <code>double</code> \u578b\u3067\u8fd4\u3057\u307e\u3059\u3002\u30e2\u30cb\u30bf\u304c 60Hz \u306e\u5834\u5408\u306f\u7d04 0.0166 \u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\n// 60 Hz \u306e\u5834\u5408, 1/60 \u79d2\uff08\u7d04 0.0166\uff09\nconst double deltaTime = Scene::DeltaTime();\nPrint &lt;&lt; deltaTime;\n}\n}\n</code></pre>"},{"location":"tutorial/motion/#122-\u7d75\u6587\u5b57\u3092\u52d5\u304b\u3059","title":"12.2 \u7d75\u6587\u5b57\u3092\u52d5\u304b\u3059","text":"<p>\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u7e70\u308a\u8fd4\u3057\u306e\u305f\u3073\u306b\u4f4d\u7f6e\u3092\u305a\u3089\u3059\u3053\u3068\u3067\u3001\u79fb\u52d5\u306e\u30e2\u30fc\u30b7\u30e7\u30f3\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture emoji{ U\"\u2603\ufe0f\"_emoji };\n// \u79fb\u52d5\u901f\u5ea6\uff08\u30d4\u30af\u30bb\u30eb / \u79d2\uff09\nconst double velocity = 20;\n// \u7d75\u6587\u5b57\u306e X \u5ea7\u6a19\ndouble x = 100;\nwhile (System::Update())\n{\nx += (Scene::DeltaTime() * velocity);\nemoji.drawAt(x, 300);\n}\n}\n</code></pre>"},{"location":"tutorial/motion/#123-\u7d75\u6587\u5b57\u3092\u56de\u8ee2\u3055\u305b\u308b","title":"12.3 \u7d75\u6587\u5b57\u3092\u56de\u8ee2\u3055\u305b\u308b","text":"<p>\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u7e70\u308a\u8fd4\u3057\u306e\u305f\u3073\u306b\u56de\u8ee2\u89d2\u5ea6\u3092\u305a\u3089\u3059\u3053\u3068\u3067\u3001\u56de\u8ee2\u306e\u30e2\u30fc\u30b7\u30e7\u30f3\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture emoji{ U\"\ud83c\udf63\"_emoji };\n// \u56de\u8ee2\u901f\u5ea6\uff08\u30e9\u30b8\u30a2\u30f3 / \u79d2\uff09\nconst double angularVelocity = 90_deg;\n// \u56de\u8ee2\u89d2\u5ea6\ndouble angle = 0_deg;\nwhile (System::Update())\n{\nangle += (Scene::DeltaTime() * angularVelocity);\nemoji.rotated(angle).drawAt(400, 300);\n}\n}\n</code></pre>"},{"location":"tutorial/motion/#124-\u56f3\u5f62\u306e\u5909\u6570","title":"12.4 \u56f3\u5f62\u306e\u5909\u6570","text":"<p><code>Circle</code> \u578b\u3084 <code>Rect</code>, <code>RectF</code> \u578b\u306e\u5909\u6570\u3092\u4f5c\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nCircle circle{ 200, 200, 100 };\nRectF rect{ 400, 300, 300, 200 };\nwhile (System::Update())\n{\ncircle.draw(Palette::Orange);\ncircle.drawFrame(2, 2, Palette::Red);\nrect.draw(ColorF{ 0.5 });\nRectF{ rect.x, rect.y, (rect.w * 0.5), rect.h }.draw(ColorF{ 0.3, 0.9, 0.6 });\nrect.drawFrame(4, 4, ColorF{ 0.2 });\n}\n}\n</code></pre>"},{"location":"tutorial/motion/#125-\u56f3\u5f62\u3092\u52d5\u304b\u3059","title":"12.5 \u56f3\u5f62\u3092\u52d5\u304b\u3059","text":"<p>\u56f3\u5f62\u306e\u30e1\u30f3\u30d0\u5909\u6570\u3092\u6642\u9593\u306e\u7d4c\u904e\u306b\u5fdc\u3058\u3066\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3001\u56f3\u5f62\u306e\u4f4d\u7f6e\u3084\u5927\u304d\u3055\u3092\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nCircle circle{ 200, 300, 0 };\nRectF rect{ 300, 200, 300, 200 };\nwhile (System::Update())\n{\ndouble deltaTime = Scene::DeltaTime();\ncircle.r += (deltaTime * 20);\nrect.x += (deltaTime * 10);\ncircle.draw();\nrect.draw(ColorF{ 0.5 });\n}\n}\n</code></pre>"},{"location":"tutorial/motion/#126-\u7d4c\u904e\u6642\u9593\u3092\u84c4\u7a4d\u3059\u308b","title":"12.6 \u7d4c\u904e\u6642\u9593\u3092\u84c4\u7a4d\u3059\u308b","text":"<p>\u524d\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\u3092\u84c4\u7a4d\u3059\u308b\u3053\u3068\u3067\u3001\u6642\u9593\u3092\u6e2c\u5b9a\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Font font{ FontMethod::MSDF, 48 };\n// \u7d4c\u904e\u6642\u9593\u306e\u84c4\u7a4d\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\nwhile (System::Update())\n{\naccumulatedTime += Scene::DeltaTime();\nfont(U\"\u7d4c\u904e\u6642\u9593: {:.2f}\"_fmt(accumulatedTime)).draw(40, 20, 20, Palette::Black);\n}\n}\n</code></pre>"},{"location":"tutorial/motion/#127-\u6b8b\u308a\u6642\u9593\u3092\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u3059\u308b","title":"12.7 \u6b8b\u308a\u6642\u9593\u3092\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u3059\u308b","text":"<p>\u6b8b\u308a\u6642\u9593\u304b\u3089 <code>Scene::DeltaTime()</code> \u306e\u5024\u3092\u5f15\u3044\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u6642\u9593\u306e\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Font font{ FontMethod::MSDF, 48 };\n// \u6b8b\u308a\u6642\u9593\uff08\u79d2\uff09\ndouble timeLeft = 5.0;\nwhile (System::Update())\n{\ntimeLeft -= Scene::DeltaTime();\nif (0.0 &lt; timeLeft)\n{\nfont(U\"\u6b8b\u308a\u6642\u9593: {:.2f}\"_fmt(timeLeft)).draw(40, 20, 20, Palette::Black);\n}\nelse\n{\nfont(U\"\u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\").draw(40, 20, 20, Palette::Black);\n}\n}\n}\n</code></pre>"},{"location":"tutorial/motion/#128-\u4e00\u5b9a\u6642\u9593\u3054\u3068\u306b\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b","title":"12.8 \u4e00\u5b9a\u6642\u9593\u3054\u3068\u306b\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b","text":"<p>12.6 \u3092\u5fdc\u7528\u3059\u308b\u3068\u3001\u4e00\u5b9a\u6642\u9593\u3054\u3068\u306b\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u84c4\u7a4d\u6642\u9593\u304c\u4e00\u5b9a\u6642\u9593\u3092\u8d85\u3048\u305f\u3089\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u3001\u84c4\u7a4d\u6642\u9593\u3092\u305d\u306e\u6642\u9593\u3060\u3051\u6e1b\u3089\u3057\u307e\u3059\u3002</p> <p>\u6b21\u306e\u30b3\u30fc\u30c9\u3067\u306f\u30013 \u79d2\u3054\u3068\u306b <code>Print &lt;&lt; U\"Hello!\"</code> \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Font font{ FontMethod::MSDF, 48 };\n// \u5468\u671f\uff08\u79d2\uff09\nconst double interval = 3.0;\n// \u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\nwhile (System::Update())\n{\naccumulatedTime += Scene::DeltaTime();\nfont(U\"accumulatedTime: {:.2f}\"_fmt(accumulatedTime)).draw(40, 200, 20, Palette::Black);\n// \u84c4\u7a4d\u6642\u9593\u304c\u4e00\u5b9a\u6642\u9593\u3092\u8d85\u3048\u305f\u3089\nif (interval &lt;= accumulatedTime)\n{\nPrint &lt;&lt; U\"Hello!\";\n// \u84c4\u7a4d\u6642\u9593\u304b\u3089\u30de\u30a4\u30ca\u30b9\naccumulatedTime -= interval;\n}\n}\n}\n</code></pre> <p>\u84c4\u7a4d\u6642\u9593\u3092\u5b8c\u5168\u306b 0 \u306b\u30ea\u30bb\u30c3\u30c8\u3057\u306a\u3044\u7406\u7531</p> <p>\u84c4\u7a4d\u6642\u9593\u3092 <code>accumulatedTime = 0.0</code> \u3067\u30ea\u30bb\u30c3\u30c8\u3057\u306a\u3044\u306e\u306f\u3001\u4f8b\u3048\u3070\u983b\u5ea6\u304c 3 \u79d2\u3054\u3068\u3067\u3001\u84c4\u7a4d\u6642\u9593\u304c 3.02 \u79d2\u3060\u3063\u305f\u5834\u5408\u3001\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u305f\u3042\u3068\u306b\u3001\u4f59\u308a\u306e 0.02 \u79d2\u3092\u6b21\u306e\u30a4\u30d9\u30f3\u30c8\u306e\u84c4\u7a4d\u6642\u9593\u306b\u4f7f\u3046\u305f\u3081\u3067\u3059\u3002\u3053\u308c\u3092\u7121\u8996\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u30a4\u30d9\u30f3\u30c8\u306e\u767a\u751f\u983b\u5ea6\u304c 3 \u79d2\u3088\u308a\u3082\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002</p>"},{"location":"tutorial/motion/#\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","title":"\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"<ul> <li> <code>Scene::DeltaTime()</code> \u3067\u524d\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\uff08\u79d2\uff09\u3092\u53d6\u5f97\u3067\u304d\u308b\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> \u7d4c\u904e\u6642\u9593\u3092\u4f7f\u3063\u3066\u7d75\u6587\u5b57\u3092\u52d5\u304b\u3059\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u7d4c\u904e\u6642\u9593\u3092\u4f7f\u3063\u3066\u56f3\u5f62\u3092\u52d5\u304b\u3059\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u7d4c\u904e\u6642\u9593\u3092\u84c4\u7a4d\u3057\u3066\u6642\u9593\u3092\u6e2c\u5b9a\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u7d4c\u904e\u6642\u9593\u3092\u5229\u7528\u3057\u3066\u6b8b\u308a\u6642\u9593\u3092\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u7d4c\u904e\u6642\u9593\u306e\u84c4\u7a4d\u3092\u5229\u7528\u3057\u3066\u3001\u4e00\u5b9a\u6642\u9593\u3054\u3068\u306b\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> </ul>"},{"location":"tutorial/mouse/","title":"14. \u30de\u30a6\u30b9\u5165\u529b\u3092\u6271\u3046","text":"<p>\u30de\u30a6\u30b9\u306e\u30af\u30ea\u30c3\u30af\u3084\u30ab\u30fc\u30bd\u30eb\u306e\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial/mouse/#141-\u30de\u30a6\u30b9\u30af\u30ea\u30c3\u30af\u3092\u8abf\u3079\u308b","title":"14.1 \u30de\u30a6\u30b9\u30af\u30ea\u30c3\u30af\u3092\u8abf\u3079\u308b","text":"<p><code>if (MouseL.down())</code> \u3067\u30de\u30a6\u30b9\u306e\u5de6\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u304b\u3092\u3001<code>if (MouseR.down())</code> \u3067\u30de\u30a6\u30b9\u306e\u53f3\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u304b\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nwhile (System::Update())\n{\n// \u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (MouseL.down())\n{\nPrint &lt;&lt; U\"\u5de6\u30af\u30ea\u30c3\u30af\";\n}\n// \u53f3\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (MouseR.down())\n{\nPrint &lt;&lt; U\"\u53f3\u30af\u30ea\u30c3\u30af\";\n}\n}\n}\n</code></pre>"},{"location":"tutorial/mouse/#142-\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u5ea7\u6a19\u306b\u79fb\u52d5\u3059\u308b","title":"14.2 \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u5ea7\u6a19\u306b\u79fb\u52d5\u3059\u308b","text":"<p>\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u5ea7\u6a19\u3092 <code>Point</code> \u578b\u3067\u5f97\u308b\u306b\u306f <code>Cursor::Pos()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002<code>Point</code> \u578b\u306e\u5024\u306f <code>Vec2</code> \u578b\u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture emoji{ U\"\u2603\ufe0f\"_emoji };\nVec2 pos{ 400, 300 };\nwhile (System::Update())\n{\n// \u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (MouseL.down())\n{\n// \u73fe\u5728\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u5ea7\u6a19\u3092\u4ee3\u5165\npos = Cursor::Pos();\n}\nemoji.drawAt(pos);\n}\n}\n</code></pre> <p>X \u5ea7\u6a19\u3001Y \u5ea7\u6a19\u3092\u305d\u308c\u305e\u308c <code>Cursor::Pos().x</code>\u3001<code>Cursor::Pos().y</code> \u3067\u5f97\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u524d\u8ff0\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u6b21\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u540c\u3058\u52d5\u4f5c\u3092\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture emoji{ U\"\u2603\ufe0f\"_emoji };\ndouble x = 400;\ndouble y = 300;\nwhile (System::Update())\n{\n// \u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (MouseL.down())\n{\n// \u73fe\u5728\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e X \u5ea7\u6a19\u3092\u4ee3\u5165\nx = Cursor::Pos().x;\n// \u73fe\u5728\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e Y \u5ea7\u6a19\u3092\u4ee3\u5165\ny = Cursor::Pos().y;\n}\nemoji.drawAt(x, y);\n}\n}\n</code></pre>"},{"location":"tutorial/mouse/#143-\u56f3\u5f62\u3092\u30af\u30ea\u30c3\u30af\u3057\u305f\u304b\u3092\u8abf\u3079\u308b","title":"14.3 \u56f3\u5f62\u3092\u30af\u30ea\u30c3\u30af\u3057\u305f\u304b\u3092\u8abf\u3079\u308b","text":"<p><code>Circle</code> \u3084 <code>Rect</code>, <code>RectF</code> \u306e <code>.leftClicked()</code> \u3067\u3001\u305d\u306e\u56f3\u5f62\u304c\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u304b\u3092\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Circle circle{ 200, 200, 50 };\nconst Rect rect{ 400, 400, 200, 40 };\nwhile (System::Update())\n{\n// \u5186\u3092\u5de6\u30af\u30ea\u30c3\u30af\u3057\u305f\u3089\nif (circle.leftClicked())\n{\nPrint &lt;&lt; U\"\u5186\u3092\u30af\u30ea\u30c3\u30af\";\n}\n// \u9577\u65b9\u5f62\u3092\u5de6\u30af\u30ea\u30c3\u30af\u3057\u305f\u3089\nif (rect.leftClicked())\n{\nPrint &lt;&lt; U\"\u9577\u65b9\u5f62\u3092\u30af\u30ea\u30c3\u30af\";\n}\ncircle.draw(Palette::Orange);\nrect.draw();\n}\n}\n</code></pre>"},{"location":"tutorial/mouse/#144-\u56f3\u5f62\u306e\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308b\u304b\u3092\u8abf\u3079\u308b","title":"14.4 \u56f3\u5f62\u306e\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308b\u304b\u3092\u8abf\u3079\u308b","text":"<p><code>Circle</code> \u3084 <code>Rect</code>, <code>RectF</code> \u306e <code>.mouseOver()</code> \u3067\u3001\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u305d\u306e\u56f3\u5f62\u306e\u4e0a\u306b\u3042\u308b\u304b\u3092\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Circle circle{ 200, 200, 50 };\nconst Rect rect{ 400, 400, 200, 40 };\nwhile (System::Update())\n{\nClearPrint();\n// \u5186\u306e\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308c\u3070\nif (circle.mouseOver())\n{\nPrint &lt;&lt; U\"\u5186\u306e\u4e0a\u306b\u3042\u308b\";\n}\n// \u9577\u65b9\u5f62\u306e\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308c\u3070\nif (rect.mouseOver())\n{\nPrint &lt;&lt; U\"\u9577\u65b9\u5f62\u306e\u4e0a\u306b\u3042\u308b\";\n}\ncircle.draw(Palette::Orange);\nrect.draw();\n}\n}\n</code></pre>"},{"location":"tutorial/mouse/#145-\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u624b\u306e\u5f62\u306b\u3059\u308b","title":"14.5 \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u624b\u306e\u5f62\u306b\u3059\u308b","text":"<p><code>Cursor::RequestStyle(CursorStyle::Hand);</code> \u3092\u547c\u3076\u3068\u3001\u305d\u306e\u30d5\u30ec\u30fc\u30e0\u306f\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u624b\u306e\u5f62\u306e\u30a2\u30a4\u30b3\u30f3\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Circle circle{ 200, 200, 50 };\nwhile (System::Update())\n{\n// \u5186\u306e\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308c\u3070\nif (circle.mouseOver())\n{\n// \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u624b\u306e\u30a2\u30a4\u30b3\u30f3\u306b\u3059\u308b\nCursor::RequestStyle(CursorStyle::Hand);\n}\ncircle.draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"tutorial/mouse/#146-\u5fdc\u7528\u7d75\u6587\u5b57\u3092\u30af\u30ea\u30c3\u30af\u3057\u305f\u304b\u3092\u8abf\u3079\u308b","title":"14.6 \uff08\u5fdc\u7528\uff09\u7d75\u6587\u5b57\u3092\u30af\u30ea\u30c3\u30af\u3057\u305f\u304b\u3092\u8abf\u3079\u308b","text":"<p>\u7d75\u6587\u5b57\uff08\u30c6\u30af\u30b9\u30c1\u30e3\uff09\u306b\u306f <code>.leftClicked()</code> \u3084 <code>.mouseOver()</code> \u304c\u7121\u3044\u305f\u3081\u3001\u4ee3\u308f\u308a\u306b\u8fd1\u3044\u5927\u304d\u3055\u306e\u5186\u3092\u4f7f\u3063\u3066\u5224\u5b9a\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture emoji{ U\"\ud83c\udf6a\"_emoji };\nconst Circle circle{ 200, 200, 60 };\nwhile (System::Update())\n{\n// \u5186\u306e\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308c\u3070\nif (circle.mouseOver())\n{\n// \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u624b\u306e\u30a2\u30a4\u30b3\u30f3\u306b\u3059\u308b\nCursor::RequestStyle(CursorStyle::Hand);\n}\n// \u5186\u3092\u5de6\u30af\u30ea\u30c3\u30af\u3057\u305f\u3089\nif (circle.leftClicked())\n{\nPrint &lt;&lt; U\"\u30af\u30c3\u30ad\u30fc\u3092\u30af\u30ea\u30c3\u30af\";\n}\n// \u5186\u306f\u63cf\u304b\u306a\u3044\n//circle.draw();\n// circle.center \u306f Vec2{ circle.x, circle.y } \u3068\u540c\u3058\nemoji.drawAt(circle.center, Palette::Orange);\n}\n}\n</code></pre>"},{"location":"tutorial/mouse/#\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","title":"\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"<ul> <li> <code>MouseL</code>, <code>MouseR</code> \u306e <code>.down()</code> \u3067\u3001\u5de6\u30af\u30ea\u30c3\u30af\u3001\u53f3\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u304b\u3092\u8abf\u3079\u308b\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> <code>Cursor::Pos()</code> \u3067\u3001\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u4f4d\u7f6e\u3092\u5f97\u308b\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> <code>Circle</code> \u3084 <code>Rect</code>, <code>RectF</code> \u306e <code>.leftClicked()</code> \u3067\u3001\u305d\u306e\u56f3\u5f62\u304c\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u304b\u3092\u5224\u5b9a\u3067\u304d\u308b\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> <code>Circle</code> \u3084 <code>Rect</code>, <code>RectF</code> \u306e <code>.mouseOver()</code> \u3067\u3001\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u305d\u306e\u56f3\u5f62\u306e\u4e0a\u306b\u3042\u308b\u304b\u3092\u5224\u5b9a\u3067\u304d\u308b\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> <code>Cursor::RequestStyle(CursorStyle::Hand);</code> \u3067\u3001\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u624b\u306e\u5f62\u306b\u3067\u304d\u308b\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> \u7d75\u6587\u5b57\uff08\u30c6\u30af\u30b9\u30c1\u30e3\uff09\u306b\u306f <code>.leftClicked()</code> \u3084 <code>.mouseOver()</code> \u304c\u7121\u3044\u305f\u3081\u3001\u4ee3\u308f\u308a\u306b\u8fd1\u3044\u5927\u304d\u3055\u306e\u5186\u3092\u4f7f\u3063\u3066\u5224\u5b9a\u3059\u308b\u30c6\u30af\u30cb\u30c3\u30af\u3092\u5b66\u3093\u3060</li> </ul>"},{"location":"tutorial/pattern/","title":"9. \u6a21\u69d8\u3092\u63cf\u304f","text":"<p>\u5186\u3084\u9577\u65b9\u5f62\u3092\u4e26\u3079\u3066\u6a21\u69d8\u3092\u63cf\u304f\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial/pattern/#91-\u5186\u3092\u4e26\u3079\u308b","title":"9.1 \u5186\u3092\u4e26\u3079\u308b","text":"<p>\u30eb\u30fc\u30d7\u3068\u56f3\u5f62\u63cf\u753b\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u6a21\u69d8\u3084\u30d1\u30bf\u30fc\u30f3\u3092\u7c21\u5358\u306b\u63cf\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nwhile (System::Update())\n{\nfor (int32 i = 0; i &lt; 5; ++i)\n{\nCircle{ (i * 100), 100, 30 }.draw(Palette::Skyblue);\n}\nfor (int32 i = 0; i &lt; 5; ++i)\n{\nCircle{ (50 + i * 100), 200, 30 }.draw(Palette::Seagreen);\n}\n}\n}\n</code></pre>"},{"location":"tutorial/pattern/#92-\u4e8c\u91cd\u30eb\u30fc\u30d7\u3067\u5186\u3092\u4e26\u3079\u308b","title":"9.2 \u4e8c\u91cd\u30eb\u30fc\u30d7\u3067\u5186\u3092\u4e26\u3079\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nwhile (System::Update())\n{\nfor (int32 y = 0; y &lt; 4; ++y) // \u7e26\u65b9\u5411\n{\nfor (int32 x = 0; x &lt; 6; ++x) // \u6a2a\u65b9\u5411\n{\nCircle{ (x * 100), (y * 100), 30 }.draw(Palette::Skyblue);\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial/pattern/#93-\u5c11\u3057\u8907\u96d1\u306b\u3059\u308b","title":"9.3 \u5c11\u3057\u8907\u96d1\u306b\u3059\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nwhile (System::Update())\n{\nfor (int32 y = 0; y &lt; 4; ++y)\n{\nfor (int32 x = 0; x &lt; 6; ++x)\n{\nif ((x + y) % 2 == 0)\n{\nCircle{ (x * 100), (y * 100), 10 }.draw(Palette::Skyblue);\n}\nelse\n{\nCircle{ (x * 100), (y * 100), 30 }.draw(Palette::Skyblue);\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial/pattern/#94-\u9577\u65b9\u5f62\u3092\u4e26\u3079\u308b","title":"9.4 \u9577\u65b9\u5f62\u3092\u4e26\u3079\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nwhile (System::Update())\n{\nfor (int32 x = 0; x &lt; 6; ++x)\n{\nRect{ (x * 100), 0, 80, 600 }.draw(Palette::Skyblue);\n}\n}\n}\n</code></pre>"},{"location":"tutorial/pattern/#95-\u8272\u3092\u5f90\u3005\u306b\u5909\u5316\u3055\u305b\u308b-1","title":"9.5 \u8272\u3092\u5f90\u3005\u306b\u5909\u5316\u3055\u305b\u308b (1)","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nwhile (System::Update())\n{\nfor (int32 x = 0; x &lt; 6; ++x)\n{\nRect{ (x * 100), 0, 80, 600 }.draw(ColorF{ 0.0, (x * 0.2), 1.0 });\n}\n}\n}\n</code></pre>"},{"location":"tutorial/pattern/#96-\u8272\u3092\u5f90\u3005\u306b\u5909\u5316\u3055\u305b\u308b-2","title":"9.6 \u8272\u3092\u5f90\u3005\u306b\u5909\u5316\u3055\u305b\u308b (2)","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nwhile (System::Update())\n{\nfor (int32 x = 0; x &lt; 10; ++x)\n{\nRect{ (x * 80), 0, 80, 600 }.draw(HSV{ (x * 36), 0.5, 1.0 });\n}\n}\n}\n</code></pre>"},{"location":"tutorial/pattern/#\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","title":"\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"<ul> <li> \u30eb\u30fc\u30d7\u3068\u56f3\u5f62\u63cf\u753b\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u6a21\u69d8\u3092\u63cf\u753b\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> </ul>"},{"location":"tutorial/print/","title":"5. \u7c21\u6613\u7684\u306a\u30c7\u30fc\u30bf\u8868\u793a","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u5185\u3067\u30c6\u30ad\u30b9\u30c8\u3084\u6570\u5024\u3092\u7c21\u6613\u8868\u793a\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002\u7c21\u6613\u8868\u793a\u3067\u306f\u3001\u30d5\u30a9\u30f3\u30c8\u3084\u4f4d\u7f6e\u3001\u8272\u3092\u6307\u5b9a\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u975e\u5e38\u306b\u77ed\u3044\u30b3\u30fc\u30c9\u3067\u6587\u5b57\u5217\u3084\u6570\u5024\u3092\u753b\u9762\u306b\u8868\u793a\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"tutorial/print/#51-\u6587\u5b57\u5217\u3084\u6570\u5024\u3092\u7c21\u6613\u8868\u793a\u3059\u308b","title":"5.1 \u6587\u5b57\u5217\u3084\u6570\u5024\u3092\u7c21\u6613\u8868\u793a\u3059\u308b","text":"<p><code>Print</code> \u3092\u4f7f\u3046\u3068\u3001\u753b\u9762\u306b\u6587\u5b57\u5217\u3092\u7c21\u6613\u8868\u793a\u3067\u304d\u307e\u3059\u3002</p> <p>Siv3D \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u6587\u5b57\u5217\u3092\u6271\u3046\u3068\u304d\u306f\u3001\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u524d\u306b <code>U</code> \u3092\u4ed8\u3051\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u6587\u5b57\u5217\u3092 Unicode (UTF-32) \u6587\u5b57\u5217\u3068\u3057\u3066\u6271\u3046\u305f\u3081\u306e\u8a18\u6cd5\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nPrint &lt;&lt; U\"C++\";\nPrint &lt;&lt; U\"Hello, \" &lt;&lt; U\"Siv3D\"; // \u8907\u6570\u306b\u5206\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u308b\nPrint &lt;&lt; 123;\nPrint &lt;&lt; 4.567;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial/print/#52-\u7c21\u6613\u8868\u793a\u3092\u305f\u304f\u3055\u3093\u884c\u3046","title":"5.2 \u7c21\u6613\u8868\u793a\u3092\u305f\u304f\u3055\u3093\u884c\u3046","text":"<p>\u7c21\u6613\u51fa\u529b\u3057\u305f\u3082\u306e\u306f\u753b\u9762\u306b\u6b8b\u308a\u7d9a\u3051\u307e\u3059\u3002\u753b\u9762\u306b\u53ce\u307e\u3089\u306a\u304f\u306a\u3063\u305f\u3082\u306e\u306f\u3001\u53e4\u3044\u3082\u306e\u304b\u3089\u9806\u306b\u6d88\u3048\u3066\u3044\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nint32 count = 0;\nwhile (System::Update())\n{\nPrint &lt;&lt; count;\n++count;\n}\n}\n</code></pre>"},{"location":"tutorial/print/#53-\u7c21\u6613\u8868\u793a\u3092\u6d88\u53bb\u3059\u308b","title":"5.3 \u7c21\u6613\u8868\u793a\u3092\u6d88\u53bb\u3059\u308b","text":"<p><code>ClearPrint()</code> \u3092\u4f7f\u3046\u3068\u3001\u753b\u9762\u306b\u6b8b\u3063\u3066\u3044\u308b\u7c21\u6613\u8868\u793a\u3092\u3059\u3079\u3066\u6d88\u53bb\u3067\u304d\u307e\u3059\u3002\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u5148\u982d\u3067\u5e38\u306b <code>ClearPrint()</code> \u3059\u308b\u3053\u3068\u3067\u3001\u73fe\u5728\u306e\u30d5\u30ec\u30fc\u30e0\u5185\u3067\u51fa\u529b\u3057\u305f\u5185\u5bb9\u3060\u3051\u3092\u753b\u9762\u306b\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nint32 count = 0;\nwhile (System::Update())\n{\n// \u53e4\u3044\u51fa\u529b\uff08\u4ee5\u524d\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u51fa\u529b\uff09\u3092\u6d88\u53bb\u3059\u308b\nClearPrint();\nPrint &lt;&lt; count;\n++count;\n}\n}\n</code></pre>"},{"location":"tutorial/print/#\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","title":"\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"<ul> <li> <code>Print</code> \u3092\u4f7f\u3063\u3066\u753b\u9762\u306b\u6587\u5b57\u5217\u3084\u6570\u5024\u3092\u7c21\u6613\u8868\u793a\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> <code>ClearPrint()</code> \u3092\u4f7f\u3063\u3066\u7c21\u6613\u8868\u793a\u3092\u6d88\u53bb\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> </ul>"},{"location":"tutorial/text/","title":"11. \u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a\u3059\u308b","text":"<p>\u8272\u3084\u4f4d\u7f6e\u3092\u6307\u5b9a\u3057\u3066\u6570\u5024\u3084\u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial/text/#111-\u6570\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b-1","title":"11.1 \u6570\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b (1)","text":"<p><code>U\"{}\"_fmt(x)</code> \u3068\u66f8\u304f\u3068\u3001<code>{}</code> \u306b\u306f\u5024 <code>x</code> \u3092\u6587\u5b57\u5217\u306b\u3057\u305f\u3082\u306e\u304c\u5165\u308a\u307e\u3059\u3002</p> <p>\u4f8b\u3048\u3070 <code>U\"{} \u6708 {} \u65e5\"_fmt(12, 31)</code> \u306f <code>U\"12 \u6708 31 \u65e5\"</code> \u3068\u3044\u3046\u6587\u5b57\u5217\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nint32 score = 1234;\nPrint &lt;&lt; U\"\u30b9\u30b3\u30a2: {}\"_fmt(score);\nint32 month = 12;\nint32 day = 31;\nPrint &lt;&lt; U\"\u4eca\u65e5\u306f {} \u6708 {} \u65e5\"_fmt(month, day);\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p><code>Print</code> \u3067\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u3072\u3068\u307e\u3068\u307e\u308a\u306e\u6587\u5b57\u5217\u3068\u3057\u3066\u6271\u3048\u308b <code>_fmt()</code> \u3092\u4f7f\u3046\u307b\u3046\u304c\u4eca\u5f8c\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u4fbf\u5229\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nint32 score = 1234;\nPrint &lt;&lt; U\"\u30b9\u30b3\u30a2: \" &lt;&lt; score;\nint32 month = 12;\nint32 day = 31;\nPrint &lt;&lt; U\"\u4eca\u65e5\u306f \" &lt;&lt; month &lt;&lt; U\" \u6708 \" &lt;&lt; day &lt;&lt; U\" \u65e5\";\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial/text/#112-\u6570\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b-2","title":"11.2 \u6570\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b (2)","text":"<p><code>double</code> \u578b\u306e\u5024 <code>x</code> \u3092\u3001\u5c0f\u6570\u70b9\u4ee5\u4e0b\u306e\u6841\u6570\u3092\u6307\u5b9a\u3057\u3066\u5909\u63db\u3059\u308b\u5834\u5408\u3001<code>U\"{:.2f}\"_fmt(x)</code> \u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\uff08\u3053\u306e\u5834\u5408\u5c0f\u6570\u70b9\u4ee5\u4e0b 2 \u6841\uff09\u3002</p> <p>\u5c0f\u6570\u70b9\u4ee5\u4e0b\u3092\u8868\u793a\u3057\u306a\u3044\u5834\u5408\u306f <code>U\"{:.0f}\"_fmt(x)</code> \u3068\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\ndouble x = 123.4567;\nPrint &lt;&lt; x;\nPrint &lt;&lt; U\"{}\"_fmt(x);\nPrint &lt;&lt; U\"{:.2f}\"_fmt(x);\nPrint &lt;&lt; U\"{:.0f}\"_fmt(x);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial/text/#113-\u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a\u3059\u308b","title":"11.3 \u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a\u3059\u308b","text":"<p><code>Print</code> \u306e\u3088\u3046\u306a\u7c21\u6613\u8868\u793a\u3067\u306f\u306a\u304f\u3001\u597d\u304d\u306a\u4f4d\u7f6e\u306b\u597d\u304d\u306a\u8272\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a\u3057\u305f\u3044\u5834\u5408\u306f\u3001<code>Font</code> \u30af\u30e9\u30b9\u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p>\u307e\u305a\u3001\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d\u306b <code>Font \u5909\u6570\u540d{ FontMethod::MSDF, 48 };</code> \u3067\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30d5\u30a9\u30f3\u30c8\u306e\u4f5c\u6210\u306f\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u305f\u3081\u3001\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d\u3067\u884c\u3044\u307e\u3059\u3002</p> <p>\u4f5c\u6210\u3057\u305f\u30d5\u30a9\u30f3\u30c8 <code>font</code> \u3092\u4f7f\u3063\u3066\u3001</p> <ul> <li><code>font(\u30c6\u30ad\u30b9\u30c8).draw(\u30b5\u30a4\u30ba, x, y, color);</code></li> <li><code>font(\u30c6\u30ad\u30b9\u30c8).draw(\u30b5\u30a4\u30ba, pos, color);</code></li> </ul> <p>\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u30c6\u30ad\u30b9\u30c8\u3092\u3001\u30b5\u30a4\u30ba\u3001\u4f4d\u7f6e\u3001\u8272\u3092\u6307\u5b9a\u3057\u3066\u8868\u793a\u3057\u307e\u3059\u3002<code>color</code> \u3092\u7701\u7565\u3059\u308b\u3068\u767d\u8272\u306b\u306a\u308a\u307e\u3059\u3002</p> <p><code>font(\u30c6\u30ad\u30b9\u30c8)</code> \u306e\u30c6\u30ad\u30b9\u30c8\u306e\u90e8\u5206\u306f\u3001\u6587\u5b57\u5217\u4ee5\u5916\u306e\u5024\u3082\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Font font{ FontMethod::MSDF, 48 };\nint32 count = 0;\nwhile (System::Update())\n{\nfont(U\"C++\").draw(50, Vec2{ 100, 100 }, Palette::Black);\nfont(U\"Siv{}D\"_fmt(count)).draw(80, Vec2{ 200, 200 }, ColorF{ 0.2, 0.6, 0.9 });\nfont(U\"\u3053\u3093\u306b\u3061\u306f\").draw(25, Vec2{ 100, 400 }, ColorF{ 0.4 });\nfont(count).draw(50, Vec2{ 300, 500 });\n++count;\n}\n}\n</code></pre> \u30d5\u30a9\u30f3\u30c8\u306e\u54c1\u8cea <p><code>FontMethod::MSDF</code> \u65b9\u5f0f\u3067\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306e <code>48</code> \u306f\u3001\u30d5\u30a9\u30f3\u30c8\u30c7\u30fc\u30bf\u306e\u8a73\u7d30\u5ea6\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5024\u306f\u5b9f\u884c\u6642\u6027\u80fd\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u3067\u3059\u3002\u8a73\u7d30\u5ea6\u3092\u5927\u304d\u304f\u3059\u308b\u3068\u3001\u30e1\u30e2\u30ea\u6d88\u8cbb\u304c\u5897\u52a0\u3057\u3066\u51e6\u7406\u6642\u9593\u304c\u5897\u3048\u307e\u3059\u3002\u5c0f\u3055\u304f\u3059\u308b\u3068\u3001\u8907\u96d1\u306a\u5b57\u5f62\u306e\u6587\u5b57\u306e\u63cf\u753b\u54c1\u8cea\u304c\u4f4e\u4e0b\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u6f22\u5b57\u306e\u5834\u5408\u306f <code>48</code> \u304c\u30d0\u30e9\u30f3\u30b9\u306e\u53d6\u308c\u305f\u5024\u3067\u3059\u3002\u82f1\u6570\u5b57\u306e\u307f\u306e\u5834\u5408\u306f <code>32</code> \u3067\u3082\u5341\u5206\u3067\u3059\u3002</p>"},{"location":"tutorial/text/#114-\u592a\u6587\u5b57\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a\u3059\u308b","title":"11.4 \u592a\u6587\u5b57\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a\u3059\u308b","text":"<p>\u592a\u6587\u5b57\u306e\u30d5\u30a9\u30f3\u30c8\u306f <code>Font \u5909\u6570\u540d{ FontMethod::MSDF, 48, Typeface::Bold };</code> \u3067\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u901a\u5e38\u306e\u30d5\u30a9\u30f3\u30c8\u306f <code>Typeface::Regular</code> \u3067\u3059\u304c\u3001\u3053\u308c\u306f\u7701\u7565\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Font regularFont{ FontMethod::MSDF, 48 }; // Typeface::Regular\n// \u592a\u6587\u5b57\u306e\u30d5\u30a9\u30f3\u30c8\nconst Font boldFont{ FontMethod::MSDF, 48, Typeface::Bold };\nwhile (System::Update())\n{\nregularFont(U\"Hello, Siv3D!\").draw(50, Vec2{ 100, 100 }, ColorF{ 0.3 });\nboldFont(U\"Hello, Siv3D!\").draw(50, Vec2{ 100, 200 }, ColorF{ 0.3 });\n}\n}\n</code></pre>"},{"location":"tutorial/text/#115-\u30c6\u30ad\u30b9\u30c8\u306e\u57fa\u6e96\u4f4d\u7f6e\u3092\u5909\u66f4\u3059\u308b","title":"11.5 \u30c6\u30ad\u30b9\u30c8\u306e\u57fa\u6e96\u4f4d\u7f6e\u3092\u5909\u66f4\u3059\u308b","text":"<p>\u4e2d\u5fc3\u306e\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a\u3059\u308b\u306b\u306f <code>.drawAt(\u30b5\u30a4\u30ba, x, y, color);</code> \u307e\u305f\u306f  <code>.drawAt(\u30b5\u30a4\u30ba, pos, color);</code> \u3092\u547c\u3073\u307e\u3059\u3002\u4e2d\u5fc3\u304c (x, y), \u3042\u308b\u3044\u306f pos \u306b\u306a\u308b\u3088\u3046\u306b\u30c6\u30ad\u30b9\u30c8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002</p> <p>\u53f3\u7aef\u306e\u4e2d\u5fc3\u306e\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a\u3059\u308b\u306b\u306f <code>.draw(\u30b5\u30a4\u30ba, Arg::rightCenter(x, y), color);</code> \u3092\u547c\u3073\u307e\u3059\u3002\u53f3\u7aef\u306e\u4e2d\u5fc3\u304c (x, y) \u306b\u306a\u308b\u3088\u3046\u306b\u30c6\u30ad\u30b9\u30c8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002</p> <p>\u57fa\u6e96\u4f4d\u7f6e\u306f\u5168\u90e8\u3067 9 \u7a2e\u985e\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002<code>Arg::rightCenter = Vec2{ x, y }</code> \u3084 <code>Arg::rightCenter(pos)</code> \u306e\u3088\u3046\u306b\u3001<code>Vec2</code> \u3067\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> \u57fa\u6e96\u4f4d\u7f6e \u8aac\u660e <code>Arg::topLeft(x, y)</code> \u5de6\u4e0a\u3002<code>.draw()</code> \u3068\u540c\u3058\u3002 <code>Arg::topCenter(x, y)</code> \u4e0a\u4e2d\u592e <code>Arg::topRight(x, y)</code> \u53f3\u4e0a <code>Arg::leftCenter(x, y)</code> \u5de6\u4e2d\u592e <code>Arg::center(x, y)</code> \u4e2d\u592e\u3002<code>.drawAt()</code> \u3068\u540c\u3058\u3002 <code>Arg::rightCenter(x, y)</code> \u53f3\u4e2d\u592e <code>Arg::bottomLeft(x, y)</code> \u5de6\u4e0b <code>Arg::bottomCenter(x, y)</code> \u4e0b\u4e2d\u592e <code>Arg::bottomRight(x, y)</code> \u53f3\u4e0b <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Font font{ FontMethod::MSDF, 48 };\nwhile (System::Update())\n{\nfont(U\"Hello\").drawAt(50, Vec2{ 400, 100 }, ColorF{ 0.1 });\nfont(U\"Siv3D\").draw(50, Arg::rightCenter(780, 300), ColorF{ 0.1 });\nfont(U\"Hello\").draw(50, Arg::rightCenter(780, 400), ColorF{ 0.1 });\nfont(U\"programming\").draw(50, Arg::bottomCenter(Cursor::Pos()), ColorF{ 0.1 });\n}\n}\n</code></pre>"},{"location":"tutorial/text/#\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","title":"\u632f\u308a\u8fd4\u308a\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"<ul> <li> <code>_fmt()</code> \u3092\u4f7f\u3063\u3066\u6570\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u5c0f\u6570\u70b9\u4ee5\u4e0b\u306e\u6841\u6570\u3092\u6307\u5b9a\u3057\u3066\u6570\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u30d5\u30a9\u30f3\u30c8\u306e\u4f5c\u6210\u306f\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u305f\u3081\u3001\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d\u3067\u884c\u3046\u3053\u3068\u3092\u5b66\u3093\u3060</li> <li> \u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u592a\u6587\u5b57\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> <li> \u30c6\u30ad\u30b9\u30c8\u306e\u57fa\u6e96\u4f4d\u7f6e\u3092\u5909\u66f4\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060</li> </ul>"},{"location":"tutorial2/2d-intersection/","title":"24. \u3042\u305f\u308a\u5224\u5b9a","text":"<p>\u56f3\u5f62\u306e\u4ea4\u5dee\u5224\u5b9a\u3092\u884c\u3046\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial2/2d-intersection/#241-\u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc","title":"24.1 \u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc","text":"<p>\u3042\u308b\u56f3\u5f62 <code>shape</code> \u306e\u9818\u57df\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u91cd\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u3001<code>shape.mouseOver()</code> \u3067\u8abf\u3079\u3089\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst Circle circle{ Scene::Center(), 100 };\nwhile (System::Update())\n{\nif (circle.mouseOver())\n{\n// \u5186\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u91cd\u306a\u3063\u3066\u3044\u308c\u3070\u6c34\u8272\ncircle.draw(Palette::Skyblue);\n}\nelse\n{\n// \u91cd\u306a\u3063\u3066\u3044\u306a\u3051\u308c\u3070\u7070\u8272\ncircle.draw(Palette::Gray);\n}\n}\n}\n</code></pre> <p>\u6761\u4ef6\u6f14\u7b97\u5b50\u3092\u4f7f\u3063\u3066\u77ed\u304f\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst Circle circle{ Scene::Center(), 100 };\nwhile (System::Update())\n{\n// \u5186\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u91cd\u306a\u3063\u3066\u3044\u308c\u3070\u6c34\u8272\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u7070\u8272\ncircle.draw(circle.mouseOver() ? Palette::Skyblue : Palette::Gray);\n}\n}\n</code></pre>"},{"location":"tutorial2/2d-intersection/#242-\u56f3\u5f62\u306e\u30af\u30ea\u30c3\u30af","title":"24.2 \u56f3\u5f62\u306e\u30af\u30ea\u30c3\u30af","text":"<p>\u3042\u308b\u56f3\u5f62 <code>shape</code> \u304c\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u304b\u3092\u3001<code>shape.leftClicked()</code> \u3067\u8abf\u3079\u3089\u308c\u307e\u3059\u3002<code>.leftClicked()</code> \u306f\u3001\u6700\u521d\u306b\u62bc\u3057\u8fbc\u3093\u3060\u30d5\u30ec\u30fc\u30e0\u306e\u307f <code>true</code> \u3092\u8fd4\u3057\u307e\u3059\u3002\u56f3\u5f62\u3092\u62bc\u3057\u7d9a\u3051\u3066\u3044\u3066\u3082\u305d\u308c\u4ee5\u964d\u306f <code>false</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst Circle circle{ Scene::Center(), 100 };\nint32 count = 0;\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; count;\n// \u5186\u304c\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (circle.leftClicked())\n{\n++count;\n}\ncircle.draw(Palette::Gray);\n}\n}\n</code></pre>"},{"location":"tutorial2/2d-intersection/#243-\u56f3\u5f62\u304c\u62bc\u3055\u308c\u3066\u3044\u308b","title":"24.3 \u56f3\u5f62\u304c\u62bc\u3055\u308c\u3066\u3044\u308b","text":"<p>\u3042\u308b\u56f3\u5f62 <code>shape</code> \u304c\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u3001<code>shape.leftPressed()</code> \u3067\u8abf\u3079\u3089\u308c\u307e\u3059\u3002<code>.leftPressed()</code> \u306f\u3001\u6700\u521d\u306b\u62bc\u3057\u8fbc\u3093\u3060\u30d5\u30ec\u30fc\u30e0\u3060\u3051\u3067\u306a\u304f\u3001\u305d\u308c\u4ee5\u964d\u62bc\u3055\u308c\u7d9a\u3051\u3066\u3044\u308b\u5834\u5408\u306b\u3082 <code>true</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst Circle circle{ Scene::Center(), 100 };\nwhile (System::Update())\n{\n// \u5186\u304c\u62bc\u3055\u308c\u3066\u3044\u308c\u3070\u6c34\u8272\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u7070\u8272\ncircle.draw(circle.leftPressed() ? Palette::Skyblue : Palette::Gray);\n}\n}\n</code></pre>"},{"location":"tutorial2/2d-intersection/#244-\u56f3\u5f62\u306e\u4ea4\u5dee","title":"24.4 \u56f3\u5f62\u306e\u4ea4\u5dee","text":"<p>2 \u3064\u306e\u56f3\u5f62 <code>a</code> \u3068 <code>b</code> \u304c\u4ea4\u5dee\u3057\u3066\u3044\u308b\u304b\u306f\u3001<code>a.intersects(b)</code> \u3067\u8abf\u3079\u3089\u308c\u307e\u3059\u3002\u7570\u306a\u308b\u56f3\u5f62\u30af\u30e9\u30b9\u306e\u9593\u3067\u3082\u4ea4\u5dee\u5224\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst Rect rect{ 100, 50, 200, 100 };\nconst Circle circle{ 200, 400, 100 };\nconst Polygon star = Shape2D::Star(200, Vec2{ 550, 300 });\nwhile (System::Update())\n{\nconst Circle c{ Cursor::Pos(), 30 };\nrect.draw(rect.intersects(c) ? Palette::Skyblue : Palette::Gray);\ncircle.draw(circle.intersects(c) ? Palette::Skyblue : Palette::Gray);\nstar.draw(star.intersects(c) ? Palette::Skyblue : Palette::Gray);\nc.draw(Palette::Seagreen);\n}\n}\n</code></pre>"},{"location":"tutorial2/2d-intersection/#245-\u56f3\u5f62\u3092\u5185\u5074\u306b\u542b\u3080","title":"24.5 \u56f3\u5f62\u3092\u5185\u5074\u306b\u542b\u3080","text":"<p>\u3042\u308b\u56f3\u5f62 <code>a</code> \u304c\u5225\u306e\u56f3\u5f62 <code>b</code> \u3092\u5b8c\u5168\u306b\u5185\u5074\u306b\u542b\u3093\u3067\u3044\u308b\u304b\u306f\u3001<code>a.contains(b)</code> \u3067\u8abf\u3079\u3089\u308c\u307e\u3059\u3002</p> <p>\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306b\u8ffd\u5f93\u3059\u308b\u5186\u304c\u3001\u9577\u65b9\u5f62\u3084\u661f\u306a\u3069\u306e\u56f3\u5f62\u306e\u5185\u90e8\u306b\u5b8c\u5168\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u3068\u304d\u306b\u3001\u305d\u306e\u56f3\u5f62\u306e\u8272\u3092\u5909\u66f4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst Rect rect{ 100, 50, 200, 100 };\nconst Circle circle{ 200, 400, 100 };\nconst Polygon star = Shape2D::Star(200, Vec2{ 550, 300 });\nwhile (System::Update())\n{\nconst Circle c{ Cursor::Pos(), 30 };\nrect.draw(rect.contains(c) ? Palette::Skyblue : Palette::Gray);\ncircle.draw(circle.contains(c) ? Palette::Skyblue : Palette::Gray);\nstar.draw(star.contains(c) ? Palette::Skyblue : Palette::Gray);\nc.draw(Palette::Seagreen);\n}\n}\n</code></pre>"},{"location":"tutorial2/2d-intersection/#246-\u7dda\u5206\u3069\u3046\u3057\u306e\u4ea4\u5dee\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b","title":"24.6 \u7dda\u5206\u3069\u3046\u3057\u306e\u4ea4\u5dee\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b","text":"<p>2 \u3064\u306e\u7dda\u5206 <code>a</code>, <code>b</code> \u306e\u4ea4\u5dee\u60c5\u5831\u3092 <code>a.intersectsAt(b)</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306e\u623b\u308a\u5024\u306f <code>Optional&lt;Vec2&gt;</code> \u3067\u3001\u4ea4\u5dee\u306e\u72b6\u6cc1\u306b\u5fdc\u3058\u3066\u6b21\u306e\u3088\u3046\u306a\u5024\u306b\u306a\u308a\u307e\u3059\u3002</p> \u4ea4\u5dee\u306e\u72b6\u6cc1 \u623b\u308a\u5024 \u4ea4\u5dee\u3057\u3066\u3044\u306a\u3044 <code>none</code> \u4ea4\u5dee\u3057\u3066\u3044\u308b <code>Vec2{ \u4ea4\u70b9\u306e\u5ea7\u6a19 }</code> \u91cd\u306a\u3063\u3066\u3044\u308b <code>Vec2{ QNaN, QNaN }</code> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst Line line1{ 100, 100, 600, 500 };\nwhile (System::Update())\n{\nconst Line line2{ 400, 200, Cursor::Pos() };\nline1.draw(2, ColorF{ 0.25 });\nline2.draw(2, ColorF{ 0.25 });\nif (const auto&amp; intersection = line1.intersectsAt(line2))\n{\nCircle{ *intersection, 10 }.draw(Palette::Red);\n}\n}\n}\n</code></pre> <p>\u6b21\u306e\u30b3\u30fc\u30c9\u3067\u30012 \u3064\u306e\u7dda\u5206\u304c\u91cd\u306a\u3063\u3066\u3044\u308b\u3068\u304d\u306e\u7d50\u679c\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Line line1{ 100, 100, 200, 200 };\nconst Line line2{ 100, 100, 300, 300 };\nif (const auto intersection = line1.intersectsAt(line2))\n{\nPrint &lt;&lt; *intersection;\n// \u4ea4\u70b9\u304c NaN \u306a\u3089\u30012 \u3064\u306e\u7dda\u5206\u306f\u91cd\u306a\u3063\u3066\u3044\u308b\nif (intersection-&gt;hasNaN())\n{\nPrint &lt;&lt; U\"Two lines are overlapped.\";\n}\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/2d-intersection/#247-\u7dda\u5206\u3068\u56f3\u5f62\u306e\u4ea4\u5dee\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b","title":"24.7 \u7dda\u5206\u3068\u56f3\u5f62\u306e\u4ea4\u5dee\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u3042\u308b\u56f3\u5f62 <code>a</code> \u3068 <code>b</code> \u306e\u8fba\u306e\u4ea4\u5dee\u60c5\u5831\u3092 <code>a.intersectsAt(b)</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306e\u623b\u308a\u5024\u306f <code>Optional&lt;Array&lt;Vec2&gt;&gt;</code> \u3067\u3001\u4ea4\u5dee\u306e\u72b6\u6cc1\u306b\u5fdc\u3058\u3066\u6b21\u306e\u3088\u3046\u306a\u5024\u306b\u306a\u308a\u307e\u3059\u30022 \u3064\u306e\u7dda\u5206\u304c\u30aa\u30fc\u30d0\u30fc\u30e9\u30c3\u30d7\u3059\u308b\u5834\u5408\u306b\u7a7a\u306e\u914d\u5217\u3092\u8fd4\u3059\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</p> \u4ea4\u5dee\u306e\u72b6\u6cc1 \u623b\u308a\u5024 \u4ea4\u5dee\u3057\u3066\u3044\u306a\u3044 <code>none</code> \u4ea4\u5dee\u3057\u3066\u3044\u308b <code>Array&lt;Vec2&gt;{ \u4ea4\u70b9\u306e\u5ea7\u6a19, ... }</code> \u4ea4\u5dee\u3057\u3066\u3044\u308b\u304c\u4ea4\u70b9\u3092\u6c42\u3081\u3089\u308c\u306a\u304b\u3063\u305f <code>Array&lt;Vec2&gt;{}</code>\uff08\u7a7a\u306e\u914d\u5217\uff09 <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst Rect rect{ 100, 50, 200, 100 };\nconst Circle circle{ 200, 400, 100 };\nconst Triangle triangle{ Vec2{ 500, 100 }, Vec2{ 700, 500 }, Vec2{ 400, 400 } };\nwhile (System::Update())\n{\nconst Line line{ Scene::Center(), Cursor::Pos() };\n// rect \u3068 line \u306e\u4ea4\u5dee\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\nif (const auto points = rect.intersectsAt(line))\n{\nrect.draw(Palette::Skyblue);\n// \u4ea4\u5dee\u3059\u308b\u5ea7\u6a19\u306b\u8d64\u3044\u5186\u3092\u8868\u793a\u3059\u308b\nfor (const auto&amp; point : *points)\n{\nCircle{ point, 4 }.draw(Palette::Red);\n}\n}\nelse // \u4ea4\u5dee\u3057\u306a\u3044\n{\nrect.draw(Palette::Gray);\n}\n// circle \u3068 line \u306e\u4ea4\u5dee\u60c5\u5831\u3092\u53d6\u5f97\nif (const auto points = circle.intersectsAt(line))\n{\ncircle.draw(Palette::Skyblue);\n// \u4ea4\u5dee\u3059\u308b\u5ea7\u6a19\u306b\u8d64\u3044\u5186\u3092\u8868\u793a\u3059\u308b\nfor (const auto&amp; point : *points)\n{\nCircle{ point, 4 }.draw(Palette::Red);\n}\n}\nelse // \u4ea4\u5dee\u3057\u306a\u3044\n{\ncircle.draw(Palette::Gray);\n}\n// triangle \u3068 line \u306e\u4ea4\u5dee\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\nif (const auto points = triangle.intersectsAt(line))\n{\ntriangle.draw(Palette::Skyblue);\n// \u4ea4\u5dee\u3059\u308b\u5ea7\u6a19\u306b\u8d64\u3044\u5186\u3092\u8868\u793a\u3059\u308b\nfor (const auto&amp; point : *points)\n{\nCircle{ point, 4 }.draw(Palette::Red);\n}\n}\nelse // \u4ea4\u5dee\u3057\u306a\u3044\n{\ntriangle.draw(Palette::Gray);\n}\nline.draw(2, Palette::Seagreen);\n}\n}\n</code></pre>"},{"location":"tutorial2/2d-intersection/#248-\u9577\u65b9\u5f62\u304c\u91cd\u306a\u308b\u9818\u57df\u3092\u53d6\u5f97\u3059\u308b","title":"24.8 \u9577\u65b9\u5f62\u304c\u91cd\u306a\u308b\u9818\u57df\u3092\u53d6\u5f97\u3059\u308b","text":"<p>2 \u3064\u306e\u9577\u65b9\u5f62 <code>a</code> \u3068 <code>b</code> \u304c\u91cd\u306a\u308b\u9818\u57df\u3092 <code>a.getOverlap(b)</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306e\u623b\u308a\u5024\u306f <code>Rect</code> \u307e\u305f\u306f <code>RectF</code> \u3067\u3001\u91cd\u306a\u308b\u9818\u57df\u304c\u306a\u3044\u5834\u5408\u306f\u7a7a\u306e\u9577\u65b9\u5f62\uff08\u5927\u304d\u3055\u304c 0 \u306e\u9577\u65b9\u5f62\uff09\u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p>\u3042\u308b\u9577\u65b9\u5f62 <code>rect</code> \u304c\u7a7a\u3067\u3042\u308b\u304b\u306f <code>if (rect.isEmpty())</code>, <code>if (rect)</code>, <code>if (not rect)</code> \u306a\u3069\u3067\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst Rect rect1{ 100, 100, 400, 300 };\nwhile (System::Update())\n{\nClearPrint();\nconst Rect rect2 = Rect::FromPoints(Cursor::Pos(), Point{ 600, 500 });\nrect1.draw(ColorF{ 0.5 });\nrect2.draw(ColorF{ 0.75 });\n// 2 \u3064\u306e\u9577\u65b9\u5f62\u304c\u91cd\u306a\u308b\u9818\u57df\u3092 Rect \u3067\u8fd4\u3059\nif (const auto overlap = rect1.getOverlap(rect2))\n{\nPrint &lt;&lt; U\"overlap\";\noverlap.draw(ColorF{ 0.0, 0.5, 0.0, 0.5 });\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/array/","title":"20. \u52d5\u7684\u914d\u5217","text":"<p>\u52d5\u7684\u914d\u5217\u30af\u30e9\u30b9 <code>Array</code> \u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u8aac\u660e\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial2/array/#201-\u914d\u5217\u30af\u30e9\u30b9","title":"20.1 \u914d\u5217\u30af\u30e9\u30b9","text":"<p>Siv3D \u3067\u306f <code>std::vector&lt;Type&gt;</code> \u306e\u4ee3\u308f\u308a\u306b <code>Array&lt;Type&gt;</code> \u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066 <code>Type</code> \u578b\u306e\u52d5\u7684\u914d\u5217\u3092\u6271\u3044\u307e\u3059\u3002</p> <p><code>Array</code> \u306f\u5185\u90e8\u3067 <code>std::vector</code> \u3092\u4f7f\u3063\u3066\u914d\u5217\u3092\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3088\u308a\u3082\u591a\u304f\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6301\u3061\u3001\u69d8\u3005\u306a\u4fbf\u5229\u306a\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u8981\u7d20\u306f\u30e1\u30e2\u30ea\u4e0a\u3067\u306e\u9023\u7d9a\u6027\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Array&lt;String&gt; words = { U\"apple\", U\"bird\", U\"cat\" };\nPrint &lt;&lt; words;\n// 5 \u500b\u306e -1 \u3067\u521d\u671f\u5316\u3055\u308c\u305f\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\nArray&lt;int32&gt; numbers(5, -1);\nPrint &lt;&lt; numbers;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#202-\u914d\u5217\u306e\u30b5\u30a4\u30ba","title":"20.2 \u914d\u5217\u306e\u30b5\u30a4\u30ba","text":"<p>\u914d\u5217\u306e\u8981\u7d20\u6570\u306f <code>.size()</code> \u3067\u53d6\u5f97\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Array&lt;String&gt; words = { U\"apple\", U\"bird\", U\"cat\" };\nPrint &lt;&lt; words.size();\nArray&lt;int32&gt; numbers(5, -1);\nPrint &lt;&lt; numbers.size();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#203-\u6307\u5b9a\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","title":"20.3 \u6307\u5b9a\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","text":"<p>\u914d\u5217\u5185\u306e\u6307\u5b9a\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u3042\u308b\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u3001<code>[]</code> \u6f14\u7b97\u5b50\u3092\u4f7f\u3044\u307e\u3059\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f 0 \u304b\u3089\u59cb\u307e\u308a\u307e\u3059\u3002<code>v.front()</code> \u306f <code>v[0]</code> \u3068\u540c\u3058\u3067\u3059\u3002<code>v.back()</code> \u306f <code>v[v.size() - 1]</code> \u3068\u540c\u3058\u3067\u672b\u5c3e\u306e\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\u7bc4\u56f2\u5916\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Array&lt;String&gt; words = { U\"apple\", U\"bird\", U\"cat\", U\"dog\", U\"egg\" };\nPrint &lt;&lt; words[0];\nPrint &lt;&lt; words[3];\nPrint &lt;&lt; words.front();\nPrint &lt;&lt; words.back();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#204-\u7bc4\u56f2\u30d9\u30fc\u30b9\u306e-for-\u6587\u3067\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","title":"20.4 \u7bc4\u56f2\u30d9\u30fc\u30b9\u306e for \u6587\u3067\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","text":"<p>\u7bc4\u56f2\u30d9\u30fc\u30b9 for \u6587\u3092\u4f7f\u3063\u3066\u914d\u5217\u306e\u5404\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Array&lt;String&gt; words = { U\"apple\", U\"bird\", U\"cat\", U\"dog\", U\"egg\" };\nfor (const auto&amp; word : words) // \u8981\u7d20\u3092\u5909\u66f4\u3057\u306a\u3044\u5834\u5408\u306f const \u53c2\u7167\n{\nPrint &lt;&lt; word;\n}\nArray&lt;int32&gt; values = { 1, 2, 3, 4, 5 };\nfor (auto&amp; value : values) // \u8981\u7d20\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306f\u53c2\u7167\n{\nvalue *= 2;\n}\nPrint &lt;&lt; values;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#205-\u7a7a\u306e\u914d\u5217","title":"20.5 \u7a7a\u306e\u914d\u5217","text":"<p>\u8981\u7d20\u3092\u4fdd\u6301\u3057\u3066\u3044\u306a\u3044\u3001\u8981\u7d20\u6570\u304c 0 \u306e\u914d\u5217\u306f\u7a7a\u306e\u914d\u5217\u3067\u3059\u3002\u4ee3\u5165\u3084\u8ffd\u52a0\u306b\u3088\u3063\u3066\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001\u7a7a\u3067\u306a\u3044\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;String&gt; words;\nPrint &lt;&lt; words;\nPrint &lt;&lt; words.size();\nwords = { U\"apple\", U\"orange\", U\"melon\" };\nPrint &lt;&lt; words;\nPrint &lt;&lt; words.size();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#206-\u914d\u5217\u304c\u7a7a\u3067\u3042\u308b\u304b\u3092\u8abf\u3079\u308b","title":"20.6 \u914d\u5217\u304c\u7a7a\u3067\u3042\u308b\u304b\u3092\u8abf\u3079\u308b","text":"<p><code>Array</code> \u578b\u306e\u5024 <code>v</code> \u304c\u7a7a\u3067\u3042\u308b\u304b\u306f\u3001<code>if (v.isEmpty())</code> \u3084 <code>if (v)</code> / <code>if (not v)</code> \u3067\u8abf\u3079\u3089\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;String&gt; words;\nArray&lt;int32&gt; numbers = { 1, 2, 3, 4, 5 };\nPrint &lt;&lt; words.isEmpty();\nPrint &lt;&lt; numbers.isEmpty();\nif (not words)\n{\nPrint &lt;&lt; U\"words is empty\";\n}\nif (numbers)\n{\nPrint &lt;&lt; U\"numbers is not empty\";\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#207-\u914d\u5217\u306e\u672b\u5c3e\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b","title":"20.7 \u914d\u5217\u306e\u672b\u5c3e\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b","text":"<p><code>&lt;&lt;</code> \u3067\u914d\u5217\u306e\u672b\u5c3e\u306b\u65b0\u3057\u3044\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>&lt;&lt;</code> \u306f\u9023\u7d9a\u3057\u3066\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;String&gt; words;\nwords &lt;&lt; U\"apple\";\nwords &lt;&lt; U\"bird\";\nwords &lt;&lt; U\"cat\";\nPrint &lt;&lt; words;\nArray&lt;int32&gt; numbers = { 1, 2 };\nnumbers &lt;&lt; 3;\nPrint &lt;&lt; numbers;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#208-\u914d\u5217\u3092\u7a7a\u306b\u3059\u308b","title":"20.8 \u914d\u5217\u3092\u7a7a\u306b\u3059\u308b","text":"<p><code>.clear()</code> \u3067\u914d\u5217\u3092\u7a7a\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;String&gt; words = { U\"apple\", U\"bird\", U\"cat\" };\nPrint &lt;&lt; words;\nPrint &lt;&lt; words.isEmpty();\n// \u914d\u5217\u3092\u7a7a\u306b\u3059\u308b\nwords.clear();\nPrint &lt;&lt; words;\nPrint &lt;&lt; words.isEmpty();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#209-\u672b\u5c3e\u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b","title":"20.9 \u672b\u5c3e\u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b","text":"<p><code>.pop_back()</code> \u3067\u914d\u5217\u306e\u672b\u5c3e\u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>.pop_back_N(n)</code> \u3067\u672b\u5c3e\u304b\u3089 <code>n</code> \u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u7a7a\u306e\u914d\u5217\u3067 <code>.pop_back()</code> \u3092\u547c\u3093\u3067\u306f\u3044\u3051\u307e\u305b\u3093\u3002\u4e00\u65b9\u3001<code>.pop_back_N(n)</code> \u306f\u7a7a\u306e\u914d\u5217\u3067\u3082\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>.pop_back_N(n)</code> \u306f\u5b9f\u969b\u306e\u8981\u7d20\u6570\u4ee5\u4e0a\u3092\u524a\u9664\u3057\u3088\u3046\u3068\u3057\u305f\u5834\u5408\u306b\u914d\u5217\u3092\u7a7a\u306b\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;int32&gt; numbers = { 100, 200, 300, 400, 500 };\nPrint &lt;&lt; numbers;\nnumbers.pop_back();\nPrint &lt;&lt; numbers;\nnumbers.pop_back_N(2);\nPrint &lt;&lt; numbers;\n// \u5b9f\u969b\u306e\u8981\u7d20\u6570\u4ee5\u4e0a\u3092\u524a\u9664\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u914d\u5217\u3092\u7a7a\u306b\u3059\u308b\nnumbers.pop_back_N(100);\nPrint &lt;&lt; numbers;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#2010-\u5148\u982d\u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b","title":"20.10 \u5148\u982d\u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b","text":"<p><code>.pop_front()</code> \u3067\u914d\u5217\u306e\u5148\u982d\u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>.pop_front_N(n)</code> \u3067\u5148\u982d\u304b\u3089 <code>n</code> \u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u7a7a\u306e\u914d\u5217\u3067 <code>.pop_front()</code> \u3092\u547c\u3093\u3067\u306f\u3044\u3051\u307e\u305b\u3093\u3002\u4e00\u65b9\u3001<code>.pop_front_N(n)</code> \u306f\u7a7a\u306e\u914d\u5217\u3067\u3082\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>.pop_front_N(n)</code> \u306f\u5b9f\u969b\u306e\u8981\u7d20\u6570\u4ee5\u4e0a\u3092\u524a\u9664\u3057\u3088\u3046\u3068\u3057\u305f\u5834\u5408\u306b\u914d\u5217\u3092\u7a7a\u306b\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;int32&gt; numbers = { 100, 200, 300, 400, 500 };\nPrint &lt;&lt; numbers;\nnumbers.pop_front();\nPrint &lt;&lt; numbers;\nnumbers.pop_front_N(2);\nPrint &lt;&lt; numbers;\n// \u5b9f\u969b\u306e\u8981\u7d20\u6570\u4ee5\u4e0a\u3092\u524a\u9664\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u914d\u5217\u3092\u7a7a\u306b\u3059\u308b\nnumbers.pop_front_N(100);\nPrint &lt;&lt; numbers;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#2011-\u914d\u5217\u306e\u8981\u7d20\u6570\u3092\u5909\u66f4\u3059\u308b","title":"20.11 \u914d\u5217\u306e\u8981\u7d20\u6570\u3092\u5909\u66f4\u3059\u308b","text":"<p><code>.resize(n)</code> \u3067\u914d\u5217\u306e\u8981\u7d20\u6570\u3092 <code>n</code> \u306b\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>.resize(n, value)</code> \u3067\u914d\u5217\u306e\u8981\u7d20\u6570\u3092 <code>n</code> \u306b\u5909\u66f4\u3057\u3001\u65b0\u3057\u3044\u8981\u7d20\u3092 <code>value</code> \u3067\u521d\u671f\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;int32&gt; numbers = { 1, 2, 3 };\nnumbers.resize(10, -1);\nPrint &lt;&lt; numbers;\nPrint &lt;&lt; numbers.size();\nnumbers.resize(2);\nPrint &lt;&lt; numbers;\nPrint &lt;&lt; numbers.size();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#2012-\u6761\u4ef6\u3092\u6e80\u305f\u3059\u8981\u7d20\u3092\u524a\u9664\u3059\u308b-remove_if","title":"20.12 \u6761\u4ef6\u3092\u6e80\u305f\u3059\u8981\u7d20\u3092\u524a\u9664\u3059\u308b (remove_if)","text":"<p><code>.remove_if(f)</code> \u3067\u3001\u6761\u4ef6\u3092\u6e80\u305f\u3059\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>f</code> \u306f\u3001\u914d\u5217\u306e\u8981\u7d20\u306e\u578b\u3092\u5f15\u6570\u306b\u53d6\u308a\u3001<code>bool</code> \u578b\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002<code>f</code> \u304c <code>true</code> \u3092\u8fd4\u3057\u305f\u8981\u7d20\u306f\u524a\u9664\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"tutorial2/array/#\u95a2\u6570\u3067\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b","title":"\u95a2\u6570\u3067\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nbool IsLessThanFive(int32 n)\n{\nreturn (n &lt; 5);\n}\nvoid Main()\n{\nArray&lt;int32&gt; values = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };\n// \u5024\u304c 5 \u672a\u6e80\u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\nvalues.remove_if(IsLessThanFive);\nPrint &lt;&lt; values;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#\u30e9\u30e0\u30c0\u5f0f\u3067\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b","title":"\u30e9\u30e0\u30c0\u5f0f\u3067\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;int32&gt; values = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };\n// \u5024\u304c 5 \u672a\u6e80\u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\nvalues.remove_if([](int32 n) { return (n &lt; 5); });\nPrint &lt;&lt; values;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#2013-\u6761\u4ef6\u3092\u6e80\u305f\u3059\u8981\u7d20\u3092\u524a\u9664\u3059\u308b-\u30a4\u30c6\u30ec\u30fc\u30bf","title":"20.13 \u6761\u4ef6\u3092\u6e80\u305f\u3059\u8981\u7d20\u3092\u524a\u9664\u3059\u308b (\u30a4\u30c6\u30ec\u30fc\u30bf)","text":"<p><code>std::vector</code> \u306e\u3088\u3046\u306b\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u3068 <code>.erase()</code> \u3092\u4f7f\u3063\u3066\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;int32&gt; values = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };\nfor (auto it = values.begin(); it != values.end();)\n{\nif (*it &lt; 5)\n{\nit = values.erase(it);\n}\nelse\n{\n++it;\n}\n}\nPrint &lt;&lt; values;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#2014-\u914d\u5217\u306e\u8981\u7d20\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\u3059\u308b","title":"20.14 \u914d\u5217\u306e\u8981\u7d20\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\u3059\u308b","text":"<p><code>.shuffle()</code> \u3067\u914d\u5217\u306e\u8981\u7d20\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;int32&gt; values = { 1, 2, 3, 4, 5 };\n// \u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\nvalues.shuffle();\nPrint &lt;&lt; values;\n// \u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\nvalues.shuffle();\nPrint &lt;&lt; values;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#2015-\u914d\u5217\u306e\u8981\u7d20\u3092\u30bd\u30fc\u30c8\u3059\u308b","title":"20.15 \u914d\u5217\u306e\u8981\u7d20\u3092\u30bd\u30fc\u30c8\u3059\u308b","text":"<p><code>.sort()</code> \u3067\u914d\u5217\u306e\u8981\u7d20\u3092\u6607\u9806\u306b\u30bd\u30fc\u30c8\u3057\u307e\u3059\u3002<code>.rsort()</code> \u3067\u914d\u5217\u306e\u8981\u7d20\u3092\u964d\u9806\u306b\u30bd\u30fc\u30c8\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;int32&gt; values = { 2, 5, 3, 1, 4 };\n// \u6607\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b\nvalues.sort();\nPrint &lt;&lt; values;\nArray&lt;String&gt; words = { U\"apple\", U\"dog\", U\"bird\", U\"cat\" };\n// \u964d\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b\nwords.rsort();\nPrint &lt;&lt; words;\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p>\u30af\u30e9\u30b9\u306e\u30bd\u30fc\u30c8\u3092\u884c\u3046\u3068\u304d\u306b\u306f\u3001<code>.sort_by()</code> \u306b\u30ab\u30b9\u30bf\u30e0\u306e\u6bd4\u8f03\u95a2\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nstruct Player\n{\nint32 rank;\nString name;\n};\nvoid Main()\n{\nArray&lt;Player&gt; players =\n{\n{ 30, U\"Tom\" },\n{ 20, U\"Bob\" },\n{ 10, U\"Alice\" },\n{ 40, U\"David\" },\n{ 50, U\"Eve\" },\n};\n// \u30e9\u30f3\u30af\u306e\u6607\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b\nplayers.sort_by([](const Player&amp; a, const Player&amp; b) { return (a.rank &lt; b.rank); });\nfor (const auto&amp; player : players)\n{\nPrint &lt;&lt; U\"{} {}\"_fmt(player.rank, player.name);\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#2016-\u914d\u5217\u306e\u8981\u7d20\u3092\u9006\u9806\u306b\u3059\u308b","title":"20.16 \u914d\u5217\u306e\u8981\u7d20\u3092\u9006\u9806\u306b\u3059\u308b","text":"<p><code>.reverse()</code> \u3067\u914d\u5217\u306e\u8981\u7d20\u3092\u9006\u9806\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;int32&gt; values = { 1, 2, 3, 4, 5 };\n// \u9006\u9806\u306b\u4e26\u3073\u66ff\u3048\u308b\nvalues.reverse();\nPrint &lt;&lt; values;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#2017-\u914d\u5217\u306e\u8981\u7d20\u306e\u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b","title":"20.17 \u914d\u5217\u306e\u8981\u7d20\u306e\u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b","text":"<p><code>.sum()</code> \u3067\u914d\u5217\u306e\u8981\u7d20\u306e\u5408\u8a08\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;int32&gt; values = { 1, 2, 3, 4, 5 };\n// \u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b\nPrint &lt;&lt; values.sum();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#2018-\u5168\u3066\u306e\u8981\u7d20\u306b\u540c\u3058\u5024\u3092\u4ee3\u5165\u3059\u308b","title":"20.18 \u5168\u3066\u306e\u8981\u7d20\u306b\u540c\u3058\u5024\u3092\u4ee3\u5165\u3059\u308b","text":"<p><code>.fill(value)</code> \u3067\u914d\u5217\u306e\u5168\u3066\u306e\u8981\u7d20\u306b <code>value</code> \u3092\u4ee3\u5165\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;int32&gt; values = { 1, 2, 3, 4, 5 };\nPrint &lt;&lt; values;\n// \u3059\u3079\u3066\u306e\u8981\u7d20\u306b 0 \u3092\u4ee3\u5165\u3059\u308b\nvalues.fill(0);\nPrint &lt;&lt; values;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/array/#2019-map-\u51e6\u7406","title":"20.19 map \u51e6\u7406","text":"<p><code>.map(f)</code> \u3067\u914d\u5217\u306e\u5168\u3066\u306e\u8981\u7d20\u306b\u95a2\u6570 <code>f</code> \u3092\u9069\u7528\u3057\u305f\u7d50\u679c\u3092\u6301\u3064\u65b0\u3057\u3044\u914d\u5217\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002<code>f</code> \u306f\u3001\u914d\u5217\u306e\u8981\u7d20\u306e\u578b\u3092\u5f15\u6570\u306b\u53d6\u308a\u3001\u65b0\u3057\u3044\u8981\u7d20\u306e\u578b\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002</p> <p><code>Format(value)</code> \u306f\u3001<code>value</code> \u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\u95a2\u6570\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Array&lt;int32&gt; a = { 1, 2, 3, 4, 5 };\n// a \u306e\u5404\u8981\u7d20\u3092 0.1 \u500d\u3057\u305f\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\nconst Array&lt;double&gt; b = a.map([](int32 n) { return (n * 0.1); });\nPrint &lt;&lt; b;\n// a \u306e\u5404\u8981\u7d20\u3092\u6587\u5b57\u5217\u306b\u3057\u305f\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\nconst Array&lt;String&gt; c = a.map(Format);\nPrint &lt;&lt; c;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/font/","title":"31. \u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a\u3059\u308b","text":"<p>\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u69d8\u3005\u306a\u30b9\u30bf\u30a4\u30eb\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>\u753b\u9762\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u753b\u3059\u308b\u3068\u304d\u306e\u30d5\u30a9\u30f3\u30c8\u30c7\u30fc\u30bf\u306f\u30d5\u30a9\u30f3\u30c8\u30af\u30e9\u30b9 <code>Font</code> \u3067\u7ba1\u7406\u3057\u307e\u3059\u3002\u30d5\u30a9\u30f3\u30c8\u306f\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u3068\u65b9\u5f0f\u3067\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u30d5\u30a9\u30f3\u30c8\u306e\u4f5c\u6210\u306b\u306f\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u305f\u3081\u3001\u901a\u5e38\u306f\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d\u3067\u884c\u3044\u307e\u3059\u3002\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u5185\u3067\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u306f\u3001\u6bce\u30d5\u30ec\u30fc\u30e0\u4f5c\u6210\u3055\u308c\u306a\u3044\u3088\u3046\u306a\u5236\u5fa1\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <p>\u3053\u306e\u7ae0\u306b\u5165\u308b\u524d\u306b\u3001\u7528\u8a9e\u306e\u6574\u7406\u3092\u3057\u3066\u304a\u304d\u307e\u3059\u3002</p>"},{"location":"tutorial2/font/#\u63cf\u753b\u65b9\u5f0f","title":"\u63cf\u753b\u65b9\u5f0f","text":"<p>\u307b\u3068\u3093\u3069\u306e\u30d5\u30a9\u30f3\u30c8\u306f\u3001\u63cf\u753b\u65b9\u5f0f <code>FontMethod</code> \u3092\u6b21\u306e 3 \u3064\u304b\u3089\u9078\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u63cf\u753b\u65b9\u5f0f\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u65b9\u5f0f\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002</p> \u65b9\u5f0f \u8aac\u660e \u9069\u3057\u305f\u7528\u9014 \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u65b9\u5f0f \u8efd\u91cf\u3067\u3059\u304c\u3001\u57fa\u672c\u30b5\u30a4\u30ba\u4ee5\u4e0a\u306b\u62e1\u5927\u63cf\u753b\u3059\u308b\u3068\u54c1\u8cea\u304c\u4f4e\u4e0b\u3057\u307e\u3059\u3002 \u5e38\u306b\u56fa\u5b9a\u30b5\u30a4\u30ba\u3067\u30d5\u30a9\u30f3\u30c8\u3092\u63cf\u753b\u3059\u308b\u5834\u5408\u3084\u3001\u8907\u96d1\u306a\u5b57\u5f62\u306e\u66f8\u4f53\u3092\u7528\u3044\u308b\u5834\u5408\u3002 SDF \u65b9\u5f0f \u57fa\u672c\u30b5\u30a4\u30ba\u4ee5\u4e0a\u306b\u62e1\u5927\u63cf\u753b\u3057\u3066\u3082\u54c1\u8cea\u304c\u7dad\u6301\u3055\u308c\u307e\u3059\u3002\u5f71\u3084\u8f2a\u90ed\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002\u6587\u5b57\u306e\u89d2\u304c\u5c11\u3057\u4e38\u304f\u306a\u308b\u526f\u4f5c\u7528\u304c\u3042\u308a\u307e\u3059\u3002 \u6587\u5b57\u306b\u5f71\u3084\u8f2a\u90ed\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3057\u305f\u308a\u3059\u308b\u5834\u5408\u3002 MSDF \u65b9\u5f0f \u57fa\u672c\u30b5\u30a4\u30ba\u4ee5\u4e0a\u306b\u62e1\u5927\u63cf\u753b\u3057\u3066\u3082\u54c1\u8cea\u304c\u7dad\u6301\u3055\u308c\u307e\u3059\u3002\u5f71\u3084\u8f2a\u90ed\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002 \u6587\u5b57\u3092\u69d8\u3005\u306a\u30b5\u30a4\u30ba\u306b\u62e1\u5927\u7e2e\u5c0f\u3057\u305f\u308a\u3001\u6587\u5b57\u306b\u5f71\u3084\u8f2a\u90ed\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3057\u305f\u308a\u3059\u308b\u5834\u5408\u3002"},{"location":"tutorial2/font/#\u30d5\u30a9\u30f3\u30c8\u306e\u57fa\u672c\u30b5\u30a4\u30ba","title":"\u30d5\u30a9\u30f3\u30c8\u306e\u57fa\u672c\u30b5\u30a4\u30ba","text":"<p>\u3044\u305a\u308c\u306e\u65b9\u5f0f\u306b\u304a\u3044\u3066\u3082\u3001\u63cf\u753b\u306b\u4f7f\u7528\u3059\u308b\u6587\u5b57\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u306f\u30a8\u30f3\u30b8\u30f3\u5185\u90e8\u3067\u4f5c\u6210\u3055\u308c\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30e1\u30e2\u30ea\u4e0a\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\uff08\u4fdd\u5b58\uff09\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u308b\u6587\u5b57\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3092\u30d5\u30a9\u30f3\u30c8\u306e\u57fa\u672c\u30b5\u30a4\u30ba\u3068\u547c\u3073\u307e\u3059\u3002\u30d5\u30a9\u30f3\u30c8\u306e\u57fa\u672c\u30b5\u30a4\u30ba\u306f\u3001\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\u30d5\u30a9\u30f3\u30c8\u306e\u57fa\u672c\u30b5\u30a4\u30ba\u3068\u7570\u306a\u308b\u30b5\u30a4\u30ba\u3067\u63cf\u753b\u3059\u308b\u3068\u3001\u62e1\u5927\u7e2e\u5c0f\u304c\u884c\u308f\u308c\u307e\u3059\u3002\u63cf\u753b\u6642\u306b\u30d5\u30a9\u30f3\u30c8\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30d5\u30a9\u30f3\u30c8\u306e\u57fa\u672c\u30b5\u30a4\u30ba\u304c\u63cf\u753b\u30b5\u30a4\u30ba\u3068\u3057\u3066\u4f7f\u308f\u308c\u307e\u3059\uff08\u62e1\u5927\u7e2e\u5c0f\u306f\u884c\u308f\u308c\u307e\u305b\u3093\uff09\u3002</p> <p>\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u65b9\u5f0f\u3067\u62e1\u5927\u3092\u884c\u3046\u3068\u3001\u89e3\u50cf\u5ea6\u306e\u4f4e\u3044\u753b\u50cf\u3092\u62e1\u5927\u3057\u305f\u3068\u304d\u306e\u3088\u3046\u306b\u3001\u6587\u5b57\u306e\u898b\u305f\u76ee\u304c\u8352\u304f\u306a\u308a\u307e\u3059\u3002SDF / MSDF \u65b9\u5f0f\u3067\u306f\u3001\u57fa\u672c\u30b5\u30a4\u30ba\u4ee5\u4e0a\u306b\u62e1\u5927\u63cf\u753b\u3057\u3066\u3082\u54c1\u8cea\u304c\u7dad\u6301\u3055\u308c\u307e\u3059\u3002</p> <p>SDF / MSDF \u65b9\u5f0f\u306b\u304a\u3044\u3066\u306f\u3001\u8907\u96d1\u306a\u6587\u5b57\u3067\u57fa\u672c\u30b5\u30a4\u30ba\u304c\u5c0f\u3055\u3044\u3068\u3001\u54c1\u8cea\u304c\u4f4e\u4e0b\u3057\u3066\u5b57\u5f62\u304c\u5d29\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002SDF / MSDF \u65b9\u5f0f\u306b\u304a\u3044\u3066\u82f1\u6570\u5b57\u306f 40, \u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8\u306f 48 \u304c\u57fa\u672c\u30b5\u30a4\u30ba\u3068\u3057\u3066\u63a8\u5968\u3055\u308c\u307e\u3059\u3002\u4e00\u65b9\u3001\u5927\u304d\u306a\u57fa\u672c\u30b5\u30a4\u30ba\u306f\u3001\u30e1\u30e2\u30ea\u306e\u6d88\u8cbb\u91cf\u3068\u6587\u5b57\u753b\u50cf\u30c7\u30fc\u30bf\u4f5c\u6210\u306e\u6642\u9593\u3092\u5897\u52a0\u3055\u305b\u308b\u305f\u3081\u3001\u30d0\u30e9\u30f3\u30b9\u3092\u8003\u3048\u3066\u9078\u3076\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"tutorial2/font/#\u66f8\u4f53","title":"\u66f8\u4f53","text":"<p>\u300c\u30e1\u30a4\u30ea\u30aa\u300d\u300cArial\u300d\u306a\u3069\u3001\u30d5\u30a9\u30f3\u30c8\u306e\u7a2e\u985e\u3092\u66f8\u4f53\u3068\u547c\u3073\u307e\u3059\u3002\u66f8\u4f53\u306f\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\u66f8\u4f53\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u66f8\u4f53\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002</p>"},{"location":"tutorial2/font/#\u30d5\u30a9\u30f3\u30c8\u30b9\u30bf\u30a4\u30eb","title":"\u30d5\u30a9\u30f3\u30c8\u30b9\u30bf\u30a4\u30eb","text":"<p>\u4e00\u90e8\u306e\u30d5\u30a9\u30f3\u30c8\u306f\u3001\u30d5\u30a9\u30f3\u30c8\u30b9\u30bf\u30a4\u30eb <code>FontStyle</code> \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u592a\u5b57\u3084\u659c\u4f53\u3001\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30d5\u30a9\u30f3\u30c8\u306a\u3069\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\u30d5\u30a9\u30f3\u30c8\u30b9\u30bf\u30a4\u30eb\u306f\u3001\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\u30d5\u30a9\u30f3\u30c8\u30b9\u30bf\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u901a\u5e38\u306e\u30d5\u30a9\u30f3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"tutorial2/font/#\u30c6\u30ad\u30b9\u30c8\u30b9\u30bf\u30a4\u30eb","title":"\u30c6\u30ad\u30b9\u30c8\u30b9\u30bf\u30a4\u30eb","text":"<p>SDF / MSDF \u65b9\u5f0f\u306e\u30d5\u30a9\u30f3\u30c8\u3067\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u30b9\u30bf\u30a4\u30eb <code>TextStyle</code> \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u6587\u5b57\u306e\u63cf\u753b\u6642\u306b\u5f71\u3084\u8f2a\u90ed\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002\u30c6\u30ad\u30b9\u30c8\u30b9\u30bf\u30a4\u30eb\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u753b\u3059\u308b\u3068\u304d\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c6\u30ad\u30b9\u30c8\u30b9\u30bf\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u901a\u5e38\u306e\u30b9\u30bf\u30a4\u30eb\u3067\u63cf\u753b\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"tutorial2/font/#\u30d5\u30a9\u30f3\u30c8\u306e\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af","title":"\u30d5\u30a9\u30f3\u30c8\u306e\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af","text":"<p>1 \u3064\u306e\u66f8\u4f53\u3067\u306f\u3001\u3059\u3079\u3066\u306e\u6587\u5b57\u3092\u30ab\u30d0\u30fc\u3067\u304d\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u5225\u306e\u66f8\u4f53\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u3068\u3057\u3066\u767b\u9332\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u30e1\u30a4\u30f3\u306e\u66f8\u4f53\u3067\u30ab\u30d0\u30fc\u3067\u304d\u306a\u3044\u6587\u5b57\u3092\u5225\u306e\u66f8\u4f53\u3067\u63cf\u753b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4e3b\u306b\u30c6\u30ad\u30b9\u30c8\u5185\u306b\u7d75\u6587\u5b57\u3084\u8907\u6570\u306e\u8a00\u8a9e\u3092\u542b\u307f\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial2/font/#311-font","title":"31.1 Font","text":"<p>\u30d5\u30a9\u30f3\u30c8\u306f <code>Font</code> \u30af\u30e9\u30b9\u3067\u7ba1\u7406\u3057\u307e\u3059\u3002<code>Font \u5909\u6570\u540d{ \u30d5\u30a9\u30f3\u30c8\u30b5\u30a4\u30ba };</code> \u3068\u66f8\u304f\u3053\u3068\u3067\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u65b9\u5f0f\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30d5\u30a9\u30f3\u30c8\u306e\u4f5c\u6210\u306f\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u305f\u3081\u3001\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d\u3067\u884c\u3044\u307e\u3059\u3002</p> <p>\u4f5c\u6210\u3057\u305f\u30d5\u30a9\u30f3\u30c8 <code>font</code> \u3092\u4f7f\u3063\u3066\u3001</p> <ul> <li><code>font(\u30c6\u30ad\u30b9\u30c8).draw(x, y, color);</code></li> <li><code>font(\u30c6\u30ad\u30b9\u30c8).draw(pos, color);</code></li> </ul> <p>\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u30c6\u30ad\u30b9\u30c8\u3092\u3001\u4f4d\u7f6e\u3001\u8272\u3092\u6307\u5b9a\u3057\u3066\u8868\u793a\u3057\u307e\u3059\u3002<code>color</code> \u3092\u7701\u7565\u3059\u308b\u3068\u767d\u8272\u306b\u306a\u308a\u307e\u3059\u3002</p> <p><code>font(\u30c6\u30ad\u30b9\u30c8)</code> \u306e\u30c6\u30ad\u30b9\u30c8\u306e\u90e8\u5206\u306b\u306f\u3001\u6587\u5b57\u5217\u3060\u3051\u3067\u306a\u304f\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u306a\u5024\u3082\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u57fa\u672c\u30b5\u30a4\u30ba 50 \u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\nconst Font font{ 50 };\nwhile (System::Update())\n{\n// \u5de6\u4e0a\u4f4d\u7f6e (40, 40) \u304b\u3089\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f\nfont(U\"Hello, Siv3D!\").draw(40, 40);\n// \u6587\u5b57\u5217\u4ee5\u5916\u3092\u6e21\u3059\u3068\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff08\u6587\u5b57\u5217\u5316\uff09\u3055\u308c\u308b\nfont(Cursor::Pos()).draw(50, 300);\n// \u8907\u6570\u6e21\u3059\u3068\u3001\u305d\u308c\u305e\u308c\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u305f\u6587\u5b57\u5217\u3092\u3064\u306a\u3052\u308b\nfont(123, U\"ABC\").draw(50, 400, ColorF{ 0.5, 1.0, 0.5 });\nfont(U\"{}/{}/{}\"_fmt(2023, 12, 31)).draw(50, 500, ColorF{ 1.0, 0.5, 0.0 });\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#312-\u6539\u884c\u3059\u308b","title":"31.2 \u6539\u884c\u3059\u308b","text":"<p>\u30c6\u30ad\u30b9\u30c8\u306e\u4e2d\u306b\u6539\u884c\u6587\u5b57 <code>'\\n'</code> \u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3068\u3001\u305d\u3053\u3067\u6539\u884c\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u57fa\u672c\u30b5\u30a4\u30ba 50 \u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\nconst Font font{ 50 };\nwhile (System::Update())\n{\nfont(U\"Hello,\\nSiv3D\\n\\n!!!\").draw(40, 40);\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#313-\u30d5\u30a9\u30f3\u30c8\u306e\u57fa\u672c\u30b5\u30a4\u30ba","title":"31.3 \u30d5\u30a9\u30f3\u30c8\u306e\u57fa\u672c\u30b5\u30a4\u30ba","text":"<p><code>Font</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u7b2c 1 \u5f15\u6570\u306b\u306f\u30d5\u30a9\u30f3\u30c8\u306e\u57fa\u672c\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u5358\u4f4d\u306f\u30d4\u30af\u30bb\u30eb\u3067\u3059\u3002\u57fa\u672c\u30b5\u30a4\u30ba\u306f\u3042\u3068\u304b\u3089\u5909\u66f4\u3067\u304d\u307e\u305b\u3093\u3002</p> <p>1 \u3064\u306e Font \u304b\u3089\u3055\u307e\u3056\u307e\u306a\u30b5\u30a4\u30ba\u306e\u6587\u5b57\u3092\u63cf\u304f\u306b\u306f</p> <p>\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u65b9\u5f0f\u306e\u30d5\u30a9\u30f3\u30c8\u306f\u3001\u57fa\u672c\u30b5\u30a4\u30ba\u3068\u540c\u3058\u5927\u304d\u3055\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u753b\u3059\u308b\u3053\u3068\u304c\u60f3\u5b9a\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30b5\u30a4\u30ba\u5225\u306b\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u30021 \u3064\u306e <code>Font</code> \u304b\u3089\u3055\u307e\u3056\u307e\u306a\u30b5\u30a4\u30ba\u306e\u6587\u5b57\u3092\u63cf\u304f\u306b\u306f\u3001\u5f8c\u8ff0\u3059\u308b SDF / MSDF \u65b9\u5f0f\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u57fa\u672c\u30b5\u30a4\u30ba 20 \u306e\u30d5\u30a9\u30f3\u30c8\nconst Font font20{ 20 };\n// \u57fa\u672c\u30b5\u30a4\u30ba 40 \u306e\u30d5\u30a9\u30f3\u30c8\nconst Font font40{ 40 };\n// \u57fa\u672c\u30b5\u30a4\u30ba 60 \u306e\u30d5\u30a9\u30f3\u30c8\nconst Font font60{ 60 };\n// \u57fa\u672c\u30b5\u30a4\u30ba 80 \u306e\u30d5\u30a9\u30f3\u30c8\nconst Font font80{ 80 };\nconst String text = U\"Hello, Siv3D!\";\nwhile (System::Update())\n{\nfont20(text).draw(40, 40);\nfont40(text).draw(40, 80);\nfont60(text).draw(40, 140);\nfont80(text).draw(40, 220);\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#314-\u6a19\u6e96\u66f8\u4f53","title":"31.4 \u6a19\u6e96\u66f8\u4f53","text":"<p>Siv3D \u306b\u306f\u7570\u306a\u308b\u592a\u3055\u306e 7 \u7a2e\u985e\u306e\u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8\u3068\u30015 \u5730\u57df\u5411\u3051\u306e CJK\uff08\u4e2d\u56fd\u8a9e\u30fb\u97d3\u56fd\u8a9e\u30fb\u65e5\u672c\u8a9e\u5bfe\u5fdc\uff09\u30d5\u30a9\u30f3\u30c8\u3001\u767d\u9ed2\u7d75\u6587\u5b57\u30d5\u30a9\u30f3\u30c8\u3001\u30ab\u30e9\u30fc\u7d75\u6587\u5b57\u30d5\u30a9\u30f3\u30c8\u304c\u540c\u68b1\u3055\u308c\u3066\u3044\u307e\u3059\u3002<code>Font</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u304a\u3044\u3066 <code>Typeface::</code> \u3067\u66f8\u4f53\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u308c\u3089\u306e\u66f8\u4f53\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u4f55\u3082\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408 <code>Typeface::Regular</code> \u304c\u9078\u629e\u3055\u308c\u307e\u3059\u3002</p> Typeface \u8aac\u660e <code>Typeface::Thin</code> \u7d30\u3044\u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8 <code>Typeface::Light</code> \u3084\u3084\u7d30\u3044\u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8 <code>Typeface::Regular</code> \u901a\u5e38\u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8 <code>Typeface::Medium</code> \u3084\u3084\u592a\u3044\u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8 <code>Typeface::Bold</code> \u592a\u3044\u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8 <code>Typeface::Heavy</code> \u3068\u3066\u3082\u592a\u3044\u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8 <code>Typeface::Black</code> \u6700\u3082\u592a\u3044\u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8 <code>Typeface::CJK_Regular_JP</code> \u65e5\u672c\u8a9e\u30c7\u30b6\u30a4\u30f3\u306e CJK \u30d5\u30a9\u30f3\u30c8 <code>Typeface::CJK_Regular_KR</code> \u97d3\u56fd\u8a9e\u30c7\u30b6\u30a4\u30f3\u306e CJK \u30d5\u30a9\u30f3\u30c8 <code>Typeface::CJK_Regular_SC</code> \u7c21\u4f53\u5b57\u30c7\u30b6\u30a4\u30f3\u306e CJK \u30d5\u30a9\u30f3\u30c8 <code>Typeface::CJK_Regular_TC</code> \u53f0\u6e7e\u7e41\u4f53\u5b57\u30c7\u30b6\u30a4\u30f3\u306e CJK \u30d5\u30a9\u30f3\u30c8 <code>Typeface::CJK_Regular_HK</code> \u9999\u6e2f\u7e41\u4f53\u5b57\u30c7\u30b6\u30a4\u30f3\u306e CJK \u30d5\u30a9\u30f3\u30c8 <code>Typeface::MonochromeEmoji</code> \u30e2\u30ce\u30af\u30ed\u7d75\u6587\u5b57\u30d5\u30a9\u30f3\u30c8 <code>Typeface::ColorEmoji</code> \u30ab\u30e9\u30fc\u7d75\u6587\u5b57\u30d5\u30a9\u30f3\u30c8 <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font fontThin{ 36, Typeface::Thin };\nconst Font fontLight{ 36, Typeface::Light };\nconst Font fontRegular{ 36, Typeface::Regular };\nconst Font fontMedium{ 36, Typeface::Medium };\nconst Font fontBold{ 36, Typeface::Bold };\nconst Font fontHeavy{ 36, Typeface::Heavy };\nconst Font fontBlack{ 36, Typeface::Black };\nconst Font fontJP{ 36, Typeface::CJK_Regular_JP };\nconst Font fontKR{ 36, Typeface::CJK_Regular_KR };\nconst Font fontSC{ 36, Typeface::CJK_Regular_SC };\nconst Font fontTC{ 36, Typeface::CJK_Regular_TC };\nconst Font fontHK{ 36, Typeface::CJK_Regular_HK };\nconst Font fontMono{ 36, Typeface::MonochromeEmoji };\n// \u30ab\u30e9\u30fc\u7d75\u6587\u5b57\u30d5\u30a9\u30f3\u30c8\u306f\u3001\u30b5\u30a4\u30ba\u306e\u6307\u5b9a\u304c\u7121\u8996\u3055\u308c\u307e\u3059\nconst Font fontEmoji{ 36, Typeface::ColorEmoji };\nconst String s0 = U\"Hello, Siv3D!\";\nconst String s1 = U\"\u3053\u3093\u306b\u3061\u306f \u4f60\u597d \uc548\ub155\ud558\uc138\uc694 \u9aa8\u66dc\u559d\u611b\u9059\u6247\";\nconst String s2 = U\"\ud83d\udc08\ud83d\udc15\ud83d\ude80\";\nwhile (System::Update())\n{\nfontThin(s0).draw(40, 20);\nfontLight(s0).draw(40, 60);\nfontRegular(s0).draw(40, 100);\nfontMedium(s0).draw(40, 140);\nfontBold(s0).draw(40, 180);\nfontHeavy(s0).draw(40, 220);\nfontBlack(s0).draw(40, 260);\nfontJP(s1).draw(40, 300);\nfontKR(s1).draw(40, 340);\nfontSC(s1).draw(40, 380);\nfontTC(s1).draw(40, 420);\nfontHK(s1).draw(40, 460);\nfontMono(s2).draw(340, 20);\nfontEmoji(s2).draw(340, 60);\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#315-\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b","title":"31.5 \u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b","text":"<p>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u4e0a\u306b\u3042\u308b\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089 <code>Font</code> \u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001<code>Font</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u3001\u8aad\u307f\u8fbc\u307f\u305f\u3044\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u6e21\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u306f\u3001\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u30d5\u30a9\u30eb\u30c0\uff08<code>App</code> \u30d5\u30a9\u30eb\u30c0\uff09\u3092\u57fa\u6e96\u3068\u3059\u308b\u76f8\u5bfe\u30d1\u30b9\u304b\u3001\u7d76\u5bfe\u30d1\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p>\u4f8b\u3048\u3070 <code>U\"example/font/RocknRoll/RocknRollOne-Regular.ttf\"</code> \u3068\u3059\u308b\u3068\u3001\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u30d5\u30a9\u30eb\u30c0\uff08\u958b\u767a\u4e2d\u306f <code>App</code> \u30d5\u30a9\u30eb\u30c0\uff09\u306e <code>example/font/RocknRoll</code> \u30d5\u30a9\u30eb\u30c0\u306e <code>RocknRollOne-Regular.ttf</code> \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// RocknRollOne-Regular.ttf \u3092\u30ed\u30fc\u30c9\u3057\u3066\u4f7f\u3046\nconst Font font{ 50, U\"example/font/RocknRoll/RocknRollOne-Regular.ttf\" };\nwhile (System::Update())\n{\nfont(U\"Hello, Siv3D!\\n\u3053\u3093\u306b\u3061\u306f\uff01\").draw(40, 40);\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#316-pc-\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u3046","title":"31.6 PC \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u3046","text":"<p>PC \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u30d5\u30a9\u30f3\u30c8\u306f OS \u3054\u3068\u306b\u7279\u6b8a\u306a\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u30d5\u30a9\u30eb\u30c0\u306e\u30d1\u30b9\u3092 <code>FileSystem::GetFolderPath()</code> \u3067\u53d6\u5f97\u3057\u3001\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u540d\u3068\u3064\u306a\u3052\u308b\u3053\u3068\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u69cb\u7bc9\u3067\u304d\u307e\u3059\u3002<code>FileSystem::GetFolderPath()</code> \u306b\u6e21\u3059 <code>SpecialFolder</code> \u306e\u7a2e\u985e\u3068 OS \u306b\u3088\u3063\u3066\u53d6\u5f97\u3067\u304d\u308b\u30d1\u30b9\u306e\u5bfe\u5fdc\u8868\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002</p> Windows macOS Linux <code>SpecialFolder::SystemFonts</code> (OS):/WINDOWS/Fonts/ /System/Library/Fonts/ /usr/share/fonts/ <code>SpecialFolder::LocalFonts</code> (OS):/WINDOWS/Fonts/ /Library/Fonts/ /usr/local/share/fonts/(\u5b58\u5728\u3059\u308b\u5834\u5408) <code>SpecialFolder::UserFonts</code> (OS):/WINDOWS/Fonts/ ~/Library/Fonts/ /usr/local/share/fonts/(\u5b58\u5728\u3059\u308b\u5834\u5408) <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n# if SIV3D_PLATFORM(WINDOWS)\nconst FilePath path = (FileSystem::GetFolderPath(SpecialFolder::SystemFonts) + U\"arial.ttf\");\n# elif SIV3D_PLATFORM(MACOS)\nconst FilePath path = (FileSystem::GetFolderPath(SpecialFolder::SystemFonts) + U\"Helvetica.dfont\");\n# endif\nPrint &lt;&lt; path;\nconst Font font{ 60, path };\nwhile (System::Update())\n{\n# if SIV3D_PLATFORM(WINDOWS)\nfont(U\"Arial\").draw(40, 40);\n# elif SIV3D_PLATFORM(MACOS)\nfont(U\"Helvetica\").draw(40, 40);\n# endif\n}\n}\n</code></pre> <p><code>FilePath</code> \u306f <code>String</code> \u306e\u5225\u540d\u3067\u3059\u3002<code>String</code> \u3068\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u307e\u3059\u3002</p> <p><code>SIV3D_PLATFORM(WINDOWS)</code> \u3084 <code>SIV3D_PLATFORM(MACOS)</code> \u306f Siv3D \u3067\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5225\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3068\u304d\u306b\u4f7f\u3048\u308b\u30de\u30af\u30ed\u3067\u3059\u3002</p>"},{"location":"tutorial2/font/#317-\u7a7a\u306e\u30d5\u30a9\u30f3\u30c8","title":"31.7 \u7a7a\u306e\u30d5\u30a9\u30f3\u30c8","text":"<p><code>Font</code> \u578b\u306e\u5909\u6570\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u7a7a\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u30d5\u30a9\u30f3\u30c8\u306e\u4f5c\u6210\u3084\u30ed\u30fc\u30c9\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u3082\u7a7a\u306e\u30d5\u30a9\u30f3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u7a7a\u306e\u30d5\u30a9\u30f3\u30c8\u306f\u3001\u4f7f\u7528\u3057\u3066\u3082\u30a8\u30e9\u30fc\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u304c\u3001\u63cf\u753b\u3057\u3066\u3082\u4f55\u3082\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u3002</p> <p>\u7a7a\u306e\u30d5\u30a9\u30f3\u30c8\u3067\u3042\u308b\u304b\u3092\u8abf\u3079\u308b\u306b\u306f\u3001<code>if (font.isEmpty())</code>, <code>if (font)</code>, <code>if (not font)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nFont font1;\nPrint &lt;&lt; font1.isEmpty();\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4ee3\u5165\u3059\u308b\nfont1 = Font{ 40 };\nPrint &lt;&lt; font1.isEmpty();\n// \u5b58\u5728\u3057\u306a\u3044\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\nconst Font font2{ 40, U\"example/aaa.ttf\" };\nif (not font2)\n{\nPrint &lt;&lt; U\"Failed to load a font\";\n}\nwhile (System::Update())\n{\n// \u7a7a\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u63cf\u753b\u3059\u308b\nfont2(U\"Hello, Siv3D!\").draw(40, 40);\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#318-\u30d5\u30a9\u30f3\u30c8\u30b9\u30bf\u30a4\u30eb\u3092\u5909\u3048\u308b","title":"31.8 \u30d5\u30a9\u30f3\u30c8\u30b9\u30bf\u30a4\u30eb\u3092\u5909\u3048\u308b","text":"<p><code>Font</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b <code>FontStyle</code> \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30a4\u30bf\u30ea\u30c3\u30af\u3084\u30dc\u30fc\u30eb\u30c9\u306a\u3069\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u30d5\u30a9\u30f3\u30c8\u306b\u9069\u7528\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ 50, Typeface::Regular };\n// \u30dc\u30fc\u30eb\u30c9\nconst Font fontBold{ 50, Typeface::Regular, FontStyle::Bold };\n// \u30a4\u30bf\u30ea\u30c3\u30af\nconst Font fontItalic{ 50, Typeface::Regular, FontStyle::Italic };\n// \u30dc\u30fc\u30eb\u30c9\u30fb\u30a4\u30bf\u30ea\u30c3\u30af\nconst Font fontBoldItalic{ 50, Typeface::Regular, FontStyle::BoldItalic };\nconst String text = U\"Hello, Siv3D! \u3053\u3093\u306b\u3061\u306f\u3002\";\nwhile (System::Update())\n{\nfont(text).draw(40, 40);\nfontBold(text).draw(40, 100);\nfontItalic(text).draw(40, 160);\nfontBoldItalic(text).draw(40, 220);\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#319-\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u3046","title":"31.9 \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u3046","text":"<p>\u66f8\u4f53\u304c\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30d5\u30a9\u30f3\u30c8\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u30d5\u30a9\u30f3\u30c8\u30b9\u30bf\u30a4\u30eb\u306b <code>FontStyle::Bitmap</code> \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3055\u308c\u305a\u30c9\u30c3\u30c8\u611f\u3092\u4fdd\u3063\u305f\u6587\u5b57\u3092\u63cf\u753b\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font1{ 32, U\"example/font/DotGothic16/DotGothic16-Regular.ttf\" };\nconst Font font2{ 32, U\"example/font/DotGothic16/DotGothic16-Regular.ttf\", FontStyle::Bitmap };\nconst Font font3{ 60, U\"example/font/DotGothic16/DotGothic16-Regular.ttf\" };\nconst Font font4{ 60, U\"example/font/DotGothic16/DotGothic16-Regular.ttf\", FontStyle::Bitmap };\n# if SIV3D_PLATFORM(WINDOWS)\nconst FilePath path = (FileSystem::GetFolderPath(SpecialFolder::SystemFonts) + U\"msgothic.ttc\");\nconst Font font5{ 16, path };\nconst Font font6{ 16, path, FontStyle::Bitmap };\n# endif\nconst String text = U\"Hello, Siv3D! \u3053\u3093\u306b\u3061\u306f\u3002\";\nwhile (System::Update())\n{\nfont1(text).draw(40, 40, Palette::Black);\nfont2(text).draw(40, 100, Palette::Black);\nfont3(text).draw(40, 160, Palette::Black);\nfont4(text).draw(40, 240, Palette::Black);\n# if SIV3D_PLATFORM(WINDOWS)\nfont5(text).draw(40, 360, Palette::Black);\nfont6(text).draw(40, 400, Palette::Black);\n# endif\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3110-\u81ea\u7531\u306b\u62e1\u5927\u7e2e\u5c0f\u3067\u304d\u308b-sdf--msdf-\u65b9\u5f0f\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u3046","title":"31.10 \u81ea\u7531\u306b\u62e1\u5927\u7e2e\u5c0f\u3067\u304d\u308b SDF / MSDF \u65b9\u5f0f\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u3046","text":"<p>SDF \u65b9\u5f0f / MSDF \u65b9\u5f0f\u3092\u4f7f\u3046\u3068\u3001\u6587\u5b57\u3054\u3068\u306e Distance field \u753b\u50cf\u3092\u751f\u6210\u3057\u3001\u57fa\u672c\u30b5\u30a4\u30ba\u4ee5\u4e0a\u306b\u62e1\u5927\u3057\u3066\u3082\u753b\u8cea\u304c\u7c97\u304f\u306a\u3089\u306a\u3044\u624b\u6cd5\u3067\u6587\u5b57\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002\u3055\u3089\u306b\u3001SDF / MSDF \u306b\u306f\u5f71\u3084\u8f2a\u90ed\u306a\u3069\u306e\u30a8\u30d5\u30a7\u30af\u30c8\u3092 1 \u56de\u306e draw \u5185\u3067\u884c\u3048\u308b\u4ed5\u7d44\u307f\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>\u5404\u65b9\u5f0f\u306e\u5229\u70b9\u3068\u6b20\u70b9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002</p> \u63cf\u753b\u65b9\u5f0f \u7e2e\u5c0f \u62e1\u5927 \u5f71 \u8f2a\u90ed \u5b9f\u884c\u6642\u8ca0\u8377 \u5099\u8003 \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u65b9\u5f0f<code>FontMethod::Bitmap</code> \u3007 \u25b3 \u3007(2 \u56de draw) \u00d7 \u4f4e \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u624b\u6cd5 SDF \u65b9\u5f0f<code>FontMethod::SDF</code> \u3007 \u3007 \u25ce \u25ce \u4e2d \u6587\u5b57\u306e\u89d2\u304c\u4e38\u304f\u306a\u308b\u306a\u3069\u3001\u7d30\u90e8\u306e\u60c5\u5831\u304c\u5931\u308f\u308c\u3084\u3059\u3044 MSDF \u65b9\u5f0f<code>FontMethod::MSDF</code> \u25ce \u25ce \u3007 \u3007 \u9ad8 SDF \u3088\u308a\u9ad8\u54c1\u8cea <p>SDF / MSDF \u65b9\u5f0f\u6642\u306b\u8a2d\u5b9a\u3059\u308b\u57fa\u672c\u30b5\u30a4\u30ba\u306f\u63cf\u753b\u3059\u308b\u5b57\u5f62\u306e\u8907\u96d1\u3055\u306b\u5fdc\u3058\u3066\u6c7a\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u753b\u6570\u306e\u5c11\u306a\u3044\u6570\u5b57\u3084\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3001\u66f2\u7dda\u7684\u3067\u30b7\u30f3\u30d7\u30eb\u306a\u5b57\u5f62\u3067\u3042\u308c\u3070\u3001\u57fa\u672c\u30b5\u30a4\u30ba\u304c 40 \u4ee5\u4e0b\u3067\u3082\u304d\u308c\u3044\u306a\u6587\u5b57\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3067\u304d\u307e\u3059\u304c\u3001\u8907\u96d1\u306a\u5b57\u5f62\u306b\u306a\u308b\u307b\u3069\u3001\u5c0f\u3055\u306a Distance Field \u3067\u306f\u63cf\u753b\u7d50\u679c\u304c\u4e71\u308c\u305f\u308a\u3001\u30ce\u30a4\u30ba\u304c\u76ee\u7acb\u3064\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u4e00\u65b9\u3067\u3001\u5927\u304d\u3059\u304e\u308b\u3068\u63cf\u753b\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002SDF / MSDF \u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u4f7f\u7528\u3059\u308b\u969b\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u306e\u63cf\u753b\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u3001\u66f8\u4f53\u306b\u5fdc\u3058\u3066\u9069\u5207\u306a\u57fa\u672c\u30b5\u30a4\u30ba\u3092\u9078\u629e\u3057\u307e\u3057\u3087\u3046\u3002</p> <p><code>.draw()</code> \u306e\u7b2c 1 \u5f15\u6570\u3067\u6587\u5b57\u306e\u63cf\u753b\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u5404\u65b9\u5f0f\u306b\u3064\u3044\u3066\u3001\u57fa\u672c\u30b5\u30a4\u30ba\u3088\u308a\u5927\u304d\u3044\u63cf\u753b\u30b5\u30a4\u30ba\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u3044\u305f\u3068\u304d\u306e\u7d50\u679c\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> <ul> <li><code>font(\u30c6\u30ad\u30b9\u30c8).draw(\u63cf\u753b\u30b5\u30a4\u30ba, x, y, color);</code></li> <li><code>font(\u30c6\u30ad\u30b9\u30c8).draw(\u63cf\u753b\u30b5\u30a4\u30ba, pos, color);</code></li> </ul> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u57fa\u672c\u30b5\u30a4\u30ba\nconst int32 baseSize = 40;\nconst Font font{ baseSize, Typeface::Bold };\nconst Font fontSDF{ FontMethod::SDF, baseSize, Typeface::Bold };\nconst Font fontMSDF{ FontMethod::MSDF, baseSize, Typeface::Bold };\nconst String text = U\"Hello, Siv3D!\";\nwhile (System::Update())\n{\n// \u6587\u5b57\u306e\u30b5\u30a4\u30ba\uff08\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u57fa\u672c\u30b5\u30a4\u30ba\u3067\u63cf\u304b\u308c\u308b\uff09\nconst double fontSize = 120;\nconst ColorF color{ 0.1 };\n// \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u65b9\u5f0f\nfont(text).draw(20, 20, color);\nfont(text).draw(fontSize, 20, 50, color);\n// SDF \u65b9\u5f0f\nfontSDF(text).draw(20, 220, color);\nfontSDF(text).draw(fontSize, 20, 250, color);\n// MSDF \u65b9\u5f0f\nfontMSDF(text).draw(20, 420, color);\nfontMSDF(text).draw(fontSize, 20, 450, color);\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3111-\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u3092\u6307\u5b9a\u3057\u3066\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f","title":"31.11 \u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u3092\u6307\u5b9a\u3057\u3066\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f","text":"<p>\u6587\u5b57\u306e\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u306e\u958b\u59cb\u4f4d\u7f6e\u3092\u6307\u5b9a\u3057\u3066\u63cf\u753b\u3057\u305f\u3044\u5834\u5408\u306f <code>.drawBase()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u7570\u306a\u308b\u30b5\u30a4\u30ba\u3084\u7a2e\u985e\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u3001\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u3092\u305d\u308d\u3048\u3066\u63cf\u753b\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font1{ 30, U\"example/font/RocknRoll/RocknRollOne-Regular.ttf\" };\nconst Font font2{ FontMethod::MSDF, 40, Typeface::Bold };\nconst String text = U\"Hello, Siv3D!\";\nwhile (System::Update())\n{\n// \u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u304c\u305d\u308d\u308f\u306a\u3044\nfont1(text).draw(40, 100);\nfont2(text).draw(20, 280, 100);\nfont2(text).draw(50, 440, 100);\nRect{ 0, 400, 800, 10 }.draw(Palette::Skyblue);\n// (40, 400) \u304c\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u306e\u958b\u59cb\u4f4d\u7f6e\u306b\u306a\u308b\u3088\u3046\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u753b\nfont1(text).drawBase(40, 400);\nCircle{ 40, 400 , 5 }.drawFrame(2, Palette::Red);\n// (280, 400) \u304c\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u306e\u958b\u59cb\u4f4d\u7f6e\u306b\u306a\u308b\u3088\u3046\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u753b\nfont2(text).drawBase(20, 280, 400);\nCircle{ 280, 400 , 5 }.drawFrame(2, Palette::Red);\n// (440, 400) \u304c\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u306e\u958b\u59cb\u4f4d\u7f6e\u306b\u306a\u308b\u3088\u3046\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u753b\nfont2(text).drawBase(50, 440, 400);\nCircle{ 440, 400 , 5 }.drawFrame(2, Palette::Red);\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3112-\u4e2d\u5fc3\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u753b\u3059\u308b","title":"31.12 \u4e2d\u5fc3\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u753b\u3059\u308b","text":"<p>\u30c6\u30ad\u30b9\u30c8\u306e\u5de6\u4e0a\u4f4d\u7f6e\u3067\u306f\u306a\u304f\u3001\u4e2d\u5fc3\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u63cf\u753b\u3059\u308b\u306b\u306f\u3001<code>.drawAt(x, y)</code> \u307e\u305f\u306f <code>.drawAt(pos)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <ul> <li><code>font(\u30c6\u30ad\u30b9\u30c8).drawAt(x, y, color);</code></li> <li><code>font(\u30c6\u30ad\u30b9\u30c8).drawAt(pos, color);</code></li> <li><code>font(\u30c6\u30ad\u30b9\u30c8).drawAt(\u63cf\u753b\u30b5\u30a4\u30ba, x, y, color);</code></li> <li><code>font(\u30c6\u30ad\u30b9\u30c8).drawAt(\u63cf\u753b\u30b5\u30a4\u30ba, pos, color);</code></li> </ul> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nconst Rect rect{ 100, 300, 160, 80 };\nwhile (System::Update())\n{\nfont(U\"C++\").drawAt(60, Vec2{ 400, 100 }, ColorF{ 0.11 });\nfont(U\"Hello, Siv3D!\").drawAt(30, Vec2{ 400, 200 }, ColorF{ 0.11 });\nrect.draw();\n// \u9577\u65b9\u5f62\u306e\u4e2d\u5fc3\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f\nfont(U\"Siv3D\").drawAt(30, rect.center(), ColorF{ 0.11 });\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3113-\u63cf\u753b\u306e\u57fa\u6e96\u4f4d\u7f6e\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b","title":"31.13 \u63cf\u753b\u306e\u57fa\u6e96\u4f4d\u7f6e\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b","text":"<p>\u5de6\u4e0a\u3001\u4e2d\u5fc3\u4ee5\u5916\u3092\u57fa\u6e96\u5ea7\u6a19\u3068\u3059\u308b\u5834\u5408\u306f\u3001\u6b21\u306e\u8868\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u3063\u3066\u3001<code>.draw(Arg::bottomRight(x, y))</code> \u3042\u308b\u3044\u306f <code>.draw(Arg::bottomRight = pos)</code> \u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001\u30c6\u30ad\u30b9\u30c8\u306e\u53f3\u4e0b\u304c <code>x, y</code> \u307e\u305f\u306f <code>pos</code> \u3067\u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u306b\u306a\u308b\u3088\u3046\u306b\u63cf\u753b\u3055\u308c\u307e\u3059\u3002</p> \u5ea7\u6a19\u6307\u5b9a \u8aac\u660e <code>Arg::topLeft</code> \u30c6\u30ad\u30b9\u30c8\u306e\u5de6\u4e0a\u306e\u4f4d\u7f6e\u3092\u6307\u5b9a\u3059\u308b\uff08\u901a\u5e38\u306e <code>.draw()</code> \u3068\u540c\u3058\uff09 <code>Arg::topCenter</code> \u30c6\u30ad\u30b9\u30c8\u306e\u4e0a\u8fba\u306e\u4e2d\u592e\u3092\u6307\u5b9a\u3059\u308b <code>Arg::topRight</code> \u30c6\u30ad\u30b9\u30c8\u306e\u53f3\u4e0a\u306e\u4f4d\u7f6e\u3092\u6307\u5b9a\u3059\u308b <code>Arg::leftCenter</code> \u30c6\u30ad\u30b9\u30c8\u306e\u5de6\u8fba\u306e\u4e2d\u592e\u3092\u6307\u5b9a\u3059\u308b <code>Arg::center</code> \u30c6\u30ad\u30b9\u30c8\u306e\u4e2d\u5fc3\u3092\u6307\u5b9a\u3059\u308b\uff08\u901a\u5e38\u306e <code>.drawAt()</code> \u3068\u540c\u3058\uff09 <code>Arg::rightCenter</code> \u30c6\u30ad\u30b9\u30c8\u306e\u53f3\u8fba\u306e\u4e2d\u592e\u3092\u6307\u5b9a\u3059\u308b <code>Arg::bottomLeft</code> \u30c6\u30ad\u30b9\u30c8\u306e\u5de6\u4e0b\u306e\u4f4d\u7f6e\u3092\u6307\u5b9a\u3059\u308b <code>Arg::bottomCenter</code> \u30c6\u30ad\u30b9\u30c8\u306e\u4e0b\u8fba\u306e\u4e2d\u592e\u3092\u6307\u5b9a\u3059\u308b <code>Arg::bottomRight</code> \u30c6\u30ad\u30b9\u30c8\u306e\u53f3\u4e0b\u306e\u4f4d\u7f6e\u3092\u6307\u5b9a\u3059\u308b <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nconst Rect rect{ 100, 300, 160, 80 };\nwhile (System::Update())\n{\nfont(U\"C++\").draw(60, Arg::topCenter = Vec2{ 400, 20 }, ColorF{ 0.11 });\nfont(U\"Hello, Siv3D!\").draw(30, Arg::topRight(780, 20), ColorF{ 0.11 });\nrect.draw();\n// \u9577\u65b9\u5f62\u306b\u53f3\u63c3\u3048\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f\nfont(U\"Siv3D\").draw(30, Arg::rightCenter = rect.rightCenter(), ColorF{ 0.11 });\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3114-\u30c6\u30ad\u30b9\u30c8\u304c\u63cf\u753b\u3055\u308c\u308b\u9818\u57df\u3092\u8abf\u3079\u308b","title":"31.14 \u30c6\u30ad\u30b9\u30c8\u304c\u63cf\u753b\u3055\u308c\u308b\u9818\u57df\u3092\u8abf\u3079\u308b","text":"<p><code>Font</code> \u306e <code>.draw()</code> \u3084 <code>.drawAt()</code> \u306f\u3001\u63cf\u753b\u3055\u308c\u305f\u9818\u57df\u3092 <code>RectF</code> \u578b\u3067\u8fd4\u3057\u307e\u3059\u3002<code>.region()</code> \u3084 <code>.regionAt()</code> \u3092\u4f7f\u3046\u3068\u3001\u63cf\u753b\u3092\u4f34\u308f\u305a\u306b\u305d\u306e\u9818\u57df\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nconst String text = U\"Hello, Siv3D!\";\nconst Vec2 pos{ 40, 40 };\n// font \u3092\u4f7f\u3063\u3066 text \u3092 pos \u306e\u4f4d\u7f6e\u306b\u63cf\u753b\u3057\u305f\u3068\u304d\u306e\u30c6\u30ad\u30b9\u30c8\u306e\u9818\u57df\u3092\u53d6\u5f97\nconst RectF rect = font(text).region(pos);\nwhile (System::Update())\n{\n// \u63cf\u753b\u9818\u57df\u306e\u9577\u65b9\u5f62\u3092\u4e8b\u524d\u306b\u5857\u308a\u3064\u3076\u3059\nrect.draw(Palette::Skyblue);\n// \u9577\u65b9\u5f62\u306e\u4e0a\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f\nfont(text).draw(pos, ColorF{ 0.25 });\n// \u30c6\u30ad\u30b9\u30c8\u306e\u9818\u57df\u3092\nfont(text)\n.drawAt(80, Scene::Center())\n.stretched(40, 0)\t// \u6a2a\u306b\u5e83\u3052\u3066\n.shearedX(20)\t\t// \u5e73\u884c\u56db\u8fba\u5f62\u306b\u3057\u3066\n.drawFrame(2);\t\t// \u67a0\u3092\u63cf\u304f\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3115-\u6307\u5b9a\u3057\u305f\u9577\u65b9\u5f62\u306e\u4e2d\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f","title":"31.15 \u6307\u5b9a\u3057\u305f\u9577\u65b9\u5f62\u306e\u4e2d\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f","text":"<p><code>Font::draw()</code> \u306b\u3001\u5ea7\u6a19\u306e\u4ee3\u308f\u308a\u306b <code>Rect</code> \u307e\u305f\u306f <code>RectF</code> \u3092\u6e21\u3059\u3068\u3001\u30c6\u30ad\u30b9\u30c8\u3092\u305d\u306e\u9577\u65b9\u5f62\u306e\u4e2d\u306b\u53ce\u307e\u308b\u3088\u3046\u306b\u63cf\u753b\u3057\u307e\u3059\u3002\u30c6\u30ad\u30b9\u30c8\u306e\u3059\u3079\u3066\u306e\u6587\u5b57\u304c\u9577\u65b9\u5f62\u5185\u306b\u53ce\u307e\u3063\u305f\u5834\u5408\u3001\u95a2\u6570\u306f <code>true</code> \u3092\u8fd4\u3057\u307e\u3059\u3002\u4e00\u65b9\u3001\u30c6\u30ad\u30b9\u30c8\u304c\u3042\u3075\u308c\u308b\u5834\u5408\u3001\u6700\u5f8c\u306e\u6587\u5b57\u304c <code>\u2026</code> \u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u3001\u95a2\u6570\u306f <code>false</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nconst String text = U\"The quick brown fox jumps over the lazy dog.\";\nconst Rect rect1{ 50, 20, 200, 100 };\nconst Rect rect2{ 50, 160, 300, 100 };\nconst Rect rect3{ 50, 300, 400, 100 };\nwhile (System::Update())\n{\nrect1.draw();\nif (not font(text).draw(24, rect1.stretched(-10), ColorF{ 0.11 }))\n{\n// \u6587\u5b57\u304c\u7701\u7565\u3055\u308c\u305f\u3089\u8d64\u67a0\u3092\u63cf\u304f\nrect1.drawFrame(0, 5, Palette::Red);\n}\nrect2.draw();\nif (not font(text).draw(24, rect2.stretched(-10), ColorF{ 0.11 }))\n{\n// \u6587\u5b57\u304c\u7701\u7565\u3055\u308c\u305f\u3089\u8d64\u67a0\u3092\u63cf\u304f\nrect2.drawFrame(0, 5, Palette::Red);\n}\nrect3.stretched(10).draw();\nif (not font(text).draw(24, rect3.stretched(-10), ColorF{ 0.11 }))\n{\n// \u6587\u5b57\u304c\u7701\u7565\u3055\u308c\u305f\u3089\u8d64\u67a0\u3092\u63cf\u304f\nrect3.drawFrame(0, 5, Palette::Red);\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3116-\u30c6\u30ad\u30b9\u30c8\u3092-1-\u6587\u5b57\u305a\u3064\u8868\u793a\u3059\u308b","title":"31.16 \u30c6\u30ad\u30b9\u30c8\u3092 1 \u6587\u5b57\u305a\u3064\u8868\u793a\u3059\u308b","text":"<p><code>.substr(offset, count)</code> \u3067\u3001\u6587\u5b57\u5217\u306e <code>offset</code> \u6587\u5b57\u76ee\u304b\u3089 <code>count</code> \u6587\u5b57\u306e\u90e8\u5206\u6587\u5b57\u5217\uff08<code>String</code>\uff09\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>offset</code> \u306f 0 \u304b\u3089\u59cb\u307e\u308a\u307e\u3059\u3002<code>count</code> \u304c\u7701\u7565\u3055\u308c\u305f\u5834\u5408\u306f\u3001<code>offset</code> \u6587\u5b57\u76ee\u304b\u3089\u672b\u5c3e\u307e\u3067\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002<code>offset</code> \u304c\u5b9f\u969b\u306e\u6587\u5b57\u5217\u306e\u9577\u3055\u3088\u308a\u5927\u304d\u3044\u5834\u5408\u306f\u3001\u672b\u5c3e\u307e\u3067\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <p>\u3053\u308c\u3068 <code>Stopwatch</code> \u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u6587\u5b57\u5217\u3092 1 \u6587\u5b57\u305a\u3064\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nconst String text = U\"The quick brown fox\\njumps over the lazy dog.\";\nStopwatch stopwatch{ StartImmediately::Yes };\nwhile (System::Update())\n{\nconst int32 count = (stopwatch.ms() / 30);\nfont(text.substr(0, count)).draw(40, Vec2{ 40, 40 }, ColorF{ 0.11 });\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3117-\u6587\u5b57\u306b\u5f71\u306e\u52b9\u679c\u3092\u4ed8\u3051\u308b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u65b9\u5f0f2-\u56de\u63cf\u753b\u3059\u308b\u624b\u6cd5","title":"31.17 \u6587\u5b57\u306b\u5f71\u306e\u52b9\u679c\u3092\u4ed8\u3051\u308b\uff08\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u65b9\u5f0f\u30012 \u56de\u63cf\u753b\u3059\u308b\u624b\u6cd5\uff09","text":"<p>\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u65b9\u5f0f\u306e\u30d5\u30a9\u30f3\u30c8\u3067\u306f\u3001\u5ea7\u6a19\u3092\u305a\u3089\u3057\u3066 2\u56de \u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f\u3053\u3068\u3067\u3001\u5f71\u306e\u52b9\u679c\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p> <p><code>Vec2</code> \u306e\u30e1\u30f3\u30d0\u95a2\u6570 <code>.movedBy(x, y)</code> \u306f\u3001\u6307\u5b9a\u3057\u305f\u5024\u3060\u3051\u8981\u7d20\u3092\u52a0\u7b97\u3057\u305f <code>Vec2</code> \u3092\u4f5c\u6210\u3059\u308b\u95a2\u6570\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.7, 0.9, 0.8 });\nconst Font font{ 100, Typeface::Bold };\nconst Vec2 center{ 400, 150 };\nconst String text = U\"Hello, Siv3D!\";\nwhile (System::Update())\n{\n// center \u304b\u3089 (4, 4) \u305a\u3089\u3057\u305f\u4f4d\u7f6e\u3092\u4e2d\u5fc3\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f\nfont(text).drawAt(center.movedBy(4, 4), ColorF{ 0.0, 0.5 });\n// center \u3092\u4e2d\u5fc3\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f\nfont(text).drawAt(center);\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3118-\u6587\u5b57\u306b\u5f71\u306e\u52b9\u679c\u3092\u4ed8\u3051\u308bsdf--msdf-\u65b9\u5f0f","title":"31.18 \u6587\u5b57\u306b\u5f71\u306e\u52b9\u679c\u3092\u4ed8\u3051\u308b\uff08SDF / MSDF \u65b9\u5f0f\uff09","text":"<p>SDF / MSDF \u65b9\u5f0f\u306e\u30d5\u30a9\u30f3\u30c8\u306f\u3001<code>TextStyle</code> \u3092 <code>.draw()</code> \u3084 <code>.drawAt()</code>, <code>.drawBase()</code> \u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u5f71\u3084\u8f2a\u90ed\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u4ed8\u4e0e\u3067\u304d\u307e\u3059\u3002SDF / MSDF \u65b9\u5f0f\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u6587\u5b57\u3092\u63cf\u753b\u3059\u308b\u969b\u306b\u5f71\u306e\u52b9\u679c\u3092\u4ed8\u3051\u308b\u306b\u306f <code>TextStyle::Shadow(\u5f71\u306e\u30aa\u30d5\u30bb\u30c3\u30c8, \u5f71\u306e\u8272)</code> \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002</p> <p>\u5f71\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u304c\u5927\u304d\u304f\u3001\u6587\u5b57\u306e Distance Field \u306e\u7bc4\u56f2\u5916\u306b\u53ca\u3093\u3060\u5834\u5408\u3001\u5f71\u304c\u9014\u5207\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u308c\u3092\u9632\u3050\u306b\u306f <code>Font</code> \u306e\u30e1\u30f3\u30d0\u95a2\u6570 <code>.setBufferThickness(Distance Field \u306e\u4f59\u767d\u306e\u30b5\u30a4\u30ba)</code> \u3067\u3001Distance Field \u3092\u5927\u304d\u3081\u306b\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 2 \u3067\u3059\u3002\u3053\u306e\u5024\u3092\u5927\u304d\u304f\u3059\u308b\u3068\u30e1\u30e2\u30ea\u6d88\u8cbb\u91cf\u3084\u63cf\u753b\u8ca0\u8377\u304c\u5897\u52a0\u3057\u307e\u3059\u304c\u3001\u5f71\u3084\u8f2a\u90ed\u306e\u52b9\u679c\u3092\u3088\u308a\u5927\u304d\u304f\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.7, 0.9, 0.8 });\nconst int32 baseSize = 40;\nconst int32 bufferThickness = 3;\nconst Font fontSDF{ FontMethod::SDF, baseSize, Typeface::Bold };\nfontSDF.setBufferThickness(bufferThickness);\nconst Font fontMSDF{ FontMethod::MSDF, baseSize, Typeface::Bold };\nfontMSDF.setBufferThickness(bufferThickness);\nconst String text = U\"Hello, Siv3D!\";\nwhile (System::Update())\n{\nconst Vec2 shadowOffset{ 2, 2 };\nconst ColorF shadowColor{ 0.0, 0.5 };\nconst double fontSize = 100;\n// SDF \u65b9\u5f0f\nfontSDF(text).draw(TextStyle::Shadow(shadowOffset, shadowColor), 20, 20);\nfontSDF(text).draw(TextStyle::Shadow(shadowOffset, shadowColor), fontSize, 20, 60);\n// MSDF \u65b9\u5f0f\nfontMSDF(text).draw(TextStyle::Shadow(shadowOffset, shadowColor), 20, 220);\nfontMSDF(text).draw(TextStyle::Shadow(shadowOffset, shadowColor), fontSize, 20, 260);\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3119-\u6587\u5b57\u306b\u8f2a\u90ed\u3092\u4ed8\u3051\u308bsdf--msdf","title":"31.19 \u6587\u5b57\u306b\u8f2a\u90ed\u3092\u4ed8\u3051\u308b\uff08SDF / MSDF\uff09","text":"<p>SDF / MSDF \u65b9\u5f0f\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u6587\u5b57\u3092\u63cf\u753b\u3059\u308b\u969b\u306b\u8f2a\u90ed\u306e\u52b9\u679c\u3092\u4ed8\u3051\u308b\u306b\u306f</p> <ul> <li><code>TextStyle::Outline(\u8f2a\u90ed\u30b9\u30b1\u30fc\u30eb, \u8f2a\u90ed\u306e\u8272)</code></li> <li><code>TextStyle::Outline(\u5185\u5074\u65b9\u5411\u306e\u8f2a\u90ed\u30b9\u30b1\u30fc\u30eb, \u5916\u5074\u65b9\u5411\u306e\u8f2a\u90ed\u30b9\u30b1\u30fc\u30eb, \u8f2a\u90ed\u306e\u8272)</code></li> </ul> <p>\u306e\u3044\u305a\u308c\u304b\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002</p> <p>\u6587\u5b57\u306b\u8f2a\u90ed\u3068\u5f71\u3001\u4e21\u65b9\u306e\u52b9\u679c\u3092\u4ed8\u3051\u308b\u306b\u306f</p> <ul> <li><code>TextStyle::OutlineShadow(\u8f2a\u90ed\u30b9\u30b1\u30fc\u30eb, \u8f2a\u90ed\u306e\u8272, \u5f71\u306e\u30aa\u30d5\u30bb\u30c3\u30c8, \u5f71\u306e\u8272)</code></li> <li><code>TextStyle::OutlineShadow(\u5185\u5074\u65b9\u5411\u306e\u8f2a\u90ed\u30b9\u30b1\u30fc\u30eb, \u5916\u5074\u65b9\u5411\u306e\u8f2a\u90ed\u30b9\u30b1\u30fc\u30eb, \u8f2a\u90ed\u306e\u8272, \u5f71\u306e\u30aa\u30d5\u30bb\u30c3\u30c8, \u5f71\u306e\u8272)</code></li> </ul> <p>\u306e\u3044\u305a\u308c\u304b\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u8f2a\u90ed\u30b9\u30b1\u30fc\u30eb\u306e\u5358\u4f4d\u306f\u30d4\u30af\u30bb\u30eb\u3067\u306f\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.7, 0.9, 0.8 });\nconst int32 baseSize = 40;\nconst int32 bufferThickness = 3;\nconst Font fontSDF{ FontMethod::SDF, baseSize, Typeface::Bold };\nfontSDF.setBufferThickness(bufferThickness);\nconst Font fontMSDF{ FontMethod::MSDF, baseSize, Typeface::Bold };\nfontMSDF.setBufferThickness(bufferThickness);\nconst String text = U\"Hello, Siv3D!\";\nwhile (System::Update())\n{\nconst double outlineScale = 0.2;\nconst ColorF outlineColor{ 0.0, 0.3, 0.6 };\nconst Vec2 shadowOffset{ 2, 2 };\nconst ColorF shadowColor{ 0.0, 0.5 };\nconst double fontSize = 100;\n// SDF \u65b9\u5f0f\nfontSDF(text).draw(TextStyle::Outline(outlineScale, outlineColor), 20, 20);\nfontSDF(text).draw(TextStyle::Outline(outlineScale, outlineColor), fontSize, 20, 40);\nfontSDF(text).draw(TextStyle::OutlineShadow(outlineScale, outlineColor, shadowOffset, shadowColor), fontSize, 20, 150);\n// MSDF \u65b9\u5f0f\nfontMSDF(text).draw(TextStyle::Outline(outlineScale, outlineColor), 20, 300);\nfontMSDF(text).draw(TextStyle::Outline(outlineScale, outlineColor), fontSize, 20, 320);\nfontMSDF(text).draw(TextStyle::OutlineShadow(outlineScale, outlineColor, shadowOffset, shadowColor), fontSize, 20, 430);\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3120-\u30b5\u30f3\u30d7\u30eb\u30c6\u30ad\u30b9\u30c8\u30b9\u30bf\u30a4\u30eb\u306e\u30d7\u30ec\u30d3\u30e5\u30fc\u30a2\u30d7\u30ea","title":"31.20 \uff08\u30b5\u30f3\u30d7\u30eb\uff09\u30c6\u30ad\u30b9\u30c8\u30b9\u30bf\u30a4\u30eb\u306e\u30d7\u30ec\u30d3\u30e5\u30fc\u30a2\u30d7\u30ea","text":"<p>\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3001\u5404\u65b9\u5f0f\u306b\u304a\u3051\u308b\u30c6\u30ad\u30b9\u30c8\u30b9\u30bf\u30a4\u30eb\u306e\u52b9\u679c\u3092\u30d7\u30ec\u30d3\u30e5\u30fc\u3067\u304d\u307e\u3059\u3002\u30de\u30a6\u30b9\u306e\u53f3\u30af\u30ea\u30c3\u30af\u3084\u30db\u30a4\u30fc\u30eb\u3067\u79fb\u52d5\u30fb\u62e1\u5927\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\n// \u57fa\u672c\u30b5\u30a4\u30ba: \u5927\u304d\u3044\u3068\u62e1\u5927\u63cf\u753b\u6642\u306b\u304d\u308c\u3044\u306b\u306a\u308b\u304c\u3001\u30d5\u30a9\u30f3\u30c8\u306e\u751f\u6210\u6642\u9593\u30fb\u30e1\u30e2\u30ea\u6d88\u8cbb\u304c\u5897\u3048\u308b\nconst int32 baseSize = 70;\n// \u3053\u306e\u30b5\u30a4\u30ba\u3060\u3051\u3001\u6587\u5b57\u306e\u5468\u56f2\u306b\u8f2a\u90ed\u3084\u5f71\u306e\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u4ed8\u52a0\u3067\u304d\u308b\u3002\u30d5\u30a9\u30f3\u30c8\u306e\u751f\u6210\u6642\u9593\u30fb\u30e1\u30e2\u30ea\u6d88\u8cbb\u304c\u5897\u3048\u308b\nconst int32 bufferThickness = 5;\n// \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u65b9\u5f0f\u3067\u306f\u8f2a\u90ed\u3084\u5f71\u306e\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u5229\u7528\u306f\u4e0d\u53ef\nconst Font fontBitmap{ FontMethod::Bitmap, baseSize, U\"example/font/RocknRoll/RocknRollOne-Regular.ttf\" };\n// SDF \u65b9\u5f0f\nconst Font fontSDF{ FontMethod::SDF, baseSize, U\"example/font/RocknRoll/RocknRollOne-Regular.ttf\" };\nfontSDF.setBufferThickness(bufferThickness);\n// MSDF \u65b9\u5f0f\nconst Font fontMSDF{ FontMethod::MSDF, baseSize, U\"example/font/RocknRoll/RocknRollOne-Regular.ttf\" };\nfontMSDF.setBufferThickness(bufferThickness);\nbool outline = false;\nbool shadow = false;\ndouble inner = 0.1, outer = 0.1;\nVec2 shadowOffset{ 2.0, 2.0 };\nColorF textColor{ 1.0 };\nColorF outlineColor{ 0.0 };\nColorF shadowColor{ 0.0, 0.5 };\nHSV background = ColorF{ 0.8 };\nCamera2D camera{ Scene::Center(), 1.0 };\nwhile (System::Update())\n{\nScene::SetBackground(background);\nTextStyle textStyle;\n{\nif (outline &amp;&amp; shadow)\n{\ntextStyle = TextStyle::OutlineShadow(inner, outer, outlineColor, shadowOffset, shadowColor);\n}\nelse if (outline)\n{\ntextStyle = TextStyle::Outline(inner, outer, outlineColor);\n}\nelse if (shadow)\n{\ntextStyle = TextStyle::Shadow(shadowOffset, shadowColor);\n}\n}\ncamera.update();\n{\nauto t = camera.createTransformer();\nfontBitmap(U\"Siv3D, \u6e0b\u4e09\u6b21\u5143 (Bitmap)\").draw(Vec2{ 100, 250 }, textColor);\nfontSDF(U\"Siv3D, \u6e0b\u4e09\u6b21\u5143 (SDF)\").draw(textStyle, Vec2{ 100, 330 }, textColor);\nfontMSDF(U\"Siv3D, \u6e0b\u4e09\u6b21\u5143 (MSDF)\").draw(textStyle, Vec2{ 100, 410 }, textColor);\n}\nSimpleGUI::CheckBox(outline, U\"Outline\", Vec2{ 20, 20 }, 130);\nSimpleGUI::Slider(U\"Inner: {:.2f}\"_fmt(inner), inner, -0.5, 0.5, Vec2{ 160, 20 }, 120, 120, outline);\nSimpleGUI::Slider(U\"Outer: {:.2f}\"_fmt(outer), outer, -0.5, 0.5, Vec2{ 160, 60 }, 120, 120, outline);\nSimpleGUI::CheckBox(shadow, U\"Shadow\", Vec2{ 20, 100 }, 130);\nSimpleGUI::Slider(U\"offsetX: {:.1f}\"_fmt(shadowOffset.x), shadowOffset.x, -5.0, 5.0, Vec2{ 160, 100 }, 120, 120, shadow);\nSimpleGUI::Slider(U\"offsetY: {:.1f}\"_fmt(shadowOffset.y), shadowOffset.y, -5.0, 5.0, Vec2{ 160, 140 }, 120, 120, shadow);\nSimpleGUI::Headline(U\"Text\", Vec2{ 420, 20 });\nSimpleGUI::Slider(U\"R\", textColor.r, Vec2{ 420, 60 }, 20, 80);\nSimpleGUI::Slider(U\"G\", textColor.g, Vec2{ 420, 100 }, 20, 80);\nSimpleGUI::Slider(U\"B\", textColor.b, Vec2{ 420, 140 }, 20, 80);\nSimpleGUI::Slider(U\"A\", textColor.a, Vec2{ 420, 180 }, 20, 80);\nSimpleGUI::Headline(U\"Outline\", Vec2{ 540, 20 });\nSimpleGUI::Slider(U\"R\", outlineColor.r, Vec2{ 540, 60 }, 20, 80, outline);\nSimpleGUI::Slider(U\"G\", outlineColor.g, Vec2{ 540, 100 }, 20, 80, outline);\nSimpleGUI::Slider(U\"B\", outlineColor.b, Vec2{ 540, 140 }, 20, 80, outline);\nSimpleGUI::Slider(U\"A\", outlineColor.a, Vec2{ 540, 180 }, 20, 80, outline);\nSimpleGUI::Headline(U\"Shadow\", Vec2{ 660, 20 });\nSimpleGUI::Slider(U\"R\", shadowColor.r, Vec2{ 660, 60 }, 20, 80, shadow);\nSimpleGUI::Slider(U\"G\", shadowColor.g, Vec2{ 660, 100 }, 20, 80, shadow);\nSimpleGUI::Slider(U\"B\", shadowColor.b, Vec2{ 660, 140 }, 20, 80, shadow);\nSimpleGUI::Slider(U\"A\", shadowColor.a, Vec2{ 660, 180 }, 20, 80, shadow);\nSimpleGUI::ColorPicker(background, Vec2{ 780, 20 });\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3121-\u6587\u5b57\u5358\u4f4d\u3067\u81ea\u7531\u63cf\u753b\u3092\u3059\u308b","title":"31.21 \u6587\u5b57\u5358\u4f4d\u3067\u81ea\u7531\u63cf\u753b\u3092\u3059\u308b","text":"<p>\u901a\u5e38\u306e\u30c6\u30ad\u30b9\u30c8\u63cf\u753b\u3067\u306f\u3001\u6587\u5b57\u3054\u3068\u306b\u8272\u3084\u4f4d\u7f6e\u3001\u5927\u304d\u3055\u3084\u56de\u8ee2\u3092\u81ea\u7531\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002</p> <p>\u6587\u5b57\u5358\u4f4d\u3067\u81ea\u7531\u306a\u63cf\u753b\u3092\u884c\u3044\u305f\u3044\u5834\u5408\u3001<code>Font</code> \u306e <code>.getGlyphs(text)</code> \u3092\u4f7f\u7528\u3057\u3066\u5f97\u3089\u308c\u308b <code>Array&lt;Glyph&gt;</code> \u3092\u4f7f\u3044\u307e\u3059\u3002<code>Glyph</code> \u306b\u306f\u3001\u500b\u3005\u306e\u6587\u5b57\u3092\u81ea\u7531\u306b\u5236\u5fa1\u3057\u3066\u63cf\u753b\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u60c5\u5831\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"tutorial2/font/#31211-\u57fa\u672c","title":"31.21.1 \u57fa\u672c","text":"<p><code>Glyph</code> \u306e <code>.codePoint</code> \u306f\u305d\u306e\u6587\u5b57\u306e UTF-32 \u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u3001<code>.texture</code> \u306f\u6587\u5b57\u753b\u50cf\u306e <code>TextureRegion</code> \u3092\u3001<code>.getOffset()</code> \u306f\u30da\u30f3\u306e\u4f4d\u7f6e\u304b\u3089\u3055\u3089\u306b\u5fc5\u8981\u306a\u30aa\u30d5\u30bb\u30c3\u30c8\u3092\u3001<code>.xAdvance</code> \u306f\u73fe\u5728\u306e\u6587\u5b57\u3067\u9032\u3080 X \u5ea7\u6a19\u306e\u8ddd\u96e2\u3092\u8868\u3057\u307e\u3059\u3002</p> <p>\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u3067\u3001\u81ea\u7531\u63cf\u753b\u3067\u901a\u5e38\u306e\u63cf\u753b\u3092\u518d\u73fe\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid DrawGlyphs(const Vec2&amp; basePos, const Font&amp; font, const String&amp; text, const ColorF&amp; color)\n{\nconst Array&lt;Glyph&gt; glyphs = font.getGlyphs(text);\nconst double fontHeight = font.height();\nVec2 penPos{ basePos };\n// \u6587\u5b57\u5358\u4f4d\u3067\u63cf\u753b\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u30eb\u30fc\u30d7\nfor (const auto&amp; glyph : glyphs)\n{\n// \u6539\u884c\u6587\u5b57\u306a\u3089\nif (glyph.codePoint == U'\\n')\n{\n// \u30da\u30f3\u306e X \u5ea7\u6a19\u3092\u30ea\u30bb\u30c3\u30c8\npenPos.x = basePos.x;\n// \u30da\u30f3\u306e Y \u5ea7\u6a19\u3092\u30d5\u30a9\u30f3\u30c8\u306e\u9ad8\u3055\u5206\u9032\u3081\u308b\npenPos.y += fontHeight;\ncontinue;\n}\n// penPos \u3092\u53ef\u8996\u5316\u3057\u305f\u3044\u5834\u5408\u306f\u30b3\u30e1\u30f3\u30c8\u3092\u5916\u3059\n//penPos.asCircle(3).drawFrame(1, Palette::Red);\n//Math::Round(penPos + glyph.getOffset()).asCircle(3).drawFrame(1, Palette::Green);\n// \u6587\u5b57\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u30da\u30f3\u306e\u4f4d\u7f6e\u306b\u6587\u5b57\u3054\u3068\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u3092\u52a0\u7b97\u3057\u3066\u63cf\u753b\n//\uff08\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u65b9\u5f0f\u306b\u9650\u308a\u3001Math::Round() \u3067\u6574\u6570\u5ea7\u6a19\u306b\u8abf\u6574\u3059\u308b\u3068\u54c1\u8cea\u304c\u5411\u4e0a\u3059\u308b\uff09\nglyph.texture.draw(Math::Round(penPos + glyph.getOffset()), color);\n// \u30da\u30f3\u306e X \u5ea7\u6a19\u3092\u6587\u5b57\u306e\u5e45\u306e\u5206\u9032\u3081\u308b\npenPos.x += glyph.xAdvance;\n}\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.7, 0.9, 0.8 });\nconst Font font{ 50, Typeface::Bold };\nconst String text = U\"The quick brown fox\\njumps over the lazy dog.\";\nwhile (System::Update())\n{\nDrawGlyphs(Vec2{ 40, 40 }, font, text, ColorF{ 0.11 });\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#31212-\u5fdc\u7528","title":"31.21.2 \u5fdc\u7528","text":"<p>\u524d\u8ff0\u306e\u30b3\u30fc\u30c9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u3067\u3001\u6587\u5b57\u5358\u4f4d\u3067\u81ea\u7531\u306a\u63cf\u753b\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid DrawGlyphs(const Vec2&amp; basePos, const Font&amp; font, const String&amp; text)\n{\nconst Array&lt;Glyph&gt; glyphs = font.getGlyphs(text);\nconst double fontHeight = font.height();\nVec2 penPos{ basePos };\nint32 index = 0;\nfor (const auto&amp; glyph : glyphs)\n{\nif (glyph.codePoint == U'\\n')\n{\npenPos.x = basePos.x;\npenPos.y += fontHeight;\n++index;\ncontinue;\n}\nconst Vec2 offset{ 0, (Periodic::Sine1_1(2s, Scene::Time() + index * 0.3) * 8.0) };\nglyph.texture.draw((penPos + glyph.getOffset() + offset), HSV{ (index * 10) });\npenPos.x += glyph.xAdvance;\n++index;\n}\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.7, 0.9, 0.8 });\nconst Font font{ 50, Typeface::Bold };\nconst String text = U\"The quick brown fox\\njumps over the lazy dog.\";\nwhile (System::Update())\n{\nDrawGlyphs(Vec2{ 40, 40 }, font, text);\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#31213-sdf--msdf-\u5bfe\u5fdc","title":"31.21.3 SDF / MSDF \u5bfe\u5fdc","text":"<p>SDF / MSDF \u65b9\u5f0f\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u81ea\u7531\u63cf\u753b\u3059\u308b\u5834\u5408\u3001\u6b21\u306e\u3088\u3046\u306b <code>ScopedCustomShader2D</code> \u3092\u4f5c\u6210\u3057\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6709\u52b9\u306a\u30b9\u30b3\u30fc\u30d7\u5185\u3067\u30b0\u30ea\u30d5\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3057\u307e\u3059\u3002Distance field \u753b\u50cf\u3092\u63cf\u753b\u3059\u308b\u305f\u3081\u306b\u3001<code>Font::GetPixelShader()</code> \u3067\u53d6\u5f97\u3067\u304d\u308b\u30ab\u30b9\u30bf\u30e0\u30b7\u30a7\u30fc\u30c0\u306e\u9069\u7528\u304c\u5fc5\u8981\u3067\u3042\u308b\u305f\u3081\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid DrawGlyphs(const Vec2&amp; basePos, const Font&amp; font, const String&amp; text, double fontSize, const ColorF&amp; color)\n{\nconst Array&lt;Glyph&gt; glyphs = font.getGlyphs(text);\nconst double scale = (fontSize / font.fontSize());\nconst double fontHeight = (font.height() * scale);\n{\nconst ScopedCustomShader2D shader{ Font::GetPixelShader(font.method()) };\nVec2 penPos{ basePos };\nfor (const auto&amp; glyph : glyphs)\n{\nif (glyph.codePoint == U'\\n')\n{\npenPos.x = basePos.x;\npenPos.y += fontHeight;\ncontinue;\n}\nglyph.texture.scaled(scale).draw((penPos + glyph.getOffset(scale)), color);\npenPos.x += (glyph.xAdvance * scale);\n}\n}\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.7, 0.9, 0.8 });\nconst Font font{ FontMethod::MSDF, 50, Typeface::Bold };\nconst String text = U\"The quick brown fox\\njumps over the lazy dog.\";\nwhile (System::Update())\n{\nDrawGlyphs(Vec2{ 40, 40 }, font, text, 30, ColorF{ 0.11 });\nDrawGlyphs(Vec2{ 40, 240 }, font, text, 50, ColorF{ 0.11 });\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#31214-sdf--msdf--\u30c6\u30ad\u30b9\u30c8\u30b9\u30bf\u30a4\u30eb\u5bfe\u5fdc","title":"31.21.4 SDF / MSDF + \u30c6\u30ad\u30b9\u30c8\u30b9\u30bf\u30a4\u30eb\u5bfe\u5fdc","text":"<p>SDF / MSDF \u65b9\u5f0f\u306e\u30d5\u30a9\u30f3\u30c8\u306e\u81ea\u7531\u63cf\u753b\u3067\u30c6\u30ad\u30b9\u30c8\u30b9\u30bf\u30a4\u30eb\u306b\u5bfe\u5fdc\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid DrawGlyphs(const Vec2&amp; basePos, const Font&amp; font, const String&amp; text, double fontSize, const TextStyle&amp; textStyle, const ColorF&amp; color)\n{\nconst Array&lt;Glyph&gt; glyphs = font.getGlyphs(text);\nconst double scale = (fontSize / font.fontSize());\nconst double fontHeight = (font.height() * scale);\n{\nconst ScopedCustomShader2D shader{ Font::GetPixelShader(font.method(), textStyle.type) };\nGraphics2D::SetSDFParameters(textStyle);\nVec2 penPos{ basePos };\nfor (const auto&amp; glyph : glyphs)\n{\nif (glyph.codePoint == U'\\n')\n{\npenPos.x = basePos.x;\npenPos.y += fontHeight;\ncontinue;\n}\nglyph.texture.scaled(scale).draw((penPos + glyph.getOffset(scale)), color);\npenPos.x += (glyph.xAdvance * scale);\n}\n}\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.7, 0.9, 0.8 });\nconst Font font{ FontMethod::MSDF, 50, Typeface::Bold };\nconst String text = U\"The quick brown fox\\njumps over the lazy dog.\";\nwhile (System::Update())\n{\nDrawGlyphs(Vec2{ 40, 40 }, font, text, 30, TextStyle::Default(), ColorF{ 0.11 });\nconst double outlineScale = 0.2;\nconst ColorF outlineColor{ 0.0, 0.3, 0.6 };\nconst Vec2 shadowOffset{ 2, 2 };\nconst ColorF shadowColor{ 0.0, 0.5 };\nDrawGlyphs(Vec2{ 40, 240 }, font, text, 50, TextStyle::OutlineShadow(outlineScale, outlineColor, shadowOffset, shadowColor), ColorF{ 1.0 });\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3122-\u7e26\u66f8\u304d\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u753b\u3059\u308b","title":"31.22 \u7e26\u66f8\u304d\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u753b\u3059\u308b","text":"<p>Siv3D v0.6.12 \u3067\u306f\u30c6\u30ad\u30b9\u30c8\u306e\u7e26\u66f8\u304d\u306b\u95a2\u3059\u308b\u6a5f\u80fd\u306f\u672a\u5b9f\u88c5\u3067\u3059\u3002\u5c06\u6765\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u5b9f\u88c5\u4e88\u5b9a\u3067\u3059\u3002</p>"},{"location":"tutorial2/font/#3123-\u30d5\u30a9\u30f3\u30c8\u306e\u30d7\u30ea\u30ed\u30fc\u30c9","title":"31.23 \u30d5\u30a9\u30f3\u30c8\u306e\u30d7\u30ea\u30ed\u30fc\u30c9","text":"<p>Siv3D \u306e <code>Font</code> \u306f\u3001\u521d\u3081\u3066\u63cf\u3044\u305f\u6587\u5b57\u306e\u753b\u50cf\u3092\u5185\u90e8\u3067\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u305f\u3081\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u52d5\u4f5c\u3059\u308b\u30b2\u30fc\u30e0\u306e\u9014\u4e2d\u3067\u5927\u91cf\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u521d\u3081\u3066\u8868\u793a\u3059\u308b\u3068\u3001\u305d\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u5b9f\u884c\u6642\u9593\u304c\u9577\u304f\u306a\u308a\u3001\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u304c\u4e00\u77ac\u4f4e\u4e0b\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002<code>.preload(text)</code> \u3092\u4f7f\u3063\u3066\u3001<code>text</code> \u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u3092\uff08\u91cd\u8907\u3059\u308b\u5834\u5408\u306f\u9664\u53bb\u3057\u3066\uff09\u3042\u3089\u304b\u3058\u3081\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u304a\u304f\u3068\u3001\u30b2\u30fc\u30e0\u306e\u5b9f\u884c\u4e2d\u306e\u77ac\u9593\u7684\u306a\u9ad8\u8ca0\u8377\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p><code>.getTexture()</code> \u3092\u4f7f\u3046\u3068\u3001<code>Font</code> \u306e\u5185\u90e8\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u3044\u308b <code>Texture</code> \u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"tutorial2/font/#31231-\u30d7\u30ea\u30ed\u30fc\u30c9\u3092\u4f7f\u308f\u306a\u3044\u3068\u304d\u306e\u52d5\u4f5c\u306e\u69d8\u5b50","title":"31.23.1 \u30d7\u30ea\u30ed\u30fc\u30c9\u3092\u4f7f\u308f\u306a\u3044\u3068\u304d\u306e\u52d5\u4f5c\u306e\u69d8\u5b50","text":"<p>\u6b21\u306e\u30b3\u30fc\u30c9\u306f\u30d7\u30ea\u30ed\u30fc\u30c9\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306e\u52d5\u4f5c\u306e\u69d8\u5b50\u3067\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u306f\u3001\u5b9f\u884c\u4e2d\u306b\u968f\u6642\u6587\u5b57\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ 20, Typeface::Bold };\nconst String text = U\"Siv3D \u306e Font \u306f\u3001\u521d\u3081\u3066\u63cf\u3044\u305f\u6587\u5b57\u306e\u753b\u50cf\u3092\u5185\u90e8\u3067\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u305f\u3081\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u52d5\u4f5c\u3059\u308b\u30b2\u30fc\u30e0\u306e\u9014\u4e2d\u3067\u5927\u91cf\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u521d\u3081\u3066\u8868\u793a\u3059\u308b\u3068\u3001\u305d\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u5b9f\u884c\u6642\u9593\u304c\u9577\u304f\u306a\u308a\u3001\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u304c\u4e00\u77ac\u4f4e\u4e0b\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002.preload(text) \u3092\u4f7f\u3063\u3066\u3001text \u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u3092\u3042\u3089\u304b\u3058\u3081\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u304a\u304f\u3068\u3001\u30b2\u30fc\u30e0\u306e\u5b9f\u884c\u4e2d\u306e\u77ac\u9593\u7684\u306a\u9ad8\u8ca0\u8377\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\";\nStopwatch stopwatch{ StartImmediately::Yes };\nwhile (System::Update())\n{\nconst int32 count = (stopwatch.ms() / 30);\nfont(text.substr(0, count)).draw(Rect{ 20, 20, 760, 240 }, ColorF{ 0.25 });\nfont.getTexture().draw(20, 300).drawFrame(0, 1, Palette::Black);\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#31232-\u30d7\u30ea\u30ed\u30fc\u30c9\u3092\u4f7f\u3063\u305f\u3068\u304d\u306e\u69d8\u5b50","title":"31.23.2 \u30d7\u30ea\u30ed\u30fc\u30c9\u3092\u4f7f\u3063\u305f\u3068\u304d\u306e\u69d8\u5b50","text":"<p>\u6b21\u306e\u30b3\u30fc\u30c9\u306f\u30d7\u30ea\u30ed\u30fc\u30c9\u3092\u4f7f\u3046\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\u5b9f\u884c\u524d\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u306f\u3001<code>text</code> \u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u304c\u3059\u3079\u3066\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p><code>String</code> \u306e\u30e1\u30f3\u30d0\u95a2\u6570 <code>.sorted_and_uniqued()</code> \u306f\u3001\u6587\u5b57\u5217\u4e2d\u306e\u6587\u5b57\u3092\u30bd\u30fc\u30c8\u3057\u3066\u91cd\u8907\u3092\u9664\u53bb\u3057\u305f\u6587\u5b57\u5217\u3092\u8fd4\u3057\u307e\u3059\u3002\u6587\u5b57\u5217\u306b\u5bfe\u3057\u3066\u3053\u306e\u524d\u51e6\u7406\u3092\u884c\u3046\u3068\u3001\u30d7\u30ea\u30ed\u30fc\u30c9\u6642\u306e\u8ca0\u8377\u304c\u8efd\u6e1b\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ 20, Typeface::Bold };\nconst String text = U\"Siv3D \u306e Font \u306f\u3001\u521d\u3081\u3066\u63cf\u3044\u305f\u6587\u5b57\u306e\u753b\u50cf\u3092\u5185\u90e8\u3067\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u305f\u3081\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u52d5\u4f5c\u3059\u308b\u30b2\u30fc\u30e0\u306e\u9014\u4e2d\u3067\u5927\u91cf\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u521d\u3081\u3066\u8868\u793a\u3059\u308b\u3068\u3001\u305d\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u5b9f\u884c\u6642\u9593\u304c\u9577\u304f\u306a\u308a\u3001\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u304c\u4e00\u77ac\u4f4e\u4e0b\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002.preload(text) \u3092\u4f7f\u3063\u3066\u3001text \u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u3092\u3042\u3089\u304b\u3058\u3081\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u304a\u304f\u3068\u3001\u30b2\u30fc\u30e0\u306e\u5b9f\u884c\u4e2d\u306e\u77ac\u9593\u7684\u306a\u9ad8\u8ca0\u8377\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\";\n// text \u306f .sorted_and_uniqued() \u3067\u91cd\u8907\u3092\u3042\u3089\u304b\u3058\u3081\u9664\u3044\u3066\u304a\u304f\u3068\u3001\u30d7\u30ea\u30ed\u30fc\u30c9\u6642\u306e\u8ca0\u8377\u304c\u8efd\u6e1b\u3055\u308c\u308b\nfont.preload(text.sorted_and_uniqued());\nStopwatch stopwatch{ StartImmediately::Yes };\nwhile (System::Update())\n{\nconst int32 count = (stopwatch.ms() / 30);\nfont(text.substr(0, count)).draw(Rect{ 20, 20, 760, 240 }, ColorF{ 0.25 });\nfont.getTexture().draw(20, 300).drawFrame(0, 1, Palette::Black);\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3124-\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u30d5\u30a9\u30f3\u30c8\u306e\u8a2d\u5b9a","title":"31.24 \u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u30d5\u30a9\u30f3\u30c8\u306e\u8a2d\u5b9a","text":"<p>1 \u3064\u306e\u66f8\u4f53\u3067\u306f\u3001\u3059\u3079\u3066\u306e\u6587\u5b57\u3092\u30ab\u30d0\u30fc\u3067\u304d\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u5225\u306e\u66f8\u4f53\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u3068\u3057\u3066\u767b\u9332\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u30e1\u30a4\u30f3\u306e\u66f8\u4f53\u3067\u30ab\u30d0\u30fc\u3067\u304d\u306a\u3044\u6587\u5b57\u3092\u5225\u306e\u66f8\u4f53\u3067\u63cf\u753b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u30d5\u30a9\u30f3\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u57fa\u672c\u306e\u30d5\u30a9\u30f3\u30c8\u3067\u63cf\u3051\u306a\u3044\u6587\u5b57\u304c\u898b\u3064\u304b\u3063\u305f\u3068\u304d\u3001\u3082\u3057\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u30d5\u30a9\u30f3\u30c8\u3067\u63cf\u3051\u305f\u3089\u3001\u305d\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u3044\u307e\u3059\u3002\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u30d5\u30a9\u30f3\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\u306b\u306f\u3001<code>.addFallback()</code> \u3067\u4f5c\u6210\u6e08\u307f\u306e <code>Font</code> \u3092\u6e21\u3057\u307e\u3059\u3002\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u30d5\u30a9\u30f3\u30c8\u306f\u4f55\u500b\u3067\u3082\u8a2d\u5b9a\u3067\u304d\u3001\u5148\u306b\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u304c\u512a\u5148\u3057\u3066\u4f7f\u308f\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u30ab\u30e9\u30fc\u7d75\u6587\u5b57\u30d5\u30a9\u30f3\u30c8\u3092\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u30d5\u30a9\u30f3\u30c8\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u305f\u5834\u5408\u3001\u63cf\u753b\u30b5\u30a4\u30ba\u306f\u57fa\u672c\u306e\u30d5\u30a9\u30f3\u30c8\u306e\u30b5\u30a4\u30ba\u306b\u5408\u308f\u305b\u3089\u308c\u307e\u3059\u3002</p> <p>\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u30d5\u30a9\u30f3\u30c8\u306f\u3001\u4e3b\u306b\u30c6\u30ad\u30b9\u30c8\u5185\u306b\u7d75\u6587\u5b57\u3084\u8907\u6570\u306e\u8a00\u8a9e\u3092\u542b\u307f\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.7, 0.9, 0.8 });\nconst Font font0{ 36, Typeface::Regular };\nconst Font font1{ 36, Typeface::Regular };\nconst Font font2{ 36, Typeface::Regular };\nconst Font fontJP{ 36, Typeface::CJK_Regular_JP };\nconst Font fontEmoji{ 36, Typeface::ColorEmoji };\n// font1 \u306b\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u30d5\u30a9\u30f3\u30c8\u3092 1 \u3064\u8ffd\u52a0\nfont1.addFallback(fontJP);\n// font2 \u306b\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u30d5\u30a9\u30f3\u30c8\u3092 2 \u3064\u8ffd\u52a0\nfont2.addFallback(fontJP);\nfont2.addFallback(fontEmoji);\nconst String text = U\"Hello! \u3053\u3093\u306b\u3061\u306f \u4f60\u597d \uc548\ub155\ud558\uc138\uc694 \ud83d\udc08\ud83d\udc15\ud83d\ude80\";\nwhile (System::Update())\n{\nfont0(text).draw(40, 40, ColorF{ 0.11 });\nfont1(text).draw(40, 100, ColorF{ 0.11 });\nfont2(text).draw(40, 160, ColorF{ 0.11 });\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3125-\u6587\u5b57\u3092-polygon-\u3067\u53d6\u5f97\u3059\u308b","title":"31.25 \u6587\u5b57\u3092 Polygon \u3067\u53d6\u5f97\u3059\u308b","text":"<p><code>Font</code> \u306e\u30e1\u30f3\u30d0\u95a2\u6570 <code>.renderPolygons()</code> \u3092\u4f7f\u3046\u3068\u3001\u6587\u5b57\u5217\u3092\u63cf\u753b\u3057\u305f\u3068\u304d\u306e\u5404\u6587\u5b57\u306e <code>PolygonGlyph</code> \u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u6587\u5b57\u3092\u753b\u50cf\u3067\u306f\u306a\u304f\u591a\u89d2\u5f62\u3067\u8868\u73fe\u3059\u308b\u3082\u306e\u3067\u3059\u3002\u6b21\u306e\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3001\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u306b\u63cf\u753b\u3059\u308b\u3068\u304d\u306e\u5404\u6587\u5b57\u306e <code>Polygon</code> \u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\n// \u6587\u5b57\u5217\u3092\u63cf\u753b\u3057\u305f\u3068\u304d\u306e\u5404\u6587\u5b57\u306e Polygon \u3092\u8fd4\u3059\u95a2\u6570\nArray&lt;Polygon&gt; ToPolygons(const Vec2&amp; basePos, const Array&lt;PolygonGlyph&gt;&amp; glyphs)\n{\nArray&lt;Polygon&gt; polygons;\nVec2 penPos{ basePos };\nfor (const auto&amp; glyph : glyphs)\n{\nfor (const auto&amp; polygon : glyph.polygons)\n{\npolygons &lt;&lt; polygon.movedBy(penPos + glyph.getOffset());\n}\npenPos.x += glyph.xAdvance;\n}\nreturn polygons;\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.7, 0.9, 0.8 });\nconst Font font{ 80, Typeface::Bold };\nconst String text = U\"\u3053\u3093\u306b\u3061\u306f\u3001Siv3D!\";\nconst Array&lt;Polygon&gt; polygons = ToPolygons(Vec2{ 40, 40 }, font.renderPolygons(text));\nwhile (System::Update())\n{\nfor (size_t i = 0; i &lt; polygons.size(); ++i)\n{\npolygons[i].draw(HSV{ (i * 50) });\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/font/#3126-\u6587\u5b57\u3092-linestring-\u3067\u53d6\u5f97\u3059\u308b","title":"31.26 \u6587\u5b57\u3092 LineString \u3067\u53d6\u5f97\u3059\u308b","text":"<p><code>Font</code> \u306e\u30e1\u30f3\u30d0\u95a2\u6570 <code>.renderOutlines()</code> \u3092\u4f7f\u3046\u3068\u3001\u6587\u5b57\u5217\u3092\u63cf\u753b\u3057\u305f\u3068\u304d\u306e\u5404\u6587\u5b57\u306e <code>OutlineGlyph</code> \u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u6587\u5b57\u3092\u753b\u50cf\u3067\u306f\u306a\u304f\u8f2a\u90ed\u306e <code>LineString</code> \u306e\u96c6\u5408\u3067\u8868\u73fe\u3059\u308b\u3082\u306e\u3067\u3059\u3002\u6b21\u306e\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3001\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u306b\u63cf\u753b\u3059\u308b\u3068\u304d\u306e\u5404\u6587\u5b57\u306e <code>LineString</code> \u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\n// \u6587\u5b57\u5217\u3092\u63cf\u753b\u3057\u305f\u3068\u304d\u306e\u5404\u6587\u5b57\u306e LineString \u3092\u8fd4\u3059\u95a2\u6570\nArray&lt;LineString&gt; ToLineStrings(const Vec2&amp; basePos, const Array&lt;OutlineGlyph&gt;&amp; glyphs)\n{\nArray&lt;LineString&gt; lines;\nVec2 penPos{ basePos };\nfor (const auto&amp; glyph : glyphs)\n{\nfor (const auto&amp; ring : glyph.rings)\n{\nlines &lt;&lt; ring.movedBy(penPos + glyph.getOffset());\n}\npenPos.x += glyph.xAdvance;\n}\nreturn lines;\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.7, 0.9, 0.8 });\nconst Font font{ 80, Typeface::Bold };\nconst String text = U\"\u3053\u3093\u306b\u3061\u306f\u3001Siv3D!\";\nconst Array&lt;LineString&gt; lines = ToLineStrings(Vec2{ 40, 40 }, font.renderOutlines(text));\nwhile (System::Update())\n{\nfor (size_t i = 0; i &lt; lines.size(); ++i)\n{\nlines[i].drawClosed(2, HSV{ (i * 50) });\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/format/","title":"27. \u6570\u5024\u3068\u6587\u5b57\u5217\u306e\u5909\u63db","text":"<p>\u6570\u5024\u30c7\u30fc\u30bf\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\u65b9\u6cd5\u3068\u3001\u6587\u5b57\u5217\u3092\u6570\u5024\u30c7\u30fc\u30bf\u306b\u5909\u63db\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial2/format/#271-\u6570\u5024\u304b\u3089\u6587\u5b57\u5217\u3078\u306e\u5909\u63db","title":"27.1 \u6570\u5024\u304b\u3089\u6587\u5b57\u5217\u3078\u306e\u5909\u63db","text":"<p><code>Format()</code> \u3092\u4f7f\u3046\u3068\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u306a\u578b\u306e\u5024\u3092 <code>String</code> \u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002</p> <p>\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u3068\u306f\u3001\u305d\u306e\u578b\u306e\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\u65b9\u6cd5\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002C++ \u306e\u57fa\u672c\u578b\u3084 Siv3D \u306e\u4e3b\u8981\u306a\u30af\u30e9\u30b9\u306e\u591a\u304f\u304c\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// int32 \u304b\u3089 String \u3078\u306e\u5909\u63db\nconst String a = Format(12345);\nPrint &lt;&lt; a;\n// bool \u304b\u3089 String \u3078\u306e\u5909\u63db\nconst String b = Format(true);\nPrint &lt;&lt; b;\n// double \u304b\u3089 String \u3078\u306e\u5909\u63db\nconst String c = Format(1.23456789);\nPrint &lt;&lt; c;\n// Vec2 \u304b\u3089 String \u3078\u306e\u5909\u63db\nconst String d = Format(Vec2{ 11, 22 });\nPrint &lt;&lt; d;\n// Array \u304b\u3089 String \u3078\u306e\u5909\u63db\nconst Array&lt;int32&gt; values = { 3, 4, 5, 6 };\nconst String e = Format(values);\nPrint &lt;&lt; e;\n// ColorF \u306e std::array \u304b\u3089 String \u3078\u306e\u5909\u63db\nconst std::array&lt;ColorF, 3&gt; colors =\n{\nColorF{ 1.0 , 0.0, 0.0 },\nColorF{ 0.0 , 1.0, 0.0 },\nColorF{ 0.0 , 0.0, 1.0 },\n};\nconst String f = Format(colors);\nPrint &lt;&lt; f;\n// Rect \u304b\u3089 String \u3078\u306e\u5909\u63db\nconst String g = Format(Rect{ 30, 50, 100, 50 });\nPrint &lt;&lt; g;\n// (\u5fa9\u7fd2) Print \u306f String \u3067\u306a\u304f\u3066\u3082\u4f7f\u3048\u308b\nPrint &lt;&lt; 12345;\nPrint &lt;&lt; colors;\nPrint &lt;&lt; Rect{ 30, 50, 100, 50 };\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/format/#272-\u81ea\u4f5c\u30af\u30e9\u30b9\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u306b\u3059\u308b","title":"27.2 \u81ea\u4f5c\u30af\u30e9\u30b9\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u306b\u3059\u308b","text":"<p>\u81ea\u4f5c\u30af\u30e9\u30b9 <code>X</code> \u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u306b\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u30e1\u30f3\u30d0\u95a2\u6570 <code>Format</code> \u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u81ea\u4f5c\u30af\u30e9\u30b9\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u306b\u3059\u308b\u3068\u3001<code>Format()</code> \u3060\u3051\u3067\u306a\u304f\u3001<code>Print</code> \u306a\u3069\u3001\u69d8\u3005\u306a\u95a2\u6570\u3067\u3082\u305d\u306e\u30af\u30e9\u30b9\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>struct X\n{\nfriend void Formatter(FormatData&amp; formatData, const X&amp; value)\n{\nconst String s = /* value \u3092 String \u306b\u5909\u63db\u3059\u308b\u51e6\u7406 */;\nformatData.string.append(s);\n}\n};\n</code></pre> <p>\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u3001<code>MyInt</code> \u3068 <code>RGB</code> \u3068\u3044\u3046\u81ea\u4f5c\u30af\u30e9\u30b9\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u306b\u3057\u3066\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nstruct MyInt\n{\nint32 value;\nfriend void Formatter(FormatData&amp; formatData, const MyInt&amp; value)\n{\nformatData.string.append(Format(value.value));\n}\n};\nstruct RGB\n{\nuint8 r, g, b;\nfriend void Formatter(FormatData&amp; formatData, const RGB&amp; value)\n{\nformatData.string.append(U\"({}, {}, {})\"_fmt(value.r, value.g, value.b));\n}\n};\nvoid Main()\n{\nRGB rgb{ 0x88, 0xCC, 0xFF };\nPrint &lt;&lt; rgb;\nPrint &lt;&lt; Format(rgb);\nMyInt myInt{ 123 };\nPrint &lt;&lt; myInt;\nPrint &lt;&lt; Format(myInt);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/format/#273-\u6841\u533a\u5207\u308a\u8a18\u53f7\u3092\u4f7f\u3063\u3066\u6570\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b","title":"27.3 \u6841\u533a\u5207\u308a\u8a18\u53f7\u3092\u4f7f\u3063\u3066\u6570\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b","text":"<p><code>ThousandsSeparate()</code> \u3092\u4f7f\u3046\u3068\u3001\u6841\u533a\u5207\u308a\u8a18\u53f7\u3092\u633f\u5165\u3057\u306a\u304c\u3089\u6570\u5024\u3092 <code>String</code> \u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nPrint &lt;&lt; ThousandsSeparate(123456);\nPrint &lt;&lt; ThousandsSeparate(3333.3333, 2); // \u5c0f\u6570\u70b9\u4ee5\u4e0b 2 \u6841\u307e\u3067\nPrint &lt;&lt; ThousandsSeparate(3333.3333, 4); // \u5c0f\u6570\u70b9\u4ee5\u4e0b 4 \u6841\u307e\u3067\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/format/#274-\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6307\u5b9a\u5b50\u306b\u3088\u308b\u6570\u5024\u304b\u3089\u6587\u5b57\u5217\u3078\u306e\u5909\u63db","title":"27.4 \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6307\u5b9a\u5b50\u306b\u3088\u308b\u6570\u5024\u304b\u3089\u6587\u5b57\u5217\u3078\u306e\u5909\u63db","text":"<p>\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306e\u3042\u3068\u306b <code>_fmt()</code> \u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u4ed8\u3051\u308b\u3068\u3001\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u5185\u306b\u8a18\u8ff0\u3057\u305f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6307\u5b9a\u5b50 <code>{}</code> \u306b\u3001<code>( )</code> \u5185\u306b\u8a18\u8ff0\u3057\u305f\u5f15\u6570\u3092\u6587\u5b57\u5217\u5316\u3057\u3066\u633f\u5165\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"tutorial2/format/#2741-\u57fa\u672c","title":"27.4.1 \u57fa\u672c","text":"<p><code>U\"{}\"_fmt(x)</code> \u3068\u66f8\u304f\u3068\u3001<code>{}</code> \u306b\u306f\u5024 <code>x</code> \u3092\u6587\u5b57\u5217\u306b\u3057\u305f\u3082\u306e\u304c\u5165\u308a\u307e\u3059\u3002</p> <p>\u6587\u5b57\u5217\u5185\u3067 <code>{</code> \u3084 <code>}</code> \u306e\u6587\u5b57\u3092\u6271\u3044\u305f\u3044\u5834\u5408\u306f\u3001<code>{{</code> \u3084 <code>}}</code> \u3068\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nint32 n = 3;\nPrint &lt;&lt; U\"Siv{}D\"_fmt(n);\nPrint &lt;&lt; U\"{}/{}/{}\"_fmt(2023, 12, 31);\nPrint &lt;&lt; U\"Hello, {}!\"_fmt(U\"Siv3D\");\nPrint &lt;&lt; U\"position: {}, color: {}\"_fmt(Point{ 23, 45 }, ColorF{ 0.7, 0.8, 0.9 });\n// '{', '}' \u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f \"{{\", \"}}\" \u3092\u4f7f\u3046 \nPrint &lt;&lt; U\"{{abc}} {}\"_fmt(123);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/format/#2742-\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u6307\u5b9a","title":"27.4.2 \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u6307\u5b9a","text":"<p><code>{0}</code>, <code>{1}</code> \u306e\u3088\u3046\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8a18\u8ff0\u3059\u308b\u3068\u3001<code>_fmt()</code> \u5185\u306e\u5bfe\u5fdc\u3059\u308b\u5f15\u6570\u3092\u9806\u5e8f\u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nPrint &lt;&lt; U\"{2}/{1}/{0}\"_fmt(2023, 12, 31);\nPrint &lt;&lt; U\"{0}/{1}/{2}\"_fmt(2023, 12, 31);\nPrint &lt;&lt; U\"C{0}{0}\"_fmt(U'+');\nPrint &lt;&lt; U\"{0} - {1} - {0}\"_fmt(U\"Tokyo\", U\"Osaka\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/format/#2743-string-\u3092\u4f7f\u3046","title":"27.4.3 String \u3092\u4f7f\u3046","text":"<p><code>Fmt(s)</code> \u95a2\u6570\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306e\u4ee3\u308f\u308a\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6307\u5b9a\u5b50\u304c\u8a18\u8ff0\u3055\u308c\u305f <code>String</code> \u306e\u6587\u5b57\u5217\u3092\u7528\u3044\u3066\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String s1 = U\"{2}/{1}/{0}\";\nconst String s2 = U\"{0}/{1}/{2}\";\nPrint &lt;&lt; Fmt(s1)(2023, 12, 31);\nPrint &lt;&lt; Fmt(s2)(2023, 12, 31);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/format/#2744-\u5c0f\u6570\u70b9\u4ee5\u4e0b\u306e\u6841\u6570","title":"27.4.4 \u5c0f\u6570\u70b9\u4ee5\u4e0b\u306e\u6841\u6570","text":"<p>\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b\u306e\u5024 <code>x</code> \u3092\u3001\u5c0f\u6570\u70b9\u4ee5\u4e0b\u306e\u6841\u6570\u3092\u6307\u5b9a\u3057\u3066\u5909\u63db\u3059\u308b\u5834\u5408\u3001<code>U\"{:.2f}\"_fmt(x)</code> \u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\uff08\u3053\u306e\u5834\u5408\u5c0f\u6570\u70b9\u4ee5\u4e0b 2 \u6841\uff09\u3002\u5c0f\u6570\u70b9\u4ee5\u4e0b\u3092\u8868\u793a\u3057\u306a\u3044\u5834\u5408\u306f <code>U\"{:.0f}\"_fmt(x)</code> \u3068\u3057\u307e\u3059\u3002\u6841\u6570\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u306a\u3044\u5909\u63db\u3067\u306f\u3001\u305d\u306e\u5024\u306e\u7cbe\u5ea6\u304c\u5931\u308f\u308c\u306a\u3044\u6700\u77ed\u306e\u6841\u6570\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code>```cpp\n# include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\ndouble x = 3.14159265;\nPrint &lt;&lt; U\"{}\"_fmt(x);\nPrint &lt;&lt; U\"{:.3f}\"_fmt(x);\n// \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u6307\u5b9a\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u5834\u5408\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f : \u306e\u5de6\nPrint &lt;&lt; U\"{1} \u2252 {0:.6f}\"_fmt(x, U\"\u03c0\");\nPrint &lt;&lt; U\"{}\"_fmt(12345.678);\nPrint &lt;&lt; U\"{:.3f}\"_fmt(12345.678);\nPrint &lt;&lt; U\"{:.6f}\"_fmt(12345.678);\nPrint &lt;&lt; U\"{}\"_fmt(9876543.21);\nPrint &lt;&lt; U\"{:.0f}\"_fmt(9876543.21);\n// Vec2 \u578b\u306b\u3082\u4f7f\u3048\u308b\nPrint &lt;&lt; U\"{}\"_fmt(Vec2{ 1.111, 2.222 });\nPrint &lt;&lt; U\"{:.1f}\"_fmt(Vec2{ 1.111, 2.222 });\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/format/#2745-\u30d1\u30c7\u30a3\u30f3\u30b0","title":"27.4.5 \u30d1\u30c7\u30a3\u30f3\u30b0","text":"<p>\u5024\u306e\u5909\u63db\u7d50\u679c\u304c\u6700\u5c0f N \u6587\u5b57\u306e\u5e45\u306b\u306a\u308b\u3088\u3046\u30d1\u30c6\u30a3\u30f3\u30b0\u6587\u5b57\u3092\u633f\u5165\u3067\u304d\u307e\u3059\u3002\u6587\u5b57\u306e\u5de6\u306b\u30d1\u30c6\u30a3\u30f3\u30b0\u6587\u5b57 c \u3092\u633f\u5165\u3057\u305f\u3044\u5834\u5408\u306f <code>{:c&gt;N}</code>, \u53f3\u306b\u633f\u5165\u3057\u305f\u3044\u5834\u5408\u306f <code>{:c&lt;N}</code>, \u5de6\u53f3\u306b\u5747\u7b49\u306b\u633f\u5165\u3057\u305f\u3044\u5834\u5408\u306f <code>{:c^N}</code> \u3068\u8a18\u8ff0\u3057\u307e\u3059\u3002<code>c</code> \u3092\u7701\u7565\u3057\u305f\u5834\u5408\u306f\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nPrint &lt;&lt; U\"{:0&gt;5}\"_fmt(3);\nPrint &lt;&lt; U\"{:&gt;5}\"_fmt(3);\nPrint &lt;&lt; U\"{:&gt;6}\"_fmt(100);\nPrint &lt;&lt; U\"{:*&gt;6}\"_fmt(100);\nPrint &lt;&lt; U\"{:&lt;6}\"_fmt(100);\nPrint &lt;&lt; U\"{:*&lt;6}\"_fmt(100);\nPrint &lt;&lt; U\"{:^6}\"_fmt(100);\nPrint &lt;&lt; U\"{:*^6}\"_fmt(100);\nPrint &lt;&lt; U\"{:?&gt;6}\"_fmt(U\"aaa\");\nPrint &lt;&lt; U\"{:?&gt;6}\"_fmt(U\"aaabbb\");\nPrint &lt;&lt; U\"{:?&gt;6}\"_fmt(U\"aaabbbccc\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/format/#2746-\u57fa\u6570\u306e\u6307\u5b9a","title":"27.4.6 \u57fa\u6570\u306e\u6307\u5b9a","text":"<p>\u6574\u6570\u3092\u5909\u63db\u3059\u308b\u3068\u304d\u3001<code>{:X}</code> \u306f\u5927\u6587\u5b57\u306e 16 \u9032\u6570\u3001<code>{:x}</code> \u306f\u5c0f\u6587\u5b57\u306e 16 \u9032\u6570\u3001<code>{:o}</code> \u306f 8 \u9032\u6570\u3001<code>{:b}</code> \u306f 2 \u9032\u6570\u306b\u5909\u63db\u3057\u307e\u3059\u3002<code>#</code> \u3092\u4ed8\u3051\u308b\u3068\u57fa\u6570\u306b\u5fdc\u3058\u305f\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u304c\u4ed8\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nPrint &lt;&lt; U\"{:X}\"_fmt(255);\nPrint &lt;&lt; U\"{:x}\"_fmt(255);\nPrint &lt;&lt; U\"{:o}\"_fmt(255);\nPrint &lt;&lt; U\"{:b}\"_fmt(255);\nPrint &lt;&lt; U\"{:#X}\"_fmt(255);\nPrint &lt;&lt; U\"{:#x}\"_fmt(255);\nPrint &lt;&lt; U\"{:#o}\"_fmt(255);\nPrint &lt;&lt; U\"{:#b}\"_fmt(255);\nPrint &lt;&lt; U\"0x{:08X}\"_fmt(255);\nPrint &lt;&lt; U\"0x{:08x}\"_fmt(255);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/format/#2747-\u7b26\u53f7","title":"27.4.7 \u7b26\u53f7","text":"<p><code>{:+}</code> \u306f\u6b63\u306e\u5024\u306b + \u8a18\u53f7\u3092\u4ed8\u52a0\u3057\u3001<code>{: }</code> \u306f\u6b63\u306e\u5024\u306e\u524d\u306b\u534a\u89d2\u7a7a\u767d\u3092\u4ed8\u52a0\u3057\u307e\u3059\u3002</p> <p></p> <pre><code>```cpp\n# include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nPrint &lt;&lt; U\"{}/{}\"_fmt(-123, 123);\nPrint &lt;&lt; U\"{:+}/{:+}\"_fmt(-123, 123);\nPrint &lt;&lt; U\"{: }/{: }\"_fmt(-123, 123);\nPrint &lt;&lt; U\"{}/{}\"_fmt(0.5, -0.5);\nPrint &lt;&lt; U\"{:+}/{:+}\"_fmt(0.5, -0.5);\nPrint &lt;&lt; U\"{: }/{: }\"_fmt(0.5, -0.5);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/format/#275-\u81ea\u4f5c\u30af\u30e9\u30b9\u3092-_fmt-\u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u306b\u3059\u308b","title":"27.5 \u81ea\u4f5c\u30af\u30e9\u30b9\u3092 _fmt() \u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u306b\u3059\u308b","text":"<p>\u81ea\u4f5c\u30af\u30e9\u30b9\u3092 <code>_fmt()</code> \u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u306b\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u53c2\u8003\u306b <code>fmt::formatter</code> \u306e\u7279\u6b8a\u5316\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nstruct MyInt\n{\nint32 value;\n};\ntemplate &lt;&gt;\nstruct fmt::formatter&lt;MyInt, char32&gt;\n{\nstd::u32string tag;\nauto parse(basic_format_parse_context&lt;char32&gt;&amp; ctx)\n{\nreturn s3d::detail::GetFormatTag(tag, ctx);\n}\ntemplate &lt;class FormatContext&gt;\nauto format(const MyInt&amp; value, FormatContext&amp; ctx)\n{\nif (tag.empty())\n{\nreturn format_to(ctx.out(), U\"{}\", value.value);\n}\nelse\n{\nconst std::u32string format = (U\"{:\" + tag + U\"}\");\nreturn format_to(ctx.out(), format, value.value);\n}\n}\n};\nstruct RGB\n{\nuint8 r, g, b;\n};\ntemplate &lt;&gt;\nstruct fmt::formatter&lt;RGB, char32&gt;\n{\nstd::u32string tag;\nauto parse(basic_format_parse_context&lt;char32&gt;&amp; ctx)\n{\nreturn s3d::detail::GetFormatTag(tag, ctx);\n}\ntemplate &lt;class FormatContext&gt;\nauto format(const RGB&amp; value, FormatContext&amp; ctx)\n{\nif (tag.empty())\n{\nreturn format_to(ctx.out(), U\"({}, {}, {})\", value.r, value.g, value.b);\n}\nelse\n{\nconst std::u32string format\n= (U\"({:\" + tag + U\"}, {:\" + tag + U\"}, {:\" + tag + U\"})\");\nreturn format_to(ctx.out(), format, value.r, value.g, value.b);\n}\n}\n};\nvoid Main()\n{\nconst MyInt a{ 127 };\nPrint &lt;&lt; U\"{}\"_fmt(a);\nPrint &lt;&lt; U\"{:X}\"_fmt(a);\nconst RGB b{ 255, 127, 0 };\nPrint &lt;&lt; U\"{}\"_fmt(b);\nPrint &lt;&lt; U\"{:X}\"_fmt(b);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/format/#276-\u6587\u5b57\u5217\u304b\u3089\u6570\u5024\u3078\u306e\u5909\u63db","title":"27.6 \u6587\u5b57\u5217\u304b\u3089\u6570\u5024\u3078\u306e\u5909\u63db","text":"<p><code>Parse()</code>, <code>ParseOr()</code>, <code>ParseOpt()</code> \u3092\u4f7f\u3046\u3068\u3001\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305f\u578b\u306e\u5024\u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002\u5909\u63db\u3059\u308b\u306b\u306f\u305d\u306e\u578b\u304c\u30d1\u30fc\u30b9\u53ef\u80fd\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u914d\u5217\u306e\u30d1\u30fc\u30b9\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002</p>"},{"location":"tutorial2/format/#2761-parse","title":"27.6.1 Parse","text":"<p><code>Parse&lt;Type&gt;(s)</code> \u306f\u3001\u6587\u5b57\u5217 <code>s</code> \u3092 <code>Type</code> \u578b\u306e\u5024\u306b\u5909\u63db\u3057\u3001\u5931\u6557\u3057\u305f\u5834\u5408\u306f\u4f8b\u5916 <code>ParseError</code> \u3092\u6295\u3052\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst int32 a = Parse&lt;int32&gt;(U\"123\");\nconst double b = Parse&lt;double&gt;(U\"-3.14159\");\nconst Point c = Parse&lt;Point&gt;(U\"(10, 20)\");\nPrint &lt;&lt; a;\nPrint &lt;&lt; b;\nPrint &lt;&lt; c;\ntry\n{\nconst Point d = Parse&lt;Point&gt;(U\"(0,0)\");\nconst Point e = Parse&lt;Point&gt;(U\"(20, 40)\");\nconst Point f = Parse&lt;Point&gt;(U\"123\"); // \u5931\u6557\u3057\u3066\u4f8b\u5916\u3092\u6295\u3052\u308b\n}\ncatch (const ParseError&amp; error)\n{\n// \u4f8b\u5916\u306e\u8a73\u7d30\u3092\u8868\u793a\u3059\u308b\nPrint &lt;&lt; error;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/format/#2762-parseor","title":"27.6.2 ParseOr","text":"<p><code>ParseOr&lt;Type&gt;(s, defaultValue)</code> \u306f\u3001\u6587\u5b57\u5217 <code>s</code> \u3092 <code>Type</code> \u578b\u306e\u5024\u306b\u5909\u63db\u3057\u3001\u5931\u6557\u3057\u305f\u5834\u5408\u306f\u4ee3\u308f\u308a\u306b <code>defaultValue</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst int32 a = ParseOr&lt;int32&gt;(U\"123\", -1);\nconst int32 b = ParseOr&lt;int32&gt;(U\"???\", -1); // \u5931\u6557\u3057\u3066 defaultValue \u3092\u8fd4\u3059\nconst ColorF c = ParseOr&lt;ColorF&gt;(U\"123\", ColorF{ 0.0, 0.0 }); // \u5931\u6557\u3057\u3066 defaultValue \u3092\u8fd4\u3059\nconst Circle d = ParseOr&lt;Circle&gt;(U\"(400, 300, 100)\", Circle{ 0, 0, 0 });\nPrint &lt;&lt; a;\nPrint &lt;&lt; b;\nPrint &lt;&lt; c;\nPrint &lt;&lt; d;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/format/#2763-parseopt","title":"27.6.3 ParseOpt","text":"<p><code>ParseOpt&lt;Type&gt;(s)</code> \u306f\u3001\u6587\u5b57\u5217 <code>s</code> \u3092 <code>Type</code> \u578b\u306e\u5024\u306b\u5909\u63db\u3057\u3001<code>Optional</code> \u3067\u30e9\u30c3\u30d7\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\u5909\u63db\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306f\u4ee3\u308f\u308a\u306b\u7121\u52b9\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Optional&lt;int32&gt; a = ParseOpt&lt;int32&gt;(U\"123\");\nconst Optional&lt;int32&gt; b = ParseOpt&lt;int32&gt;(U\"???\"); // \u5931\u6557\u3057\u3066\u7121\u52b9\u5024\u3092\u8fd4\u3059\nconst Optional&lt;ColorF&gt; c = ParseOpt&lt;ColorF&gt;(U\"123\"); // \u5931\u6557\u3057\u3066\u7121\u52b9\u5024\u3092\u8fd4\u3059\nconst Optional&lt;Circle&gt; d = ParseOpt&lt;Circle&gt;(U\"(400, 300, 100)\");\nif (a)\n{\nPrint &lt;&lt; U\"a: \" &lt;&lt; *a;\n}\nif (b)\n{\nPrint &lt;&lt; U\"b: \" &lt;&lt; *b;\n}\nif (c)\n{\nPrint &lt;&lt; U\"c: \" &lt;&lt; *c;\n}\nif (d)\n{\nPrint &lt;&lt; U\"d: \" &lt;&lt; *d;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/format/#277-\u81ea\u4f5c\u30af\u30e9\u30b9\u3092\u30d1\u30fc\u30b9\u53ef\u80fd\u306b\u3059\u308b","title":"27.7 \u81ea\u4f5c\u30af\u30e9\u30b9\u3092\u30d1\u30fc\u30b9\u53ef\u80fd\u306b\u3059\u308b","text":"<p>\u81ea\u4f5c\u30af\u30e9\u30b9\u3092 <code>_fmt()</code> \u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u306b\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u53c2\u8003\u306b <code>operator &gt;&gt;</code> \u3092\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3057\u3066\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nstruct MyInt\n{\nint32 value;\nfriend void Formatter(FormatData&amp; formatData, const MyInt&amp; value)\n{\nformatData.string.append(Format(value.value));\n}\ntemplate &lt;class CharType&gt;\nfriend std::basic_istream&lt;CharType&gt;&amp; operator &gt;&gt;(std::basic_istream&lt;CharType&gt;&amp; input, MyInt&amp; value)\n{\nreturn (input &gt;&gt; value.value);\n}\n};\nstruct RGB\n{\nuint8 r, g, b;\nfriend void Formatter(FormatData&amp; formatData, const RGB&amp; value)\n{\nformatData.string.append(U\"({}, {}, {})\"_fmt(value.r, value.g, value.b));\n}\ntemplate &lt;class CharType&gt;\nfriend std::basic_istream&lt;CharType&gt;&amp; operator &gt;&gt;(std::basic_istream&lt;CharType&gt;&amp; input, RGB&amp; value)\n{\nCharType unused;\nuint32 rgb[3];\n// () \u3084 , \u3092\u8aad\u307f\u98db\u3070\u3059\ninput &gt;&gt; unused &gt;&gt; rgb[0] &gt;&gt; unused &gt;&gt; rgb[1] &gt;&gt; unused &gt;&gt; rgb[2] &gt;&gt; unused;\nvalue.r = static_cast&lt;uint8&gt;(rgb[0]);\nvalue.g = static_cast&lt;uint8&gt;(rgb[1]);\nvalue.b = static_cast&lt;uint8&gt;(rgb[2]);\nreturn input;\n}\n};\nvoid Main()\n{\nconst MyInt a = Parse&lt;MyInt&gt;(U\"123\");\nconst RGB b = Parse&lt;RGB&gt;(U\"(255, 127, 0)\");\nPrint &lt;&lt; a;\nPrint &lt;&lt; b;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/grid/","title":"21. \u4e8c\u6b21\u5143\u914d\u5217","text":"<p>\u4e8c\u6b21\u5143\u914d\u5217\u30af\u30e9\u30b9 <code>Grid</code> \u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial2/grid/#211-\u4e8c\u6b21\u5143\u914d\u5217\u30af\u30e9\u30b9","title":"21.1 \u4e8c\u6b21\u5143\u914d\u5217\u30af\u30e9\u30b9","text":"<p>Siv3D \u3067\u306f\u4e8c\u6b21\u5143\u914d\u5217\u306e\u305f\u3081\u306e\u52d5\u7684\u914d\u5217\u30af\u30e9\u30b9 <code>Grid&lt;Type&gt;</code> \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u5185\u90e8\u306e\u8981\u7d20\u306f <code>Array&lt;Type&gt;</code> \u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u3066\u3001\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u30e1\u30e2\u30ea\u4e0a\u306b\u9023\u7d9a\u3057\u3066\u914d\u7f6e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081 <code>std::vector&lt;std::vector&lt;Type&gt;&gt;</code> \u3088\u308a\u3082\u52b9\u7387\u7684\u306b\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// 4x3 \u306e\u4e8c\u6b21\u5143\u914d\u5217\u3092\u4f5c\u6210\u3057\u3001\u5168\u3066\u306e\u8981\u7d20\u3092 -1 \u3067\u521d\u671f\u5316\u3059\u308b\nGrid&lt;int32&gt; grid(4, 3, -1);\nPrint &lt;&lt; grid;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/grid/#212-\u914d\u5217\u306e\u30b5\u30a4\u30ba","title":"21.2 \u914d\u5217\u306e\u30b5\u30a4\u30ba","text":"<p><code>.width()</code> \u3067\u5217\u6570\uff08\u5e45\uff09\u3001<code>.height()</code> \u3067\u884c\u6570\uff08\u9ad8\u3055\uff09\u3001<code>.size()</code> \u3067\u884c\u6570\u3068\u5217\u6570\u3092\u307e\u3068\u3081\u305f <code>Size</code> \u578b\u306e\u5024\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002<code>Size</code> \u306f <code>Point</code> \u306e\u578b\u30a8\u30a4\u30ea\u30a2\u30b9\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nGrid&lt;int32&gt; grid(4, 3, -1);\nPrint &lt;&lt; grid.size(); // Size \u578b\nPrint &lt;&lt; grid.width();\nPrint &lt;&lt; grid.height();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/grid/#213-\u6307\u5b9a\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","title":"21.3 \u6307\u5b9a\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","text":"<p><code>[y][x]</code> \u3067\u3001\u6307\u5b9a\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff08y \u884c\u76ee, x \u5217\u76ee\uff09\u306e\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f 0 \u304b\u3089\u59cb\u307e\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nGrid&lt;int32&gt; grid(4, 3, -1);\ngrid[0][0] = 0;\ngrid[0][1] = 10;\ngrid[1][0] = 20;\nPrint &lt;&lt; grid;\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p>\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 <code>[y][x]</code> \u306f <code>Point</code> \u578b\u306e\u5024\u3092\u4f7f\u3063\u3066 <code>[Point{ x, y }]</code> \u3067\u3082\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002x \u3068 y \u306e\u9806\u756a\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nGrid&lt;int32&gt; grid(4, 3, -1);\nconst Point index{ 3, 2 };\ngrid[index] = 99;\nPrint &lt;&lt; grid;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/grid/#214-\u7bc4\u56f2\u30d9\u30fc\u30b9\u306e-for-\u6587\u3067\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","title":"21.4 \u7bc4\u56f2\u30d9\u30fc\u30b9\u306e for \u6587\u3067\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","text":"<p>\u7bc4\u56f2\u30d9\u30fc\u30b9 for \u6587\u3092\u4f7f\u3063\u3066\u914d\u5217\u306e\u5404\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// 4x3 \u306e\u4e8c\u6b21\u5143\u914d\u5217\u3092\u4f5c\u6210\u3057\u3001\u5168\u3066\u306e\u8981\u7d20\u3092 0 \u3067\u521d\u671f\u5316\u3059\u308b\nGrid&lt;int32&gt; grid(4, 3);\nint32 count = 0;\nfor (auto&amp; elem : grid) // \u8981\u7d20\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306f\u53c2\u7167\n{\nelem = count++;\n}\nPrint &lt;&lt; grid;\nfor (const auto&amp; elem : grid) // \u8981\u7d20\u3092\u5909\u66f4\u3057\u306a\u3044\u5834\u5408\u306f const \u53c2\u7167\n{\nPrint &lt;&lt; elem;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/grid/#215-\u7a7a\u306e\u914d\u5217","title":"21.5 \u7a7a\u306e\u914d\u5217","text":"<p>\u8981\u7d20\u3092\u4fdd\u6301\u3057\u3066\u3044\u306a\u3044\u3001\u8981\u7d20\u6570\u304c 0 \u306e\u914d\u5217\u306f\u7a7a\u306e\u914d\u5217\u3067\u3059\u3002\u4ee3\u5165\u3084\u8ffd\u52a0\u306b\u3088\u3063\u3066\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001\u7a7a\u3067\u306a\u3044\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nGrid&lt;int32&gt; grid;\nPrint &lt;&lt; grid.size();\nPrint &lt;&lt; grid.width();\nPrint &lt;&lt; grid.height();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/grid/#216-\u914d\u5217\u304c\u7a7a\u3067\u3042\u308b\u304b\u3092\u8abf\u3079\u308b","title":"21.6 \u914d\u5217\u304c\u7a7a\u3067\u3042\u308b\u304b\u3092\u8abf\u3079\u308b","text":"<p><code>Grid</code> \u578b\u306e\u5024 <code>g</code> \u304c\u7a7a\u3067\u3042\u308b\u304b\u306f\u3001<code>if (g.isEmpty())</code> \u3084 <code>if (g)</code> / <code>if (not g)</code> \u3067\u8abf\u3079\u3089\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nGrid&lt;String&gt; words;\nGrid&lt;int32&gt; numbers(4, 3, -1);\nPrint &lt;&lt; words.isEmpty();\nPrint &lt;&lt; numbers.isEmpty();\nif (not words)\n{\nPrint &lt;&lt; U\"words is empty\";\n}\nif (numbers)\n{\nPrint &lt;&lt; U\"numbers is not empty\";\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/grid/#217-\u914d\u5217\u306b\u884c\u3092\u8ffd\u52a0\u3059\u308b","title":"21.7 \u914d\u5217\u306b\u884c\u3092\u8ffd\u52a0\u3059\u308b","text":"<p><code>.push_back_row(value)</code> \u3067\u914d\u5217\u306e\u672b\u5c3e\u306b\u3001\u5168\u3066\u306e\u8981\u7d20\u304c <code>value</code> \u3067\u3042\u308b\u884c\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002W x H \u306e\u4e8c\u6b21\u5143\u914d\u5217\u306b\u5bfe\u3057\u3066\u3001<code>.push_back_row(value)</code> \u3092\u547c\u3073\u51fa\u3059\u3068\u3001W x (H + 1) \u306e\u4e8c\u6b21\u5143\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nGrid&lt;int32&gt; grid(4, 3, -1);\n// \u8981\u7d20\u304c\u3059\u3079\u3066 5 \u3067\u3042\u308b\u884c\u3092\u672b\u5c3e\u306b\u8ffd\u52a0\u3057\u3001\n// 4x4 \u306e\u4e8c\u6b21\u5143\u914d\u5217\u306b\u3059\u308b\ngrid.push_back_row(5);\nPrint &lt;&lt; grid.size();\nPrint &lt;&lt; grid;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/grid/#218-\u914d\u5217\u3092\u7a7a\u306b\u3059\u308b","title":"21.8 \u914d\u5217\u3092\u7a7a\u306b\u3059\u308b","text":"<p><code>.clear()</code> \u3067\u914d\u5217\u3092\u7a7a\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4e8c\u6b21\u5143\u914d\u5217\u306e\u30b5\u30a4\u30ba\u306f 0 x 0 \u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nGrid&lt;int32&gt; grid(4, 3, -1);\n// \u914d\u5217\u3092\u7a7a\u306b\u3059\u308b\ngrid.clear();\nPrint &lt;&lt; grid;\nPrint &lt;&lt; grid.isEmpty();\nPrint &lt;&lt; grid.size();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/grid/#219-\u672b\u5c3e\u306e\u884c\u3092\u524a\u9664\u3059\u308b","title":"21.9 \u672b\u5c3e\u306e\u884c\u3092\u524a\u9664\u3059\u308b","text":"<p><code>.pop_back_row()</code> \u3067\u914d\u5217\u306e\u672b\u5c3e\u306e\u884c\u3092\u524a\u9664\u3067\u304d\u307e\u3059\u3002W x H \u306e\u4e8c\u6b21\u5143\u914d\u5217\u306b\u5bfe\u3057\u3066\u3001<code>.pop_back_row()</code> \u3092\u547c\u3073\u51fa\u3059\u3068\u3001W x (H - 1) \u306e\u4e8c\u6b21\u5143\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002\u7a7a\u306e\u914d\u5217\u3067 <code>.pop_back_row()</code> \u3092\u547c\u3093\u3067\u306f\u3044\u3051\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nGrid&lt;int32&gt; grid(4, 3, -1);\n// \u672b\u5c3e\u306e\u884c\u3092\u524a\u9664\u3057\u3066 4x2 \u306e\u4e8c\u6b21\u5143\u914d\u5217\u306b\u3059\u308b\ngrid.pop_back_row();\nPrint &lt;&lt; grid.size();\nPrint &lt;&lt; grid;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/grid/#2110-\u914d\u5217\u306e\u8981\u7d20\u6570\u3092\u5909\u66f4\u3059\u308b","title":"21.10 \u914d\u5217\u306e\u8981\u7d20\u6570\u3092\u5909\u66f4\u3059\u308b","text":"<p><code>.resize(w, h, value)</code> \u307e\u305f\u306f <code>.resize(w, h)</code> \u3067\u914d\u5217\u306e\u8981\u7d20\u6570\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\u524d\u8005\u3067\u8981\u7d20\u6570\u304c\u5897\u3048\u308b\u5834\u5408\u3001\u65b0\u3057\u3044\u8981\u7d20\u306f <code>value</code> \u3067\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002\u5f8c\u8005\u3067\u306f\u3001\u65b0\u3057\u3044\u8981\u7d20\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3067\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nGrid&lt;int32&gt; grid(2, 2, -1);\ngrid.resize(6, 6, 2);\nPrint &lt;&lt; grid;\nPrint &lt;&lt; U\"------\";\nint32 count = 0;\nfor (auto&amp; elem : grid)\n{\nelem = count++;\n}\nPrint &lt;&lt; grid;\nPrint &lt;&lt; U\"------\";\ngrid.resize(3, 3);\nPrint &lt;&lt; grid;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/grid/#2111-\u5168\u3066\u306e\u8981\u7d20\u306b\u540c\u3058\u5024\u3092\u4ee3\u5165\u3059\u308b","title":"21.11 \u5168\u3066\u306e\u8981\u7d20\u306b\u540c\u3058\u5024\u3092\u4ee3\u5165\u3059\u308b","text":"<p><code>.fill(value)</code> \u3067\u914d\u5217\u306e\u5168\u3066\u306e\u8981\u7d20\u306b <code>value</code> \u3092\u4ee3\u5165\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nGrid&lt;int32&gt; grid(4, 3, -1);\nPrint &lt;&lt; grid;\n// \u5168\u3066\u306e\u8981\u7d20\u306b 3 \u3092\u4ee3\u5165\u3059\u308b\ngrid.fill(3);\nPrint &lt;&lt; grid;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/grid/#2112-map-\u51e6\u7406","title":"21.12 map \u51e6\u7406","text":"<p><code>.map(f)</code> \u3067\u914d\u5217\u306e\u5168\u3066\u306e\u8981\u7d20\u306b\u95a2\u6570 <code>f</code> \u3092\u9069\u7528\u3057\u305f\u7d50\u679c\u3092\u6301\u3064\u65b0\u3057\u3044\u4e8c\u6b21\u5143\u914d\u5217\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002<code>f</code> \u306f\u3001\u914d\u5217\u306e\u8981\u7d20\u306e\u578b\u3092\u5f15\u6570\u306b\u53d6\u308a\u3001\u65b0\u3057\u3044\u8981\u7d20\u306e\u578b\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nGrid&lt;int32&gt; grid;\ngrid.resize(6, 6);\nint32 count = 0;\nfor (auto&amp; elem : grid)\n{\nelem = count++;\n}\nPrint &lt;&lt; grid;\nPrint &lt;&lt; U\"------\";\n// grid \u306e\u5168\u3066\u306e\u8981\u7d20\u3092 0.1 \u500d\u3057\u305f\u5024\u3092\u6301\u3064 Grid&lt;double&gt; \u3092\u4f5c\u6210\u3059\u308b\nconst Grid&lt;double&gt; grid2 = grid.map([](int32 n) { return (n * 0.1); });\nPrint &lt;&lt; grid2;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/grid/#2113-\u4e00\u6b21\u5143\u3067\u306e\u30a2\u30af\u30bb\u30b9","title":"21.13 \u4e00\u6b21\u5143\u3067\u306e\u30a2\u30af\u30bb\u30b9","text":"<p><code>.asArray()</code> \u3067\u3001\u4e8c\u6b21\u5143\u914d\u5217\u306e\u5185\u90e8\u306e\u4e00\u6b21\u5143\u914d\u5217\u3078\u306e\u53c2\u7167\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002W x H \u306e\u4e8c\u6b21\u5143\u914d\u5217\u306b\u5bfe\u3057\u3066\u3001<code>.asArray()</code> \u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u8981\u7d20\u6570\u304c (W x H) \u306e\u4e00\u6b21\u5143\u914d\u5217\u3092\u5f97\u3089\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nGrid&lt;int32&gt; grid;\ngrid.resize(4, 3);\nint32 count = 0;\nfor (auto&amp; elem : grid)\n{\nelem = count++;\n}\n// \u5185\u90e8\u306e\u4e00\u6b21\u5143\u914d\u5217\u3092\u53d6\u5f97\u3059\u308b\nconst Array&lt;int32&gt;&amp; a = grid.asArray();\nPrint &lt;&lt; a;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/","title":"28. GUI","text":"<p>\u30dc\u30bf\u30f3\u3084\u30b9\u30e9\u30a4\u30c0\u30fc\u3001\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306a\u3069\u306e GUI \u6a5f\u80fd\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial2/gui/#281-\u30dc\u30bf\u30f3","title":"28.1 \u30dc\u30bf\u30f3","text":"<p>\u30dc\u30bf\u30f3\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f <code>SimpleGUI::Button()</code> \u95a2\u6570\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002\u95a2\u6570\u3067\u306f\u30dc\u30bf\u30f3\u306e\u30c6\u30ad\u30b9\u30c8\u3084\u4f4d\u7f6e\u3001\u5e45\u3001\u72b6\u614b\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u30dc\u30bf\u30f3\u306e\u5e45\u3092\u7701\u7565\u3059\u308b\u304b\u3001<code>unspecified</code> \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30dc\u30bf\u30f3\u306e\u5e45\u306f\u30c6\u30ad\u30b9\u30c8\u306e\u5e45\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306f\u81ea\u8eab\u304c\u62bc\u3055\u308c\u305f\u3068\u304d\u306b <code>true</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Red\", Vec2{ 100, 100 }))\n{\nScene::SetBackground(ColorF{ 0.8, 0.2, 0.2 });\n}\nif (SimpleGUI::Button(U\"Green\", Vec2{ 100, 150 }))\n{\nScene::SetBackground(ColorF{ 0.2, 0.8, 0.2 });\n}\nif (SimpleGUI::Button(U\"Blue\", Vec2{ 100, 200 }))\n{\nScene::SetBackground(ColorF{ 0.2, 0.2, 0.8 });\n}\n// \u30dc\u30bf\u30f3\u306e\u5e45\u3092 200px \u306b\u6307\u5b9a\u3059\u308b\nif (SimpleGUI::Button(U\"White\", Vec2{ 100, 250 }, 200))\n{\nScene::SetBackground(ColorF{ 0.9 });\n}\n// \u30dc\u30bf\u30f3\u306e\u5e45\u3092 200px \u306b\u6307\u5b9a\u3059\u308b\nif (SimpleGUI::Button(U\"Black\", Vec2{ 100, 300 }, 200))\n{\nScene::SetBackground(ColorF{ 0.1 });\n}\n// \u30dc\u30bf\u30f3\u3092\u7121\u52b9\u5316\u3059\u308b\nif (SimpleGUI::Button(U\"Gray\", Vec2{ 100, 350 }, 200, false))\n{\nScene::SetBackground(ColorF{ 0.5 });\n}\n// \u30dc\u30bf\u30f3\u3092\u7121\u52b9\u5316\u3057\u3001\u30dc\u30bf\u30f3\u306e\u5e45\u306f\u30c6\u30ad\u30b9\u30c8\u306b\u5408\u308f\u305b\u308b\nif (SimpleGUI::Button(U\"Yellow\", Vec2{ 100, 400 }, unspecified, false))\n{\nScene::SetBackground(ColorF{ 0.8, 0.8, 0.1 });\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/#282-\u30b9\u30e9\u30a4\u30c0\u30fc","title":"28.2 \u30b9\u30e9\u30a4\u30c0\u30fc","text":"<p>\u30b9\u30e9\u30a4\u30c0\u30fc\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f <code>SimpleGUI::Slider()</code> \u95a2\u6570\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002\u95a2\u6570\u3067\u306f\u30b9\u30e9\u30a4\u30c0\u30fc\u306e\u30c6\u30ad\u30b9\u30c8\u3084\u4f4d\u7f6e\u3001\u5e45\u3001\u5024\u306e\u7bc4\u56f2\u306a\u3069\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u30c6\u30ad\u30b9\u30c8\u3092\u6301\u305f\u306a\u3044\u7e26\u65b9\u5411\u306e\u30b9\u30e9\u30a4\u30c0\u30fc\u306f <code>SimpleGUI::VerticalSlider()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u30b9\u30e9\u30a4\u30c0\u30fc\u306e\u5024\u306f <code>double</code> \u578b\u306e\u5909\u6570\u3067\u7ba1\u7406\u3057\u307e\u3059\u3002\u3069\u3061\u3089\u306e\u95a2\u6570\u3082\u3001\u30b9\u30e9\u30a4\u30c0\u30fc\u306e\u6307\u3059\u5024\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b <code>true</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nColorF color1{ 1.0 };\nColorF color2{ 1.0, 0.5, 0.0 };\nColorF color3{ 0.2, 0.6, 0.9 };\ndouble value1 = 5.0;\ndouble value2 = 7.0;\ndouble value3 = 2.0;\ndouble value4 = 4.0;\nwhile (System::Update())\n{\nSimpleGUI::Slider(color1.r, Vec2{ 100, 40 });\nSimpleGUI::Slider(color1.g, Vec2{ 100, 80 });\nSimpleGUI::Slider(color1.b, Vec2{ 100, 120 });\nCircle{ 50, 100, 30 }.draw(color1);\nSimpleGUI::Slider(U\"Red\", color2.r, Vec2{ 100, 200 });\nSimpleGUI::Slider(U\"Green\", color2.g, Vec2{ 100, 240 });\nSimpleGUI::Slider(U\"Blue\", color2.b, Vec2{ 100, 280 });\nCircle{ 50, 260, 30 }.draw(color2);\n// \u30b9\u30e9\u30a4\u30c0\u30fc\u306e\u5024\u3092\u8868\u793a\u3059\u308b\u3002\u30e9\u30d9\u30eb\u306e\u5e45 100px, \u30b9\u30e9\u30a4\u30c0\u30fc\u306e\u5e45 200px\nSimpleGUI::Slider(U\"R {:.2f}\"_fmt(color3.r), color3.r, Vec2{ 100, 360 }, 100, 200);\nSimpleGUI::Slider(U\"G {:.2f}\"_fmt(color3.g), color3.g, Vec2{ 100, 400 }, 100, 200);\nSimpleGUI::Slider(U\"B {:.2f}\"_fmt(color3.b), color3.b, Vec2{ 100, 440 }, 100, 200);\nCircle{ 50, 420, 30 }.draw(color3);\n// \u5024\u306e\u7bc4\u56f2\u304c 0.0\uff5e10.0\nSimpleGUI::Slider(U\"{:.2f}\"_fmt(value1), value1, 0.0, 10.0, Vec2{ 500, 40 }, 60, 150);\n// \u30b9\u30e9\u30a4\u30c0\u30fc\u3092\u7121\u52b9\u5316\u3059\u308b\nSimpleGUI::Slider(U\"{:.2f}\"_fmt(value2), value2, 0.0, 10.0, Vec2{ 500, 100 }, 60, 150, false);\n// \u7e26\u306e\u30b9\u30e9\u30a4\u30c0\u30fc\nSimpleGUI::VerticalSlider(value3, 0.0, 10.0, Vec2{ 500, 160 }, 200);\nSimpleGUI::VerticalSlider(value4, 0.0, 10.0, Vec2{ 560, 160 }, 200, false);\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/#283-gui-\u306b\u304a\u3051\u308b\u30a2\u30a4\u30b3\u30f3\u306e\u4f7f\u7528","title":"28.3 GUI \u306b\u304a\u3051\u308b\u30a2\u30a4\u30b3\u30f3\u306e\u4f7f\u7528","text":"<p>GUI \u6a5f\u80fd\u306e\u3046\u3061\u3001<code>SimpleGUI::Button()</code> \u3084 <code>SimpleGUI::Slider()</code> \u306e\u3088\u3046\u306b\u3001\u30d5\u30a9\u30f3\u30c8\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u305b\u305a\u4f7f\u3048\u308b GUI \u95a2\u6570\u3067\u306f\u3001\u6587\u5b57\u5217\u306b <code>\\U000F0493</code> \u306e\u3088\u3046\u306b\u30a2\u30a4\u30b3\u30f3 ID \u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\u3001\u30a2\u30a4\u30b3\u30f3\u3092\u8868\u793a\u3067\u304d\u307e\u3059\u3002\u4f7f\u3048\u308b\u30a2\u30a4\u30b3\u30f3\u306f Material Design Icons  \u306b\u542b\u307e\u308c\u3066\u3044\u308b\u3082\u306e\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nint32 up = 0, down = 0;\ndouble volume = 1.0;\nwhile (System::Update())\n{\nSimpleGUI::Button(U\"\\U000F0493 \u8a2d\u5b9a\", Vec2{ 20, 40 }, 160);\nSimpleGUI::Button(U\"\\U000F1398 \u4e2d\u65ad\u3059\u308b\", Vec2{ 20, 80 }, 160);\nSimpleGUI::Button(U\"\\U000F0E1E OK\", Vec2{ 20, 120 }, 160);\nSimpleGUI::Button(U\"\\U000F0193 \u4fdd\u5b58\", Vec2{ 20, 160 }, 160);\n// Undo / Redo\nSimpleGUI::Button(U\"\\U000F054C\", Vec2{ 200, 40 }, 40);\nSimpleGUI::Button(U\"\\U000F044E\", Vec2{ 250, 40 }, 40);\n// \u97f3\u91cf\u8abf\u6574\nSimpleGUI::Slider((0.5 &lt; volume) ? U\"\\U000F057E\"\n: (0.0 &lt; volume) ? U\"\\U000F0580\" : U\"\\U000F0581\", volume, Vec2{ 200, 100 }, 30, 170);\n// upvote\nif (SimpleGUI::Button(U\"\\U000F0513  {}\"_fmt(up), Vec2{ 200, 160 }, 90))\n{\n++up;\n}\n// downvote\nif (SimpleGUI::Button(U\"\\U000F0511  {}\"_fmt(down), Vec2{ 310, 160 }, 90))\n{\n++down;\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/#284-\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9","title":"28.4 \u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9","text":"<p>\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f <code>SimpleGUI::CheckBox()</code> \u95a2\u6570\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002\u95a2\u6570\u3067\u306f\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u306e\u30c6\u30ad\u30b9\u30c8\u3084\u4f4d\u7f6e\u3001\u5e45\u3001\u72b6\u614b\u306a\u3069\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u5e45\u3092\u7701\u7565\u3059\u308b\u304b\u3001<code>unspecified</code> \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u306e\u5e45\u306f\u30c6\u30ad\u30b9\u30c8\u306b\u5408\u308f\u305b\u305f\u5e45\u306b\u306a\u308a\u307e\u3059\u3002\u30c1\u30a7\u30c3\u30af\u306e\u72b6\u614b\u306f <code>bool</code> \u578b\u306e\u5909\u6570\u3067\u7ba1\u7406\u3057\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306f\u5024\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b <code>true</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nbool checked0 = false;\nbool checked1 = true;\nbool checked2 = false;\nbool checked3 = false;\nbool checked4 = false;\nbool checked5 = false;\nwhile (System::Update())\n{\nSimpleGUI::CheckBox(checked0, U\"Label0\", Vec2{ 100, 40 });\nSimpleGUI::CheckBox(checked1, U\"Label1\", Vec2{ 100, 80 });\nSimpleGUI::CheckBox(checked2, U\"Label2\", Vec2{ 100, 120 });\n// \u5e45 200px\nSimpleGUI::CheckBox(checked3, U\"Label3\", Vec2{ 100, 180 }, 200);\n// \u7121\u52b9\u5316\nSimpleGUI::CheckBox(checked4, U\"Label4\", Vec2{ 100, 220 }, 200, false);\n// \u5e45\u306f\u30c6\u30ad\u30b9\u30c8\u306b\u5408\u308f\u305b\u308b\nSimpleGUI::CheckBox(checked5, U\"Label5\", Vec2{ 100, 260 }, unspecified, false);\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/#285-\u30e9\u30b8\u30aa\u30dc\u30bf\u30f3","title":"28.5 \u30e9\u30b8\u30aa\u30dc\u30bf\u30f3","text":"<p>\u30e9\u30b8\u30aa\u30dc\u30bf\u30f3\u4f5c\u6210\u3059\u308b\u306b\u306f <code>SimpleGUI::RadioButtons()</code> \u95a2\u6570\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002\u95a2\u6570\u3067\u306f\u30e9\u30b8\u30aa\u30dc\u30bf\u30f3\u306e\u30c6\u30ad\u30b9\u30c8\u3084\u4f4d\u7f6e\u3001\u5e45\u3001\u72b6\u614b\u306a\u3069\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u6c34\u5e73\u306b\u30a2\u30a4\u30c6\u30e0\u304c\u4e26\u3076\u30e9\u30b8\u30aa\u30dc\u30bf\u30f3\u306f <code>SimpleGUI::HorizontalRadioButtons()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u30e9\u30b8\u30aa\u30dc\u30bf\u30f3\u306e\u9078\u629e\u9805\u76ee\u306f <code>size_t</code> \u578b\u306e\u5909\u6570\u3067\u7ba1\u7406\u3057\u307e\u3059\u3002\u3069\u3061\u3089\u306e\u95a2\u6570\u3082\u3001\u30e9\u30b8\u30aa\u30dc\u30bf\u30f3\u306e\u9078\u629e\u9805\u76ee\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b <code>true</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nsize_t index0 = 0;\nsize_t index1 = 2;\nsize_t index2 = 0;\nsize_t index3 = 1;\nsize_t index4 = 0;\nsize_t index5 = 0;\nconst Array&lt;String&gt; options = { U\"Red\", U\"Green\", U\"Blue\" };\nconst std::array&lt;ColorF, 3&gt; colors = { ColorF{ 0.8, 0.2, 0.2 }, ColorF{ 0.2, 0.8, 0.2 }, ColorF{ 0.2, 0.2, 0.8 } };\nScene::SetBackground(colors[index1]);\nwhile (System::Update())\n{\nSimpleGUI::RadioButtons(index0, { U\"Option1\", U\"Option2\", U\"Option3\" }, Vec2{ 100, 40 });\n// \u9078\u629e\u80a2\u3092 Array&lt;String&gt; \u3067\u6307\u5b9a\nif (SimpleGUI::RadioButtons(index1, options, Vec2{ 100, 180 }))\n{\nScene::SetBackground(colors[index1]);\n}\n// \u5e45 200px\nSimpleGUI::RadioButtons(index2, { U\"A\", U\"B\" }, Vec2{ 400, 40 }, 200);\n// \u7121\u52b9\u5316\nSimpleGUI::RadioButtons(index3, { U\"A\", U\"B\" }, Vec2{ 400, 140 }, 200, false);\n// \u5e45\u306f\u30c6\u30ad\u30b9\u30c8\u306b\u5408\u308f\u305b\u308b\nSimpleGUI::RadioButtons(index4, { U\"A\", U\"B\" }, Vec2{ 400, 240 }, unspecified, false);\n// \u6c34\u5e73\u30e9\u30b8\u30aa\u30dc\u30bf\u30f3\nSimpleGUI::HorizontalRadioButtons(index5, { U\"Apple\", U\"Bird\", U\"Cat\", U\"Dog\" }, Vec2{ 100, 400 });\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/#286-\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9","title":"28.6 \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9","text":"<p>\u5358\u4e00\u884c\u306e\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f <code>SimpleGUI::TextBox()</code> \u95a2\u6570\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002\u95a2\u6570\u3067\u306f\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306e\u4f4d\u7f6e\u3001\u5e45\u3001\u6587\u5b57\u6570\u306e\u4e0a\u9650\u3001\u72b6\u614b\u306a\u3069\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306e\u72b6\u614b\uff08\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u6587\u5b57\u5217\u306a\u3069\uff09\u306f <code>TextEditState</code> \u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3088\u3063\u3066\u7ba1\u7406\u3057\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306f\u30c6\u30ad\u30b9\u30c8\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b <code>true</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial2/gui/#2861-\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306e\u57fa\u672c","title":"28.6.1 \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306e\u57fa\u672c","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nTextEditState te0;\nTextEditState te1{ U\"Siv3D\" };// \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\nTextEditState te2;\nTextEditState te3;\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; te0.active; // \u30a2\u30af\u30c6\u30a3\u30d6\u304b\u3069\u3046\u304b\nPrint &lt;&lt; te0.text; // \u5165\u529b\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8 (String)\nSimpleGUI::TextBox(te0, Vec2{ 100, 140 });\nSimpleGUI::TextBox(te1, Vec2{ 100, 200 });\nif (SimpleGUI::Button(U\"Clear\", Vec2{ 320, 200 }))\n{\n// \u30c6\u30ad\u30b9\u30c8\u3092\u6d88\u53bb\u3059\u308b\nte1.clear();\n}\n// \u5e45 100px, \u6587\u5b57\u6570\u3092 4 \u6587\u5b57\u307e\u3067\u306b\u5236\u9650\u3059\u308b\nSimpleGUI::TextBox(te2, Vec2{ 100, 260 }, 100, 4);\n// \u7121\u52b9\u5316\nSimpleGUI::TextBox(te3, Vec2{ 100, 320 }, 100, 4, false);\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/#2862-\u524d\u5f8c\u306e\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u3078\u30d5\u30a9\u30fc\u30ab\u30b9\u3092\u79fb\u52d5\u3055\u305b\u308b","title":"28.6.2 \u524d\u5f8c\u306e\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u3078\u30d5\u30a9\u30fc\u30ab\u30b9\u3092\u79fb\u52d5\u3055\u305b\u308b","text":"<p><code>SimpleGUI::TextBox()</code> \u3067\u306f\u3001\u3042\u308b\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u304c\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u6642\u3001\u30a8\u30f3\u30bf\u30fc\u30ad\u30fc\u3084 Tab \u30ad\u30fc\u3092\u62bc\u3057\u305f\u308a\u3001\u7121\u95a2\u4fc2\u306a\u5834\u6240\u3092\u30af\u30ea\u30c3\u30af\u3057\u305f\u308a\u3059\u308b\u3068\u3001\u305d\u306e\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u304c\u975e\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u306a\u308a\u307e\u3059\u3002\u3042\u308b\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u304c Tab \u30ad\u30fc\u306b\u3088\u3063\u3066\u975e\u30a2\u30af\u30c6\u30a3\u30d6\u5316\u3057\u305f\u3053\u3068\u3092\u691c\u51fa\u3057\u3001\u524d\u5f8c\u306e\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u3078\u30d5\u30a9\u30fc\u30ab\u30b9\u3092\u79fb\u52d5\u3055\u305b\u308b\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nstd::array&lt;TextEditState, 3&gt; textEditStates;\nOptional&lt;int32&gt; nextTextBox;\nwhile (System::Update())\n{\n// Tab \u30ad\u30fc\u306e\u62bc\u4e0b\u3068\u540c\u3058\u30d5\u30ec\u30fc\u30e0\u3067\u6b21\u306e\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u3092\u30a2\u30af\u30c6\u30a3\u30d6\u5316\u3057\u3066\u3057\u307e\u3046\u3068\n// \u305d\u306e Tab \u30ad\u30fc\u306e\u62bc\u4e0b\u3067\u6b21\u306e\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u3082\u975e\u30a2\u30af\u30c6\u30a3\u30d6\u5316\u3057\u3066\u3057\u307e\u3046\u305f\u3081\u30011 \u30d5\u30ec\u30fc\u30e0\u5f8c\u306b\u30a2\u30af\u30c6\u30a3\u30d6\u5316\u3059\u308b\nif (nextTextBox)\n{\nif (*nextTextBox &lt; textEditStates.size())\n{\ntextEditStates[*nextTextBox].active = true;\n}\nnextTextBox.reset();\n}\nfor (int32 i = 0; i &lt; 3; ++i)\n{\nauto&amp; state = textEditStates[i];\nconst bool previous = state.active;\nSimpleGUI::TextBox(state, Vec2{ 100, (100 + i * 60) });\n// Tab \u30ad\u30fc\u306b\u3088\u3063\u3066\u975e\u30a2\u30af\u30c6\u30a3\u30d6\u5316\u3055\u308c\u305f\nif (previous &amp;&amp; (state.active == false) &amp;&amp; state.tabKey)\n{\nif (KeyShift.pressed()) // Shift \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\u524d\u306e\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u3078\n{\nnextTextBox = (i - 1);\n}\nelse\n{\nnextTextBox = (i + 1);\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/#287-\u30c6\u30ad\u30b9\u30c8\u30a8\u30ea\u30a2","title":"28.7 \u30c6\u30ad\u30b9\u30c8\u30a8\u30ea\u30a2","text":"<p>\u8907\u6570\u884c\u306e\u30c6\u30ad\u30b9\u30c8\u30a8\u30ea\u30a2\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001<code>SimpleGUI::TextArea()</code> \u95a2\u6570\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002\u95a2\u6570\u3067\u306f\u30c6\u30ad\u30b9\u30c8\u30a8\u30ea\u30a2\u306e\u4f4d\u7f6e\u3001\u5e45\u3068\u9ad8\u3055\u3001\u6587\u5b57\u6570\u306e\u4e0a\u9650\u3001\u72b6\u614b\u306a\u3069\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306e\u72b6\u614b\uff08\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u6587\u5b57\u5217\u306a\u3069\uff09\u306f <code>TextAreaEditState</code> \u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3088\u3063\u3066\u7ba1\u7406\u3057\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306f\u30c6\u30ad\u30b9\u30c8\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b <code>true</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nTextAreaEditState textAreaEditState;\nbool enabled = true;\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Clear\", Vec2{ 40, 40 }, 100, TextInput::GetEditingText().isEmpty()))\n{\ntextAreaEditState.clear();\n}\nSimpleGUI::CheckBox(enabled, U\"enabled\", Vec2{ 160, 40 });\nSimpleGUI::TextArea(textAreaEditState, Vec2{ 40, 90 }, SizeF{ 720, 300 }, SimpleGUI::PreferredTextAreaMaxChars, enabled);\n// \u30c6\u30ad\u30b9\u30c8\u306e\u5185\u5bb9\u306b\u306f textAreaEditState.text \u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/#288-\u30ab\u30e9\u30fc\u30d4\u30c3\u30ab\u30fc","title":"28.8 \u30ab\u30e9\u30fc\u30d4\u30c3\u30ab\u30fc","text":"<p>\u30ab\u30e9\u30fc\u30d4\u30c3\u30ab\u30fc\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001<code>SimpleGUI::ColorPicker()</code> \u95a2\u6570\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002\u95a2\u6570\u3067\u306f\u30ab\u30e9\u30fc\u30d4\u30c3\u30ab\u30fc\u306e\u4f4d\u7f6e\u3001\u72b6\u614b\u306a\u3069\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u8272\u306f <code>HSV</code> \u578b\u306e\u5909\u6570\u3067\u7ba1\u7406\u3057\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306f\u8272\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b <code>true</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nHSV color0 = Palette::Orange;\nHSV color1 = Palette::Skyblue;\nwhile (System::Update())\n{\nSimpleGUI::ColorPicker(color0, Vec2{ 100, 100 });\nRect{ 100, 300, 100 }.draw(color0);\n// \u7121\u52b9\u5316\u3055\u308c\u3066\u3044\u308b\u30ab\u30e9\u30fc\u30d4\u30c3\u30ab\u30fc\nSimpleGUI::ColorPicker(color1, Vec2{ 300, 100 }, false);\nRect{ 300, 300, 100 }.draw(color1);\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/#289-\u30ea\u30b9\u30c8\u30dc\u30c3\u30af\u30b9","title":"28.9 \u30ea\u30b9\u30c8\u30dc\u30c3\u30af\u30b9","text":"<p>\u30ea\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001<code>SimpleGUI::ListBox()</code> \u95a2\u6570\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002\u95a2\u6570\u3067\u306f\u30ea\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306e\u4f4d\u7f6e\u3001\u5e45\u3068\u9ad8\u3055\u3001\u72b6\u614b\u306a\u3069\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u30ea\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306e\u72b6\u614b\u306f <code>ListBoxState</code> \u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3088\u3063\u3066\u7ba1\u7406\u3057\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306f\u30ea\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306e\u9078\u629e\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b <code>true</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p>\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u9805\u76ee\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f <code>ListBoxState</code> \u306e <code>Optional&lt;size_t&gt;</code> \u578b\u306e\u30e1\u30f3\u30d0\u5909\u6570 <code>selectedItemIndex</code> \u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\u9078\u629e\u80a2\u306e\u914d\u5217\u306f <code>ListBoxState</code> \u306e <code>Array&lt;String&gt;</code> \u578b\u306e\u30e1\u30f3\u30d0\u5909\u6570 <code>items</code> \u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nListBoxState listBoxState1{\n{\nU\"\u5317\u6d77\u9053\", U\"\u9752\u68ee\u770c\", U\"\u5ca9\u624b\u770c\", U\"\u5bae\u57ce\u770c\", U\"\u79cb\u7530\u770c\", U\"\u5c71\u5f62\u770c\", U\"\u798f\u5cf6\u770c\", U\"\u8328\u57ce\u770c\",\nU\"\u6803\u6728\u770c\", U\"\u7fa4\u99ac\u770c\", U\"\u57fc\u7389\u770c\", U\"\u5343\u8449\u770c\", U\"\u6771\u4eac\u90fd\", U\"\u795e\u5948\u5ddd\u770c\", U\"\u65b0\u6f5f\u770c\", U\"\u5bcc\u5c71\u770c\",\nU\"\u77f3\u5ddd\u770c\", U\"\u798f\u4e95\u770c\", U\"\u5c71\u68a8\u770c\", U\"\u9577\u91ce\u770c\", U\"\u5c90\u961c\u770c\", U\"\u9759\u5ca1\u770c\", U\"\u611b\u77e5\u770c\", U\"\u4e09\u91cd\u770c\",\nU\"\u6ecb\u8cc0\u770c\", U\"\u4eac\u90fd\u5e9c\", U\"\u5927\u962a\u5e9c\", U\"\u5175\u5eab\u770c\", U\"\u5948\u826f\u770c\", U\"\u548c\u6b4c\u5c71\u770c\", U\"\u9ce5\u53d6\u770c\", U\"\u5cf6\u6839\u770c\",\nU\"\u5ca1\u5c71\u770c\", U\"\u5e83\u5cf6\u770c\", U\"\u5c71\u53e3\u770c\", U\"\u5fb3\u5cf6\u770c\", U\"\u9999\u5ddd\u770c\", U\"\u611b\u5a9b\u770c\", U\"\u9ad8\u77e5\u770c\", U\"\u798f\u5ca1\u770c\",\nU\"\u4f50\u8cc0\u770c\", U\"\u9577\u5d0e\u770c\", U\"\u718a\u672c\u770c\", U\"\u5927\u5206\u770c\", U\"\u5bae\u5d0e\u770c\", U\"\u9e7f\u5150\u5cf6\u770c\", U\"\u6c96\u7e04\u770c\",\n}\n};\nListBoxState listBoxState2{\n{\nU\"\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\uff081905\u5e741\u6708 - 1906\u5e748\u6708\u3001\u300e\u30db\u30c8\u30c8\u30ae\u30b9\u300f/1905\u5e7410\u6708 - 1907\u5e745\u6708\u3001\u5927\u5009\u66f8\u5e97\u30fb\u670d\u90e8\u66f8\u5e97\uff09\",\nU\"\u574a\u3063\u3061\u3083\u3093\uff081906\u5e744\u6708\u3001\u300e\u30db\u30c8\u30c8\u30ae\u30b9\u300f/1907\u5e74\u3001\u6625\u967d\u5802\u520a\u300e\u9d89\u7c60\u300f\u53ce\u9332\uff09\",\nU\"\u8349\u6795\uff081906\u5e749\u6708\u3001\u300e\u65b0\u5c0f\u8aac\u300f/\u300e\u9d89\u7c60\u300f\u53ce\u9332\uff09\",\nU\"\u4e8c\u767e\u5341\u65e5\uff081906\u5e7410\u6708\u3001\u300e\u4e2d\u592e\u516c\u8ad6\u300f/\u300e\u9d89\u7c60\u300f\u53ce\u9332\uff09\",\nU\"\u91ce\u5206\uff081907\u5e741\u6708\u3001\u300e\u30db\u30c8\u30c8\u30ae\u30b9\u300f/1908\u5e74\u3001\u6625\u967d\u5802\u520a\u300e\u8349\u5408\u300f\u53ce\u9332\uff09\",\nU\"\u865e\u7f8e\u4eba\u8349\uff081907\u5e746\u6708 - 10\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1908\u5e741\u6708\u3001\u6625\u967d\u5802\uff09\",\nU\"\u5751\u592b\uff081908\u5e741\u6708 - 4\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/\u300e\u8349\u5408\u300f\u53ce\u9332\uff09\",\nU\"\u4e09\u56db\u90ce\uff081908\u5e749 - 12\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1909\u5e745\u6708\u3001\u6625\u967d\u5802\uff09\",\nU\"\u305d\u308c\u304b\u3089\uff081909\u5e746 - 10\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1910\u5e741\u6708\u3001\u6625\u967d\u5802\uff09\",\nU\"\u9580\uff081910\u5e743\u6708 - 6\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1911\u5e741\u6708\u3001\u6625\u967d\u5802\uff09\",\nU\"\u5f7c\u5cb8\u904e\u8fc4\uff081912\u5e741\u6708 - 4\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1912\u5e749\u6708\u3001\u6625\u967d\u5802\uff09\",\nU\"\u884c\u4eba\uff081912\u5e7412\u6708 - 1913\u5e7411\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1914\u5e741\u6708\u3001\u5927\u5009\u66f8\u5e97\uff09\",\nU\"\u3053\u309d\u308d\uff081914\u5e744\u6708 - 8\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1914\u5e749\u6708\u3001\u5ca9\u6ce2\u66f8\u5e97\uff09\",\nU\"\u9053\u8349\uff081915\u5e746\u6708 - 9\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1915\u5e7410\u6708\u3001\u5ca9\u6ce2\u66f8\u5e97\uff09\",\nU\"\u660e\u6697\uff081916\u5e745\u6708 - 12\u6708\u3001\u300e\u671d\u65e5\u65b0\u805e\u300f/1917\u5e741\u6708\u3001\u5ca9\u6ce2\u66f8\u5e97\uff09\",\n}\n};\nlistBoxState2.selectedItemIndex = 3;\nListBoxState listBoxState3 = listBoxState2;\nwhile (System::Update())\n{\nClearPrint();\nif (listBoxState1.selectedItemIndex)\n{\nPrint &lt;&lt; listBoxState1.items[*listBoxState1.selectedItemIndex];\n}\nif (listBoxState2.selectedItemIndex)\n{\nPrint &lt;&lt; listBoxState2.items[*listBoxState2.selectedItemIndex];\n}\nif (listBoxState3.selectedItemIndex)\n{\nPrint &lt;&lt; listBoxState3.items[*listBoxState3.selectedItemIndex];\n}\nSimpleGUI::ListBox(listBoxState1, Vec2{ 620, 20 }, 120, 156);\nSimpleGUI::ListBox(listBoxState2, Vec2{ 780, 20 }, 240, 156, false);\nSimpleGUI::ListBox(listBoxState3, Vec2{ 20, 200 }, 1020, 480);\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/#2810-\u898b\u51fa\u3057","title":"28.10 \u898b\u51fa\u3057","text":"<p>GUI \u306e\u5404\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306b\u898b\u51fa\u3057\u3092\u4ed8\u3051\u305f\u3044\u5834\u5408\u3001<code>SimpleGUI::Headline</code> \u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002\u95a2\u6570\u3067\u306f\u898b\u51fa\u3057\u306e\u4f4d\u7f6e\u3001\u5e45\u3001\u72b6\u614b\u306a\u3069\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u898b\u51fa\u3057\u306e\u9ad8\u3055\u306f 40 \u30d4\u30af\u30bb\u30eb\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nbool checked0 = false;\nbool checked1 = true;\nbool checked2 = false;\nHSV color = Palette::Orange;\nwhile (System::Update())\n{\nSimpleGUI::Headline(U\"Checkbox\", Vec2{ 100, 60 });\nSimpleGUI::CheckBox(checked0, U\"Label0\", Vec2{ 100, 100 }, 160);\nSimpleGUI::CheckBox(checked1, U\"Label1\", Vec2{ 100, 140 }, 160);\nSimpleGUI::CheckBox(checked2, U\"Label2\", Vec2{ 100, 180 }, 160);\nSimpleGUI::Headline(U\"ColorPicker\", Vec2{ 300, 60 }, 160, false);\nSimpleGUI::ColorPicker(color, Vec2{ 300, 100 }, false);\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/#2811-\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc","title":"28.11 \u30e1\u30cb\u30e5\u30fc\u30d0\u30fc","text":"<p><code>SimpleMenuBar</code> \u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3068\u3001\u7c21\u6613\u7684\u306a\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306e\u9805\u76ee\u306f\u3001<code>Array&lt;std::pair&lt;String, Array&lt;String&gt;&gt;&gt;</code> \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002<code>String</code> \u304c\u30e1\u30cb\u30e5\u30fc\u306e\u30bf\u30a4\u30c8\u30eb\u3001<code>Array&lt;String&gt;</code> \u304c\u305d\u306e\u30e1\u30cb\u30e5\u30fc\u306b\u542b\u307e\u308c\u308b\u9805\u76ee\u306e\u540d\u524d\u3067\u3059\u3002</p>"},{"location":"tutorial2/gui/#28111-\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306e\u57fa\u672c","title":"28.11.1 \u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306e\u57fa\u672c","text":"<p><code>SimpleMenuBar</code> \u306f\u3001\u6bce\u30d5\u30ec\u30fc\u30e0\u3001\u72b6\u614b\u306e\u66f4\u65b0\u3092\u884c\u3046\u30e1\u30f3\u30d0\u95a2\u6570 <code>.update()</code> \u3068\u3001\u63cf\u753b\u3092\u884c\u3046\u30e1\u30f3\u30d0\u95a2\u6570 <code>.draw()</code> \u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p><code>.update()</code> \u306f <code>Optional&lt;MenuBarItemIndex&gt;</code> \u3092\u8fd4\u3057\u307e\u3059\u3002\u30e1\u30cb\u30e5\u30fc\u306e\u9805\u76ee\u304c\u9078\u629e\u3055\u308c\u308b\u3068\u3001\u305d\u306e\u9805\u76ee\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002\u9805\u76ee\u304c\u9078\u629e\u3055\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u306f <code>none</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p><code>.draw()</code> \u306f\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u3092\u63cf\u753b\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Array&lt;std::pair&lt;String, Array&lt;String&gt;&gt;&gt; menus\n{\n{ U\"\u30b2\u30fc\u30e0\", { U\"\u65b0\u898f\", U\"\u30b9\u30b3\u30a2\", U\"\u7d42\u4e86\" }},\n{ U\"\u30d8\u30eb\u30d7\", { U\"\\U000F0625  \u904a\u3073\u65b9\", U\"\\U000F14F7  \u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\", U\"\u30e9\u30a4\u30bb\u30f3\u30b9\" } },\n};\nSimpleMenuBar menuBar{ menus };\nwhile (System::Update())\n{\nif (const auto&amp; item = menuBar.update())\n{\n// \u300c\u7d42\u4e86\u300d\u304c\u62bc\u3055\u308c\u305f\u3089\nif (item == MenuBarItemIndex{ 0, 2 })\n{\nreturn;\n}\n// \u300c\u30e9\u30a4\u30bb\u30f3\u30b9\u300d\u304c\u62bc\u3055\u308c\u305f\u3089\nif (item == MenuBarItemIndex{ 1, 2 })\n{\nLicenseManager::ShowInBrowser();\n}\n}\nmenuBar.draw();\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/#28112-\u30c1\u30a7\u30c3\u30af\u53ef\u80fd\u306a\u30e1\u30cb\u30e5\u30fc\u9805\u76ee","title":"28.11.2 \u30c1\u30a7\u30c3\u30af\u53ef\u80fd\u306a\u30e1\u30cb\u30e5\u30fc\u9805\u76ee","text":"<p><code>SimpleMenuBar</code> \u306e\u30e1\u30f3\u30d0\u95a2\u6570 <code>.setItemChecked()</code> \u3092\u4f7f\u3046\u3068\u3001\u30e1\u30cb\u30e5\u30fc\u9805\u76ee\u306e\u30c1\u30a7\u30c3\u30af\u72b6\u614b\u3092\u30aa\u30f3/\u30aa\u30d5\u3067\u304d\u307e\u3059\u3002<code>.setItemChecked()</code> \u306b\u306f\u3001<code>MenuBarItemIndex</code> \u3068 <code>bool</code> \u3092\u6e21\u3057\u307e\u3059\u3002<code>bool</code> \u304c <code>true</code> \u306e\u5834\u5408\u3001\u305d\u306e\u9805\u76ee\u3092\u30c1\u30a7\u30c3\u30af\u72b6\u614b\u306b\u3057\u3001<code>false</code> \u306e\u5834\u5408\u306f\u30c1\u30a7\u30c3\u30af\u72b6\u614b\u3092\u89e3\u9664\u3057\u307e\u3059\u3002</p> <p>\u3042\u308b\u9805\u76ee\u304c\u30c1\u30a7\u30c3\u30af\u72b6\u614b\u3067\u3042\u308b\u304b\u306f\u3001\u30e1\u30f3\u30d0\u95a2\u6570 <code>.getItemChecked()</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Array&lt;std::pair&lt;String, Array&lt;String&gt;&gt;&gt; menus\n{\n{ U\"\u30b2\u30fc\u30e0\", { U\"\u65b0\u898f\", U\"\u30b9\u30b3\u30a2\", U\"\u7d42\u4e86\" }},\n{ U\"\u8a2d\u5b9a\", { U\"\u30aa\u30d7\u30b7\u30e7\u30f3 A\", U\"\u30aa\u30d7\u30b7\u30e7\u30f3 B\", U\"\u30aa\u30d7\u30b7\u30e7\u30f3 C\" } },\n{ U\"\u30d8\u30eb\u30d7\", { U\"\\U000F0625\u904a\u3073\u65b9\", U\"\\U000F14F7\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\", U\"\\U000F05E6\u30e9\u30a4\u30bb\u30f3\u30b9\" } },\n};\nSimpleMenuBar menuBar{ menus };\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; menuBar.getItemChecked(MenuBarItemIndex{ 1, 0 });\nPrint &lt;&lt; menuBar.getItemChecked(MenuBarItemIndex{ 1, 1 });\nPrint &lt;&lt; menuBar.getItemChecked(MenuBarItemIndex{ 1, 2 });\nif (const auto&amp; item = menuBar.update())\n{\n// \u300c\u7d42\u4e86\u300d\u304c\u62bc\u3055\u308c\u305f\u3089\nif (item == MenuBarItemIndex{ 0, 2 })\n{\nreturn;\n}\n// \u300c\u30e9\u30a4\u30bb\u30f3\u30b9\u300d\u304c\u62bc\u3055\u308c\u305f\u3089\nif (item == MenuBarItemIndex{ 2, 2 })\n{\nLicenseManager::ShowInBrowser();\n}\nif (item-&gt;menuIndex == 1)\n{\n// \u30c1\u30a7\u30c3\u30af\u72b6\u614b\u3092\u53cd\u8ee2\u3059\u308b\nmenuBar.setItemChecked(*item, (not menuBar.getItemChecked(*item)));\n}\n}\nmenuBar.draw();\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/#28113-\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306e\u8272\u306e\u5909\u66f4","title":"28.11.3 \u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306e\u8272\u306e\u5909\u66f4","text":"<p><code>SimpleMenuBar::ColorPalette</code> \u30af\u30e9\u30b9\u3067\u8a2d\u5b9a\u3057\u305f\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u4f7f\u3063\u3066\u3001\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306e\u8272\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nVec2 pos = Scene::Center(), target = pos, velocity = Vec2::Zero();\nconst Array&lt;std::pair&lt;String, Array&lt;String&gt;&gt;&gt; menus\n{\n{ U\"\u30d5\u30a1\u30a4\u30eb\", { U\"\u65b0\u898f\u4f5c\u6210\", U\"\u958b\u304f\", U\"\u540d\u524d\u3092\u4ed8\u3051\u3066\u4fdd\u5b58\", U\"\u7d42\u4e86\" }},\n{ U\"\u7de8\u96c6\", { U\"\u5143\u306b\u623b\u3059\", U\"\u5207\u308a\u53d6\u308a\", U\"\u30b3\u30d4\u30fc\", U\"\u8cbc\u308a\u4ed8\u3051\", U\"\u524a\u9664\", U\"\u691c\u7d22\u3059\u308b\", U\"\u6b21\u3092\u691c\u7d22\", U\"\u524d\u3092\u691c\u7d22\" } },\n{ U\"\u8868\u793a\", { U\"\u62e1\u5927\", U\"\u7e2e\u5c0f\" } },\n{ U\"\u30d8\u30eb\u30d7\", { U\"\\U000F0625  \u4f7f\u3044\u65b9\", U\"\\U000F14F7  \u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\", U\"\u30e9\u30a4\u30bb\u30f3\u30b9\" } },\n};\nSimpleMenuBar menuBar{ menus };\nmenuBar\n.setItemEnabled(1, 0, false)\n.setItemEnabled(1, 1, false)\n.setItemEnabled(1, 2, false)\n.setItemEnabled(1, 4, false)\n.setItemEnabled(1, 5, false)\n.setItemEnabled(1, 6, false)\n.setItemEnabled(1, 7, false);\nconst SimpleMenuBar::ColorPalette palette\n{\n.menuBarColor = ColorF{ 0.82, 0.92, 0.86 },\n.activeMenuColor = ColorF{ 0.78, 0.88, 0.82 },\n.menuTextColor = ColorF{ 0.11 },\n.itemBoxColor = ColorF{ 0.99 },\n.itemMouseoverColor = ColorF{ 0.1, 0.4, 0.3 },\n.itemTextColor = ColorF{ 0.11 },\n.itemMouseoverTextColor = ColorF{ 1.0 },\n.itemDisabledTextColor = ColorF{ 0.8 },\n.itemRectShadowColor = ColorF{ 0.0, 0.5 }\n};\nmenuBar.setColorPalette(palette);\nwhile (System::Update())\n{\nif (const auto&amp; item = menuBar.update())\n{\nPrint &lt;&lt; U\"menuIndex: {}, itemIndex: {}\"_fmt(item-&gt;menuIndex, item-&gt;itemIndex);\n}\nif (Scene::Rect().mouseOver() &amp;&amp; (not MouseL.cleared()))\n{\nCursor::RequestStyle(CursorStyle::Hand);\nif (MouseL.down())\n{\ntarget = Cursor::Pos();\n}\n}\npos = Math::SmoothDamp(pos, target, velocity, 0.25);\npos.asCircle(40).drawShadow(Vec2{ 2, 2 }, 8).draw();\nmenuBar.draw();\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/#2812-\u30c6\u30fc\u30d6\u30eb","title":"28.12 \u30c6\u30fc\u30d6\u30eb","text":""},{"location":"tutorial2/gui/#28121-\u30c6\u30fc\u30d6\u30eb\u306e\u57fa\u672c","title":"28.12.1 \u30c6\u30fc\u30d6\u30eb\u306e\u57fa\u672c","text":"<p><code>SimpleTable</code> \u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3068\u3001\u30c6\u30fc\u30d6\u30eb\u3092\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u5404\u5217\u306e\u5e45\u3092\u6307\u5b9a\u3057\u305f\u3042\u3068\u3001<code>push_back_row()</code> \u3067\u884c\u306e\u5185\u5bb9\u3092 <code>Array&lt;String&gt;</code> \u3067\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u8ffd\u52a0\u3067\u30a2\u30e9\u30a4\u30e1\u30f3\u30c8\u3092 <code>Array&lt;int32&gt;</code> \u3067\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30a2\u30e9\u30a4\u30e1\u30f3\u30c8\u306f -1 \u304c\u5de6\u5bc4\u305b\u30010 \u304c\u4e2d\u592e\u5bc4\u305b\u30011 \u304c\u53f3\u5bc4\u305b\u3067\u3059\u3002\u30c6\u30fc\u30d6\u30eb\u306f\u30e1\u30f3\u30d0\u95a2\u6570 <code>.draw()</code> \u3067\u63cf\u753b\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\n// \u5404\u5217\u306e\u5e45\u304c 160, 100, 100 \u306e\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\nSimpleTable table{ { 160, 100, 100 } };\n// \u884c\u3092\u8ffd\u52a0\u3059\u308b\ntable.push_back_row({ U\"Player\", U\"Rank\", U\"Rate\" }, { -1, 1, 1 });\ntable.push_back_row({ U\"Alice\", U\"2\", U\"2832\" });\ntable.push_back_row({ U\"Bob\", U\"6\", U\"2540\" });\ntable.push_back_row({ U\"Carol\", U\"16\", U\"2315\" });\ntable.push_back_row({ U\"Eve\", U\"121\", U\"1874\" });\nwhile (System::Update())\n{\ntable.draw(Vec2{ 40, 40 });\n}\n}\n</code></pre>"},{"location":"tutorial2/gui/#28122-\u30c6\u30fc\u30d6\u30eb\u306e\u30b9\u30bf\u30a4\u30eb\u306e\u5909\u66f4","title":"28.12.2 \u30c6\u30fc\u30d6\u30eb\u306e\u30b9\u30bf\u30a4\u30eb\u306e\u5909\u66f4","text":"<p>\u30b9\u30bf\u30a4\u30eb\u306e\u8a2d\u5b9a\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u3067\u3001\u69d8\u3005\u306a\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u30b5\u30f3\u30d7\u30eb\u3092\u6b21\u306b\u793a\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Font font1{ FontMethod::MSDF, 36 };\nconst Font font2{ FontMethod::MSDF, 36, Typeface::Heavy };\nconst Font font3{ FontMethod::MSDF, 36, Typeface::Bold };\n//\n// table 1\n//\nSimpleTable table1{ { 100, 200, 200 }, {\n.variableWidth = true,\n.font = font1,\n.columnHeaderFont = font3,\n.rowHeaderFont = font3,\n} };\ntable1.push_back_row({ U\"\", U\"\u65e5\u672c\", U\"\u30a2\u30e1\u30ea\u30ab\" }, { 0, 0, 0 });\ntable1.push_back_row({ U\"\u9762\u7a4d\", U\"\u7d04 37 \u4e07 8 \u5343\u5e73\u65b9\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb\", U\"\u7d04 983 \u4e07\u5e73\u65b9\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb\" }, { 0, -1, -1 });\ntable1.push_back_row({ U\"\u4eba\u53e3\", U\"\u7d04 1 \u5104 2 \u5343\u4e07\u4eba\", U\"\u7d04 3 \u5104 3 \u5343\u4e07\u4eba\" });\ntable1.push_back_row({ U\"\u8a00\u8a9e\", U\"\u65e5\u672c\u8a9e\", U\"\u82f1\u8a9e\" });\ntable1.push_back_row({ U\"\u901a\u8ca8\", U\"\u5186 (JPY)\", U\"\u30c9\u30eb (USD)\" });\n//\n// table 2\n//\nSimpleTable table2{ { 160, 100, 100 }, {\n.cellHeight = 40,\n.borderThickness = 2,\n.backgroundColor = none,\n.textColor = ColorF{ 1.0 },\n.borderColor = ColorF{ 0.29, 0.33, 0.41 },\n.hasVerticalBorder = false,\n.hasOuterBorder = false,\n.font = font2,\n.fontSize = 24,\n.hoveredRow = [](const Point&amp; index) -&gt; Optional&lt;ColorF&gt;\n{\nif (index.y != 0)\n{\nreturn ColorF{ 1.0, 0.2 };\n}\nreturn none;\n},\n} };\ntable2.push_back_row({ U\"Player\", U\"Rank\", U\"Rate\" }, { -1, 1, 1 });\ntable2.push_back_row({ U\"Alice\", U\"2\", U\"2832\" });\ntable2.push_back_row({ U\"Bob\", U\"6\", U\"2540\" });\ntable2.push_back_row({ U\"Carol\", U\"16\", U\"2315\" });\ntable2.push_back_row({ U\"Eve\", U\"121\", U\"1874\" });\nfor (int32 y = 1; y &lt; 3; ++y)\n{\ntable2.setRowTextColor(y, ColorF{ 1.00, 0.7, 0.25 });\n}\nfor (int32 y = 3; y &lt; 5; ++y)\n{\ntable2.setRowTextColor(y, ColorF{ 0.82, 0.56, 0.84 });\n}\n//\n// table 3\n//\nSimpleTable table3{ Array&lt;double&gt;(7, 60.0), {\n.borderThickness = 2,\n.backgroundColor = none,\n.borderColor = ColorF{ 1.0 },\n.hasOuterBorder = false,\n.font = font3,\n.hoveredCell = [](const Point&amp; index) -&gt; Optional&lt;ColorF&gt;\n{\nif (index.y != 0)\n{\nreturn ColorF{ 0.94 };\n}\nreturn none;\n},\n} };\ntable3.push_back_row({ U\"Sun\", U\"Mon\", U\"Tue\", U\"Wed\", U\"Thu\", U\"Fri\", U\"Sat\" }, Array&lt;int32&gt;(7, 0));\ntable3.setRowBackgroundColor(0, ColorF{ 1.00, 0.8, 0.7 });\ntable3.push_back_row(Array&lt;int32&gt;(7, 1));\ntable3.push_back_row();\ntable3.push_back_row();\ntable3.push_back_row();\ntable3.push_back_row();\ntable3.push_back_row();\nfor (int32 i = 0; i &lt; (7 * 6); ++i)\n{\nconst auto date = Date{ 2023, 3, 26 } + Days{ i };\nconst Point index{ (i % 7), (1 + (i / 7)) };\ntable3.setText(index, Format(date.day));\nif (date.month != 4)\n{\ntable3.setTextColor(index, ColorF{ 0.7 });\n}\n}\n//\n// table 4\n//\nSimpleTable table4{ { 100, 80, 80 }, {\n.cellHeight = 28.0,\n.hasHorizontalBorder = false,\n.font = font1,\n.fontSize = 16,\n.columnHeaderFont = font3,\n.columnHeaderFontSize = 14,\n.hoveredRow = [](const Point&amp; index) -&gt; Optional&lt;ColorF&gt;\n{\nif (index.y != 0)\n{\nreturn ColorF{ 1.0, 0.95, 0.90 };\n}\nreturn none;\n},\n} };\ntable4.push_back_row({ U\"\", U\"\u3053\u3060\u307e701\", U\"\u306e\u305e\u307f5\" }, { -1, 0, 0 });\ntable4.push_back_row({ U\"\u6771\u3000\u4eac\u3000\u767a\", U\"6:30\", U\"6:33\" });\ntable4.push_back_row({ U\"\u54c1\u3000\u5ddd\u3000\u3003\", U\"6:37\", U\"6:40\" });\ntable4.push_back_row({ U\"\u65b0\u6a2a\u6d5c\u3000\u3003\", U\"6:48\", U\"6:51\" });\ntable4.push_back_row({ U\"\u5c0f\u7530\u539f\u3000\u3003\", U\"7:05\", U\"\uff9a\" });\ntable4.push_back_row({ U\"\u71b1\u3000\u6d77\u3000\u3003\", U\"7:14\", U\"\uff9a\" });\ntable4.push_back_row({ U\"\u4e09\u3000\u5cf6\u3000\u3003\", U\"7:26\", U\"\uff9a\" });\ntable4.push_back_row({ U\"\u65b0\u5bcc\u58eb\u3000\u3003\", U\"7:37\", U\"\uff9a\" });\ntable4.push_back_row({ U\"\u9759\u3000\u5ca1\u3000\u3003\", U\"7:51\", U\"\uff9a\" });\ntable4.push_back_row({ U\"\u639b\u3000\u5ddd\u3000\u3003\", U\"8:08\", U\"\uff9a\" });\ntable4.push_back_row({ U\"\u6d5c\u3000\u677e\u3000\u3003\", U\"8:23\", U\"\uff9a\" });\ntable4.push_back_row({ U\"\u8c4a\u3000\u6a4b\u3000\u3003\", U\"8:39\", U\"\uff9a\" });\ntable4.push_back_row({ U\"\u4e09\u6cb3\u5b89\u57ce\u3003\", U\"8:56\", U\"\uff9a\" });\ntable4.push_back_row({ U\"\u540d\u53e4\u5c4b\u3000\u7740\", U\"9:06\", U\"8:10\" });\ntable4.push_back_row({ U\"\u540d\u53e4\u5c4b\u3000\u767a\", U\"\", U\"8:12\" });\n//\n// table 5\n//\nSimpleTable table5{ { 80, 80, 80, 80 }, {\n.cellHeight = 26.0,\n.borderThickness = 2.0,\n.borderColor = ColorF{ 0.6 },\n.columnHeaderFont = font3,\n.columnHeaderFontSize = 15.0,\n.rowHeaderFont = font3,\n.rowHeaderFontSize = 15.0,\n} };\ntable5.push_back_row({ U\"\", U\"\u4eca\u65e5\", U\"\u660e\u65e5\", U\"\u660e\u5f8c\u65e5\" }, { 0, 0, 0, 0 });\ntable5.push_back_row({ U\"\u672d\u5e4c\", U\"\\U000F0597\\U000F19B0\\U000F0590\", U\"\\U000F0590/\\U000F0597\", U\"\\U000F0590\" });\ntable5.push_back_row({ U\"\u6771\u4eac\", U\"\\U000F0599\\U000F19B0\\U000F0590\", U\"\\U000F0597/\\U000F0590\", U\"\\U000F0590\\U000F19B0\\U000F0597\" });\ntable5.push_back_row({ U\"\u5927\u962a\", U\"\\U000F0590\\U000F19B0\\U000F0597\", U\"\\U000F0597\", U\"\\U000F0599/\\U000F0590\" });\ntable5.push_back_row({ U\"\u798f\u5ca1\", U\"\\U000F0597\\U000F19B0\\U000F0590\", U\"\\U000F0590\\U000F19B0\\U000F0599\", U\"\\U000F0599/\\U000F0590\" });\ntable5.push_back_row({ U\"\u6c96\u7e04\", U\"\\U000F0590\", U\"\\U000F0590/\\U000F0597\", U\"\\U000F0590\\U000F19B0\\U000F0599\" });\nfor (size_t y = 1; y &lt; table5.rows(); ++y)\n{\nfor (size_t x = 1; x &lt; table5.columns(); ++x)\n{\nconst bool isRainy = table5.getItem(y, x).text.includes(U'\\U000F0597');\nconst bool isSunny = table5.getItem(y, x).text.includes(U'\\U000F0599');\nconst bool isCloudy = table5.getItem(y, x).text.includes(U'\\U000F0590');\nif (isRainy)\n{\ntable5.setBackgroundColor(y, x, ColorF{ 0.7, 0.9, 1.0 });\n}\nelse if (isSunny)\n{\ntable5.setBackgroundColor(y, x, ColorF{ 1.0, 0.9, 0.7 });\n}\nelse if (isCloudy)\n{\ntable5.setBackgroundColor(y, x, ColorF{ 0.9 });\n}\n}\n}\nOptional&lt;Point&gt; table1ActiveIndex;\nwhile (System::Update())\n{\n// table1\n{\nif (SimpleGUI::Button(U\"\u884c\u3092\u8ffd\u52a0\", Vec2{ 740, 40 }, 130))\n{\ntable1.push_back_row({ 0, -1, -1 });\n}\nif (SimpleGUI::Button(U\"\u884c\u3092\u524a\u9664\", Vec2{ 740, 80 }, 130))\n{\ntable1.pop_back_row();\n}\nconstexpr Vec2 TablePos{ 40,40 };\nif (MouseL.down())\n{\ntable1ActiveIndex = table1.cellIndex(TablePos, Cursor::Pos());\n}\ntable1.draw(TablePos);\nif (table1ActiveIndex)\n{\ntable1.cellRegion(TablePos, *table1ActiveIndex).drawFrame(2, 1, ColorF{ 0.11 });\n}\n}\n// table2\n{\nconstexpr Vec2 TablePos{ 64, 372 };\ntable2.region(TablePos).stretched(24, 12).rounded(10.0).draw(ColorF{ 0.18, 0.20, 0.35 });\ntable2.draw(TablePos);\n}\n// table 3\n{\nconstexpr Vec2 TablePos{ 500, 380 };\ntable3.region(TablePos).stretched(10, 20).rounded(5).draw();\ntable3.draw(TablePos);\n}\n// table 4\n{\nconstexpr Vec2 TablePos{ 980, 220 };\ntable4.draw(TablePos);\n}\n// table 5\n{\nconstexpr Vec2 TablePos{ 914, 40 };\ntable5.draw(TablePos);\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/hash-table/","title":"22. \u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb","text":"<p>\u30cf\u30c3\u30b7\u30e5\u30bb\u30c3\u30c8 <code>HashSet</code> \u3068\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb <code>HashTable</code> \u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial2/hash-table/#221-\u30cf\u30c3\u30b7\u30e5\u30bb\u30c3\u30c8\u30af\u30e9\u30b9","title":"22.1 \u30cf\u30c3\u30b7\u30e5\u30bb\u30c3\u30c8\u30af\u30e9\u30b9","text":"<p><code>HashSet&lt;Key&gt;</code> \u306f\u3001<code>std::unordered_set&lt;Key&gt;</code> \u306b\u76f8\u5f53\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\u30cf\u30c3\u30b7\u30e5\u306b\u5bfe\u5fdc\u3057\u305f\u30ad\u30fc\u306e\u96c6\u5408\u3092\u8868\u73fe\u3057\u3001\u30ad\u30fc\u306e\u8ffd\u52a0\u3001\u524a\u9664\u3001\u691c\u7d22\u3092\u52b9\u7387\u7684\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u96c6\u5408\u5185\u306e\u9806\u5e8f\u306f\u4fdd\u8a3c\u3055\u308c\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nHashSet&lt;String&gt; table = { U\"C++\", U\"C\", U\"Java\" };\n// \u8ffd\u52a0\u3055\u308c\u305f\u9806\u5e8f\u3068\u4e00\u89a7\u8868\u793a\u306e\u9806\u5e8f\u306f\u4e00\u81f4\u3057\u306a\u3044\nPrint &lt;&lt; table;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/hash-table/#222-\u30ad\u30fc\u3092\u8ffd\u52a0\u3059\u308b","title":"22.2 \u30ad\u30fc\u3092\u8ffd\u52a0\u3059\u308b","text":"<p><code>.insert(key)</code> \u3067\u30ad\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3059\u3067\u306b\u540c\u3058\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u4f55\u3082\u3057\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nHashSet&lt;String&gt; table = { U\"C++\", U\"C\", U\"Java\" };\ntable.insert(U\"Python\");\ntable.insert(U\"C#\");\n// \u3059\u3067\u306b\u5b58\u5728\u3059\u308b\u305f\u3081\u8ffd\u52a0\u3055\u308c\u306a\u3044\ntable.insert(U\"Java\");\ntable.insert(U\"C#\");\nPrint &lt;&lt; table;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/hash-table/#223-\u30ad\u30fc\u306e\u6570\u3092\u8abf\u3079\u308b","title":"22.3 \u30ad\u30fc\u306e\u6570\u3092\u8abf\u3079\u308b","text":"<p><code>.size()</code> \u3067\u30ad\u30fc\u306e\u6570\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nHashSet&lt;String&gt; table = { U\"C++\", U\"C\", U\"Java\" };\ntable.insert(U\"Python\");\ntable.insert(U\"C#\");\ntable.insert(U\"Java\");\ntable.insert(U\"C#\");\nPrint &lt;&lt; table.size();\nPrint &lt;&lt; table;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/hash-table/#224-\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8abf\u3079\u308b","title":"22.4 \u6307\u5b9a\u3057\u305f\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8abf\u3079\u308b","text":"<p><code>.contains(key)</code> \u3067\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nHashSet&lt;String&gt; table = { U\"C++\", U\"C\", U\"Java\" };\ntable.insert(U\"Python\");\ntable.insert(U\"C#\");\n// \"C++\" \u3068\u3044\u3046\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8abf\u3079\u308b\nPrint &lt;&lt; table.contains(U\"C++\");\n// \"Ruby\" \u3068\u3044\u3046\u30ad\u30fc\u304c\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8abf\u3079\u308b\nPrint &lt;&lt; table.contains(U\"Ruby\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/hash-table/#225-\u7bc4\u56f2-for-\u6587\u3067\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","title":"22.5 \u7bc4\u56f2 for \u6587\u3067\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","text":"<p>\u7bc4\u56f2 for \u6587\u3092\u4f7f\u3046\u3068\u3001\u30cf\u30c3\u30b7\u30e5\u30bb\u30c3\u30c8\u306e\u3059\u3079\u3066\u306e\u30ad\u30fc\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u9806\u5e8f\u306f\u4fdd\u8a3c\u3055\u308c\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nHashSet&lt;String&gt; table = { U\"C++\", U\"C\", U\"Java\" };\ntable.insert(U\"Python\");\ntable.insert(U\"C#\");\n// \u8ffd\u52a0\u3055\u308c\u305f\u9806\u5e8f\u3068\u30a2\u30af\u30bb\u30b9\u306e\u9806\u5e8f\u306f\u4e00\u81f4\u3057\u306a\u3044\nfor (const auto&amp; key : table)\n{\nPrint &lt;&lt; key;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/hash-table/#226-\u30ad\u30fc\u3092\u524a\u9664\u3059\u308b","title":"22.6 \u30ad\u30fc\u3092\u524a\u9664\u3059\u308b","text":"<p><code>.erase(key)</code> \u3067\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nHashSet&lt;String&gt; table = { U\"C++\", U\"C\", U\"Java\" };\ntable.insert(U\"Python\");\ntable.insert(U\"C#\");\nPrint &lt;&lt; table;\n// \"Python\" \u3092\u524a\u9664\u3059\u308b\ntable.erase(U\"Python\");\nPrint &lt;&lt; table;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/hash-table/#227-\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u30af\u30e9\u30b9","title":"22.7 \u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u30af\u30e9\u30b9","text":"<p><code>HashTable&lt;Key, Value&gt;</code> \u306f\u3001<code>std::unordered_map&lt;Key, Value&gt;</code> \u306b\u76f8\u5f53\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\u30cf\u30c3\u30b7\u30e5\u306b\u5bfe\u5fdc\u3057\u305f\u30ad\u30fc\u3068\u5024\u306e\u30da\u30a2\u3092\u8981\u7d20\u3068\u3059\u308b\u96c6\u5408\u3092\u8868\u73fe\u3057\u3001\u8981\u7d20\u306e\u8ffd\u52a0\u3001\u524a\u9664\u3001\u691c\u7d22\u3092\u52b9\u7387\u7684\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nHashTable&lt;String, int32&gt; table =\n{\n{ U\"curry\", 3 },\n{ U\"sushi\", 3 },\n{ U\"hamburger\", 0 },\n{ U\"pasta\", 1 },\n{ U\"pizza\", 4 },\n};\n// \u8ffd\u52a0\u3055\u308c\u305f\u9806\u5e8f\u3068\u4e00\u89a7\u8868\u793a\u306e\u9806\u5e8f\u306f\u4e00\u81f4\u3057\u306a\u3044\nPrint &lt;&lt; table;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/hash-table/#228-\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b","title":"22.8 \u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b","text":"<p><code>.emplace(key, value)</code> \u3067\u30ad\u30fc\u3068\u5024\u306e\u30da\u30a2\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3059\u3067\u306b\u540c\u3058\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u4f55\u3082\u3057\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nHashTable&lt;String, int32&gt; table =\n{\n{ U\"curry\", 3 },\n{ U\"sushi\", 3 },\n{ U\"hamburger\", 0 },\n{ U\"pasta\", 1 },\n{ U\"pizza\", 4 },\n};\ntable.emplace(U\"bulgogi\", 2);\n// \u3059\u3067\u306b\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u4f55\u3082\u3057\u306a\u3044\ntable.emplace(U\"pasta\", 500);\ntable.emplace(U\"pirozhki\", 0);\nPrint &lt;&lt; table;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/hash-table/#229-\u8981\u7d20\u6570\u3092\u8abf\u3079\u308b","title":"22.9 \u8981\u7d20\u6570\u3092\u8abf\u3079\u308b","text":"<p><code>.size()</code> \u3067\u8981\u7d20\u6570\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nHashTable&lt;String, int32&gt; table =\n{\n{ U\"curry\", 3 },\n{ U\"sushi\", 3 },\n{ U\"hamburger\", 0 },\n{ U\"pasta\", 1 },\n{ U\"pizza\", 4 },\n};\ntable.emplace(U\"bulgogi\", 2);\n// \u3059\u3067\u306b\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u4f55\u3082\u3057\u306a\u3044\ntable.emplace(U\"pasta\", 500);\ntable.emplace(U\"pirozhki\", 0);\nPrint &lt;&lt; table.size();\nPrint &lt;&lt; table;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/hash-table/#2210-\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","title":"22.10 \u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","text":"<p><code>[key]</code> \u3067\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u30ad\u30fc\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u65b0\u3057\u304f\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u3001\u5024\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3067\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nHashTable&lt;String, int32&gt; table =\n{\n{ U\"curry\", 3 },\n{ U\"sushi\", 3 },\n{ U\"hamburger\", 0 },\n};\nPrint &lt;&lt; table[U\"sushi\"];\nPrint &lt;&lt; U\"------\";\n++table[U\"curry\"];\ntable[U\"hamburger\"] = 20;\nPrint &lt;&lt; table;\nPrint &lt;&lt; U\"------\";\n// \u5b58\u5728\u3057\u306a\u3044\u30ad\u30fc\u3092 [] \u3067\u6307\u5b9a\u3059\u308b\u3068\u3001\u65b0\u3057\u304f\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u3001\u5024\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3067\u521d\u671f\u5316\u3055\u308c\u308b\nPrint &lt;&lt; table[U\"pasta\"];\n++table[U\"nachos\"];\nPrint &lt;&lt; table;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/hash-table/#2211-\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8abf\u3079\u308bcontains","title":"22.11 \u6307\u5b9a\u3057\u305f\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8abf\u3079\u308b\uff08contains\uff09","text":"<p><code>.contains(key)</code> \u3067\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst HashTable&lt;String, int32&gt; table =\n{\n{ U\"curry\", 3 },\n{ U\"sushi\", 3 },\n{ U\"hamburger\", 0 },\n};\nPrint &lt;&lt; table.contains(U\"sushi\");\n// [] \u3067\u306f\u306a\u3044\u305f\u3081\u3001\u3053\u3053\u3067\u306f pasta \u306f\u8ffd\u52a0\u3055\u308c\u306a\u3044\nPrint &lt;&lt; table.contains(U\"pasta\");\nPrint &lt;&lt; table;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/hash-table/#2212-\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u304b\u8abf\u3079\u308b\u30a4\u30c6\u30ec\u30fc\u30bf","title":"22.12 \u6307\u5b9a\u3057\u305f\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u304b\u8abf\u3079\u308b\uff08\u30a4\u30c6\u30ec\u30fc\u30bf\uff09","text":"<p><code>.find(key)</code> \u3067\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u8981\u7d20\u3078\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u3057\u307e\u3059\u3002\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001<code>end()</code> \u3078\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nHashTable&lt;String, int32&gt; table =\n{\n{ U\"curry\", 3 },\n{ U\"sushi\", 3 },\n{ U\"hamburger\", 0 },\n};\nif (auto it = table.find(U\"sushi\");\nit != table.end())\n{\n// \u5b58\u5728\u3059\u308c\u3070\u5024\u3092 1 \u5897\u3084\u3059\n++it-&gt;second;\n}\nelse\n{\n// \u5b58\u5728\u3057\u306a\u3051\u308c\u3070\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\ntable.emplace(U\"sushi\", 1);\n}\nif (auto it = table.find(U\"pasta\");\nit != table.end())\n{\n// \u5b58\u5728\u3059\u308c\u3070\u5024\u3092 1 \u5897\u3084\u3059\n++it-&gt;second;\n}\nelse\n{\n// \u5b58\u5728\u3057\u306a\u3051\u308c\u3070\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\ntable.emplace(U\"pasta\", 1);\n}\nPrint &lt;&lt; table;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/hash-table/#2213-\u7bc4\u56f2-for-\u6587\u3067\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","title":"22.13 \u7bc4\u56f2 for \u6587\u3067\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","text":"<p>\u7bc4\u56f2 for \u6587\u3092\u4f7f\u3046\u3068\u3001\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u306e\u3059\u3079\u3066\u306e\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u9806\u5e8f\u306f\u4fdd\u8a3c\u3055\u308c\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nHashTable&lt;String, int32&gt; table =\n{\n{ U\"curry\", 3 },\n{ U\"sushi\", 3 },\n{ U\"hamburger\", 0 },\n{ U\"pasta\", 1 },\n{ U\"pizza\", 4 },\n};\n// \u69cb\u9020\u5316\u675f\u7e1b\u3092\u4f7f\u3046\nfor (auto&amp;&amp; [key, value] : table)\n{\nPrint &lt;&lt; key &lt;&lt; U\": \" &lt;&lt; value;\n}\nPrint &lt;&lt; U\"------\";\n// pair \u3092\u4f7f\u3046\nfor (auto&amp;&amp; elem : table)\n{\nPrint &lt;&lt; elem.first &lt;&lt; U\": \" &lt;&lt; elem.second;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/hash-table/#2214-\u8981\u7d20\u3092\u524a\u9664\u3059\u308b","title":"22.14 \u8981\u7d20\u3092\u524a\u9664\u3059\u308b","text":"<p><code>.erase(key)</code> \u3067\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u306b\u5bfe\u5fdc\u3059\u308b\u8981\u7d20\u3092\u524a\u9664\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nHashTable&lt;String, int32&gt; table =\n{\n{ U\"curry\", 3 },\n{ U\"sushi\", 3 },\n{ U\"hamburger\", 0 },\n{ U\"pasta\", 1 },\n{ U\"pizza\", 4 },\n};\ntable.erase(U\"pizza\");\ntable.erase(U\"sushi\");\nPrint &lt;&lt; table;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/interaction/","title":"36. \u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u306e\u5b9f\u88c5","text":"<p>\u3053\u3053\u307e\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u4f7f\u3063\u3066\u3001\u69d8\u3005\u306a\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u8981\u7d20\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial2/interaction/#361-\u30af\u30ea\u30c3\u30af\u3057\u305f\u5834\u6240\u306b\u5186\u3092\u914d\u7f6e\u3059\u308b","title":"36.1 \u30af\u30ea\u30c3\u30af\u3057\u305f\u5834\u6240\u306b\u5186\u3092\u914d\u7f6e\u3059\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nArray&lt;Circle&gt; circles;\nwhile (System::Update())\n{\nif (MouseL.down())\n{\n// \u30af\u30ea\u30c3\u30af\u3057\u305f\u4f4d\u7f6e\u306b\u534a\u5f84 10 ~ 30 \u306e\u5186\u3092\u8ffd\u52a0\u3059\u308b\ncircles &lt;&lt; Circle{ Cursor::Pos(), Random(10.0, 30.0) };\n}\nfor (const auto&amp; circle : circles)\n{\n// x \u5ea7\u6a19\u306b\u5fdc\u3058\u3066\u8272\u3092\u5909\u3048\u308b\ncircle.draw(HSV{ circle.center.x, 0.8, 0.9 });\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/interaction/#362-\u30b0\u30ea\u30c3\u30c9\u306e\u30de\u30b9\u306b\u8272\u3092\u5857\u308b","title":"36.2 \u30b0\u30ea\u30c3\u30c9\u306e\u30de\u30b9\u306b\u8272\u3092\u5857\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\n// 8x6 \u306e\u4e8c\u6b21\u5143\u914d\u5217\u3092\u4f5c\u6210\u3057\u3001\u5168\u3066\u306e\u8981\u7d20\u3092 0 \u3067\u521d\u671f\u5316\u3059\u308b\nGrid&lt;int32&gt; grid(8, 6);\nwhile (System::Update())\n{\nfor (int32 y = 0; y &lt; grid.height(); ++y)\n{\nfor (int32 x = 0; x &lt; grid.width(); ++x)\n{\nconst RectF rect{ (x * 100), (y * 100), 100 };\nif (rect.leftClicked())\n{\n// \u30af\u30ea\u30c3\u30af\u306e\u305f\u3073\u306b\u8981\u7d20\u3092 0 \u2192 1 \u2192 2 \u2192 3 \u2192 0 \u2192 1 \u2192 ... \u3068\u5909\u5316\u3055\u305b\u308b\n++grid[y][x] %= 4;\n}\nconst ColorF color{ (3 - grid[y][x]) / 3.0 };\nrect.stretched(-1).draw(color);\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/interaction/#363-\u30d0\u30a6\u30f3\u30c9\u3059\u308b\u8907\u6570\u306e\u30dc\u30fc\u30eb","title":"36.3 \u30d0\u30a6\u30f3\u30c9\u3059\u308b\u8907\u6570\u306e\u30dc\u30fc\u30eb","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nstruct Ball\n{\nVec2 pos;\nVec2 velocity;\n};\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst double ballRadius = 20.0;\nArray&lt;Ball&gt; balls;\nfor (int32 i = 0; i &lt; 5; ++i)\n{\nballs &lt;&lt; Ball{ RandomVec2(Scene::Rect().stretched(-ballRadius)), RandomVec2(200) };\n}\nwhile (System::Update())\n{\nfor (auto&amp; ball : balls)\n{\nball.pos += (ball.velocity * Scene::DeltaTime());\nif ((ball.pos.x &lt;= ballRadius) || (Scene::Width() &lt;= (ball.pos.x + ballRadius)))\n{\nball.velocity.x *= -1.0;\n}\nif ((ball.pos.y &lt;= ballRadius) || (Scene::Height() &lt;= (ball.pos.y + ballRadius)))\n{\nball.velocity.y *= -1.0;\n}\n}\nfor (const auto&amp; ball : balls)\n{\nCircle{ ball.pos, ballRadius }.draw();\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/interaction/#364-\u62bd\u9078","title":"36.4 \u62bd\u9078","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nconst Array&lt;String&gt; options = { U\"New York\", U\"London\", U\"Paris\", U\"Tokyo\", U\"Sydney\", U\"Berlin\" };\nconst Rect optionRect{ Arg::center = Scene::Center().movedBy(0, -60), 400, 100 };\nString result;\nwhile (System::Update())\n{\noptionRect.draw();\nif (result)\n{\nfont(result).drawAt(60, optionRect.center(), ColorF{ 0.11 });\nif (SimpleGUI::Button(U\"Start\", Scene::Center().movedBy(-60, 40), 120))\n{\nresult.clear();\n}\n}\nelse\n{\nfont(options.choice()).drawAt(60, optionRect.center(), ColorF{ 0.11 });\nif (SimpleGUI::Button(U\"Stop\", Scene::Center().movedBy(-60, 40), 120))\n{\nresult = options.choice();\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/interaction/#365-\u5f3e\u5e55\u3092\u767a\u5c04\u3059\u308b","title":"36.5 \u5f3e\u5e55\u3092\u767a\u5c04\u3059\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nstruct Bullet\n{\n// \u4f4d\u7f6e\nVec2 pos;\n// \u901f\u5ea6\nVec2 velocity;\n};\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture textureEnemy{ U\"\ud83d\udef8\"_emoji };\n// \u767a\u5c04\u5468\u671f\uff08\u79d2\uff09\nconst double fireInterval = 0.08;\n// \u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\n// \u767a\u5c04\u65b9\u5411\ndouble angle = 0.0;\nArray&lt;Bullet&gt; bullets;\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; bullets.size();\naccumulatedTime += Scene::DeltaTime();\n// \u6575\u306e\u4f4d\u7f6e\nconst Vec2 enemyPos{ (400 + Periodic::Sine1_1(4s) * 200.0), 200 };\n// \u84c4\u7a4d\u6642\u9593\u304c\u5468\u671f\u3092\u8d85\u3048\u305f\u3089\nif (fireInterval &lt;= accumulatedTime)\n{\nconst Vec2 velocity = Circular{ 120, angle };\nbullets &lt;&lt; Bullet{ enemyPos, velocity };\nangle += 15_deg;\naccumulatedTime -= fireInterval;\n}\n// \u5f3e\u306e\u79fb\u52d5\nfor (auto&amp; bullet : bullets)\n{\nbullet.pos += (bullet.velocity * Scene::DeltaTime());\n}\n// \u753b\u9762\u5916\u306b\u51fa\u305f\u5f3e\u3092\u524a\u9664\nbullets.remove_if([](const Bullet&amp; bullet) { return (not bullet.pos.intersects(Scene::Rect())); });\ntextureEnemy.drawAt(enemyPos);\nfor (const auto&amp; bullet : bullets)\n{\nCircle{ bullet.pos, 8 }.draw();\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/interaction/#366-\u8907\u6570\u306e\u7d75\u6587\u5b57\u3092\u30de\u30a6\u30b9\u3067\u914d\u7f6e\u3059\u308b","title":"36.6 \u8907\u6570\u306e\u7d75\u6587\u5b57\u3092\u30de\u30a6\u30b9\u3067\u914d\u7f6e\u3059\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nusing ItemID = uint32;\nstruct Item\n{\n// \u66f4\u65b0\u6642\u523b\nuint64 updateTime = 0;\n// \u4e2d\u5fc3\u5ea7\u6a19\nVec2 pos = Vec2{ 0, 0 };\n// ID\nItemID id = 0;\n// \u7d75\u6587\u5b57\u306e\u7a2e\u985e\nint32 type = 0;\n};\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Array&lt;Texture&gt; emojis =\n{\nTexture{ U\"\ud83c\udf54\"_emoji },\nTexture{ U\"\ud83c\udf45\"_emoji },\nTexture{ U\"\ud83e\udd57\"_emoji },\nTexture{ U\"\ud83c\udf63\"_emoji },\nTexture{ U\"\ud83c\udf69\"_emoji },\nTexture{ U\"\ud83c\udf59\"_emoji },\n};\n// ID \u767a\u884c\u7528\u306e\u30ab\u30a6\u30f3\u30bf\u30fc\nItemID idCounter = 0;\nArray&lt;Item&gt; items;\nfor (int32 i = 0; i &lt; 12; ++i)\n{\nitems &lt;&lt; Item{ Time::GetMillisec(), RandomVec2(Scene::Rect().stretched(-50)), ++idCounter, Random(0, static_cast&lt;int32&gt;(emojis.size() - 1))};\n}\n// \u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u306e ID\nOptional&lt;ItemID&gt; selectedItemID;\nwhile (System::Update())\n{\n// \u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u3057\u3066\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u306e ID\nOptional&lt;ItemID&gt; mouseOverItemID;\nif (MouseL.up())\n{\nselectedItemID.reset();\n}\nif (selectedItemID)\n{\nfor (auto&amp; item : items)\n{\nif (item.id == *selectedItemID)\n{\nitem.pos.moveBy(Cursor::DeltaF());\nbreak;\n}\n}\n}\nelse\n{\nfor (auto&amp; item : items)\n{\nif (Circle{ item.pos, 50 }.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\nmouseOverItemID = item.id;\nif (MouseL.down())\n{\nitem.updateTime = Time::GetMillisec();\nselectedItemID = item.id;\n}\nbreak;\n}\n}\n}\n// \u66f4\u65b0\u6642\u523b\u304c\u65b0\u3057\u3044\u9806\u306b\u4e26\u3073\u66ff\u3048\u308b\nitems.sort_by([](const Item&amp; a, const Item&amp; b) { return a.updateTime &gt; b.updateTime; });\n// \u66f4\u65b0\u6642\u523b\u304c\u53e4\u3044\u9806\u306b\u63cf\u753b\u3059\u308b\nfor (int32 i = (static_cast&lt;int32&gt;(items.size()) - 1); 0 &lt;= i; --i)\n{\nconst auto&amp; item = items[i];\n// \u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u3057\u3066\u3044\u308b\u304b\u3001\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u306f\u5c11\u3057\u5927\u304d\u304f\u63cf\u753b\u3059\u308b\nconst bool mouseOver = ((item.id == mouseOverItemID) || (item.id == selectedItemID));\nemojis[item.type].scaled(mouseOver ? 1.1 : 1.0).drawAt(item.pos);\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/interaction/#367-\u6163\u6027\u306e\u3042\u308b\u79fb\u52d5","title":"36.7 \u6163\u6027\u306e\u3042\u308b\u79fb\u52d5","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst double speed = 300.0;\nVec2 targetPos{ 400, 300 };\nVec2 pos{ 400, 300 };\nVec2 velocity{ 0, 0 };\nwhile (System::Update())\n{\nconst double deltaTime = Scene::DeltaTime();\nif (KeyLeft.pressed())\n{\ntargetPos.x -= (speed * deltaTime);\n}\nif (KeyRight.pressed())\n{\ntargetPos.x += (speed * deltaTime);\n}\nif (KeyUp.pressed())\n{\ntargetPos.y -= (speed * deltaTime);\n}\nif (KeyDown.pressed())\n{\ntargetPos.y += (speed * deltaTime);\n}\npos = Math::SmoothDamp(pos, targetPos, velocity, 0.3);\nRectF{ Arg::center = pos, 120, 80 }.draw(ColorF{ 0.2, 0.6, 0.9 });\n}\n}\n</code></pre>"},{"location":"tutorial2/interaction/#368-\u30b2\u30fc\u30e0\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9","title":"36.8 \u30b2\u30fc\u30e0\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Medium };\n// \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u914d\u5217\nconst Array&lt;String&gt; messages =\n{\nU\"Twinkle, twinkle, little star,\\nHow I wonder what you are!\",\nU\"Up above the world so high,\\nLike a diamond in the sky.\",\nU\"When the blazing sun is gone,\\nWhen he nothing shines upon,\",\nU\"Then you show your little light,\\nTwinkle, twinkle, all the night.\",\n};\n// \u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306e\u4f4d\u7f6e\u3068\u30b5\u30a4\u30ba\nconst Rect messageBox{ 40, 440, 720, 120 };\n// \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\nsize_t messageIndex = 0;\n// \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u8868\u793a\u3092\u958b\u59cb\u3057\u3066\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\u3092\u6e2c\u5b9a\u3059\u308b\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\nStopwatch stopwatch{ StartImmediately::Yes };\nwhile (System::Update())\n{\n// \u8868\u793a\u3059\u308b\u6587\u5b57\u6570\nint32 count = Max(((stopwatch.ms() - 200) / 24), 0);\n// \u73fe\u5728\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u3059\u3079\u3066\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u304b\nconst bool finished = (static_cast&lt;int32&gt;(messages[messageIndex].length()) &lt;= count);\nif (finished &amp;&amp; (messageBox.leftClicked() || KeySpace.down()))\n{\n// \u6b21\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u5207\u308a\u66ff\u3048\u308b\n++messageIndex %= messages.size();\nstopwatch.restart();\ncount = 0;\n}\n// \u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3092\u63cf\u753b\u3059\u308b\nmessageBox.rounded(10).drawShadow(Vec2{ 1, 1 }, 8).draw().drawFrame(2, ColorF{ 0.4 });\n// \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u63cf\u753b\u3059\u308b\nfont(messages[messageIndex].substr(0, count)).draw(28, messageBox.stretched(-36, -20), ColorF{ 0.11 });\nif (messageBox.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\nif (finished)\n{\n// \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u8868\u793a\u304c\u7d42\u308f\u3063\u3066\u3044\u305f\u3089\u3001\u25bc \u3092\u63cf\u753b\u3059\u308b\nTriangle{ messageBox.br().movedBy(-30, -30), 20, 180_deg }.draw(ColorF{ 0.11, Periodic::Sine0_1(2.0s) });\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/interaction/#369-\u30e1\u30c3\u30bb\u30fc\u30b8\u30ed\u30b0","title":"36.9 \u30e1\u30c3\u30bb\u30fc\u30b8\u30ed\u30b0","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nTextEditState textEditState;\nListBoxState listBoxState;\nwhile (System::Update())\n{\nSimpleGUI::ListBox(listBoxState, Vec2{ 40, 40 }, 720, 220);\nbool enter = false;\n{\nconst bool previous = textEditState.active;\nSimpleGUI::TextBox(textEditState, Vec2{ 40, 280 }, 600);\n// \u30a8\u30f3\u30bf\u30fc\u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u304c\u975e\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u306a\u3063\u305f\u304b\nenter = (previous &amp;&amp; (textEditState.active == false) &amp;&amp; textEditState.enterKey);\n}\nif (SimpleGUI::Button(U\"Submit\", Vec2{ 660, 280 }, 100, (not textEditState.text.isEmpty()))\n|| enter)\n{\n// \u30ea\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u8ffd\u52a0\u3059\u308b\nlistBoxState.items &lt;&lt; textEditState.text;\n// \u8ffd\u52a0\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u304c\u898b\u3048\u308b\u3088\u3046\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u4f4d\u7f6e\u3092\u6700\u5927\u306b\u3059\u308b\uff08\u6b21\u306e SimpleGUI::ListBox() \u3067\u9069\u5207\u306a\u5024\u306b\u88dc\u6b63\u3055\u308c\u308b\uff09\nlistBoxState.scroll = Largest&lt;int32&gt;;\n// \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u3092\u30af\u30ea\u30a2\u3059\u308b\ntextEditState.clear();\n// \u30a8\u30f3\u30bf\u30fc\u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u304c\u975e\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u306a\u3063\u305f\u5834\u5408\u3001\u518d\u3073\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u3059\u308b\nif (enter)\n{\ntextEditState.active = true;\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/interaction/#3610-\u5f90\u3005\u306b\u5909\u5316\u3059\u308b\u6570\u5024","title":"36.10 \u5f90\u3005\u306b\u5909\u5316\u3059\u308b\u6570\u5024","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nint32 targetValue = 0;\ndouble currentValue = 0.0;\ndouble velocity = 0.0;\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"targetValue: \" &lt;&lt; targetValue;\ncurrentValue = Math::SmoothDamp(currentValue, targetValue, velocity, 0.3);\nconst int32 value = static_cast&lt;int32&gt;(Math::Round(currentValue));\nfont(value).draw(40, Arg::topRight(160, 90), ColorF{ 0.11 });\nif (SimpleGUI::Button(U\"+1\", Vec2{ 200, 100 }, 80))\n{\n++targetValue;\n}\nif (SimpleGUI::Button(U\"-1\", Vec2{ 300, 100 }, 80))\n{\n--targetValue;\n}\nif (SimpleGUI::Button(U\"+10\", Vec2{ 400, 100 }, 80))\n{\ntargetValue += 10;\n}\nif (SimpleGUI::Button(U\"-10\", Vec2{ 500, 100 }, 80))\n{\ntargetValue -= 10;\n}\nif (SimpleGUI::Button(U\"+100\", Vec2{ 600, 100 }, 80))\n{\ntargetValue += 100;\n}\nif (SimpleGUI::Button(U\"-100\", Vec2{ 700, 100 }, 80))\n{\ntargetValue -= 100;\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/interaction/#3611-\u30ea\u30b9\u30c8\u306e\u4e26\u3073\u66ff\u3048","title":"36.11 \u30ea\u30b9\u30c8\u306e\u4e26\u3073\u66ff\u3048","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nstruct Item\n{\nint32 id = 0;\nString text;\n// \u30a2\u30a4\u30c6\u30e0\u306e\u63cf\u753b\nvoid draw(const Vec2&amp; basePos, const Font&amp; font, int32 order) const\n{\ndrawImpl(getRect(basePos, order), font, false);\n}\n// \u63b4\u3093\u3067\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u63cf\u753b\nvoid drawGrabbed(const Vec2&amp; basePos, const Font&amp; font, const Vec2&amp; offset, int32 order) const\n{\ndrawImpl(getRect(basePos, order).movedBy(Cursor::PosF() - offset), font, true);\n}\n// \u30a2\u30a4\u30c6\u30e0\u306e\u9577\u65b9\u5f62\u3092\u8fd4\u3059\nRectF getRect(const Vec2&amp; basePos, int32 order) const\n{\nreturn{ basePos.movedBy(0, (80 * order)), 400, 70 };\n}\nprivate:\nvoid drawImpl(const RectF&amp; rect, const Font&amp; font, bool shadow) const\n{\nif (shadow)\n{\nrect.rounded(8).drawShadow(Vec2{ 2, 2 }, 16, 2).draw();\n}\nelse\n{\nrect.rounded(8).draw();\n}\nfont(text).draw(30, Arg::leftCenter = rect.leftCenter().movedBy(30, 0), ColorF{ 0.11 });\n}\n};\n// \u63b4\u3093\u3067\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u60c5\u5831\nstruct GrabbedItem\n{\nint32 id = 0;\nint32 oldOrder = 0;\nVec2 offset{ 0, 0 };\n};\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nArray&lt;Item&gt; items =\n{\n{ 111, U\"Apple\" },\n{ 222, U\"Bird\" },\n{ 333, U\"Cat\" },\n{ 444, U\"Dog\" },\n{ 555, U\"Elephant\" },\n};\nconst Point basePos{ 80, 80 };\nOptional&lt;GrabbedItem&gt; grabbedItem;\nwhile (System::Update())\n{\n// \u30ea\u30b9\u30c8\u306e\u80cc\u666f\u3092\u63cf\u753b\u3059\u308b\nRectF{ basePos, 400, 600 }.stretched(24).rounded(8).draw(ColorF{ 0.9 });\n// \u30a2\u30a4\u30c6\u30e0\u3092\u63b4\u3080\u51e6\u7406\nif (not grabbedItem)\n{\n// \u30a2\u30a4\u30c6\u30e0\u306e\u30ea\u30b9\u30c8\u5185\u9806\u5e8f\nint32 order = 0;\nfor (auto&amp; item : items)\n{\n// \u30a2\u30a4\u30c6\u30e0\u306e\u9577\u65b9\u5f62\nconst RectF rect = item.getRect(basePos, order);\nif (rect.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\nif (rect.leftClicked())\n{\n// \u30a2\u30a4\u30c6\u30e0\u3092\u63b4\u3080\ngrabbedItem = { item.id, order, Cursor::PosF() };\n}\nbreak;\n}\n++order;\n}\n}\n// \u63b4\u3093\u3067\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u771f\u4e0b\u306e\u30ea\u30b9\u30c8\u5185\u9806\u5e8f\u3002\u30a2\u30a4\u30c6\u30e0\u3092\u63b4\u3093\u3067\u3044\u306a\u3044\u5834\u5408\u306f -1\nint32 targetOrder = (grabbedItem ? Clamp(((Cursor::Pos().y - basePos.y) / 80), 0, (static_cast&lt;int32&gt;(items.size()) - 1)) : -1);\n// \u63b4\u3093\u3067\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u7f6e\u304f\u51e6\u7406\nif (grabbedItem &amp;&amp; MouseL.up())\n{\n// \u4ee5\u524d\u3068\u7570\u306a\u308b\u30ea\u30b9\u30c8\u5185\u9806\u5e8f\u306e\u5834\u5408\nif (targetOrder != grabbedItem-&gt;oldOrder)\n{\n// \u30a2\u30a4\u30c6\u30e0\u3092\u4e00\u65e6\u30b3\u30d4\u30fc\nauto tmp = std::move(items[grabbedItem-&gt;oldOrder]);\n// \u4ee5\u524d\u306e\u5834\u6240\u306b\u3042\u3063\u305f\u30a2\u30a4\u30c6\u30e0\u3092\u524a\u9664\u3059\u308b\nitems.erase(items.begin() + grabbedItem-&gt;oldOrder);\n// \u65b0\u3057\u3044\u5834\u6240\u306b\u30a2\u30a4\u30c6\u30e0\u3092\u633f\u5165\u3059\u308b\nitems.insert((items.begin() + targetOrder), std::move(tmp));\n}\n// \u30a2\u30a4\u30c6\u30e0\u3092\u63b4\u3093\u3067\u3044\u306a\u3044\u72b6\u614b\u306b\u3059\u308b\ngrabbedItem.reset();\ntargetOrder = -1;\n}\nif (grabbedItem)\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\n// \u30ea\u30b9\u30c8\u4e0a\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u63cf\u753b\u3059\u308b\n{\nint32 order = 0;\nfor (const auto&amp; item : items)\n{\nif (targetOrder == order)\n{\n++order;\n}\n// \u305d\u306e\u4f4d\u7f6e\u306b\u63b4\u3093\u3067\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u304c\u3042\u308b\u5834\u5408\u306f\u63cf\u753b\u3057\u306a\u3044\nif (grabbedItem &amp;&amp; (grabbedItem-&gt;id == item.id))\n{\ncontinue;\n}\nitem.draw(basePos, font, order);\n++order;\n}\n}\n// \u63b4\u3093\u3067\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u63cf\u753b\u3059\u308b\nif (grabbedItem)\n{\nfor (const auto&amp; item : items)\n{\nif (grabbedItem-&gt;id == item.id)\n{\nitem.drawGrabbed(basePos, font, grabbedItem-&gt;offset, grabbedItem-&gt;oldOrder);\nbreak;\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/keyboard/","title":"33. \u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b","text":"<p>\u30ad\u30fc\u30dc\u30fc\u30c9\u306e\u5165\u529b\u3092\u51e6\u7406\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial2/keyboard/#331-\u30ad\u30fc\u306e\u5165\u529b\u72b6\u614b\u3092\u8abf\u3079\u308b","title":"33.1 \u30ad\u30fc\u306e\u5165\u529b\u72b6\u614b\u3092\u8abf\u3079\u308b","text":"<p>\u30ad\u30fc\u30dc\u30fc\u30c9\u306e\u30ad\u30fc\u306b\u306f\u300cKey\uff5e\u300d\u3068\u540d\u4ed8\u3051\u3089\u308c\u305f <code>Input</code> \u578b\u306e\u5024\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>\u4e3b\u306a\u30ad\u30fc\u540d</p> <ul> <li>A , B , C , ... \u306f <code>KeyA</code>, <code>KeyB</code>, <code>KeyC</code> , ...</li> <li>1 , 2 , 3 , ... \u306f <code>Key1</code>, <code>Key2</code>, <code>Key3</code>, ...</li> <li>F1 , F2 , F3 , ... \u306f <code>KeyF1</code>, <code>KeyF2</code>, <code>KeyF3</code>, ...</li> <li>Up , Down , Left , Right \u306f <code>KeyUp</code>, <code>KeyDown</code>, <code>KeyLeft</code>, <code>KeyRight</code></li> <li>Space \u306f <code>KeySpace</code></li> <li>Enter \u306f <code>KeyEnter</code></li> <li>Backspace \u306f <code>KeyBackspace</code></li> <li>Tab \u30ad\u30fc\u306f <code>KeyTab</code></li> <li>Esc \u30ad\u30fc\u306f <code>KeyEscape</code></li> <li>Page Up , Page Down \u306f <code>KeyPageUp</code>, <code>KeyPageDown</code></li> <li>Del \u30ad\u30fc\u306f <code>KeyDelete</code></li> <li>Numpad \u306e Num 0 , Num 1 , Num 2 , ... \u306f <code>KeyNum0</code>, <code>KeyNum1</code>, <code>KeyNum2</code>, ...</li> <li>Shift \u306f <code>KeyShift</code></li> <li>Left Shift (\u5de6\u30b7\u30d5\u30c8), Right Shift (\u53f3\u30b7\u30d5\u30c8) \u306f <code>KeyLShift</code>, <code>KeyRShift</code></li> <li>Ctrl \u306f <code>KeyControl</code></li> <li>(macOS) Cmd \u306f <code>KeyCommand</code></li> <li>, , . , / \u30ad\u30fc\u306f <code>KeyComma</code>, <code>KeyPeriod</code>, <code>KeySlash</code></li> <li>\u4e0a\u8a18\u4ee5\u5916\u306e\u30ad\u30fc\u306f <code>&lt;Siv3D/Keyboard.hpp&gt;</code> \u3092\u53c2\u7167</li> </ul> <p><code>Input</code> \u578b\u306e\u5024\u306f\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6301\u3061\u3001\u62bc\u3057\u305f\u77ac\u9593\u3067\u3042\u308b\u304b\u3092 <code>.down()</code>, \u62bc\u3057\u7d9a\u3051\u3066\u3044\u308b\u304b\u3092 <code>.pressed()</code>, \u96e2\u3057\u305f\u77ac\u9593\u3067\u3042\u308b\u304b\u3092 <code>.up()</code> \u3092\u4f7f\u3063\u3066 <code>bool</code> \u5024\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> \u95a2\u6570 \u62bc\u3057\u3066\u3044\u306a\u3044\u3068\u304d \u62bc\u3057\u305f\u77ac\u9593 \u62bc\u3057\u7d9a\u3051\u3066\u3044\u308b \u96e2\u3057\u305f\u77ac\u9593 \u96e2\u3057\u7d9a\u3051\u3066\u3044\u308b <code>.down()</code> false \u2714 true false false false <code>.pressed()</code> false \u2714 true \u2714 true false false <code>.up()</code> false false false \u2714 true false <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nVec2 pos = Scene::Center();\nwhile (System::Update())\n{\nconst double delta = (Scene::DeltaTime() * 200);\n// \u4e0a\u4e0b\u5de6\u53f3\u30ad\u30fc\u3067\u79fb\u52d5\u3059\u308b\nif (KeyLeft.pressed())\n{\npos.x -= delta;\n}\nif (KeyRight.pressed())\n{\npos.x += delta;\n}\nif (KeyUp.pressed())\n{\npos.y -= delta;\n}\nif (KeyDown.pressed())\n{\npos.y += delta;\n}\n// [C] \u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u3089\u4e2d\u592e\u306b\u623b\u308b\nif (KeyC.down())\n{\npos = Scene::Center();\n}\npos.asCircle(50).draw();\n}\n}\n</code></pre>"},{"location":"tutorial2/keyboard/#332-siv3d-\u3067\u7279\u6b8a\u306a\u64cd\u4f5c\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\u30ad\u30fc","title":"33.2 Siv3D \u3067\u7279\u6b8a\u306a\u64cd\u4f5c\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\u30ad\u30fc","text":"<p>\u4e00\u90e8\u306e\u30ad\u30fc\u306f Siv3D \u306b\u3088\u3063\u3066\u7279\u6b8a\u306a\u64cd\u4f5c\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"tutorial2/keyboard/#3321-\u30a8\u30b9\u30b1\u30fc\u30d7\u30ad\u30fc","title":"33.2.1 \u30a8\u30b9\u30b1\u30fc\u30d7\u30ad\u30fc","text":"<p>Esc \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3055\u305b\u308b\u30e6\u30fc\u30b6\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u307e\u3059\uff08\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 4.2 \u53c2\u7167\uff09\u3002</p> <p>Esc \u3092\u62bc\u3057\u3066\u3082\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001<code>System::SetTerminationTriggers()</code> \u306b <code>UserAction::CloseButtonClicked</code> \u306e\u307f\u3092\u6e21\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\u64cd\u4f5c\u306e\u307f\u3092\u7d42\u4e86\u64cd\u4f5c\u306b\u8a2d\u5b9a\u3059\u308b\nSystem::SetTerminationTriggers(UserAction::CloseButtonClicked);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/keyboard/#3322-printscreen-\u30ad\u30fc\u3068-f12-\u30ad\u30fc","title":"33.2.2 PrintScreen \u30ad\u30fc\u3068 F12 \u30ad\u30fc","text":"<p>Print Screen \u307e\u305f\u306f F12 \u3092\u62bc\u3059\u3068\u3001\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3059\uff08\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 4.1.2 \u53c2\u7167\uff09\u3002</p> <p>F12 \u3092\u30b2\u30fc\u30e0\u3084\u30a2\u30d7\u30ea\u306e\u64cd\u4f5c\u306b\u5272\u308a\u5f53\u3066\u3001F12 \u3092\u62bc\u3057\u3066\u3082\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u4fdd\u5b58\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001<code>ScreenCapture::SetShortcutKeys()</code> \u306b <code>{ KeyPrintScreen }</code> \u306e\u307f\u3092\u6e21\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// [PrintScreen] \u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u3068\u304d\u306e\u307f\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u4fdd\u5b58\u3059\u308b\u3088\u3046\u8a2d\u5b9a\u3059\u308b\nScreenCapture::SetShortcutKeys({ KeyPrintScreen });\nwhile (System::Update())\n{\nCircle{ Scene::Center(), 100 }.draw();\n}\n}\n</code></pre>"},{"location":"tutorial2/keyboard/#3323-f1-\u30ad\u30fc","title":"33.2.3 F1 \u30ad\u30fc","text":"<p>F1 \u3092\u62bc\u3059\u3068\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092\u8868\u793a\u3057\u307e\u3059\u3002</p> <p>F1 \u3092\u30b2\u30fc\u30e0\u3084\u30a2\u30d7\u30ea\u306e\u64cd\u4f5c\u306b\u5272\u308a\u5f53\u3066\u3001F1 \u3092\u62bc\u3057\u3066\u3082\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092\u8868\u793a\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001<code>LicenseManager::DisableDefaultTrigger()</code> \u3092\u547c\u3073\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u3001\u4ee3\u308f\u308a\u306b <code>LicenseManager::ShowInBrowser()</code> \u3092\u4f7f\u3063\u3066\u30d6\u30e9\u30a6\u30b6\u3067\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\u624b\u6bb5\u3092\u63d0\u4f9b\u3059\u3079\u304d\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u81ea\u5206\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092\u8ffd\u52a0\u3059\u308b\nLicenseManager::AddLicense({\n.title = U\"My game\",\n.copyright = U\"(C) 2023 My name\",\n.text = U\"License\" });\n// [F1] \u30ad\u30fc\u3067\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092\u8868\u793a\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\nLicenseManager::DisableDefaultTrigger();\nwhile (System::Update())\n{\n// \u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\nif (SimpleGUI::Button(U\"License\", Vec2{ 40, 40 }))\n{\nLicenseManager::ShowInBrowser();\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/keyboard/#3324-alt--enter-\u30ad\u30fcwindows-\u7248","title":"33.2.4 Alt + Enter \u30ad\u30fc\uff08Windows \u7248\uff09","text":"<p>Windows \u7248\u3067\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u4e2d\u306b Alt+Enter \u3092\u62bc\u3059\u3053\u3068\u3067\u5168\u753b\u9762\u30e2\u30fc\u30c9\u306b\u3067\u304d\u307e\u3059\uff08\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 32.15 \u53c2\u7167\uff09\u3002\u3053\u306e\u30ad\u30fc\u64cd\u4f5c\u3092\u7121\u52b9\u306b\u3059\u308b\u306b\u306f <code>Window::SetToggleFullscreenEnabled(false)</code> \u3092\u547c\u3073\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::SetToggleFullscreenEnabled(false);\nwhile (System::Update())\n{\n// 100px \u30b5\u30a4\u30ba\u306e\u5e02\u677e\u6a21\u69d8\nfor (int32 y = 0; y &lt; 50; ++y)\n{\nfor (int32 x = 0; x &lt; 50; ++x)\n{\nif ((x + y) % 2)\n{\nRect{ x * 100, y * 100, 100 }.draw(ColorF{ 0.2, 0.3, 0.4 });\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/keyboard/#333-\u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u308b\u6642\u9593\u3092\u8abf\u3079\u308b","title":"33.3 \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u308b\u6642\u9593\u3092\u8abf\u3079\u308b","text":"<p><code>Input</code> \u306e <code>.pressedDuration()</code> \u306f\u3001\u305d\u306e\u5165\u529b\u304c\u62bc\u3055\u308c\u7d9a\u3051\u3066\u3044\u308b\u6642\u9593\u3092 <code>Duration</code> \u578b\u306e\u5024\u3067\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\n// A \u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u308b\u6642\u9593\nPrint &lt;&lt; KeyA.pressedDuration();\n// \u30b9\u30da\u30fc\u30b9\u30ad\u30fc\u304c 1 \u79d2\u4ee5\u4e0a\u62bc\u3055\u308c\u3066\u3044\u308c\u3070\nif (1s &lt;= KeySpace.pressedDuration())\n{\nPrint &lt;&lt; U\"Space\";\n}\n}\n}\n</code></pre> <p>\u62bc\u3055\u308c\u7d9a\u3051\u3066\u3044\u308b\u6642\u9593\u306f <code>.up()</code> \u304c <code>true</code> \u306b\u306a\u308b\u30d5\u30ec\u30fc\u30e0\u307e\u3067\u6709\u52b9\u3067\u3059\u3002<code>.up()</code> \u3055\u308c\u305f\u3068\u304d\u306b <code>.pressedDuration()</code> \u3092\u8abf\u3079\u308b\u3068\u3001\u305d\u306e\u30ad\u30fc\u304c\u96e2\u3055\u308c\u308b\u307e\u3067\u4f55\u79d2\u9593\u62bc\u3055\u308c\u7d9a\u3051\u3066\u3044\u305f\u304b\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u30b9\u30da\u30fc\u30b9\u30ad\u30fc\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u6642\u9593\u3092\u8868\u793a\u3059\u308b\nif (KeySpace.up())\n{\nPrint &lt;&lt; KeySpace.pressedDuration();\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/keyboard/#334-\u30ad\u30fc\u306e\u540d\u524d\u3092\u53d6\u5f97\u3059\u308b","title":"33.4 \u30ad\u30fc\u306e\u540d\u524d\u3092\u53d6\u5f97\u3059\u308b","text":"<p><code>Input</code> \u306e <code>.name()</code> \u306f\u3001\u305d\u306e\u30ad\u30fc\u306e\u540d\u524d\u3092 <code>String</code> \u578b\u306e\u5024\u3067\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nPrint &lt;&lt; KeyA.name();\nPrint &lt;&lt; KeySpace.name();\nPrint &lt;&lt; KeyLeft.name();\nPrint &lt;&lt; Key3.name();\nPrint &lt;&lt; KeyF11.name();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/keyboard/#335-\u3059\u3079\u3066\u306e\u30ad\u30fc\u5165\u529b\u3092\u53d6\u5f97\u3059\u308b","title":"33.5 \u3059\u3079\u3066\u306e\u30ad\u30fc\u5165\u529b\u3092\u53d6\u5f97\u3059\u308b","text":"<p><code>Keyboard::GetAllInputs()</code> \u306f\u3001<code>.down()</code>, <code>.pressed()</code>, <code>.up()</code> \u306e\u3044\u305a\u308c\u304b\u304c <code>true</code> \u306b\u306a\u3063\u3066\u3044\u308b\u3001\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30ad\u30fc\u306e\u4e00\u89a7\u3092 <code>Array&lt;Input&gt;</code> \u3067\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\n// down() / pressed() / up() \u306e\u3044\u305a\u308c\u304b\u304c true \u306b\u306a\u3063\u3066\u3044\u308b\u30ad\u30fc\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\nconst Array&lt;Input&gt; keys = Keyboard::GetAllInputs();\nfor (const auto&amp; key : keys)\n{\nPrint &lt;&lt; key.name() &lt;&lt; (key.pressed() ? U\" pressed\" : U\" up\");\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/keyboard/#336-\u8907\u6570\u306e\u30ad\u30fc\u306e\u7d44\u307f\u5408\u308f\u305ba-\u307e\u305f\u306f-b","title":"33.6 \u8907\u6570\u306e\u30ad\u30fc\u306e\u7d44\u307f\u5408\u308f\u305b\uff08A \u307e\u305f\u306f B\uff09","text":"<p><code>|</code> \u3092\u4f7f\u3063\u3066\u8907\u6570\u306e\u30ad\u30fc\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u305d\u306e\u3044\u305a\u308c\u304b\u304c\u62bc\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\n// [\u30b9\u30da\u30fc\u30b9] \u307e\u305f\u306f [\u30a8\u30f3\u30bf\u30fc] \u304c\u62bc\u3055\u308c\u3066\u3044\u308b\nif ((KeySpace | KeyEnter).pressed())\n{\nPrint &lt;&lt; U\"KeySpace / KeyEnter\";\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/keyboard/#337-\u8907\u6570\u306e\u30ad\u30fc\u306e\u7d44\u307f\u5408\u308f\u305ba-\u3092\u62bc\u3057\u306a\u304c\u3089-b","title":"33.7 \u8907\u6570\u306e\u30ad\u30fc\u306e\u7d44\u307f\u5408\u308f\u305b\uff08A \u3092\u62bc\u3057\u306a\u304c\u3089 B\uff09","text":"<p><code>+</code> \u3092\u4f7f\u3063\u3066 2 \u3064\u306e\u30ad\u30fc\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u5de6\u306e\u30ad\u30fc\u304c\u62bc\u3055\u308c\u306a\u304c\u3089\u3001\u53f3\u306e\u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// [Ctrl + C] \u307e\u305f\u306f [Command + C] \u304c\u62bc\u3055\u308c\u305f\nif ((KeyControl + KeyC).down()\n|| (KeyCommand + KeyC).down())\n{\nPrint &lt;&lt; U\"Ctrl + C / Command + C\";\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/keyboard/#338-inputgroup","title":"33.8 InputGroup","text":"<p><code>InputGroup</code> \u578b\u306f <code>Input</code> \u3084\u3001<code>Input</code> \u306e <code>|</code>, <code>+</code> \u306b\u3088\u308b\u7d44\u307f\u5408\u308f\u305b\u3092\u683c\u7d0d\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// [Z] [\u30b9\u30da\u30fc\u30b9] [Enter] \u306e\u3044\u305a\u308c\u304b\nconst InputGroup inputOK = (KeyZ | KeySpace | KeyEnter);\n// [Ctrl] + [C] \u307e\u305f\u306f [Command] + [C]\nconst InputGroup inputCopy = ((KeyControl + KeyC) | (KeyCommand + KeyC));\nwhile (System::Update())\n{\nif (inputOK.down())\n{\nPrint &lt;&lt; U\"OK\";\n}\nif (inputCopy.down())\n{\nPrint &lt;&lt; U\"Copy\";\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/keyboard/#339-\u30ad\u30fc\u30b3\u30f3\u30d5\u30a3\u30b0","title":"33.9 \u30ad\u30fc\u30b3\u30f3\u30d5\u30a3\u30b0","text":"<p><code>InputGroup</code> \u3092\u5fdc\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u6b21\u306e\u3088\u3046\u306b\u30ad\u30fc\u30b3\u30f3\u30d5\u30a3\u30b0\u3092\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002 </p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u5de6\u306b\u79fb\u52d5\u3059\u308b\u64cd\u4f5c\nInputGroup inputLeft = KeyLeft;\n// \u53f3\u306b\u79fb\u52d5\u3059\u308b\u64cd\u4f5c\nInputGroup inputRight = KeyRight;\n// \u30b8\u30e3\u30f3\u30d7\u3059\u308b\u64cd\u4f5c\nInputGroup inputJump = KeySpace;\nsize_t index = 0;\nconst Array&lt;String&gt; options\n{\nU\"[\u2190] [\u2192] [Space]\",\nU\"[A] [D] [W]\",\nU\"[\u2190]/[A] [\u2192]/[D] [Space]/[W]\"\n};\nconst Texture texture{ U\"\ud83d\udc25\"_emoji };\nVec2 pos{ 400, 450 };\ndouble jumpY = 0.0;\nwhile (System::Update())\n{\n// \ud83d\udc25 \u306e\u79fb\u52d5\n{\nconst double deltaTime = Scene::DeltaTime();\nif (inputLeft.pressed())\n{\npos.x -= (deltaTime * 200);\n}\nif (inputRight.pressed())\n{\npos.x += (deltaTime * 200);\n}\nif (inputJump.down())\n{\njumpY = 500.0;\n}\npos.y = Min(pos.y - deltaTime * jumpY, 450.0);\njumpY = Max(jumpY - deltaTime * 1000.0, -1000.0);\n}\n// \u80cc\u666f\u3068 \ud83d\udc25 \u306e\u63cf\u753b\n{\nRect{ 800, 500 }\n.draw(Arg::top = ColorF{ 0.1, 0.4, 0.8 }, Arg::bottom = ColorF{ 0.4, 0.7, 1.0 });\nRect{ 0, 500, 800, 100 }\n.draw(ColorF{ 0.2, 0.5, 0.3 });\ntexture.drawAt(pos);\n}\n// \u30ad\u30fc\u30b3\u30f3\u30d5\u30a3\u30b0\nif (SimpleGUI::RadioButtons(index, options, Vec2{ 40, 40 }))\n{\nif (index == 0)\n{\ninputLeft = KeyLeft;\ninputRight = KeyRight;\ninputJump = KeySpace;\n}\nelse if (index == 1)\n{\ninputLeft = KeyA;\ninputRight = KeyD;\ninputJump = KeyW;\n}\nelse\n{\ninputLeft = (KeyLeft | KeyA);\ninputRight = (KeyRight | KeyD);\ninputJump = (KeySpace | KeyW);\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/keyboard/#3310-\u30c6\u30ad\u30b9\u30c8\u5165\u529b","title":"33.10 \u30c6\u30ad\u30b9\u30c8\u5165\u529b","text":"<p><code>TextInput::UpdateText()</code> \u306b <code>String</code> \u578b\u306e\u5909\u6570\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u306b\u57fa\u3065\u3044\u305f\u30c6\u30ad\u30b9\u30c8\u5165\u529b\u51e6\u7406\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u65e5\u672c\u8a9e\u5165\u529b\u6642\u306b\u672a\u5909\u63db\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u5f97\u305f\u3044\u5834\u5408\u306f <code>TextInput::GetEditingText()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Font font{ FontMethod::MSDF, 48 };\nString text;\nconst Rect box{ 50, 50, 700, 300 };\nwhile (System::Update())\n{\n// \u30ad\u30fc\u30dc\u30fc\u30c9\u304b\u3089\u30c6\u30ad\u30b9\u30c8\u3092\u5165\u529b\u3059\u308b\nTextInput::UpdateText(text);\n// \u672a\u5909\u63db\u306e\u6587\u5b57\u5165\u529b\u3092\u53d6\u5f97\u3059\u308b\nconst String editingText = TextInput::GetEditingText();\nbox.draw(ColorF{ 0.3 });\nfont(text + U'|' + editingText).draw(30, box.stretched(-20));\n}\n}\n</code></pre>"},{"location":"tutorial2/keyboard/#3311-ime-\u3092\u7121\u52b9\u5316\u3059\u308bwindows-\u7248","title":"33.11 IME \u3092\u7121\u52b9\u5316\u3059\u308b\uff08Windows \u7248\uff09","text":"<p>Windows \u7248\u306b\u304a\u3044\u3066\u3001\u65e5\u672c\u8a9e\u5165\u529b\u306e IME \u3092\u7121\u52b9\u5316\u3059\u308b\u5834\u5408\u3001<code>Platform::Windows::TextInput::DisableIME()</code> \u3092\u547c\u3073\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// IME \u3092\u7121\u52b9\u5316\u3059\u308b\nPlatform::Windows::TextInput::DisableIME();\nconst Font font{ FontMethod::MSDF, 48 };\nString text;\nconst Rect box{ 50, 50, 700, 300 };\nwhile (System::Update())\n{\n// \u30ad\u30fc\u30dc\u30fc\u30c9\u304b\u3089\u30c6\u30ad\u30b9\u30c8\u3092\u5165\u529b\u3059\u308b\nTextInput::UpdateText(text);\nfont(text).draw(30, box.stretched(-20));\n}\n}\n</code></pre>"},{"location":"tutorial2/motion/","title":"18. \u52d5\u304d\u3092\u4f5c\u308b","text":"<p>\u52d5\u304d\u306e\u8868\u73fe\u306b\u5f79\u7acb\u3064 Siv3D \u306e\u6a5f\u80fd\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial2/motion/#181-\u7d4c\u904e\u6642\u9593\u3092\u4f7f\u3063\u305f\u30e2\u30fc\u30b7\u30e7\u30f3","title":"18.1 \u7d4c\u904e\u6642\u9593\u3092\u4f7f\u3063\u305f\u30e2\u30fc\u30b7\u30e7\u30f3","text":""},{"location":"tutorial2/motion/#scenetime","title":"Scene::Time()","text":"<p><code>Scene::Time()</code> \u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u8d77\u52d5\u3055\u308c\u3066\u304b\u3089\u306e \u30b7\u30fc\u30f3\u306e\u7d4c\u904e\u6642\u9593\uff08\u79d2\uff09\u3092 <code>double</code> \u578b\u306e\u5024\u3067\u8fd4\u3057\u307e\u3059\u3002\u3053\u306e\u5024\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306a\u30e2\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p> <p>\u3053\u306e\u5024\u306f <code>System::Update()</code> \u3092\u547c\u3073\u51fa\u3059\u305f\u3073\u306b\u66f4\u65b0\u3055\u308c\u308b\u305f\u3081\u3001\u540c\u4e00\u30d5\u30ec\u30fc\u30e0\u5185\u3067\u306e <code>Scene::Time()</code> \u306e\u547c\u3073\u51fa\u3057\u306f\u540c\u3058\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p>Scene::Time() \u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u6642\u9593\u3068\u306f\u7570\u306a\u308b</p> <p><code>Scene::Time()</code> \u304c\u8fd4\u3059\u5024\u306f <code>Scene::DeltaTime()</code> \u306e\u7d2f\u7a4d\u3067\u3059\u3002\u5f8c\u8ff0\u3059\u308b\u3088\u3046\u306b <code>Scene::DeltaTime()</code> \u306f\u5b9f\u969b\u306e\u30d5\u30ec\u30fc\u30e0\u7d4c\u904e\u6642\u9593\u3088\u308a\u77ed\u3044\u5834\u5408\u304c\u3042\u308b\u305f\u3081\u3001<code>Scene::Time()</code> \u306f\u5b9f\u969b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u6642\u9593\u3088\u308a\u77ed\u304f\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u6b63\u78ba\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u6642\u9593\u3092\u8a08\u6e2c\u3059\u308b\u306b\u306f <code>Time::GetMillisec()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u30b2\u30fc\u30e0\u5185\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306a\u3069\u3001\u307b\u3068\u3093\u3069\u306e\u5834\u5408\u306f <code>Scene::Time()</code> \u3092\u4f7f\u3046\u307b\u3046\u304c\u9069\u5207\u3067\u3059\u3002</p>"},{"location":"tutorial2/motion/#scenedeltatime","title":"Scene::DeltaTime()","text":"<p><code>Scene::DeltaTime()</code> \u306f\u3001\u76f4\u524d\u306e\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593 (\u79d2) \uff08\u305f\u3060\u3057 <code>Scene::GetMaxDeltaTime()</code> \u3092\u8d85\u3048\u308b\u5834\u5408\u306f <code>Scene::GetMaxDeltaTime()</code> \u306e\u5024\uff09\u3092 <code>double</code> \u578b\u306e\u5024\u3067\u8fd4\u3057\u307e\u3059\u3002</p> <p>\u4e00\u822c\u306b\u3001\u76f4\u524d\u306e\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\u304c\u5927\u304d\u3059\u304e\u308b\u3068\u3001\u30b2\u30fc\u30e0\u5185\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u3084\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u5909\u5316\u30b9\u30c6\u30c3\u30d7\u304c\u5927\u304d\u304f\u306a\u308a\u3001\u5b89\u5b9a\u6027\u304c\u640d\u306a\u308f\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001<code>Scene::DeltaTime()</code> \u306f <code>Scene::GetMaxDeltaTime()</code> \u306e\u5024\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f <code>0.1</code>\uff09\u3088\u308a\u3082\u5927\u304d\u304f\u306a\u3089\u306a\u3044\u3088\u3046\u5236\u9650\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"tutorial2/motion/#scenecenter","title":"Scene::Center()","text":"<p><code>Scene::Center()</code> \u306f\u30b7\u30fc\u30f3\u306e\u4e2d\u5fc3\u5ea7\u6a19\u3092 <code>Point</code> \u578b\u3067\u8fd4\u3057\u307e\u3059\u3002\u753b\u9762\u306e\u30b5\u30a4\u30ba\u304c 800x600 \u306e\u3068\u304d\u306b\u306f <code>Point{ 400, 300 }</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial2/motion/#\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0","title":"\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u8d77\u52d5\u3055\u308c\u3066\u304b\u3089\u306e\u6642\u9593\u306b\u57fa\u3065\u3044\u3066\u5186\u306e\u534a\u5f84\u3092\u5909\u5316\u3055\u305b\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nwhile (System::Update())\n{\nconst double t = Scene::Time();\n// \u5186\u306e\u534a\u5f84\u304c\u3001\u6642\u9593\u306e\u7d4c\u904e\u306b\u4f34\u3063\u3066\u5927\u304d\u304f\u306a\u308b\nCircle{ Scene::Center(), (t * 50) }.draw(ColorF{ 0.25 });\n}\n}\n</code></pre> <p>\u9014\u4e2d\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u3001<code>Scene::DeltaTime()</code> \u306e\u7d2f\u7a4d\u3092\u7528\u3044\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\ndouble t = 0.0;\nwhile (System::Update())\n{\n// \u5de6\u30af\u30ea\u30c3\u30af\u3067\u7d4c\u904e\u6642\u9593\u3092\u30ea\u30bb\u30c3\u30c8\nif (MouseL.down())\n{\nt = 0.0;\n}\n// \u7d4c\u904e\u6642\u9593\u3092\u52a0\u7b97\nt += Scene::DeltaTime();\nCircle{ Scene::Center(), (t * 50) }.draw(ColorF{ 0.25 });\n}\n}\n</code></pre>"},{"location":"tutorial2/motion/#182-\u6bce\u30d5\u30ec\u30fc\u30e0\u56fa\u5b9a\u5024\u3092\u52a0\u7b97\u3057\u3066\u306f\u3044\u3051\u306a\u3044","title":"18.2 \u6bce\u30d5\u30ec\u30fc\u30e0\u56fa\u5b9a\u5024\u3092\u52a0\u7b97\u3057\u3066\u306f\u3044\u3051\u306a\u3044","text":"<p><code>Scene::Time()</code> \u3084 <code>Scene::DeltaTime()</code> \u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u3001\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306b\u56fa\u5b9a\u306e\u5024\u3092\u8db3\u3057\u3066\u3044\u3051\u3070\u30e2\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308c\u305d\u3046\u3067\u3059\u304c\u3001\u305d\u308c\u306f\u5927\u304d\u306a\u9593\u9055\u3044\u3067\u3059\u3002</p> <p>\u306a\u305c\u306a\u3089\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5b9f\u884c\u3055\u308c\u308b\u30d1\u30bd\u30b3\u30f3\u306e\u30e2\u30cb\u30bf\u306e\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30ec\u30fc\u30c8\u306b\u3088\u3063\u3066\u3001\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u304c\u6bce\u79d2\u4f55\u56de\u5b9f\u884c\u3055\u308c\u308b\u304b\u304c\u7570\u306a\u308b\u305f\u3081\u3067\u3059\u3002\u4e00\u822c\u7684\u306a\u30e2\u30cb\u30bf\u306e\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30ec\u30fc\u30c8\u306f 60Hz \u3067\u3001\u6bce\u79d2 60 \u56de\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u304c\u3001\u8fd1\u5e74\u306f 120Hz \u3084 144Hz, 240Hz \u306a\u3069\u3001\u3088\u308a\u9ad8\u983b\u5ea6\u306e\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30ec\u30fc\u30c8\u3092\u6301\u3064\u30e2\u30cb\u30bf\u304c\u5897\u3048\u3066\u3044\u307e\u3059\u3002</p> <p>\u6b21\u306e\u3088\u3046\u306b\u300c\u6bce\u30d5\u30ec\u30fc\u30e0 3px \u305a\u3064\u79fb\u52d5\u300d\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u300160Hz \u306e\u30e2\u30cb\u30bf\u4e0a\u3067\u306f\u6bce\u79d2 180px \u306e\u901f\u3055\u3067\u79fb\u52d5\u3057\u307e\u3059\u304c\u3001120Hz \u306e\u30e2\u30cb\u30bf\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001\u305d\u306e\u500d\u306e\u6bce\u79d2 360px \u306e\u901f\u3055\u3067\u79fb\u52d5\u3057\u307e\u3059\u3002\u3082\u3057\u3053\u308c\u304c\u30b2\u30fc\u30e0\u306e\u6575\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u3060\u3063\u305f\u3089\u3001\u5b9f\u884c\u3059\u308b\u30d1\u30bd\u30b3\u30f3\u306b\u3088\u3063\u3066\u79fb\u52d5\u30b9\u30d4\u30fc\u30c9\u304c\u5909\u308f\u308a\u3001\u30b2\u30fc\u30e0\u30d0\u30e9\u30f3\u30b9\u304c\u58ca\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\ndouble x = 0.0;\nwhile (System::Update())\n{\n// \u6bce\u30d5\u30ec\u30fc\u30e0 3px \u79fb\u52d5\uff08\u6642\u9593\u30d9\u30fc\u30b9\u3067\u306a\u3044\u305f\u3081\u4e0d\u9069\u5207\uff01\uff09\nx += 3;\nCircle{ x, 300, 50 }.draw(ColorF{ 0.25 });\n}\n}\n</code></pre> <p>\u3053\u3046\u3057\u305f\u554f\u984c\u3092\u907f\u3051\u308b\u305f\u3081\u3001\u30e2\u30fc\u30b7\u30e7\u30f3\u306f\u30d5\u30ec\u30fc\u30e0\u3067\u306f\u306a\u304f\u6642\u9593\u3092\u30d9\u30fc\u30b9\u306b\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u6642\u9593\u30d9\u30fc\u30b9\u306b\u76f4\u3057\u305f\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst double speed = 180.0; // \u6bce\u79d2 180px \u79fb\u52d5\ndouble x = 0.0;\nwhile (System::Update())\n{\nx += (Scene::DeltaTime() * speed);\nCircle{ x, 300, 50 }.draw(ColorF{ 0.25 });\n}\n}\n</code></pre>"},{"location":"tutorial2/motion/#183-\u4e00\u5b9a\u6642\u9593\u3054\u3068\u306b\u30a4\u30d9\u30f3\u30c8\u3092\u8d77\u3053\u3059","title":"18.3 \u4e00\u5b9a\u6642\u9593\u3054\u3068\u306b\u30a4\u30d9\u30f3\u30c8\u3092\u8d77\u3053\u3059","text":"<p>\u4e00\u5b9a\u306e\u983b\u5ea6\u3067\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u51e6\u7406\u3092\u66f8\u304f\u3068\u304d\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u30021 \u79d2\u7d4c\u904e\u3059\u308b\u305f\u3073\u306b\u3001\u5186\u304c 100px \u305a\u3064\u53f3\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\n// \u5468\u671f\uff08\u79d2\uff09\nconst double eventInterval = 1.0;\n// \u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\ndouble x = 0.0;\nwhile (System::Update())\n{\naccumulatedTime += Scene::DeltaTime();\n// \u84c4\u7a4d\u6642\u9593\u304c\u5468\u671f\u3092\u8d85\u3048\u305f\u3089\nif (eventInterval &lt;= accumulatedTime)\n{\nx += 100.0;\naccumulatedTime -= eventInterval;\n}\nCircle{ x, 300, 50 }.draw(ColorF{ 0.25 });\n}\n}\n</code></pre> <p>\u30a4\u30d9\u30f3\u30c8\u5468\u671f\u304c\u975e\u5e38\u306b\u77ed\u3044\uff081 \u30d5\u30ec\u30fc\u30e0\u306e\u6642\u9593\u3084\u305d\u308c\u3088\u308a\u3082\u77ed\u3044\uff09\u5834\u5408\u30011 \u30d5\u30ec\u30fc\u30e0\u3067\u8907\u6570\u56de\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u5fc5\u8981\u304c\u751f\u3058\u307e\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u72b6\u6cc1\u306b\u5bfe\u51e6\u3059\u308b\u306b\u306f\u3001<code>if</code> \u306e\u4ee3\u308f\u308a\u306b <code>while (eventPeriod &lt;= accumulatedTime)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u5468\u671f\uff08\u79d2\uff09\nconst double eventInterval = (1.0 / 240.0); // \u6bce\u79d2 240 \u56de\n// \u84c4\u7a4d\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\nint32 count = 0;\nwhile (System::Update())\n{\naccumulatedTime += Scene::DeltaTime();\n// \u84c4\u7a4d\u6642\u9593\u304c\u5468\u671f\u3092\u8d85\u3048\u305f\u3089\nwhile (eventInterval &lt;= accumulatedTime)\n{\nPrint &lt;&lt; count++;\naccumulatedTime -= eventInterval;\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/motion/#184-\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1","title":"18.4 \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1","text":"<p><code>Stopwatch</code> \u306f\u3001\u7d4c\u904e\u6642\u9593\u306e\u8a08\u6e2c\u3084\u30ea\u30bb\u30c3\u30c8\u3092\u4fbf\u5229\u306b\u884c\u3048\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002<code>Stopwatch</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u5f15\u6570\u3067 <code>StartImmediately::Yes</code> \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u4f5c\u6210\u3068\u540c\u6642\u306b\u8a08\u6e2c\u3092\u958b\u59cb\u3057\u307e\u3059\u3002<code>Stopwatch::sF()</code> \u306f\u305d\u306e\u6642\u70b9\u3067\u306e\u7d4c\u904e\u6642\u9593\uff08\u79d2\uff09\u3092 <code>double</code> \u578b\u3067\u8fd4\u3057\u307e\u3059\u3002<code>Stopwatch::restart()</code> \u3059\u308b\u3068\u3001\u7d4c\u904e\u6642\u9593\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u3066\u518d\u3073 0 \u304b\u3089\u8a08\u6e2c\u3092\u958b\u59cb\uff08\u30ea\u30b9\u30bf\u30fc\u30c8\uff09\u3057\u307e\u3059\u3002</p> <p><code>Stopwatch</code> \u306e\u7d4c\u904e\u6642\u9593\u306f <code>Scene::GetMaxDeltaTime()</code> \u306e\u5f71\u97ff\u3092\u53d7\u3051\u305a\u3001\u5e38\u306b\u5b9f\u6642\u9593\u3067\u8a08\u6e2c\u3055\u308c\u307e\u3059\u3002\u540c\u4e00\u30d5\u30ec\u30fc\u30e0\u5185\u3067 <code>Stopwatch::sF()</code> \u3092\u8907\u6570\u547c\u3073\u51fa\u3059\u3068\u3001\u6642\u9593\u306e\u7d4c\u904e\u306b\u3088\u3063\u3066\u6bce\u56de\u7570\u306a\u308b\u5024\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\n// \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\uff08\u4f5c\u6210\u3068\u540c\u6642\u306b\u8a08\u6e2c\u3092\u958b\u59cb\u3059\u308b\uff09\nStopwatch stopwatch{ StartImmediately::Yes };\nwhile (System::Update())\n{\n// \u3082\u3057\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (MouseL.down())\n{\n// \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u3066\u518d\u3073 0 \u304b\u3089\u59cb\u3081\u308b\nstopwatch.restart();\n}\n// \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u7d4c\u904e\u6642\u9593\uff08\u79d2\uff09\u3092 double \u578b\u3067\u53d6\u5f97\u3059\u308b\nconst double t = stopwatch.sF();\nCircle{ Scene::Center(), (t * 50) }.draw(ColorF{ 0.25 });\n}\n}\n</code></pre>"},{"location":"tutorial2/motion/#185-\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u4e00\u6642\u505c\u6b62\u3068\u518d\u958b","title":"18.5 \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u4e00\u6642\u505c\u6b62\u3068\u518d\u958b","text":"<p>\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u304c\u8a08\u6e2c\u4e2d\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u306f <code>if (Stopwatch::isRunning())</code> \u3067\u8abf\u3079\u3089\u308c\u307e\u3059\u3002\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u8a08\u6e2c\u3092\u4e00\u6642\u505c\u6b62\u3059\u308b\u306b\u306f <code>Stopwatch::pause()</code>, \u4e00\u6642\u505c\u6b62\u3092\u89e3\u9664\u3057\u3066\u8a08\u6e2c\u3092\u518d\u958b\u3059\u308b\u306b\u306f <code>Stopwatch::resume()</code> \u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\n// \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\uff08\u4f5c\u6210\u3068\u540c\u6642\u306b\u8a08\u6e2c\u3092\u958b\u59cb\u3059\u308b\uff09\nStopwatch stopwatch{ StartImmediately::Yes };\nwhile (System::Update())\n{\n// \u3082\u3057\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (MouseL.down())\n{\n// \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u304c\u8a08\u6e2c\u4e2d\u306a\u3089\nif (stopwatch.isRunning())\n{\n// \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u3092\u4e00\u6642\u505c\u6b62\u3059\u308b\nstopwatch.pause();\n}\nelse // \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u304c\u4e00\u6642\u505c\u6b62\u4e2d\u306a\u3089\n{\n// \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u3092\u518d\u958b\u3059\u308b\nstopwatch.resume();\n}\n}\n// \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u7d4c\u904e\u6642\u9593\uff08\u79d2\uff09\u3092 double \u578b\u3067\u53d6\u5f97\u3059\u308b\nconst double t = stopwatch.sF();\nCircle{ Scene::Center(), (t * 50) }.draw(ColorF{ 0.25 });\n}\n}\n</code></pre>"},{"location":"tutorial2/motion/#186-\u5468\u671f\u7684\u306a\u30e2\u30fc\u30b7\u30e7\u30f3","title":"18.6 \u5468\u671f\u7684\u306a\u30e2\u30fc\u30b7\u30e7\u30f3","text":"<p>\u5468\u671f\u7684\u306b\u79fb\u52d5\u30fb\u70b9\u6ec5\u30fb\u62e1\u5927\u7e2e\u5c0f\u3059\u308b\u3088\u3046\u306a\u30e2\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u3068\u304d\u306b\u306f\u3001<code>Periodic::</code> \u540d\u524d\u7a7a\u9593\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u5468\u671f\u95a2\u6570\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002\u3053\u308c\u3089\u306e\u95a2\u6570\u306f\u3001\u6307\u5b9a\u3057\u305f\u5468\u671f\u3067 0\uff5e1, \u3042\u308b\u3044\u306f -1\uff5e1 \u306e\u7bc4\u56f2\u306e\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\u5468\u671f\u306f <code>2s</code> (2 \u79d2) \u3084 <code>0.5s</code> (0.5 \u79d2) \u306e\u3088\u3046\u306b\u6642\u9593\u30ea\u30c6\u30e9\u30eb <code>s</code> \u3092\u4f7f\u3063\u3066\u6307\u5b9a\u3057\u307e\u3059\u3002\u7d4c\u904e\u6642\u9593\u306f\u7b2c 2 \u5f15\u6570\u3067\u6307\u5b9a\u3067\u304d\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f <code>Scene::Time()</code> \u304c\u4f7f\u308f\u308c\u307e\u3059\u3002</p> 0\uff5e1 \u306e\u5468\u671f\u95a2\u6570-1\uff5e1 \u306e\u5468\u671f\u95a2\u6570 \u5468\u671f\u95a2\u6570 \u52d5\u304d <code>Periodic::Square0_1</code> <code>Periodic::Triangle0_1</code> <code>Periodic::Sine0_1</code> <code>Periodic::Sawtooth0_1</code> <code>Periodic::Jump0_1</code> \u5468\u671f\u95a2\u6570 \u52d5\u304d <code>Periodic::Square1_1</code> <code>Periodic::Triangle1_1</code> <code>Periodic::Sine1_1</code> <code>Periodic::Sawtooth1_1</code> <code>Periodic::Jump1_1</code>"},{"location":"tutorial2/motion/#periodicsquare0_1","title":"Periodic::Square0_1()","text":"<p>\u6307\u5b9a\u3057\u305f\u5468\u671f\u3067 0.0 \u304b 1.0 \u3092\u4ea4\u4e92\u306b\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002\u5468\u671f\u306e\u524d\u534a\u3067\u306f 1.0 \u3092\u3001\u6b8b\u308a\u306e\u534a\u5206\u3067\u306f 0.0 \u3092\u8fd4\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial2/motion/#periodictriangle0_1","title":"Periodic::Triangle0_1()","text":"<p>0.0 \u304b\u3089\u4e00\u5b9a\u306e\u901f\u5ea6\u3067\u5024\u304c\u5927\u304d\u304f\u306a\u3063\u3066 1.0 \u306b\u3001\u305d\u3057\u3066\u4e00\u5b9a\u306e\u901f\u5ea6\u3067\u5c0f\u3055\u304f\u306a\u3063\u3066 0.0 \u306b\u3001\u3068\u3044\u3046\u5909\u5316\u3092\u6307\u5b9a\u3057\u305f\u5468\u671f\u3067\u7e70\u308a\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002</p>"},{"location":"tutorial2/motion/#periodicsine0_1","title":"Periodic::Sine0_1()","text":"<p>\u6307\u5b9a\u3057\u305f\u5468\u671f\u3067\u30010.0\uff5e1.0 \u306e\u7bc4\u56f2\u3067\u6b63\u5f26\u6ce2\uff08\u30b5\u30a4\u30f3\u30ab\u30fc\u30d6\uff09\u3092\u63cf\u304f\u6570\u5024\u306e\u5909\u5316\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002</p>"},{"location":"tutorial2/motion/#periodicsawtooth0_1","title":"Periodic::Sawtooth0_1()","text":"<p>\u6307\u5b9a\u3057\u305f\u5468\u671f\u3067\u30010.0 \u2192 1.0 \u3078\u306e\u5909\u5316\u3092\u7e70\u308a\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002</p>"},{"location":"tutorial2/motion/#periodicjump0_1","title":"Periodic::Jump0_1()","text":"<p>\u6307\u5b9a\u3057\u305f\u5468\u671f\u3067\u3001\u5730\u9762\u304b\u3089\u30b8\u30e3\u30f3\u30d7\u3057\u305f\u3068\u304d\u306e\u901f\u5ea6\u306e\u3088\u3046\u306a\u6570\u5024\u5909\u5316\u3092\u7e70\u308a\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002</p>"},{"location":"tutorial2/motion/#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9","title":"\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nwhile (System::Update())\n{\nconst double p0 = Periodic::Square0_1(2s);\nconst double p1 = Periodic::Triangle0_1(2s);\nconst double p2 = Periodic::Sine0_1(2s);\nconst double p3 = Periodic::Sawtooth0_1(2s);\nconst double p4 = Periodic::Jump0_1(2s);\nLine{ 100, 0, 100, 600 }.draw(2, ColorF{ 0.8 });\nLine{ 700, 0, 700, 600 }.draw(2, ColorF{ 0.8 });\nCircle{ (100 + p0 * 600), 100, 20 }.draw(ColorF{ 0.25 });\nCircle{ (100 + p1 * 600), 200, 20 }.draw(ColorF{ 0.25 });\nCircle{ (100 + p2 * 600), 300, 20 }.draw(ColorF{ 0.25 });\nCircle{ (100 + p3 * 600), 400, 20 }.draw(ColorF{ 0.25 });\nCircle{ (100 + p4 * 600), 500, 20 }.draw(ColorF{ 0.25 });\n}\n}\n</code></pre>"},{"location":"tutorial2/motion/#periodicsquare1_1","title":"Periodic::Square1_1()","text":"<p>\u6307\u5b9a\u3057\u305f\u5468\u671f\u3067 -1.0 \u304b 1.0 \u3092\u4ea4\u4e92\u306b\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002\u5468\u671f\u306e\u524d\u534a\u3067\u306f 1.0 \u3092\u3001\u6b8b\u308a\u306e\u534a\u5206\u3067\u306f -1.0 \u3092\u8fd4\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial2/motion/#periodictriangle1_1","title":"Periodic::Triangle1_1()","text":"<p>-1.0 \u304b\u3089\u4e00\u5b9a\u306e\u901f\u5ea6\u3067\u5024\u304c\u5927\u304d\u304f\u306a\u3063\u3066 1.0 \u306b\u3001\u305d\u3057\u3066\u4e00\u5b9a\u306e\u901f\u5ea6\u3067\u5c0f\u3055\u304f\u306a\u3063\u3066 -1.0 \u306b\u3001\u3068\u3044\u3046\u5909\u5316\u3092\u6307\u5b9a\u3057\u305f\u5468\u671f\u3067\u7e70\u308a\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002</p>"},{"location":"tutorial2/motion/#periodicsine1_1","title":"Periodic::Sine1_1()","text":"<p>\u6307\u5b9a\u3057\u305f\u5468\u671f\u3067\u3001-1.0\uff5e1.0 \u306e\u7bc4\u56f2\u3067\u6b63\u5f26\u6ce2\uff08\u30b5\u30a4\u30f3\u30ab\u30fc\u30d6\uff09\u3092\u63cf\u304f\u6570\u5024\u306e\u5909\u5316\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002</p>"},{"location":"tutorial2/motion/#periodicsawtooth1_1","title":"Periodic::Sawtooth1_1()","text":"<p>\u6307\u5b9a\u3057\u305f\u5468\u671f\u3067\u3001-1.0 \u2192 1.0 \u3078\u306e\u5909\u5316\u3092\u7e70\u308a\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002</p>"},{"location":"tutorial2/motion/#periodicjump1_1","title":"Periodic::Jump1_1()","text":"<p>\u6307\u5b9a\u3057\u305f\u5468\u671f\u3067\u3001\u5730\u9762\u304b\u3089\u30b8\u30e3\u30f3\u30d7\u3057\u305f\u3068\u304d\u306e\u901f\u5ea6\u306e\u3088\u3046\u306a\u6570\u5024\u5909\u5316\u3092\u7e70\u308a\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002</p>"},{"location":"tutorial2/motion/#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9_1","title":"\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nwhile (System::Update())\n{\nconst double p0 = Periodic::Square1_1(2s);\nconst double p1 = Periodic::Triangle1_1(2s);\nconst double p2 = Periodic::Sine1_1(2s);\nconst double p3 = Periodic::Sawtooth1_1(2s);\nconst double p4 = Periodic::Jump1_1(2s);\nLine{ 100, 0, 100, 600 }.draw(2, ColorF{ 0.8 });\nLine{ 700, 0, 700, 600 }.draw(2, ColorF{ 0.8 });\nCircle{ (400 + p0 * 300), 100, 20 }.draw(ColorF{ 0.25 });\nCircle{ (400 + p1 * 300), 200, 20 }.draw(ColorF{ 0.25 });\nCircle{ (400 + p2 * 300), 300, 20 }.draw(ColorF{ 0.25 });\nCircle{ (400 + p3 * 300), 400, 20 }.draw(ColorF{ 0.25 });\nCircle{ (400 + p4 * 300), 500, 20 }.draw(ColorF{ 0.25 });\n}\n}\n</code></pre>"},{"location":"tutorial2/motion/#187-\u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3","title":"18.7 \u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3","text":"<p>\u5024\u3092\u5c11\u3057\u305a\u3064\u5897\u52a0\u3055\u305b\u3066\u6700\u5927\u5024\u306b\u5230\u9054\u3055\u305b\u308b\u3002\u305d\u3053\u304b\u3089\u5f90\u3005\u306b\u6e1b\u5c11\u3055\u305b\u3066\u6700\u5c0f\u5024\u306b\u623b\u3059\u3001\u3068\u3044\u3046\u6319\u52d5\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3059\u308b\u3068\u304d\u306b\u306f <code>Transition</code> \u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002</p> <p><code>Transition</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u306f\u3001\u6700\u5c0f\u5024\u304b\u3089\u6700\u5927\u5024\u306b\u5897\u52a0\u3059\u308b\u307e\u3067\u306e\u6240\u8981\u6642\u9593\u3068\u3001\u6700\u5927\u5024\u304b\u3089\u6700\u5c0f\u5024\u306b\u6e1b\u5c11\u3059\u308b\u307e\u3067\u306e\u6240\u8981\u6642\u9593\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u3042\u3068\u306f\u6bce\u30d5\u30ec\u30fc\u30e0\u3001<code>Transition::update()</code> \u306b\u3001\u5897\u52a0\u306e\u5834\u5408\u306f <code>true</code> \u3092\u3001\u6e1b\u5c11\u306e\u5834\u5408\u306f <code>false</code> \u3092\u6e21\u305b\u3070\u3001\u8a2d\u5b9a\u3055\u308c\u305f\u901f\u5ea6\u3067\u5024\u304c\u5897\u52a0\u3001\u3042\u308b\u3044\u306f\u6e1b\u5c11\u3057\u307e\u3059\u3002<code>Transition::value()</code> \u3067\u73fe\u5728\u306e\u5024\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <p>\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u30de\u30a6\u30b9\u306e\u5de6\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u3066\u3044\u308b\u3068\u5186\u304c\u5927\u304d\u304f\u306a\u308a\u3001\u96e2\u3055\u308c\u3066\u3044\u308b\u3068\u5c0f\u3055\u304f\u306a\u308a\u307e\u3059\u3002\u6700\u5927\u306f 200 \u30d4\u30af\u30bb\u30eb\u3001\u6700\u5c0f\u306f 0 \u30d4\u30af\u30bb\u30eb\u3068\u3057\u3066\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\n// 2.0 \u79d2\u304b\u3051\u3066 0.0 \u304b\u3089 1.0 \u306b\u306a\u308b\u901f\u5ea6\u3067\u5897\u52a0\u3057\n// 0.5 \u79d2\u304b\u3051\u3066 1.0 \u304b\u3089 0.0 \u306b\u306a\u308b\u901f\u5ea6\u3067\u6e1b\u5c11\u3059\u308b\u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3\nTransition transition{ 2.0s, 0.5s };\nwhile (System::Update())\n{\nif (MouseL.pressed())\n{\n// \u30de\u30a6\u30b9\u306e\u5de6\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\u5897\u52a0\ntransition.update(true);\n}\nelse\n{\n// \u62bc\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3089\u6e1b\u5c11\ntransition.update(false);\n}\nconst double t = transition.value();\nCircle{ Scene::Center(), (t * 200) }.draw(ColorF{ 0.25 });\n}\n}\n</code></pre> <p><code>MouseL.pressed()</code> \u306f <code>bool</code> \u578b\u306e\u5024\u3092\u8fd4\u3059\u305f\u3081\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u77ed\u304f\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\n// 2.0 \u79d2\u304b\u3051\u3066 0.0 \u304b\u3089 1.0 \u306b\u306a\u308b\u901f\u5ea6\u3067\u5897\u52a0\u3057\n// 0.5 \u79d2\u304b\u3051\u3066 1.0 \u304b\u3089 0.0 \u306b\u306a\u308b\u901f\u5ea6\u3067\u6e1b\u5c11\u3059\u308b\u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3\nTransition transition{ 2.0s, 0.5s };\nwhile (System::Update())\n{\n// \u30de\u30a6\u30b9\u306e\u5de6\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u3089\u5897\u52a0\u3001\u62bc\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3089\u6e1b\u5c11\ntransition.update(MouseL.pressed());\nconst double t = transition.value();\nCircle{ Scene::Center(), (t * 200) }.draw(ColorF{ 0.25 });\n}\n}\n</code></pre>"},{"location":"tutorial2/motion/#188-\u7dda\u5f62\u88dc\u9593","title":"18.8 \u7dda\u5f62\u88dc\u9593","text":"<p>\u3042\u308b\u72b6\u614b A \u3068 B \u304c\u3042\u308a\u3001\u305d\u306e\u9593\u3092 <code>t</code> \u3068\u3044\u3046\u5024\u3067\u88dc\u9593\u3057\u305f\u3044\u3068\u304d\u306b\u306f <code>A.lerp(B, t)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002<code>t</code> \u306f 0.0 \uff5e 1.0 \u306e\u5024\u3067\u3059\u3002</p> <p>\u6b21\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u304c\u30e1\u30f3\u30d0\u95a2\u6570 <code>.lerp()</code> \u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002</p> <ul> <li>\u8272<ul> <li><code>ColorF</code>, <code>HSV</code></li> </ul> </li> <li>\u30d9\u30af\u30c8\u30eb<ul> <li><code>Point</code>, <code>Vec2</code>, <code>Vec3</code>, <code>Vec4</code></li> </ul> </li> <li>\u56f3\u5f62<ul> <li><code>Line</code>, <code>Circle</code>, <code>Rect</code>, <code>RectF</code>, <code>Triangle</code>, <code>Quad</code>, <code>Ellipse</code>, <code>RoundRect</code></li> </ul> </li> </ul> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nwhile (System::Update())\n{\nconst double t = Periodic::Triangle0_1(3s);\nRectF{ 200, 50, 400, 80 }.draw(HSV{ 180.0, 0.5, 1.0 }.lerp(HSV{ 240.0, 1.0, 1.0 }, t));\nCircle{ 100, 200, 20 }.lerp(Circle{ 700, 200, 40 }, t).draw(ColorF{ 0.25 });\nRectF{ Arg::center(100, 300), 80 }.lerp(RectF{ Arg::center(700, 300), 40 }, t).draw(ColorF{ 0.25 });\nTriangle{ 100, 400, 100, 0_deg }.lerp(Triangle{ 700, 400, 100, 120_deg }, t).draw(ColorF{ 0.25 });\nLine{ 50, 450, 150, 550 }.lerp(Line{ 750, 450, 650, 550 }, t).draw(2, ColorF{ 0.25 });\n}\n}\n</code></pre>"},{"location":"tutorial2/motion/#189-\u30a4\u30fc\u30b8\u30f3\u30b0","title":"18.9 \u30a4\u30fc\u30b8\u30f3\u30b0","text":"<p>0.0 \u304b\u3089 1.0 \u306b\u4e00\u5b9a\u306e\u901f\u5ea6\u3067\u5024\u3092\u5897\u52a0\u3055\u305b\u308b\u3060\u3051\u3067\u306f\u5358\u8abf\u306a\u52d5\u304d\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u306f\u3058\u3081\u306f\u5c11\u3057\u305a\u3064\u52a0\u901f\u3057\u3001\u30b4\u30fc\u30eb\u306b\u8fd1\u3065\u304f\u3068\u3086\u3063\u304f\u308a\u306b\u306a\u308b\u3068\u3044\u3063\u305f\u3088\u3046\u306b\u3001\u901f\u5ea6\u306b\u5909\u5316\u3092\u4e0e\u3048\u308b\u3068\u3001\u6d17\u7df4\u3055\u308c\u305f\u8996\u899a\u52b9\u679c\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\u30020.0 \u2192 1.0 \u306e\u5358\u8abf\u5897\u52a0\u3092\u3001\u3053\u306e\u3088\u3046\u306a\u7279\u5fb4\u7684\u306a\u30ab\u30fc\u30d6\u306b\u5909\u63db\u3067\u304d\u308b \u30a4\u30fc\u30b8\u30f3\u30b0\u95a2\u6570 \u3092\u4f7f\u3046\u3068\u3001\u30e2\u30fc\u30b7\u30e7\u30f3\u306e\u5370\u8c61\u3092\u6539\u5584\u3067\u304d\u307e\u3059\u3002</p> <p>\u30a4\u30fc\u30b8\u30f3\u30b0\u95a2\u6570\u306f\u5168\u90e8\u3067\u7d04 30 \u7a2e\u985e\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4e00\u89a7\u306f Easing Functions Cheat Sheet  \u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f <code>EaseInOutExpo()</code> \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u307b\u304b\u306b\u3082 <code>EaseOutBounce()</code> \u3084 <code>EaseInOutBack()</code> \u306a\u3069\u69d8\u3005\u306a\u30a4\u30fc\u30b8\u30f3\u30b0\u95a2\u6570\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> <p>\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u767b\u5834\u3059\u308b<code>Min()</code> \u306f\u3001\u6e21\u3055\u308c\u305f\u5f15\u6570\u306e\u3046\u3061\u6700\u5c0f\u5024\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\n// \u30b9\u30bf\u30fc\u30c8\u4f4d\u7f6e\nVec2 from{ 100, 100 };\n// \u30b4\u30fc\u30eb\u4f4d\u7f6e\nVec2 to{ 700, 500 };\nStopwatch stopwatch{ StartImmediately::Yes };\nwhile (System::Update())\n{\n// \u79fb\u52d5\u306e\u5272\u5408 0.0\uff5e1.0\nconst double t = Min(stopwatch.sF(), 1.0);\n// \u30a4\u30fc\u30b8\u30f3\u30b0\u95a2\u6570\u3092\u9069\u7528\nconst double e = EaseInOutExpo(t);\n// \u30b9\u30bf\u30fc\u30c8\u4f4d\u7f6e\u304b\u3089\u30b4\u30fc\u30eb\u4f4d\u7f6e\u3078 e \u306e\u5272\u5408\u3060\u3051\u9032\u3093\u3060\u4f4d\u7f6e\nconst Vec2 pos = from.lerp(to, e);\nif (MouseL.down())\n{\n// \u30b9\u30bf\u30fc\u30c8\u4f4d\u7f6e\u3092\u73fe\u5728\u306e\u4f4d\u7f6e\u306b\nfrom = pos;\n// \u30b4\u30fc\u30eb\u4f4d\u7f6e\u3092\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u4f4d\u7f6e\u306b\nto = Cursor::Pos();\nstopwatch.restart();\n}\npos.asCircle(40).draw(ColorF{ 0.25 });\nto.asCircle(50).drawFrame(5, ColorF{ 0.25 });\n}\n}\n</code></pre>"},{"location":"tutorial2/motion/#1810-\u76ee\u6a19\u306b\u5411\u304b\u3063\u3066\u306a\u3081\u3089\u304b\u306b\u79fb\u52d5\u5909\u5316\u3059\u308b","title":"18.10 \u76ee\u6a19\u306b\u5411\u304b\u3063\u3066\u306a\u3081\u3089\u304b\u306b\u79fb\u52d5\u30fb\u5909\u5316\u3059\u308b","text":"<p>\u7dda\u5f62\u88dc\u9593\u3068\u30a4\u30fc\u30b8\u30f3\u30b0\u306f\u3001\u958b\u59cb\u4f4d\u7f6e\u3068\u7d42\u4e86\u4f4d\u7f6e\u304c\u56fa\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u4f7f\u3044\u307e\u3059\u3002\u7dda\u5f62\u88dc\u9593\u3084\u30a4\u30fc\u30b8\u30f3\u30b0\u306e\u6700\u4e2d\u306b\u7d42\u4e86\u4f4d\u7f6e\u304c\u5909\u66f4\u3055\u308c\u305f\u5834\u5408\u3001\u79fb\u52d5\u306e\u901f\u3055\u3084\u65b9\u5411\u304c\u6025\u306b\u5909\u5316\u3057\u3066\u4e0d\u81ea\u7136\u306a\u5370\u8c61\u3092\u4e0e\u3048\u3066\u3057\u307e\u3044\u307e\u3059\u3002</p> <p>\u7d42\u4e86\u4f4d\u7f6e\u304c\u5909\u5316\u3057\u3066\u3082\u3001\u306a\u3081\u3089\u304b\u306b\u79fb\u52d5\u30fb\u5909\u5316\u3057\u7d9a\u3051\u308b\u306b\u306f\u3001<code>Math::SmoothDamp</code> \u95a2\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002<code>Math::SmoothDamp</code> \u95a2\u6570\u306f\u3001\u73fe\u5728\u4f4d\u7f6e\u3068\u76ee\u6a19\u4f4d\u7f6e\u3001\u305d\u3057\u3066\u73fe\u5728\u306e\u901f\u5ea6\u304b\u3089\u3001\u6642\u9593\u30d9\u30fc\u30b9\u3067\u6b21\u306e\u4f4d\u7f6e\u3092\u8a08\u7b97\u3059\u308b\u3001\u975e\u5e38\u306b\u4fbf\u5229\u3067\u5f37\u529b\u306a\u88dc\u9593\u95a2\u6570\u3067\u3059\u3002</p> <p>\u6b21\u306e\u3088\u3046\u306a\u578b\u304c <code>Math::SmoothDamp</code> \u95a2\u6570\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002</p> <ul> <li>\u6570\u5024<ul> <li><code>float</code>, <code>double</code></li> </ul> </li> <li>\u30d9\u30af\u30c8\u30eb<ul> <li><code>Vec2</code>, <code>Vec3</code>, <code>Vec4</code></li> </ul> </li> <li>\u8272<ul> <li><code>ColorF</code></li> </ul> </li> </ul>"},{"location":"tutorial2/motion/#\u95a2\u6570\u306e\u6982\u8981","title":"\u95a2\u6570\u306e\u6982\u8981","text":"<p><code>Vec2</code> \u7528\u306e <code>Math::SmoothDamp</code> \u95a2\u6570\u306e\u6982\u8981\u3068\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002</p> <pre><code>Vec2 Math::SmoothDamp(const Vec2&amp; from, const Vec2&amp; to, Vec2&amp; velocity, double smoothTime, const Optional&lt;double&gt;&amp; maxSpeed = unspecified, double deltaTime = Scene::DeltaTime());`\n</code></pre> <ul> <li><code>from</code>: \u73fe\u5728\u4f4d\u7f6e</li> <li><code>to</code>: \u76ee\u6a19\u4f4d\u7f6e</li> <li><code>velocity</code>: \u73fe\u5728\u306e\u901f\u5ea6\uff08\u901f\u5ea6\u3092\u4fdd\u5b58\u3057\u3066\u3044\u308b\u5909\u6570\u3092\u53c2\u7167\u3067\u6e21\u3059\uff09</li> <li><code>smoothTime</code>: \u5e73\u6ed1\u5316\u6642\u9593\uff08\u6700\u5927\u901f\u5ea6\u3067\u76ee\u6a19\u306b\u5411\u304b\u3046\u3068\u304d\u306b\u671f\u5f85\u3055\u308c\u308b\u6240\u8981\u6642\u9593\uff09\u3002\u52d5\u304f\u76ee\u6a19\u3092\u8ffd\u3044\u304b\u3051\u308b\u3068\u304d\u306e\u9045\u5ef6\u6642\u9593\u3067\u3001\u5c0f\u3055\u3044\u3068\u76ee\u6a19\u306b\u65e9\u304f\u5230\u9054\u3059\u308b</li> <li><code>maxSpeed</code>: \u6700\u5927\u901f\u5ea6\u3002\u7121\u5236\u9650\u306e\u5834\u5408\u306f <code>unspecified</code> \u3092\u6307\u5b9a\u3059\u308b</li> <li><code>deltaTime</code>: \u524d\u56de\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u306f <code>Scene::DeltaTime()</code>\uff09</li> <li>\u623b\u308a\u5024: \u6b21\u306e\u4f4d\u7f6e</li> </ul> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\n// \u73fe\u5728\u4f4d\u7f6e\nVec2 pos{ 400, 300 };\n// \u901f\u5ea6\nVec2 velocity{ 0, 0 };\nwhile (System::Update())\n{\nconst Vec2 target = Cursor::Pos();\npos = Math::SmoothDamp(pos, target, velocity, 0.5);\npos.asCircle(40).draw(ColorF{ 0.25 });\ntarget.asCircle(50).drawFrame(4, ColorF{ 0.25 });\n}\n}\n</code></pre>"},{"location":"tutorial2/mouse/","title":"34. \u30de\u30a6\u30b9\u5165\u529b","text":"<p>\u30de\u30a6\u30b9\u306b\u3088\u308b\u5165\u529b\u3092\u51e6\u7406\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial2/mouse/#341-\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u5ea7\u6a19\u3092\u53d6\u5f97\u3059\u308b","title":"34.1 \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u5ea7\u6a19\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u5ea7\u6a19\u306f <code>Cursor::Pos()</code> \u3092\u4f7f\u3046\u3068 <code>Point</code> \u578b\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u30b7\u30fc\u30f3\u304c\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3068\u7570\u306a\u308b (\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 32. \u53c2\u7167) \u5834\u5408\u3001<code>Cursor::PosF()</code> \u3092\u4f7f\u3046\u3068 <code>Vec2</code> \u578b\u3067\u5c0f\u6570\u70b9\u6570\u4ee5\u4e0b\u306e\u5ea7\u6a19\u3082\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <p><code>Cursor::Pos()</code> \u3067\u53d6\u5f97\u3067\u304d\u308b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u5ea7\u6a19\u306f\u3001\u6700\u5f8c\u306e <code>System::Update()</code> \u306e\u547c\u3073\u51fa\u3057\u6642\u70b9\u3067\u306e\u5ea7\u6a19\u3067\u3042\u308b\u305f\u3081\u3001\u5b9f\u969b\u753b\u9762\u306b\u898b\u3048\u3066\u3044\u308b\u6700\u65b0\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u4f4d\u7f6e\u3088\u308a\u3082\u53e4\u3044\u5ea7\u6a19\u3092\u793a\u3059\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; Cursor::Pos();\nPrint &lt;&lt; Cursor::PosF();\nCircle{ Cursor::PosF(), 50 }.draw(Palette::Skyblue);\n}\n}\n</code></pre>"},{"location":"tutorial2/mouse/#342-\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u79fb\u52d5\u91cf\u3092\u53d6\u5f97\u3059\u308b","title":"34.2 \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u79fb\u52d5\u91cf\u3092\u53d6\u5f97\u3059\u308b","text":"<p>1 \u30d5\u30ec\u30fc\u30e0\u524d\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u5ea7\u6a19\u306f <code>Cursor::PreviousPos()</code> / <code>Cursor::PreviousPosF()</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u30021 \u30d5\u30ec\u30fc\u30e0\u524d\u304b\u3089\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u79fb\u52d5\u91cf\u306f <code>Cursor::Delta()</code> / <code>Cursor::DeltaF()</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <p><code>Cursor::Delta() == (Cursor::Pos() - Cursor::PreviousPos())</code> \u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u5186\u3092\u3064\u304b\u3093\u3067\u3044\u308b\u304b\nbool grab = false;\nCircle circle{ Scene::Center(), 50 };\nwhile (System::Update())\n{\nif (grab)\n{\n// \u79fb\u52d5\u91cf\u5206\u3060\u3051\u5186\u3092\u79fb\u52d5\u3055\u305b\u308b\ncircle.moveBy(Cursor::Delta());\n}\nif (circle.leftClicked()) // \u5186\u3092\u5de6\u30af\u30ea\u30c3\u30af\u3057\u305f\u3089\n{\ngrab = true;\n}\nelse if (MouseL.up()) // \u30de\u30a6\u30b9\u306e\u5de6\u30dc\u30bf\u30f3\u304c\u96e2\u3055\u308c\u305f\u3089\n{\ngrab = false;\n}\nif (grab || circle.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\ncircle.draw(Palette::Skyblue);\n}\n}\n</code></pre>"},{"location":"tutorial2/mouse/#343-\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19\u3092\u53d6\u5f97\u3059\u308b","title":"34.3 \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19\u3067\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u4e0a\u306e\u3069\u306e\u4f4d\u7f6e\u306b\u3042\u308b\u304b\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f <code>Cursor::ScreenPos()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\n// \u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19\u306b\u304a\u3051\u308b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u5ea7\u6a19\nPrint &lt;&lt; Cursor::ScreenPos();\n}\n}\n</code></pre>"},{"location":"tutorial2/mouse/#344-\u30de\u30a6\u30b9\u306e\u30dc\u30bf\u30f3\u306e\u5165\u529b\u72b6\u614b\u3092\u8abf\u3079\u308b","title":"34.4 \u30de\u30a6\u30b9\u306e\u30dc\u30bf\u30f3\u306e\u5165\u529b\u72b6\u614b\u3092\u8abf\u3079\u308b","text":"<p>\u30de\u30a6\u30b9\u306e\u30dc\u30bf\u30f3\u306b\u306f\u3001\u4ee5\u4e0b\u306e <code>Input</code> \u578b\u306e\u5024\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u307e\u3059\u3002</p> \u5b9a\u6570 \u5bfe\u5fdc\u3059\u308b\u30dc\u30bf\u30f3 <code>MouseL</code> \u5de6\u30dc\u30bf\u30f3 <code>MouseR</code> \u53f3\u30dc\u30bf\u30f3 <code>MouseM</code> \u4e2d\u592e\u30dc\u30bf\u30f3 <code>MouseX1</code> \u62e1\u5f35\u30dc\u30bf\u30f3 1 <code>MouseX2</code> \u62e1\u5f35\u30dc\u30bf\u30f3 2 <code>MouseX3</code> \u62e1\u5f35\u30dc\u30bf\u30f3 3 <code>MouseX4</code> \u62e1\u5f35\u30dc\u30bf\u30f3 4 <code>MouseX5</code> \u62e1\u5f35\u30dc\u30bf\u30f3 5 <p>\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 33. \u306e\u30ad\u30fc\u30dc\u30fc\u30c9\u3068\u540c\u69d8\u306b\u3001\u62bc\u3057\u305f\u77ac\u9593\u3067\u3042\u308b\u304b\u3092 <code>.down()</code>, \u62bc\u3057\u7d9a\u3051\u3066\u3044\u308b\u304b\u3092 <code>.pressed()</code>, \u96e2\u3057\u305f\u77ac\u9593\u3067\u3042\u308b\u304b\u3092 <code>.up()</code> \u3092\u4f7f\u3063\u3066 <code>bool</code> \u5024\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> \u95a2\u6570 \u62bc\u3057\u3066\u3044\u306a\u3044\u3068\u304d \u62bc\u3057\u305f\u77ac\u9593 \u62bc\u3057\u7d9a\u3051\u3066\u3044\u308b \u96e2\u3057\u305f\u77ac\u9593 \u96e2\u3057\u7d9a\u3051\u3066\u3044\u308b <code>.down()</code> false \u2714 true false false false <code>.pressed()</code> false \u2714 true \u2714 true false false <code>.up()</code> false false false \u2714 true false <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; MouseL.pressed();\nPrint &lt;&lt; MouseM.pressed();\nPrint &lt;&lt; MouseR.pressed();\n}\n}\n</code></pre>"},{"location":"tutorial2/mouse/#345-\u30de\u30a6\u30b9\u306e\u30dc\u30bf\u30f3\u5165\u529b\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3059\u308b","title":"34.5 \u30de\u30a6\u30b9\u306e\u30dc\u30bf\u30f3\u5165\u529b\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3059\u308b","text":"<p>\u73fe\u5728\u306e\u30d5\u30ec\u30fc\u30e0\u5185\u3067\u3001\u4ee5\u964d\u306e\u30de\u30a6\u30b9\u306e\u30dc\u30bf\u30f3\u306e\u5165\u529b\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3059\u308b\u306b\u306f\u3001<code>Input</code> \u306e\u30e1\u30f3\u30d0\u95a2\u6570 <code>.clearInput()</code> \u3092\u547c\u3073\u307e\u3059\u3002\u30dc\u30bf\u30f3\u306a\u3069\u306e UI \u304c\u91cd\u306a\u3063\u3066\u3044\u308b\u3068\u304d\u306b\u3001\u80cc\u9762\u306b\u5165\u529b\u304c\u4f1d\u308f\u3089\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3068\u304d\u306a\u3069\u306b\u4f7f\u3044\u307e\u3059\u3002</p> <p><code>MouseL</code> \u3068 <code>MouseR</code> \u3092\u540c\u6642\u306b\u30ad\u30e3\u30f3\u30bb\u30eb\u3059\u308b\u5834\u5408\u306f <code>Mouse::ClearLRInput()</code> \u304c\u4f7f\u3048\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nclass MyButton\n{\npublic:\nMyButton() = default;\nexplicit MyButton(const Rect&amp; rect)\n: m_rect{ rect } {}\nbool update() const\n{\nif (m_rect.leftClicked())\n{\nMouseL.clearInput();\nreturn true;\n}\n}\nvoid draw() const\n{\nif (m_rect.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\nm_rect.draw().drawFrame(1, 0, Palette::Black);\n}\nprivate:\nRect m_rect{ 0, 0, 0, 0 };\n};\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst MyButton button0{ Rect{ 100, 100, 200, 100 } };\nconst MyButton button1{ Rect{ 150, 150, 200, 100 } };\nwhile (System::Update())\n{\nif (button0.update())\n{\nPrint &lt;&lt; U\"button0\";\n}\nif (button1.update())\n{\nPrint &lt;&lt; U\"button1\";\n}\nbutton1.draw();\nbutton0.draw();\n}\n}\n</code></pre>"},{"location":"tutorial2/mouse/#346-\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u6642\u9593\u3092\u8abf\u3079\u308b","title":"34.6 \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u3066\u3044\u305f\u6642\u9593\u3092\u8abf\u3079\u308b","text":"<p><code>Input</code> \u306e <code>.pressedDuration()</code> \u306f\u3001\u305d\u306e\u5165\u529b\u304c\u62bc\u3055\u308c\u7d9a\u3051\u3066\u3044\u308b\u6642\u9593\u3092 <code>Duration</code> \u578b\u306e\u5024\u3067\u8fd4\u3057\u307e\u3059\u3002</p> <p>\u62bc\u3055\u308c\u7d9a\u3051\u3066\u3044\u308b\u6642\u9593\u306f <code>.up()</code> \u304c <code>true</code> \u306b\u306a\u308b\u30d5\u30ec\u30fc\u30e0\u307e\u3067\u6709\u52b9\u3067\u3059\u3002<code>.up()</code> \u3055\u308c\u305f\u3068\u304d\u306b <code>.pressedDuration()</code> \u3092\u8abf\u3079\u308b\u3068\u3001\u305d\u306e\u30dc\u30bf\u30f3\u304c\u96e2\u3055\u308c\u308b\u307e\u3067\u4f55\u79d2\u9593\u62bc\u3055\u308c\u7d9a\u3051\u3066\u3044\u305f\u304b\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; MouseL.pressedDuration();\nPrint &lt;&lt; MouseM.pressedDuration();\nPrint &lt;&lt; MouseR.pressedDuration();\n}\n}\n</code></pre>"},{"location":"tutorial2/mouse/#347-\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3092\u5224\u5b9a\u3059\u308b","title":"34.7 \u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3092\u5224\u5b9a\u3059\u308b","text":"<p>\u6b21\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u3001\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3092\u5224\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nclass DoubleClick\n{\npublic:\nvoid update()\n{\nif (m_step == 3)\n{\nm_step = 0;\n}\nif (MouseL.down())\n{\nif (m_step == 0)\n{\nm_step = 1;\n}\nelse if (m_step == 2)\n{\nif (const uint64 d = (Time::GetMillisec() - m_previousTimeMillisec);\nd &lt; DoubleClickThresholdMillisec)\n{\nm_step = 3;\n}\nelse\n{\nm_step = 1;\n}\n}\n}\nif (m_step == 0)\n{\nreturn;\n}\nif (not Cursor::Delta().isZero())\n{\nm_step = 0;\n}\nif ((m_step == 1) &amp;&amp; MouseL.up())\n{\nif (MouseL.pressedDuration() &lt; Milliseconds{ MaxClickTimeMillisec })\n{\nm_step = 2;\nm_previousTimeMillisec = Time::GetMillisec();\n}\nelse\n{\nm_step = 0;\n}\n}\n}\n[[nodiscard]]\nbool doubleClicked() const noexcept\n{\nreturn (m_step == 3);\n}\nprivate:\n// 1 \u56de\u76ee\u306e\u30af\u30ea\u30c3\u30af\u306e\u9577\u3055\uff08\u30df\u30ea\u79d2\uff09\nstatic constexpr int32 MaxClickTimeMillisec = 500;\n// 1 \u56de\u76ee\u306e\u30af\u30ea\u30c3\u30af\u3068 2 \u56de\u76ee\u306e\u30af\u30ea\u30c3\u30af\u306e\u6700\u5927\u9593\u9694\uff08\u30df\u30ea\u79d2\uff09\nstatic constexpr int32 DoubleClickThresholdMillisec = 500;\nint32 m_step = 0;\nint64 m_previousTimeMillisec = 0;\n};\nvoid Main()\n{\nDoubleClick dc;\nwhile (System::Update())\n{\n// \u6bce\u30d5\u30ec\u30fc\u30e0 1 \u56de\u5fc5\u305a\u547c\u3076\ndc.update();\n// \u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\nif (dc.doubleClicked())\n{\nPrint &lt;&lt; U\"double click\";\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/mouse/#348-\u3059\u3079\u3066\u306e\u30de\u30a6\u30b9\u30dc\u30bf\u30f3\u5165\u529b\u3092\u53d6\u5f97\u3059\u308b","title":"34.8 \u3059\u3079\u3066\u306e\u30de\u30a6\u30b9\u30dc\u30bf\u30f3\u5165\u529b\u3092\u53d6\u5f97\u3059\u308b","text":"<p><code>Mouse::GetAllInputs()</code> \u306f\u3001<code>.down()</code>, <code>.pressed()</code>, <code>.up()</code> \u306e\u3044\u305a\u308c\u304b\u304c <code>true</code> \u306b\u306a\u3063\u3066\u3044\u308b\u3001\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30de\u30a6\u30b9\u30dc\u30bf\u30f3\u306e\u4e00\u89a7\u3092 <code>Array&lt;Input&gt;</code> \u3067\u8fd4\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\n// down() / pressed() / up() \u306e\u3044\u305a\u308c\u304b\u304c true \u306b\u306a\u3063\u3066\u3044\u308b\u30de\u30a6\u30b9\u30dc\u30bf\u30f3\u4e00\u89a7\u3092\u53d6\u5f97\nconst Array&lt;Input&gt; buttons = Mouse::GetAllInputs();\nfor (const auto&amp; button : buttons)\n{\nPrint &lt;&lt; button.name() &lt;&lt; (button.pressed() ? U\" pressed\" : U\" up\");\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/mouse/#349-\u30de\u30a6\u30b9\u30db\u30a4\u30fc\u30eb\u306e\u56de\u8ee2\u91cf\u3092\u53d6\u5f97\u3059\u308b","title":"34.9 \u30de\u30a6\u30b9\u30db\u30a4\u30fc\u30eb\u306e\u56de\u8ee2\u91cf\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u76f4\u524d\u306e\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u306e\u30de\u30a6\u30b9\u30db\u30a4\u30fc\u30eb\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u91cf\u306f\u3001<code>Mouse::Wheel()</code> \u306b\u3088\u3063\u3066 <code>double</code> \u578b\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u6c34\u5e73\u30db\u30a4\u30fc\u30eb\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u91cf\u306f\u3001<code>Mouse::WheelH()</code> \u306b\u3088\u3063\u3066 <code>double</code> \u578b\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <p>\u30de\u30a6\u30b9\u30db\u30a4\u30fc\u30eb\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u91cf\u306f\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u306b\u4f9d\u5b58\u3057\u306a\u3044\u305f\u3081\u3001<code>Scene::Delta()</code> \u3067\u8abf\u6574\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nVec2 pos = Scene::Center();\nwhile (System::Update())\n{\nClearPrint();\n// \u30de\u30a6\u30b9\u30db\u30a4\u30fc\u30eb\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u91cf\nPrint &lt;&lt; Mouse::Wheel();\n// \u30de\u30a6\u30b9\u306e\u6c34\u5e73\u30db\u30a4\u30fc\u30eb\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u91cf\nPrint &lt;&lt; Mouse::WheelH();\npos.y -= (Mouse::Wheel() * 10);\npos.x += (Mouse::WheelH() * 10);\nRectF{ Arg::center = pos, 200 }.draw();\n}\n}\n</code></pre>"},{"location":"tutorial2/mouse/#3410-\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9818\u57df\u4e0a\u306b\u3042\u308b\u304b\u3092\u8abf\u3079\u308b","title":"34.10 \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9818\u57df\u4e0a\u306b\u3042\u308b\u304b\u3092\u8abf\u3079\u308b","text":"<p><code>Cursor::OnClientRect()</code> \u306f\u3001\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9818\u57df\u4e0a\u306b\u3042\u308b\u5834\u5408 <code>true</code> \u3092\u3001\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f <code>false</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\n// \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9818\u57df\u4e0a\u306b\u3042\u308b\u304b\u3092\u8868\u793a\nPrint &lt;&lt; Cursor::OnClientRect();\nif (Cursor::OnClientRect())\n{\nScene::SetBackground(ColorF{ 0.4 });\n}\nelse\n{\nScene::SetBackground(ColorF{ 0.2 });\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/mouse/#3411-\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u306b\u79fb\u52d5\u3055\u305b\u308b","title":"34.11 \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u306b\u79fb\u52d5\u3055\u305b\u308b","text":"<p><code>Cursor::SetPos()</code> \u3092\u4f7f\u3046\u3068\u3001\u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u79fb\u52d5\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; Cursor::Pos();\nif (SimpleGUI::Button(U\"center\", Vec2{ 100, 20 }))\n{\n// \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u30b7\u30fc\u30f3\u306e\u4e2d\u5fc3\u306b\u79fb\u52d5\u3055\u305b\u308b\nCursor::SetPos(Scene::Center());\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/mouse/#3412-\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u79fb\u52d5\u3092\u5236\u9650\u3059\u308b-windows-\u7248","title":"34.12 \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u79fb\u52d5\u3092\u5236\u9650\u3059\u308b (Windows \u7248)","text":"<p>Windows \u7248\u3067\u306f\u3001<code>Cursor::ClipToWindow(true)</code> \u3092\u547c\u3076\u3068\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u79fb\u52d5\u3067\u304d\u308b\u9818\u57df\u3092\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9818\u57df\u4e0a\u306b\u5236\u9650\u3067\u304d\u307e\u3059\u3002\u5236\u9650\u3092\u89e3\u9664\u3059\u308b\u306b\u306f <code>Cursor::ClipToWindow(false)</code> \u3092\u547c\u3073\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nbool clip = false;\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; Cursor::Pos();\nif (SimpleGUI::CheckBox(clip, U\"clip\", Vec2{ 100, 20 }))\n{\nif (clip)\n{\n// \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u79fb\u52d5\u3092\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9818\u57df\u4e0a\u306b\u5236\u9650\nCursor::ClipToWindow(true);\n}\nelse\n{\n// \u5236\u9650\u3092\u89e3\u9664\nCursor::ClipToWindow(false);\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/mouse/#3413-\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u5909\u66f4\u3059\u308b\u6a19\u6e96\u30b9\u30bf\u30a4\u30eb","title":"34.13 \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u5909\u66f4\u3059\u308b\uff08\u6a19\u6e96\u30b9\u30bf\u30a4\u30eb\uff09","text":"<p><code>Cursor::RequestStyle(style)</code> \u306b\u3088\u3063\u3066\u3001\u305d\u306e\u30d5\u30ec\u30fc\u30e0\u306b\u304a\u3051\u308b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002<code>style</code> \u306b\u306f\u4e0b\u8a18\u306e <code>CursorStyle</code> \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p> CursorStyle \u8aac\u660e CursorStyle::Arrow \u77e2\u5370\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09 CursorStyle::IBeam I \u30de\u30fc\u30af CursorStyle::Cross \u5341\u5b57\u306e\u30de\u30fc\u30af CursorStyle::Hand \u624b\u306e\u30a2\u30a4\u30b3\u30f3 CursorStyle::NotAllowed \u7981\u6b62\u306e\u30de\u30fc\u30af CursorStyle::ResizeUpDown \u4e0a\u4e0b\u306e\u30ea\u30b5\u30a4\u30ba CursorStyle::ResizeLeftRight \u5de6\u53f3\u306e\u30ea\u30b5\u30a4\u30ba CursorStyle::ResizeNWSE \u5de6\u4e0a - \u53f3\u4e0b\u306e\u30ea\u30b5\u30a4\u30ba CursorStyle::ResizeNESW \u53f3\u4e0a - \u5de6\u4e0b\u306e\u30ea\u30b5\u30a4\u30ba CursorStyle::ResizeAll \u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u306e\u30ea\u30b5\u30a4\u30ba CursorStyle::Hidden \u975e\u8868\u793a CursorStyle::Default Arrow \u3068\u540c\u3058 <p><code>Cursor::RequestStyle()</code> \u306f\u305d\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u307f\u306e\u5909\u66f4\u3067\u3042\u308a\u3001\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u3067\u306f\u5143\u306e\u30b9\u30bf\u30a4\u30eb\u306b\u623b\u308a\u307e\u3059\u3002\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u7d99\u7d9a\u7684\u306b\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u6bce\u30d5\u30ec\u30fc\u30e0 <code>Cursor::RequestStyle()</code> \u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nconst ColorF buttonColor{ 0.2, 0.6, 1.0 };\nconst Circle button{ 400, 300, 60 };\nTransition press{ 0.05s, 0.05s };\nwhile (System::Update())\n{\nconst bool mouseOver = button.mouseOver();\n// \u5186\u306e\u4e0a\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308c\u3070\nif (mouseOver)\n{\n// \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u624b\u306e\u5f62\u306b\u3059\u308b\nCursor::RequestStyle(CursorStyle::Hand);\n}\npress.update(button.leftPressed());\nconst double t = press.value();\nbutton.movedBy(Vec2{ 0, 0 }.lerp(Vec2{ 0, 4 }, t))\n.drawShadow(Vec2{ 0, 6 }.lerp(Vec2{ 0, 1 }, t), (12 - t * 7), (5 - t * 4))\n.draw(buttonColor);\n}\n}\n</code></pre>"},{"location":"tutorial2/mouse/#3414-\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u5909\u66f4\u3059\u308b\u30ab\u30b9\u30bf\u30e0\u753b\u50cf","title":"34.14 \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u5909\u66f4\u3059\u308b\uff08\u30ab\u30b9\u30bf\u30e0\u753b\u50cf\uff09","text":"<p><code>Image</code> \u30af\u30e9\u30b9\uff08\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 53. \u53c2\u7167\uff09\u3067\u4f5c\u6210\u3057\u305f\u4efb\u610f\u306e\u753b\u50cf\u3092\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3068\u3057\u3066\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>Cursor::RegisterCustomCursorStyle(name, image, hotSpot)</code> \u3067\u3001\u753b\u50cf\u3092 <code>name</code> \u3068\u3044\u3046\u540d\u524d\u3067\u767b\u9332\u3057\u307e\u3059\u3002<code>hotSpot</code> \u306b\u306f\u3001\u753b\u50cf\u4e2d\u306e\u30af\u30ea\u30c3\u30af\u4f4d\u7f6e\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u767b\u9332\u3057\u305f\u753b\u50cf\u306f <code>Cursor::RequestStyle(name)</code> \u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u540d\u524d\u304c\u7570\u306a\u308c\u3070\u8907\u6570\u306e\u30ab\u30b9\u30bf\u30e0\u30ab\u30fc\u30bd\u30eb\u3092\u767b\u9332\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nImage CreateCursorImage()\n{\nImage image{ 32, 32, Palette::White };\nfor (int32 y = 0; y &lt; image.height(); ++y)\n{\nfor (int32 x = 0; x &lt; image.width(); ++x)\n{\nimage[y][x] = ColorF{ (x / 31.0), (y / 31.0), 1.0 };\n}\n}\nreturn image;\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u30ab\u30b9\u30bf\u30e0\u30ab\u30fc\u30bd\u30eb\u3092\u767b\u9332\u3059\u308b\u3002\u753b\u50cf\u4e2d\u306e (0, 0) \u304c\u30af\u30ea\u30c3\u30af\u4f4d\u7f6e\nCursor::RegisterCustomCursorStyle(U\"MyCursor\", CreateCursorImage(), Point{ 0, 0 });\nconst Circle circle{ 400, 300, 100 };\nwhile (System::Update())\n{\nCursor::RequestStyle(U\"MyCursor\");\ncircle.draw(circle.mouseOver() ? Palette::Orange : Palette::White);\n}\n}\n</code></pre>"},{"location":"tutorial2/optional/","title":"23. \u7121\u52b9\u5024\u3092\u8868\u73fe\u3067\u304d\u308b\u578b","text":"<p>\u7121\u52b9\u5024\u3092\u8868\u73fe\u3067\u304d\u308b\u578b <code>Optional</code> \u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial2/optional/#231-\u7121\u52b9\u5024\u3092\u8868\u73fe\u3067\u304d\u308b\u578b","title":"23.1 \u7121\u52b9\u5024\u3092\u8868\u73fe\u3067\u304d\u308b\u578b","text":"<p><code>Optional&lt;Type&gt;</code> \u306f <code>std::optional&lt;Type&gt;</code> \u306b\u76f8\u5f53\u3059\u308b\u578b\u3067\u3059\u3002<code>Type</code> \u578b\u306e\u5024\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u3001\u5024\u3092\u6301\u305f\u306a\u3044\u3053\u3068\u3092\u8868\u3059\u300c\u7121\u52b9\u5024\u300d\u3092\u6301\u3064\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p>\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u306f\u3001\u30b5\u30a4\u30ba\u304c 0 \u307e\u305f\u306f 1 \u3067\u3042\u308b <code>Array&lt;Type&gt;</code> \u3067\u3059\u3002\u6709\u52b9\u306a\u5024\u3092\u6301\u3064\u3068\u304d\u3001\u30b5\u30a4\u30ba\u304c 1 \u3067\u305d\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u7121\u52b9\u5024\u3092\u6301\u3064\u3068\u304d\u306f\u30b5\u30a4\u30ba\u304c 0 \u3067\u3001\u5024\u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\u3002</p> <p>\u521d\u671f\u5024\u3092\u4e0e\u3048\u3089\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u3001<code>Optional&lt;Type&gt;</code> \u578b\u306e\u5024\u306f\u7121\u52b9\u5024\u3092\u6301\u3061\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u7121\u52b9\u5024\u3067\u521d\u671f\u5316\u3059\u308b\nOptional&lt;Point&gt; pos1;\n// \u6709\u52b9\u5024\u3067\u521d\u671f\u5316\u3059\u308b\nOptional&lt;Point&gt; pos2 = Point{ 100, 200 };\nPrint &lt;&lt; pos1;\nPrint &lt;&lt; pos2;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/optional/#232-\u6709\u52b9\u5024\u3092\u6301\u3064\u304b\u3092\u8abf\u3079\u308b","title":"23.2 \u6709\u52b9\u5024\u3092\u6301\u3064\u304b\u3092\u8abf\u3079\u308b","text":"<p><code>Optional</code> \u578b\u306e\u5024 <code>opt</code> \u304c\u6709\u52b9\u5024\u3092\u6301\u3064\u5834\u5408\u3001<code>opt.has_value()</code> \u304c <code>true</code> \u3092\u8fd4\u3057\u307e\u3059\u3002<code>if (opt)</code> \u3084 <code>if(not opt)</code> \u3067\u8abf\u3079\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nOptional&lt;Point&gt; pos1;\nOptional&lt;Point&gt; pos2 = Point{ 100, 200 };\nPrint &lt;&lt; pos1.has_value();\nPrint &lt;&lt; pos2.has_value();\nif (not pos1)\n{\nPrint &lt;&lt; U\"pos1 does not have a value\";\n}\nif (pos2)\n{\nPrint &lt;&lt; U\"pos2 has a value\";\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/optional/#233-\u6709\u52b9\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","title":"23.3 \u6709\u52b9\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","text":"<p><code>Optional</code> \u578b\u306e\u5024 <code>opt</code> \u304c\u6709\u52b9\u5024\u3092\u6301\u3064\u5834\u5408\u3001<code>*opt</code> \u3067\u305d\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002<code>opt-&gt;x</code> \u3084 <code>opt-&gt;y</code> \u306e\u3088\u3046\u306b\u3001<code>-&gt;</code> \u6f14\u7b97\u5b50\u3092\u4f7f\u3063\u3066\u30e1\u30f3\u30d0\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u6709\u52b9\u5024\u3092\u6301\u305f\u306a\u3044\u3068\u304d\u306b\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nOptional&lt;Point&gt; pos = Point{ 100, 200 };\nif (pos)\n{\nPrint &lt;&lt; *pos;\npos-&gt;x += 20;\npos-&gt;y += 30;\nPrint &lt;&lt; *pos;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/optional/#234-\u7121\u52b9\u5024\u306b\u3059\u308b","title":"23.4 \u7121\u52b9\u5024\u306b\u3059\u308b","text":"<p><code>none</code> \u306f <code>Optional</code> \u578b\u306e\u7121\u52b9\u5024\u3092\u8868\u3059\u5b9a\u6570\u3067\u3059\u3002<code>Optional</code> \u578b\u306e\u5024 <code>opt</code> \u306b\u7121\u52b9\u5024\u3092\u4ee3\u5165\u3059\u308b\u306b\u306f\u3001<code>opt = none</code> \u3068\u3057\u307e\u3059\u3002<code>opt.reset()</code> \u3067\u3082\u540c\u3058\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nOptional&lt;Point&gt; pos = Point{ 100, 200 };\nPrint &lt;&lt; pos.has_value();\npos = none;\nPrint &lt;&lt; pos.has_value();\npos = Point{ 300, 400 };\n// = none \u3068\u540c\u3058\npos.reset();\nPrint &lt;&lt; pos.has_value();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/optional/#235-\u6709\u52b9\u5024\u307e\u305f\u306f\u4ee3\u308f\u308a\u306e\u5024\u3092\u8fd4\u3059","title":"23.5 \u6709\u52b9\u5024\u307e\u305f\u306f\u4ee3\u308f\u308a\u306e\u5024\u3092\u8fd4\u3059","text":"<p><code>Optional</code> \u578b\u306e\u5024 <code>opt</code> \u304c\u6709\u52b9\u5024\u3092\u6301\u3064\u5834\u5408\u3001<code>opt.value_or(defaultValue)</code> \u306f\u6709\u52b9\u5024\u306e\u5024\u3092\u8fd4\u3057\u3001\u7121\u52b9\u5024\u3067\u3042\u308b\u5834\u5408\u306b <code>defaultValue</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nOptional&lt;Point&gt; pos1;\nOptional&lt;Point&gt; pos2 = Point{ 100, 200 };\n// pos1 \u306f\u6709\u52b9\u5024\u3092\u6301\u305f\u306a\u3044\u305f\u3081 Point{ 0, 0 } \u3092\u8fd4\u3059\nPrint &lt;&lt; pos1.value_or(Point{ 0, 0 });\n// pos2 \u306f\u6709\u52b9\u5024\u3092\u6301\u3064\u305f\u3081 Point{ 100, 200 } \u3092\u8fd4\u3059\nPrint &lt;&lt; pos2.value_or(Point{ 0, 0 });\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/optional/#236-if-\u3068\u306e\u7d44\u307f\u5408\u308f\u305b","title":"23.6 if \u3068\u306e\u7d44\u307f\u5408\u308f\u305b","text":"<p><code>Optional</code> \u578b\u3092\u8fd4\u3059\u95a2\u6570\u306e\u623b\u308a\u5024\u3092 <code>if ()</code> \u5185\u3067\u53d7\u3051\u53d6\u308a\u3001\u6709\u52b9\u5024\u3092\u6301\u3064\u304b\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>Optional</code> \u3092\u4f7f\u3046\u30b3\u30fc\u30c9\u3092\u77ed\u304f\u66f8\u304f\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nOptional&lt;int32&gt; GetResult1()\n{\nreturn 123;\n}\nOptional&lt;int32&gt; GetResult2()\n{\nreturn none;\n}\nvoid Main()\n{\nif (const auto result = GetResult1())\n{\nPrint &lt;&lt; *result;\n}\nif (const auto result = GetResult2())\n{\nPrint &lt;&lt; *result;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/optional/#237-\u6d3b\u7528\u4f8b","title":"23.7 \u6d3b\u7528\u4f8b","text":"<p><code>Optional</code> \u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u6b21\u306e\u3088\u3046\u306b 1 \u3064\u306e\u5909\u6570\u3060\u3051\u3067\u300c\u30de\u30a6\u30b9\u306e\u5de6\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u4f4d\u7f6e\u300d\u3068\u300c\u77e2\u5370\u3092\u63cf\u304f\u304b\u300d\u3092\u8868\u73fe\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30de\u30a6\u30b9\u306e\u5de6\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u4f4d\u7f6e\nOptional&lt;Point&gt; start;\nwhile (System::Update())\n{\nif (MouseL.down()) // \u30de\u30a6\u30b9\u306e\u5de6\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089\n{\n// \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u4f4d\u7f6e\u3092\u6709\u52b9\u5024\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\nstart = Cursor::Pos();\n}\nelse if (MouseL.up()) // \u30de\u30a6\u30b9\u306e\u5de6\u30dc\u30bf\u30f3\u304c\u96e2\u3055\u308c\u305f\u3089\n{\n// \u7121\u52b9\u5024\u306b\u3059\u308b\nstart.reset();\n}\n// \u6709\u52b9\u5024\u3092\u6301\u3063\u3066\u3044\u308c\u3070\nif (start)\n{\n// \u73fe\u5728\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u4f4d\u7f6e\u307e\u3067\u77e2\u5370\u3092\u63cf\u304f\nLine{ *start, Cursor::Pos() }.drawArrow(6, SizeF{ 20, 20 }, Palette::Orange);\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/random/","title":"29. \u30e9\u30f3\u30c0\u30e0","text":"<p>\u6570\u3084\u8272\u3001\u5ea7\u6a19\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u751f\u6210\u3057\u305f\u308a\u3001\u8907\u6570\u306e\u9078\u629e\u80a2\u304b\u3089\u8981\u7d20\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u629e\u3057\u305f\u308a\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Siv3D \u306f\u4e71\u6570\u306b\u95a2\u3059\u308b\u6b21\u306e\u3088\u3046\u306a\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p> <ul> <li>\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u30af\u30e9\u30b9</li> <li>\u4e71\u6570\u3092\u7279\u5b9a\u306e\u5206\u5e03\u306b\u5206\u6563\u305b\u308b\u5206\u5e03\u30af\u30e9\u30b9</li> <li>\u305d\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u4e71\u6570\u95a2\u6570</li> </ul> <p>Siv3D \u306e\u4e71\u6570\u95a2\u6570\u3067\u306f\u3001\u7279\u306b\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001Siv3D \u304c\u5185\u90e8\u3067\u30b9\u30ec\u30c3\u30c9\u3054\u3068\u306b\u78ba\u4fdd\u3059\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002\u305d\u308c\u3089\u306e\u30b7\u30fc\u30c9\u5024\u306f\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30ce\u30a4\u30ba\u306b\u3088\u3063\u3066\u6c7a\u5b9a\u3055\u308c\u308b\u305f\u3081\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u7570\u306a\u308b\u4e71\u6570\u5217\u3092\u751f\u6210\u3057\u307e\u3059\u3002</p> <p>\u4e71\u6570\u306e\u518d\u73fe\u6027\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u3001\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u306b\u56fa\u5b9a\u306e\u30b7\u30fc\u30c9\u3092\u4e0e\u3048\u308b\u304b\u3001\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u56fa\u5b9a\u30b7\u30fc\u30c9\u3067\u4f5c\u6210\u3057\u3001\u4e71\u6570\u95a2\u6570\u306b\u6e21\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial2/random/#291-\u30e9\u30f3\u30c0\u30e0\u306a\u6574\u6570","title":"29.1 \u30e9\u30f3\u30c0\u30e0\u306a\u6574\u6570","text":"<p><code>Random&lt;Type&gt;(max)</code> \u306f 0 \u304b\u3089 max \u307e\u3067\u306e\u7bc4\u56f2\u306e <code>Type</code> \u578b\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u5024\u3092\u3001<code>Random&lt;Type&gt;(min, max)</code> \u306f min \u304b\u3089\u3000max \u306e\u7bc4\u56f2\u306e <code>Type</code> \u578b\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"int32\", Vec2{ 200, 20 }))\n{\nClearPrint();\nfor (int32 i = 0; i &lt; 10; ++i)\n{\n// 0\uff5e100 \u306e\u7bc4\u56f2\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u6574\u6570\nPrint &lt;&lt; Random(100);\n}\n}\nif (SimpleGUI::Button(U\"double\", Vec2{ 200, 60 }))\n{\nClearPrint();\nfor (int32 i = 0; i &lt; 10; ++i)\n{\n// -100.0\uff5e100.0 \u306e\u7bc4\u56f2\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\nPrint &lt;&lt; Random(-100.0, 100.0);\n}\n}\nif (SimpleGUI::Button(U\"char32\", Vec2{ 200, 100 }))\n{\nClearPrint();\nfor (int32 i = 0; i &lt; 10; ++i)\n{\n// A\uff5eZ \u306e\u7bc4\u56f2\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\nPrint &lt;&lt; Random(U'A', U'Z');\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#292-\u30e9\u30f3\u30c0\u30e0\u306a\u6574\u6570","title":"29.2 \u30e9\u30f3\u30c0\u30e0\u306a\u6574\u6570","text":"<p><code>int8</code>, <code>uint8</code> \uff5e <code>int64</code>, <code>uint64</code> \u307e\u3067\u306e\u6574\u6570\u578b\u306b\u5bfe\u5fdc\u3057\u305f\u4e71\u6570\u751f\u6210\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> \u578b \u95a2\u6570 \u5024\u306e\u7bc4\u56f2 <code>int8</code> <code>RandomInt8()</code> -128 \uff5e 127 <code>uint8</code> <code>RandomUint8()</code> 0 \uff5e 255 <code>int16</code> <code>RandomInt16()</code> -32768 \uff5e 32767 <code>uint16</code> <code>RandomUint16()</code> 0 \uff5e 65535 <code>int32</code> <code>RandomInt32()</code> -2147483648 \uff5e 2147483647 <code>uint32</code> <code>RandomUint32()</code> 0 \uff5e 4294967295 <code>int64</code> <code>RandomInt64()</code> -9223372036854775808 \uff5e 9223372036854775807 <code>uint64</code> <code>RandomUint64()</code> 0 \uff5e 18446744073709551615 <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"int8\", Vec2{ 200, 20 }))\n{\nClearPrint();\nfor (int32 i = 0; i &lt; 10; ++i)\n{\n// int8 \u306e\u7bc4\u56f2\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u6574\u6570\nPrint &lt;&lt; RandomInt8();\n}\n}\nif (SimpleGUI::Button(U\"uint8\", Vec2{ 200, 60 }))\n{\nClearPrint();\nfor (int32 i = 0; i &lt; 10; ++i)\n{\n// uint8 \u306e\u7bc4\u56f2\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u6574\u6570\nPrint &lt;&lt; RandomUint8();\n}\n}\nif (SimpleGUI::Button(U\"uint32\", Vec2{ 200, 100 }))\n{\nClearPrint();\nfor (int32 i = 0; i &lt; 10; ++i)\n{\n// uint32 \u306e\u7bc4\u56f2\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u6574\u6570\nPrint &lt;&lt; RandomUint32();\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#293-\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u306e\u30b7\u30fc\u30c9\u3092\u8a2d\u5b9a\u3059\u308b","title":"29.3 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u306e\u30b7\u30fc\u30c9\u3092\u8a2d\u5b9a\u3059\u308b","text":"<p><code>Reseed(seed)</code> \u3092\u4f7f\u3046\u3068\u3001\u5185\u90e8\u306e\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u3092\u6307\u5b9a\u3057\u305f\u30b7\u30fc\u30c9\u3067\u30ea\u30bb\u30c3\u30c8\u521d\u671f\u5316\u3067\u304d\u307e\u3059\u3002\u30b7\u30fc\u30c9\u304c\u540c\u3058\u3067\u3042\u308c\u3070\u3001\u751f\u6210\u3055\u308c\u308b\u4e71\u6570\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"seed 1\", Vec2{ 200, 20 }))\n{\nClearPrint();\nReseed(123456789ull);\nfor (int32 i = 0; i &lt; 10; ++i)\n{\n// 1\uff5e6 \u306e\u7bc4\u56f2\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u6574\u6570\nPrint &lt;&lt; Random(1, 6);\n}\n}\nif (SimpleGUI::Button(U\"seed 2\", Vec2{ 200, 60 }))\n{\nClearPrint();\nReseed(3333333333ull);\nfor (int32 i = 0; i &lt; 10; ++i)\n{\n// 1\uff5e6 \u306e\u7bc4\u56f2\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u6574\u6570\nPrint &lt;&lt; Random(1, 6);\n}\n}\nif (SimpleGUI::Button(U\"seed 3\", Vec2{ 200, 100 }))\n{\nClearPrint();\nReseed(55555555555555ull);\nfor (int32 i = 0; i &lt; 10; ++i)\n{\n// 1\uff5e6 \u306e\u7bc4\u56f2\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u6574\u6570\nPrint &lt;&lt; Random(1, 6);\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#294-\u4f7f\u7528\u3059\u308b\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6307\u5b9a\u3059\u308b","title":"29.4 \u4f7f\u7528\u3059\u308b\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6307\u5b9a\u3059\u308b","text":"<p>\u4e71\u6570\u95a2\u6570\u306e\u6700\u5f8c\u306e\u5f15\u6570\u306b\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u5185\u90e8\u306e\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u306e\u4ee3\u308f\u308a\u306b\u3001\u305d\u306e\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u7528\u3057\u3066\u4e71\u6570\u3092\u751f\u6210\u3067\u304d\u307e\u3059\u3002\u5185\u90e8\u306e\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u306b\u4f9d\u5b58\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u306b\u3053\u306e\u65b9\u6cd5\u3092\u4f7f\u3044\u307e\u3059\u3002\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u305f\u3073\u306b\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5185\u90e8\u72b6\u614b\u306f\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst uint64 seed = RandomUint64();\n// \u8efd\u91cf\u306a\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\nSmallRNG rng{ seed };\nfor (int32 i = 0; i &lt; 10; ++i)\n{\nPrint &lt;&lt; Random(1, 6, rng);\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#295-\u534a\u3005\u306e\u78ba\u7387","title":"29.5 \u534a\u3005\u306e\u78ba\u7387","text":"<p><code>RandomBool()</code> \u306f\u3001\u547c\u3073\u51fa\u3057\u306e\u305f\u3073\u306b 50% \u306e\u78ba\u7387\u3067 <code>true</code>, 50% \u306e\u78ba\u7387\u3067 <code>false</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Reset\", Vec2{ 200, 20 }))\n{\nClearPrint();\nfor (int32 i = 0; i &lt; 10; ++i)\n{\n// 50% \u306e\u78ba\u7387\u3067 true, 50% \u306e\u78ba\u7387\u3067 false\nPrint &lt;&lt; RandomBool();\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#296-\u6307\u5b9a\u3057\u305f\u78ba\u7387\u3067-true-\u3092\u8fd4\u3059","title":"29.6 \u6307\u5b9a\u3057\u305f\u78ba\u7387\u3067 <code>true</code> \u3092\u8fd4\u3059","text":"<p><code>RandomBool(p)</code> \u306f\u3001<code>true</code> \u306b\u306a\u308b\u78ba\u7387\u3092 0.0 (0%) \uff5e 1.0 (100%) \u306e\u7bc4\u56f2\u3067 \u6307\u5b9a\u3067\u304d\u307e\u3059\u300210% \u306e\u78ba\u7387\u3067 <code>true</code> \u3092\u8fd4\u3057\u3066\u307b\u3057\u3044\u5834\u5408\u306e <code>p</code> \u306f <code>0.1</code>, 25% \u306e\u78ba\u7387\u3067 <code>true</code> \u3092\u8fd4\u3057\u3066\u307b\u3057\u3044\u5834\u5408\u306e <code>p</code> \u306f <code>0.25</code> \u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Reset\", Vec2{ 200, 20 }))\n{\nClearPrint();\nfor (int32 i = 0; i &lt; 10; ++i)\n{\n// 30% \u306e\u78ba\u7387\u3067 true, 70% \u306e\u78ba\u7387\u3067 false\nPrint &lt;&lt; RandomBool(0.3);\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#297-\u30e9\u30f3\u30c0\u30e0\u306a\u8272","title":"29.7 \u30e9\u30f3\u30c0\u30e0\u306a\u8272","text":"<p><code>RandomColorF()</code> \u306f\u30e9\u30f3\u30c0\u30e0\u306a\u8272\u3092\u751f\u6210\u3057\u3066 <code>ColorF</code> \u578b\u3067\u8fd4\u3057\u307e\u3059\u3002\u8272\u306f <code>HSV{ Random(360.0), 1.0, 1.0 }</code> \u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u308b\u305f\u3081\u3001\u6de1\u3044\u8272\u3084\u6697\u3044\u8272\u3001\u767d\u3084\u9ed2\u306f\u751f\u6210\u3055\u308c\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;ColorF&gt; colors;\nfor (int32 i = 0; i &lt; 10; ++i)\n{\n// \u30e9\u30f3\u30c0\u30e0\u306a\u8272\ncolors &lt;&lt; RandomColor();\n}\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Reset\", Vec2{ 20, 20 }))\n{\nfor (auto&amp; color : colors)\n{\ncolor = RandomColor();\n}\n}\nfor (size_t i = 0; i &lt; colors.size(); ++i)\n{\nCircle{ (50 + i * 50.0), 100, 20 }.draw(colors[i]);\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#298-\u30e9\u30f3\u30c0\u30e0\u306a-vec2","title":"29.8 \u30e9\u30f3\u30c0\u30e0\u306a <code>Vec2</code>","text":"<p><code>RandomVec2()</code> \u306f\u3001\u6761\u4ef6\u306b\u6cbf\u3063\u305f\u30e9\u30f3\u30c0\u30e0\u306a <code>Vec2</code> \u578b\u306e\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\u6761\u4ef6\u306f\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u5024\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u3002</p> \u95a2\u6570 \u8aac\u660e <code>RandomVec2()</code> \u9577\u3055\u304c 1.0 \u306e\u30e9\u30f3\u30c0\u30e0\u306a\u30d9\u30af\u30c8\u30eb <code>RandomVec2(double)</code> \u6307\u5b9a\u3057\u305f\u9577\u3055\u3092\u6301\u3064\u30e9\u30f3\u30c0\u30e0\u306a\u30d9\u30af\u30c8\u30eb <code>RandomVec2(const Line&amp;)</code> \u6307\u5b9a\u3057\u305f\u7dda\u5206\u4e0a\u306b\u3042\u308b\u30e9\u30f3\u30c0\u30e0\u306a\u70b9\u306e\u4f4d\u7f6e\u30d9\u30af\u30c8\u30eb <code>RandomVec2(const Circle&amp;)</code> \u6307\u5b9a\u3057\u305f\u5186\u5185\u306b\u3042\u308b\u30e9\u30f3\u30c0\u30e0\u306a\u70b9\u306e\u4f4d\u7f6e\u30d9\u30af\u30c8\u30eb <code>RandomVec2(const RectF&amp;)</code> \u6307\u5b9a\u3057\u305f\u9577\u65b9\u5f62\u5185\u306b\u3042\u308b\u30e9\u30f3\u30c0\u30e0\u306a\u70b9\u306e\u4f4d\u7f6e\u30d9\u30af\u30c8\u30eb <code>RandomVec2(const Triangle&amp;)</code> \u6307\u5b9a\u3057\u305f\u4e09\u89d2\u5f62\u5185\u306b\u3042\u308b\u30e9\u30f3\u30c0\u30e0\u306a\u70b9\u306e\u4f4d\u7f6e\u30d9\u30af\u30c8\u30eb <code>RandomVec2(const Quad&amp;)</code> \u6307\u5b9a\u3057\u305f\u56db\u89d2\u5f62\u5185\u306b\u3042\u308b\u30e9\u30f3\u30c0\u30e0\u306a\u70b9\u306e\u4f4d\u7f6e\u30d9\u30af\u30c8\u30eb"},{"location":"tutorial2/random/#2981-\u30e9\u30f3\u30c0\u30e0\u306a\u5ea7\u6a19","title":"29.8.1 \u30e9\u30f3\u30c0\u30e0\u306a\u5ea7\u6a19","text":"<p>\u56f3\u5f62\u306e\u5185\u90e8\u306b\u3042\u308b\u30e9\u30f3\u30c0\u30e0\u306a\u70b9\u3092\u751f\u6210\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// Line \u3084 Circle, Triangle, Quad \u3082 OK\nconst RectF shape{ 100, 100, 400, 300 };\nArray&lt;Vec2&gt; points;\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Generate\", Vec2{ 20, 20 }))\n{\npoints.clear();\nfor (int32 i = 0; i &lt; 100; ++i)\n{\n// shape \u5185\u306b\u3042\u308b\u30e9\u30f3\u30c0\u30e0\u306a\u70b9\npoints &lt;&lt; RandomVec2(shape);\n}\n}\nshape.draw(Palette::Gray);\nfor (const auto&amp; point : points)\n{\npoint.asCircle(3).draw();\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#2982-\u30e9\u30f3\u30c0\u30e0\u306a\u30d9\u30af\u30c8\u30eb","title":"29.8.2 \u30e9\u30f3\u30c0\u30e0\u306a\u30d9\u30af\u30c8\u30eb","text":"<p>30 \u30d4\u30af\u30bb\u30eb\u305a\u3064\u30e9\u30f3\u30c0\u30e0\u306a\u65b9\u5411\u306b\u79fb\u52d5\u3057\u306a\u304c\u3089\u7dda\u3092\u5f15\u3044\u3066\u3044\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nLineString lines = { Vec2{ 400, 300 } };\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Move\", Vec2{ 20, 20 }))\n{\n// 30 \u30d4\u30af\u30bb\u30eb\u79fb\u52d5\nlines &lt;&lt; (lines.back() + RandomVec2(30));\n}\nlines.draw(2);\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#299-\u914d\u5217\u4e2d\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u8981\u7d20","title":"29.9 \u914d\u5217\u4e2d\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u8981\u7d20","text":"<p><code>Array</code> \u306e\u30e1\u30f3\u30d0\u95a2\u6570 <code>.choice()</code> \u306f\u3001\u914d\u5217\u306e\u4e2d\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u8981\u7d20\u3092\u8fd4\u3057\u307e\u3059\u3002\u7a7a\u306e\u914d\u5217\u306b\u5bfe\u3057\u3066\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Array&lt;String&gt; options =\n{\nU\"Red\", U\"Green\", U\"Blue\", U\"Black\", U\"White\"\n};\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Reset\", Vec2{ 200, 20 }))\n{\nClearPrint();\n// \u30e9\u30f3\u30c0\u30e0\u306a\u8981\u7d20\u3092\u8fd4\u3059\nPrint &lt;&lt; options.choice();\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#2910-\u914d\u5217\u4e2d\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u8907\u6570\u306e\u8981\u7d20","title":"29.10 \u914d\u5217\u4e2d\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u8907\u6570\u306e\u8981\u7d20","text":"<p><code>Array</code> \u306e <code>.choice(N)</code> \u306f\u3001\u914d\u5217\u306e\u4e2d\u304b\u3089\u91cd\u8907\u306a\u304f N \u500b\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u8981\u7d20\u3092\u9078\u629e\u3057\u3001\u914d\u5217\u3067\u8fd4\u3057\u307e\u3059\u3002\u7d50\u679c\u306e\u914d\u5217\u306e\u8981\u7d20\u306e\u9806\u756a\u306f\u3001\u5143\u306e\u914d\u5217\u5185\u3067\u306e\u9806\u5e8f\u3068\u540c\u3058\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Array&lt;int32&gt; coins =\n{\n1, 2, 5, 10, 20, 50, 100\n};\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Reset\", Vec2{ 200, 20 }))\n{\nClearPrint();\n// \u30e9\u30f3\u30c0\u30e0\u306a\u8981\u7d20\u3092 3 \u3064\u8fd4\u3059\nPrint &lt;&lt; coins.choice(3);\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#2911-\u914d\u5217\u306e\u30b7\u30e3\u30c3\u30d5\u30eb","title":"29.11 \u914d\u5217\u306e\u30b7\u30e3\u30c3\u30d5\u30eb","text":"<p><code>Array</code> \u306e <code>.shuffle()</code> \u306f\u914d\u5217\u306e\u8981\u7d20\u306e\u9806\u756a\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u30b7\u30e3\u30c3\u30d5\u30eb\u3057\u307e\u3059\u3002\u4e00\u65b9 <code>.shuffled()</code> \u3092\u4f7f\u3046\u3068\u3001\u81ea\u8eab\u306f\u5909\u66f4\u305b\u305a\u306b\u3001\u30b7\u30e3\u30c3\u30d5\u30eb\u3057\u305f\u65b0\u3057\u3044\u914d\u5217\u3092\u4f5c\u6210\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;String&gt; cities =\n{\nU\"Guangzhou\", U\"Tokyo\", U\"Shanghai\", U\"Jakarta\",\nU\"Delhi\", U\"Metro Manila\", U\"Mumbai\", U\"Seoul\",\nU\"Mexico City\", U\"S\u00e3o Paulo\", U\"New York City\", U\"Cairo\",\n};\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Shuffle\", Vec2{ 200, 100 }))\n{\nClearPrint();\n// \u8981\u7d20\u306e\u9806\u756a\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\ncities.shuffle();\nPrint &lt;&lt; cities;\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#2912-\u30e9\u30f3\u30c0\u30e0\u306b-1-\u500b\u9078\u3076","title":"29.12 \u30e9\u30f3\u30c0\u30e0\u306b 1 \u500b\u9078\u3076","text":"<p><code>Sample(options)</code> \u306f\u3001<code>{}</code> \u3067\u6e21\u3057\u305f\u8907\u6570\u306e\u9078\u629e\u80a2\u304b\u3089\u8981\u7d20\u3092\u30e9\u30f3\u30c0\u30e0\u306b 1 \u500b\u9078\u629e\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Reset\", Vec2{ 200, 20 }))\n{\nClearPrint();\n// \u30e9\u30f3\u30c0\u30e0\u306b\u9078\u629e\nPrint &lt;&lt; Sample({ 1, 2, 5, 10, 20, 50, 100 });\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#2913-\u30e9\u30f3\u30c0\u30e0\u306b\u8907\u6570\u500b\u9078\u3076","title":"29.13 \u30e9\u30f3\u30c0\u30e0\u306b\u8907\u6570\u500b\u9078\u3076","text":"<p><code>Sample(N, options)</code> \u306f\u3001<code>{}</code> \u3067\u6e21\u3057\u305f\u8907\u6570\u306e\u9078\u629e\u80a2\u304b\u3089\u8981\u7d20\u3092\u30e9\u30f3\u30c0\u30e0\u306b N \u500b\u9078\u629e\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002<code>Array</code> \u306e <code>.choice()</code> \u3068\u540c\u69d8\u306b\u3001\u7d50\u679c\u306e\u914d\u5217\u5185\u306e\u8981\u7d20\u306e\u9806\u756a\u306f\u3001\u5143\u306e\u9806\u5e8f\u3068\u540c\u3058\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Reset\", Vec2{ 200, 20 }))\n{\nClearPrint();\n// \u30e9\u30f3\u30c0\u30e0\u306b 3 \u500b\u9078\u629e\nPrint &lt;&lt; Sample(3, { 1, 2, 5, 10, 20, 50, 100 });\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#2914-\u9078\u629e\u80a2\u306b\u5bfe\u3057\u3066\u51fa\u73fe\u78ba\u7387\u3092\u6307\u5b9a\u3057\u3066\u30e9\u30f3\u30c0\u30e0\u306b-1-\u500b\u9078\u3076","title":"29.14 \u9078\u629e\u80a2\u306b\u5bfe\u3057\u3066\u51fa\u73fe\u78ba\u7387\u3092\u6307\u5b9a\u3057\u3066\u30e9\u30f3\u30c0\u30e0\u306b 1 \u500b\u9078\u3076","text":"<p>\u78ba\u7387\u306b\u30d0\u30a4\u30a2\u30b9\u304c\u3042\u308b\u8907\u6570\u306e\u9078\u629e\u80a2\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306a\u7d50\u679c\u3092\u9078\u629e\u3059\u308b\u3068\u304d\u306f <code>DiscreteSample</code> \u95a2\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002\u7b2c 1 \u5f15\u6570\u304c\u9078\u629e\u80a2\u3067\u3001\u914d\u5217\u3067\u7528\u610f\u3057\u307e\u3059\u3002\u7b2c 2 \u5f15\u6570\u304c\u9078\u629e\u80a2\u306e\u78ba\u7387\u5206\u5e03\u3067\u3001<code>DiscreteDistribution</code> \u578b\u3067\u7528\u610f\u3057\u307e\u3059\u3002\u78ba\u7387\u5206\u5e03\u306f <code>double</code> \u578b\u306e\u5024\u3067\u6307\u5b9a\u3057\u3001\u5408\u8a08\u306f\u7279\u5b9a\u306e\u6570\u306b\u306a\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070 <code>{ 2.0, 12.0, 6.0 }</code> \u306a\u3089 10%, 60%, 30% \u3068\u5272\u308a\u632f\u3089\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u9078\u629e\u80a2\nconst Array&lt;String&gt; options =\n{\nU\"$0\",\nU\"$1\",\nU\"$5\",\nU\"$20\",\nU\"$100\",\nU\"$500\",\nU\"$2000\",\n};\n// \u9078\u629e\u80a2\u306b\u5bfe\u5fdc\u3059\u308b\u78ba\u7387\u5206\u5e03\n// \uff08$0 \u306f $2000 \u3088\u308a\u3082 1000 \u500d\u51fa\u3084\u3059\u3044\uff09\nDiscreteDistribution distribution{\n{\n1000,\n200,\n50,\n10,\n5,\n2,\n1,\n} };\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Reset\", Vec2{ 200, 20 }))\n{\nClearPrint();\nfor (int32 i = 0; i &lt; 10; ++i)\n{\n// \u78ba\u7387\u5206\u5e03\u306b\u57fa\u3065\u3044\u3066\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u629e\nPrint &lt;&lt; DiscreteSample(options, distribution);\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#2915-\u6b63\u898f\u5206\u5e03","title":"29.15 \u6b63\u898f\u5206\u5e03","text":"<p>\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u3068\u304d\u306b\u3001\u6b63\u898f\u5206\u5e03\u306b\u5f93\u3046\u4e71\u6570\u3092\u751f\u6210\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002<code>NormalDistribution</code> \u306f\u3001\u5e73\u5747\u3068\u6a19\u6e96\u504f\u5dee\u3092\u6307\u5b9a\u3057\u3066\u6b63\u898f\u5206\u5e03\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002<code>GetDefaultRNG()</code> \u3067\u53d6\u5f97\u3057\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u4e71\u6570\u751f\u6210\u5668\u3092\u5f15\u6570\u306b\u6e21\u3057\u3001<code>()</code> \u6f14\u7b97\u5b50\u3067\u6b63\u898f\u5206\u5e03\u306b\u5f93\u3063\u305f\u4e71\u6570\u3092\u751f\u6210\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u5e73\u5747 40, \u6a19\u6e96\u504f\u5dee 8 \u306e\u6b63\u898f\u5206\u5e03\nNormalDistribution dist{ 40.0, 8.0 };\nArray&lt;int32&gt; counts(80);\nauto&amp; rng = GetDefaultRNG();\nfor (int32 i = 0; i &lt; 10000; ++i)\n{\nconst double x = dist(rng);\n// 0 \u4ee5\u4e0a 79 \u306e\u7bc4\u56f2\u306e\u6574\u6570\u306b\u5909\u63db\nconst int32 xi = Clamp(static_cast&lt;int32&gt;(x), 0, 79);\n++counts[xi];\n}\nwhile (System::Update())\n{\nfor (int32 i = 0; i &lt; 80; ++i)\n{\nRect{ Arg::bottomLeft((i * 10), 600), 10, counts[i] }\n.draw(HSV{ (i * 3), 0.5, 0.9 });\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/random/#2916-\u7df4\u7fd2\u30d1\u30b9\u30ef\u30fc\u30c9\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf","title":"29.16 \uff08\u7df4\u7fd2\uff09\u30d1\u30b9\u30ef\u30fc\u30c9\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf","text":"<p>\u30e9\u30f3\u30c0\u30e0\u306a\u82f1\u6570\u5b57\u3067\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4f5c\u6210\u3059\u308b\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002<code>Clipboard::SetText(s)</code> \u306f\u3001\u6587\u5b57\u5217 <code>s</code> \u3092\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nString GeneratePassword()\n{\nString s;\nfor (int32 i = 0; i &lt; 16; ++i)\n{\ns &lt;&lt; Random(U'!', U'~');\n}\nreturn s;\n}\nvoid Main()\n{\nString password = GeneratePassword();\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; password;\nif (SimpleGUI::Button(U\"Generate\", Vec2{ 200, 40 }))\n{\npassword = GeneratePassword();\n}\nif (SimpleGUI::Button(U\"Copy to clipboard\", Vec2{ 200, 80 }))\n{\n// \u6587\u5b57\u5217\u3092\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u306b\u30b3\u30d4\u30fc\u3059\u308b\nClipboard::SetText(password);\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/scene/","title":"32. \u30b7\u30fc\u30f3\u3068\u30a6\u30a3\u30f3\u30c9\u30a6","text":"<p>Siv3D \u306e\u30b7\u30fc\u30f3\u3068\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Siv3D \u3067\u306f\u3001\u56f3\u5f62\u3084\u30c6\u30af\u30b9\u30c1\u30e3\u3001\u30c6\u30ad\u30b9\u30c8\u306a\u3069\u3092 <code>.draw()</code> \u3059\u308b\u3068\u3001\u300c\u30b7\u30fc\u30f3\u300d\u3068\u547c\u3070\u308c\u308b\u4eee\u60f3\u306e\u753b\u9762\u306b\u63cf\u753b\u3055\u308c\u307e\u3059\u3002Siv3D \u306f <code>System::Update()</code> \u5185\u3067\u30b7\u30fc\u30f3\u306e\u753b\u50cf\u3092\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u8ee2\u9001\u3055\u308c\u308b\u3053\u3068\u3067\u3001\u30e6\u30fc\u30b6\u306f\u63cf\u753b\u7d50\u679c\u3092\u30a6\u30a3\u30f3\u30c9\u30a6\u4e0a\u3067\u76ee\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <p>\u3053\u308c\u3089\u306e\u51e6\u7406\u306f\u81ea\u52d5\u7684\u306b\u884c\u308f\u308c\u308b\u305f\u3081\u3001\u524d\u7ae0\u307e\u3067\u306f\u7279\u306b\u610f\u8b58\u3059\u308b\u3053\u3068\u306a\u304f <code>.draw()</code> \u3057\u305f\u5185\u5bb9\u3092\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u8868\u793a\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u3053\u306e\u7ae0\u3067\u306f\u30b7\u30fc\u30f3\u3084\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4ed5\u7d44\u307f\u3092\u6398\u308a\u4e0b\u3052\u307e\u3059\u3002</p> <p>\u3053\u306e\u7ae0\u3067\u306f Siv3D \u306e\u5185\u90e8\u306e\u4ed5\u7d44\u307f\u3092\u8aac\u660e\u3059\u308b\u305f\u3081\u3001\u3084\u3084\u96e3\u3057\u3044\u5185\u5bb9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u958b\u767a\u306b\u304a\u3051\u308b\u307b\u3068\u3093\u3069\u306e\u30cb\u30fc\u30ba\u306f 32.3 \u306e <code>Window::Resize()</code> \u3060\u3051\u3067\u6e80\u305f\u305b\u308b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u3092\u7406\u89e3\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"tutorial2/scene/#321-\u4e09\u3064\u306e\u30b5\u30a4\u30ba","title":"32.1 \u4e09\u3064\u306e\u30b5\u30a4\u30ba","text":"<p>Siv3D \u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u304a\u3051\u308b\u753b\u9762\u8868\u793a\u3092\u7406\u89e3\u3059\u308b\u306b\u306f\u3001\u300c3 \u3064\u306e\u30b5\u30a4\u30ba\u300d\u3092\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"tutorial2/scene/#\u2460-\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba","title":"\u2460 \u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba","text":"<p><code>.draw()</code> \u306b\u3088\u308b\u63cf\u753b\u3084 <code>Cursor::Pos()</code> \u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u5ea7\u6a19\u306a\u3069\u306e\u57fa\u6e96\u306b\u306a\u308b\u3001\u72ec\u7acb\u3057\u305f 1 \u3064\u306e\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3067\u3059\u3002\u4e0b\u8a18\u306e\u95a2\u6570\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u5f8c\u8ff0\u3059\u308b\u4eee\u60f3\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3068\u4e00\u81f4\u3057\u307e\u3059\u3002Siv3D \u306e\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u64ae\u5f71\u3057\u305f\u3068\u304d\u306f\u3001\u3053\u306e\u89e3\u50cf\u5ea6\u3067\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002</p> \u95a2\u6570 \u623b\u308a\u5024 \u8aac\u660e <code>Scene::Size()</code> <code>Size</code> \u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3092\u8fd4\u3057\u307e\u3059\u3002 <code>Scene::Width()</code> <code>int32</code> \u30b7\u30fc\u30f3\u306e\u5e45\u3092\u8fd4\u3057\u307e\u3059\u3002 <code>Scene::Height()</code> <code>int32</code> \u30b7\u30fc\u30f3\u306e\u9ad8\u3055\u3092\u8fd4\u3057\u307e\u3059\u3002 <code>Scene::Center()</code> <code>Point</code> \u30b7\u30fc\u30f3\u306e\u4e2d\u5fc3\u5ea7\u6a19\u3092\u8fd4\u3057\u307e\u3059\u3002<code>Scene::Size() / 2</code> \u3068\u540c\u3058\u3067\u3059\u3002 <code>Scene::CenterF()</code> <code>Vec2</code> \u30b7\u30fc\u30f3\u306e\u4e2d\u5fc3\u5ea7\u6a19\u3092\u8fd4\u3057\u307e\u3059\u3002<code>Scene::Size() / 2.0</code> \u3068\u540c\u3058\u3067\u3059\u3002 <code>Scene::Rect()</code> <code>Rect</code> \u30b7\u30fc\u30f3\u306e\u77e9\u5f62\u3092\u8fd4\u3057\u307e\u3059\u3002<code>Rect{ 0, 0, Scene::Size() }</code> \u3068\u540c\u3058\u3067\u3059\u3002 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"Scene::Size(): \" &lt;&lt; Scene::Size();\nPrint &lt;&lt; U\"Scene::Width(): \" &lt;&lt; Scene::Width();\nPrint &lt;&lt; U\"Scene::Height(): \" &lt;&lt; Scene::Height();\nPrint &lt;&lt; U\"Scene::Center(): \" &lt;&lt; Scene::Center();\nPrint &lt;&lt; U\"Scene::CenterF(): \" &lt;&lt; Scene::CenterF();\nPrint &lt;&lt; U\"Scene::Rect(): \" &lt;&lt; Scene::Rect();\n}\n}\n</code></pre>"},{"location":"tutorial2/scene/#\u2461-\u4eee\u60f3\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba","title":"\u2461 \u4eee\u60f3\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba","text":"<p>\u30e6\u30fc\u30b6\u306e\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u4e0a\u306b\u304a\u3051\u308b\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9818\u57df\uff08\u30bf\u30a4\u30c8\u30eb\u30d0\u30fc\u3084\u30d5\u30ec\u30fc\u30e0\u3092\u9664\u304f\u3001\u63cf\u753b\u304c\u884c\u308f\u308c\u308b\u9818\u57df\uff09\u306e\u898b\u304b\u3051\u306e\u30b5\u30a4\u30ba\u3067\u3059\u3002<code>Window::GetState().virtualSize</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u4eee\u60f3\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306b OS \u8a2d\u5b9a\u306e\u62e1\u5927\u7e2e\u5c0f\u500d\u7387 (150%, 200% \u306a\u3069) \u3092\u4e57\u7b97\u3057\u305f\u3082\u306e\u304c\u3001\u5f8c\u8ff0\u3059\u308b\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>Linux \u7248\u3067\u306e\u6ce8\u610f</p> <p>\u73fe\u5728\u306e Siv3D Linux \u7248\u306f OS \u8a2d\u5b9a\u306e\u62e1\u5927\u7e2e\u5c0f\u500d\u7387\u306b\u672a\u5bfe\u5fdc\u3067\u3059\u3002\u4eee\u60f3\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3068\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306f\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"tutorial2/scene/#\u2462-\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30b5\u30a4\u30ba","title":"\u2462 \u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\uff08\u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30b5\u30a4\u30ba\uff09","text":"<p>\u30e2\u30cb\u30bf\u4e0a\u306e\u5b9f\u30d4\u30af\u30bb\u30eb\u6570\u3067\u8a08\u6e2c\u3057\u305f\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9818\u57df\u306e\u30b5\u30a4\u30ba\u3067\u3059\u3002<code>Window::GetState().frameBufferSize</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"scene size: \" &lt;&lt; Scene::Size();\nPrint &lt;&lt; U\"virtualSize: \" &lt;&lt; Window::GetState().virtualSize;\nPrint &lt;&lt; U\"frameBufferSize: \" &lt;&lt; Window::GetState().frameBufferSize;\n}\n}\n</code></pre>"},{"location":"tutorial2/scene/#\u4e09\u3064\u306e\u30b5\u30a4\u30ba\u306e\u95a2\u4fc2","title":"\u4e09\u3064\u306e\u30b5\u30a4\u30ba\u306e\u95a2\u4fc2","text":"<p>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a2d\u5b9a\u3067\u306f\u3001\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u306f\u4eee\u60f3\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3068\u9023\u52d5\u3057\u307e\u3059\u3002</p> <p>\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3068\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u304c\u7570\u306a\u308b\u5834\u5408\u3067\u3082\u3001Siv3D \u306f\u30b7\u30fc\u30f3\u753b\u50cf\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9818\u57df\u306b\u8ee2\u9001\u3059\u308b\u969b\u306b\u81ea\u52d5\u7684\u306b\u62e1\u5927\u7e2e\u5c0f\u3092\u884c\u3044\u3001\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u3092\u4fdd\u3063\u305f\u307e\u307e\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9818\u57df\u306b\u30d5\u30a3\u30c3\u30c8\u3059\u308b\u3088\u3046\u8868\u793a\u3059\u308b\u305f\u3081\u3001\u30e6\u30fc\u30b6\u306f\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3092\u610f\u8b58\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <p>\u4f8b\u3048\u3070 OS \u8a2d\u5b9a\u306e\u62e1\u5927\u7e2e\u5c0f\u500d\u7387\u304c 200% \u3067\u3001\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u304c 1600x1200 \u3067\u3042\u3063\u3066\u3082\u3001\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u306f 800x600 \u3092\u524d\u63d0\u3068\u3057\u3066\u63cf\u753b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> OS \u8a2d\u5b9a\u306e\u62e1\u5927\u7e2e\u5c0f\u500d\u7387 \u2460 \u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba \u2461 \u4eee\u60f3\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba \u2462 \u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba 100% 800x600 800x600 800x600 125% 800x600 800x600 1000x750 150% 800x600 800x600 1200x900 200% 800x600 800x600 1600x1200 <p>\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306b\u6cbf\u3063\u305f\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3067\u9ad8\u7cbe\u7d30\u306a\u63cf\u753b\u3092\u884c\u3044\u305f\u3044\u5834\u5408\u306f\u300132.2 \u3067\u8aac\u660e\u3059\u308b\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9 <code>ResizeMode::Actual</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial2/scene/#322-\u30b7\u30fc\u30f3\u306e\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9","title":"32.2 \u30b7\u30fc\u30f3\u306e\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9","text":"<p>\u30e6\u30fc\u30b6\u304c\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u30de\u30a6\u30b9\u3067\u30ea\u30b5\u30a4\u30ba\u3057\u305f\u308a\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u30ea\u30b5\u30a4\u30ba\u3059\u308b\u95a2\u6570\u3092\u547c\u3093\u3060\u308a\u3059\u308b\u3068\u3001\u4eee\u60f3\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3068\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306e 2 \u3064\u304c\u5909\u5316\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3053\u308c\u3089\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306b\u5fdc\u3058\u3066\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3082\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\u3069\u306e\u3088\u3046\u306b\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3092\u66f4\u65b0\u3059\u308b\u304b\u3092\u6c7a\u3081\u308b\u306e\u304c\u3001\u30b7\u30fc\u30f3\u306e\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9\u3067\u3059\u3002\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9\u306f\u6b21\u306e 3 \u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u4eee\u60f3\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3068\u4e00\u81f4\u3059\u308b\u3088\u3046\u306b\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3092\u66f4\u65b0\u3059\u308b\u30e2\u30fc\u30c9 <code>ResizeMode::Virtual</code> \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p> \u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9 \u8aac\u660e <code>ResizeMode::Virtual</code> \u4eee\u60f3\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3068\u4e00\u81f4\u3059\u308b\u3088\u3046\u306b\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3092\u66f4\u65b0\u3057\u307e\u3059\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09\u3002 <code>ResizeMode::Actual</code> \u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3068\u4e00\u81f4\u3059\u308b\u3088\u3046\u306b\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002 <code>ResizeMode::Keep</code> \u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3092\u66f4\u65b0\u3057\u307e\u305b\u3093\u3002 <p>\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9\u306f <code>Scene::SetResizeMode(ResizeMode)</code> \u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u73fe\u5728\u306e\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9\u306f <code>Scene::GetResizeMode()</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"tutorial2/scene/#323-\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30ea\u30b5\u30a4\u30ba","title":"32.3 \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30ea\u30b5\u30a4\u30ba","text":"<p><code>Window::Resize(\u5e45, \u9ad8\u3055)</code> \u307e\u305f\u306f <code>Window::Resize(\u30b5\u30a4\u30ba)</code> \u3067\u3001\u4eee\u60f3\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3068\u3082\u306a\u3044\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3082\u5909\u66f4\u3055\u308c\u3001\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9\u306b\u5fdc\u3058\u3066\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3082\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002</p> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9 <code>ResizeMode::Virtual</code> \u304c\u9069\u7528\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001<code>Window::Resize()</code> \u3067\u6307\u5b9a\u3057\u305f\u4eee\u60f3\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u304c\u65b0\u3057\u3044\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1000, 600);\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"scene size: \" &lt;&lt; Scene::Size();\nPrint &lt;&lt; U\"virtualSize: \" &lt;&lt; Window::GetState().virtualSize;\nPrint &lt;&lt; U\"frameBufferSize: \" &lt;&lt; Window::GetState().frameBufferSize;\n// 100px \u30b5\u30a4\u30ba\u306e\u5e02\u677e\u6a21\u69d8\nfor (int32 y = 0; y &lt; 50; ++y)\n{\nfor (int32 x = 0; x &lt; 50; ++x)\n{\nif ((x + y) % 2)\n{\nRect{ (x * 100), (y * 100), 100 }.draw(ColorF{ 0.2, 0.3, 0.4 });\n}\n}\n}\n}\n}\n</code></pre> <p>\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9 <code>ResizeMode::Keep</code> \u304c\u9069\u7528\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001<code>Window::Resize()</code> \u3092\u884c\u3063\u3066\u3082\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u306f\u5909\u5316\u3057\u307e\u305b\u3093\u3002\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3068\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306e\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u304c\u7570\u306a\u308b\u5834\u5408\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9818\u57df\u306e\u5de6\u53f3\u3082\u3057\u304f\u306f\u4e0a\u4e0b\u306b\u30ec\u30bf\u30fc\u30dc\u30c3\u30af\u30b9\u3068\u547c\u3070\u308c\u308b\u4f59\u767d\u9818\u57df\u304c\u751f\u3058\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetResizeMode(ResizeMode::Keep);\nWindow::Resize(1000, 600);\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"scene size: \" &lt;&lt; Scene::Size();\nPrint &lt;&lt; U\"virtualSize: \" &lt;&lt; Window::GetState().virtualSize;\nPrint &lt;&lt; U\"frameBufferSize: \" &lt;&lt; Window::GetState().frameBufferSize;\n// 100px \u30b5\u30a4\u30ba\u306e\u5e02\u677e\u6a21\u69d8\nfor (int32 y = 0; y &lt; 50; ++y)\n{\nfor (int32 x = 0; x &lt; 50; ++x)\n{\nif ((x + y) % 2)\n{\nRect{ (x * 100), (y * 100), 100 }.draw(ColorF{ 0.2, 0.3, 0.4 });\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/scene/#324-\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u624b\u52d5\u3067\u30ea\u30b5\u30a4\u30ba\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b","title":"32.4 \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u624b\u52d5\u3067\u30ea\u30b5\u30a4\u30ba\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b","text":"<p><code>Window::SetStyle(WindowStyle::Sizable)</code> \u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u3064\u304b\u3093\u3067\u30ea\u30b5\u30a4\u30ba\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u30e6\u30fc\u30b6\u306e\u64cd\u4f5c\u306b\u3088\u3063\u3066\u4eee\u60f3\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba / \u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u3001\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9\u306b\u5fdc\u3058\u3066\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3082\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002</p> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9 <code>ResizeMode::Virtual</code> \u304c\u9069\u7528\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u4eee\u60f3\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u304c\u65b0\u3057\u3044\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::SetStyle(WindowStyle::Sizable);\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"scene size: \" &lt;&lt; Scene::Size();\nPrint &lt;&lt; U\"virtualSize: \" &lt;&lt; Window::GetState().virtualSize;\nPrint &lt;&lt; U\"frameBufferSize: \" &lt;&lt; Window::GetState().frameBufferSize;\n// 100px \u30b5\u30a4\u30ba\u306e\u5e02\u677e\u6a21\u69d8\nfor (int32 y = 0; y &lt; 50; ++y)\n{\nfor (int32 x = 0; x &lt; 50; ++x)\n{\nif ((x + y) % 2)\n{\nRect{ (x * 100), (y * 100), 100 }.draw(ColorF{ 0.2, 0.3, 0.4 });\n}\n}\n}\n}\n}\n</code></pre> <p>\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9 <code>ResizeMode::Keep</code> \u304c\u9069\u7528\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u624b\u52d5\u3067\u30ea\u30b5\u30a4\u30ba\u3057\u3066\u3082\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u306f\u5909\u5316\u3057\u307e\u305b\u3093\u3002\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3068\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306e\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u304c\u7570\u306a\u308b\u5834\u5408\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9818\u57df\u306e\u5de6\u53f3\u3082\u3057\u304f\u306f\u4e0a\u4e0b\u306b\u30ec\u30bf\u30fc\u30dc\u30c3\u30af\u30b9\u304c\u751f\u3058\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetResizeMode(ResizeMode::Keep);\nWindow::SetStyle(WindowStyle::Sizable);\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"scene size: \" &lt;&lt; Scene::Size();\nPrint &lt;&lt; U\"virtualSize: \" &lt;&lt; Window::GetState().virtualSize;\nPrint &lt;&lt; U\"frameBufferSize: \" &lt;&lt; Window::GetState().frameBufferSize;\n// 100px \u30b5\u30a4\u30ba\u306e\u5e02\u677e\u6a21\u69d8\nfor (int32 y = 0; y &lt; 50; ++y)\n{\nfor (int32 x = 0; x &lt; 50; ++x)\n{\nif ((x + y) % 2)\n{\nRect{ (x * 100), (y * 100), 100 }.draw(ColorF{ 0.2, 0.3, 0.4 });\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/scene/#325-\u30ec\u30bf\u30fc\u30dc\u30c3\u30af\u30b9\u306e\u8272\u3092\u5909\u66f4\u3059\u308b","title":"32.5 \u30ec\u30bf\u30fc\u30dc\u30c3\u30af\u30b9\u306e\u8272\u3092\u5909\u66f4\u3059\u308b","text":"<p>\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3068\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306e\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u304c\u7570\u306a\u308b\u969b\u306b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9818\u57df\u306e\u5de6\u53f3\u3082\u3057\u304f\u306f\u4e0a\u4e0b\u306b\u751f\u3058\u308b\u4f59\u767d\u9818\u57df\u3092\u30ec\u30bf\u30fc\u30dc\u30c3\u30af\u30b9\u3068\u8a00\u3044\u307e\u3059\u3002\u30ec\u30bf\u30fc\u30dc\u30c3\u30af\u30b9\u306e\u8272\u3092\u5909\u66f4\u3059\u308b\u306b\u306f <code>Scene::SetLetterbox()</code> \u3067\u8272\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30ec\u30bf\u30fc\u30dc\u30c3\u30af\u30b9\u306e\u8272\u3092\u5909\u66f4\u3059\u308b\nScene::SetLetterbox(ColorF{ 0.8, 0.9, 1.0 });\nScene::SetResizeMode(ResizeMode::Keep);\nWindow::SetStyle(WindowStyle::Sizable);\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"scene size: \" &lt;&lt; Scene::Size();\nPrint &lt;&lt; U\"virtualSize: \" &lt;&lt; Window::GetState().virtualSize;\nPrint &lt;&lt; U\"frameBufferSize: \" &lt;&lt; Window::GetState().frameBufferSize;\n// 100px \u30b5\u30a4\u30ba\u306e\u5e02\u677e\u6a21\u69d8\nfor (int32 y = 0; y &lt; 50; ++y)\n{\nfor (int32 x = 0; x &lt; 50; ++x)\n{\nif ((x + y) % 2)\n{\nRect{ (x * 100), (y * 100), 100 }.draw(ColorF{ 0.2, 0.3, 0.4 });\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/scene/#326-\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3060\u3051\u3092\u5909\u66f4\u3059\u308b","title":"32.6 \u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3060\u3051\u3092\u5909\u66f4\u3059\u308b","text":"<p>\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9\u3092 <code>ResizeMode::Keep</code> \u306b\u3057\u305f\u72b6\u614b\u3067\u3001<code>Scene::Resize()</code> \u3092\u4f7f\u3046\u3068\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306f\u305d\u306e\u307e\u307e\u3067\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3060\u3051\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002</p> <p>\u30b7\u30fc\u30f3\u3068\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u304c\u7570\u306a\u308b\u3068\u304d\u306f\u3001<code>Cursor::Pos()</code> \u306e\u4ee3\u308f\u308a\u306b <code>Cursor::PosF()</code> \u3092\u4f7f\u3046\u3068\u3001\u30b7\u30fc\u30f3\u306e\u62e1\u5927\u7e2e\u5c0f\u306b\u5408\u308f\u305b\u305f <code>Vec2</code> \u578b\u306e\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u5ea7\u6a19\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetResizeMode(ResizeMode::Keep);\n// \u30b7\u30fc\u30f3\u3092 1600x1200 \u306b\u30ea\u30b5\u30a4\u30ba\nScene::Resize(1600, 1200);\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"scene size: \" &lt;&lt; Scene::Size();\nPrint &lt;&lt; U\"virtualSize: \" &lt;&lt; Window::GetState().virtualSize;\nPrint &lt;&lt; U\"frameBufferSize: \" &lt;&lt; Window::GetState().frameBufferSize;\n// \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u5ea7\u6a19\u3092 Vec2 \u578b\u3067\u53d6\u5f97\u3059\u308b\nPrint &lt;&lt; Cursor::PosF();\n// 100px \u30b5\u30a4\u30ba\u306e\u5e02\u677e\u6a21\u69d8\nfor (int32 y = 0; y &lt; 50; ++y)\n{\nfor (int32 x = 0; x &lt; 50; ++x)\n{\nif ((x + y) % 2)\n{\nRect{ (x * 100), (y * 100), 100 }.draw(ColorF{ 0.2, 0.3, 0.4 });\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/scene/#327-\u30b7\u30fc\u30f3\u304c\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u8ee2\u9001\u3055\u308c\u308b\u969b\u306e\u30d5\u30a3\u30eb\u30bf\u3092\u5909\u66f4\u3059\u308b","title":"32.7 \u30b7\u30fc\u30f3\u304c\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u8ee2\u9001\u3055\u308c\u308b\u969b\u306e\u30d5\u30a3\u30eb\u30bf\u3092\u5909\u66f4\u3059\u308b","text":"<p>\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3068\u5b9f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u304c\u7570\u306a\u308b\u5834\u5408\u3001\u30b7\u30fc\u30f3\u753b\u50cf\u306f\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u3092\u4fdd\u3063\u305f\u307e\u307e\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9818\u57df\u306b\u30d5\u30a3\u30c3\u30c8\u3059\u308b\u3088\u3046\u62e1\u5927\u307e\u305f\u306f\u7e2e\u5c0f\u3055\u308c\u3066\u8868\u793a\u3055\u308c\u307e\u3059\u304c\u3001\u62e1\u5927\u7e2e\u5c0f\u6642\u306b\u7528\u3044\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u30d5\u30a3\u30eb\u30bf\u306f 2 \u7a2e\u985e\u306e\u9078\u629e\u80a2\u304c\u3042\u308a\u3001<code>Scene::SetTextureFilter()</code> \u3067\u5909\u66f4\u3067\u304d\u307e\u3059\u3002</p> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30d0\u30a4\u30ea\u30cb\u30a2\u6cd5\u306b\u3088\u308b\u88dc\u9593 <code>TextureFilter::Linear</code> \u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u753b\u50cf\u3092\u6ed1\u3089\u304b\u306b\u62e1\u5927\u7e2e\u5c0f\u3059\u308b\u305f\u3081\u306e\u88dc\u9593\u65b9\u6cd5\u3067\u3059\u3002\u4e00\u65b9\u3001\u4f4e\u89e3\u50cf\u5ea6\u306e\u30b7\u30fc\u30f3\u3092\u3001\u6700\u8fd1\u508d\u6cd5\u306b\u3088\u308b\u88dc\u9593 <code>TextureFilter::Nearest</code> \u30d5\u30a3\u30eb\u30bf\u3067\u62e1\u5927\u3059\u308b\u3068\u3001\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3055\u308c\u305a\u306b\u30c9\u30c3\u30c8\u611f\u3092\u4fdd\u3063\u305f\u307e\u307e\u62e1\u5927\u3067\u304d\u307e\u3059\u3002</p> \u30c6\u30af\u30b9\u30c1\u30e3\u30d5\u30a3\u30eb\u30bf \u8aac\u660e <code>TextureFilter::Linear</code> \u753b\u50cf\u3092\u30d0\u30a4\u30ea\u30cb\u30a2\u88dc\u9593\u3057\u307e\u3059\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09 <code>TextureFilter::Nearest</code> \u753b\u50cf\u3092\u6700\u8fd1\u508d\u6cd5\u3067\u88dc\u9593\u3057\u307e\u3059 \u30d0\u30a4\u30ea\u30cb\u30a2\u6cd5\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09\u6700\u8fd1\u508d\u6cd5 <p></p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetResizeMode(ResizeMode::Keep);\n// \u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u3092 200x150 \u306b\u3059\u308b\nScene::Resize(200, 150);\n// \u30b7\u30fc\u30f3\u8ee2\u9001\u6642\u306e\u62e1\u5927\u7e2e\u5c0f\u65b9\u6cd5\u3092\u6700\u8fd1\u508d\u6cd5\u306b\u3059\u308b\nScene::SetTextureFilter(TextureFilter::Nearest);\nconst Texture texture{ U\"\ud83d\udc08\"_emoji };\nwhile (System::Update())\n{\nCircle{ 120, 75, 50 }.draw();\ntexture.draw();\n}\n}\n</code></pre>"},{"location":"tutorial2/scene/#328-\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u67a0\u3092\u6d88\u3059","title":"32.8 \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u67a0\u3092\u6d88\u3059","text":"<p>\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u67a0\u3092\u975e\u8868\u793a\u306b\u3059\u308b\u306b\u306f\u3001<code>Window::SetStyle()</code> \u3067 <code>WindowStyle::Frameless</code> \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u67a0\u3092\u975e\u8868\u793a\u306b\u3059\u308b\nWindow::SetStyle(WindowStyle::Frameless);\nwhile (System::Update())\n{\nCircle{ Cursor::Pos(), 100 }.draw();\n}\n}\n</code></pre> <p>\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u67a0\u3092\u975e\u8868\u793a\u306b\u3059\u308b\u3068\u3001\u30e6\u30fc\u30b6\u306f\u624b\u52d5\u3067\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u79fb\u52d5\u3001\u30b5\u30a4\u30ba\u5909\u66f4\u3001\u9589\u3058\u308b\u64cd\u4f5c\u306a\u3069\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"tutorial2/scene/#329-\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u5909\u66f4\u3059\u308b","title":"32.9 \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u5909\u66f4\u3059\u308b","text":"<p>\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u5909\u66f4\u3059\u308b\u306b\u306f\u3001<code>Window::SetTitle()</code> \u306b\u6587\u5b57\u5217\u3084\u5024\u3092\u6e21\u3057\u307e\u3059\u3002\u30c7\u30d0\u30c3\u30b0\u30d3\u30eb\u30c9\u6642\u306f\u3001\u30bf\u30a4\u30c8\u30eb\u306e\u307b\u304b\u306b\u3001<code>(Debug Build)</code> \u3068\u3044\u3046\u6587\u5b57\u5217\u3084\u3001\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30b5\u30a4\u30ba\u3001\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u306a\u3069\u306e\u60c5\u5831\u304c\u5408\u308f\u305b\u3066\u8868\u793a\u3055\u308c\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u5909\u66f4\u3059\u308b\nWindow::SetTitle(U\"My Game\");\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p>\u5b9f\u884c\u4e2d\u306b\u30bf\u30a4\u30c8\u30eb\u5909\u66f4\u3092\u983b\u7e41\u306b\u884c\u308f\u306a\u3044</p> <p>\u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\u306e\u5909\u66f4\u306f\u6642\u9593\u306e\u304b\u304b\u308b\u51e6\u7406\u3067\u3042\u308b\u305f\u3081\u3001\u6bce\u30d5\u30ec\u30fc\u30e0 <code>Window::SetTitle()</code> \u3067\u7570\u306a\u308b\u30bf\u30a4\u30c8\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306f\u907f\u3051\u3066\u304f\u3060\u3055\u3044\u3002\u65e2\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30bf\u30a4\u30c8\u30eb\u3068\u540c\u3058\u30bf\u30a4\u30c8\u30eb\u3092 <code>Window::SetTitle()</code> \u306b\u6e21\u3057\u305f\u5834\u5408\u306b\u306f\u4f55\u3082\u3057\u306a\u3044\u305f\u3081\u3001\u30b3\u30b9\u30c8\u306f\u767a\u751f\u3057\u307e\u305b\u3093\u3002</p>"},{"location":"tutorial2/scene/#3210-\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u30b9\u30af\u30ea\u30fc\u30f3\u306e\u4e2d\u5fc3\u306b\u79fb\u52d5\u3059\u308b","title":"32.10 \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u30b9\u30af\u30ea\u30fc\u30f3\u306e\u4e2d\u5fc3\u306b\u79fb\u52d5\u3059\u308b","text":"<p><code>Window::Centering()</code> \u3092\u4f7f\u3046\u3068\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u3001\u73fe\u5728\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u3042\u308b\u30e2\u30cb\u30bf\u306e\u30ef\u30fc\u30af\u30a8\u30ea\u30a2\u306e\u4e2d\u5fc3\u306b\u79fb\u52d5\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Center\", Vec2{ 20, 20 }))\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u4e2d\u5fc3\u306b\u79fb\u52d5\u3055\u305b\u308b\nWindow::Centering();\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/scene/#3211-\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u79fb\u52d5\u3055\u305b\u308b","title":"32.11 \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u79fb\u52d5\u3055\u305b\u308b","text":"<p><code>Window::SetPos()</code> \u3092\u4f7f\u3046\u3068\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u306b\u79fb\u52d5\u3067\u304d\u307e\u3059\u3002\u73fe\u5728\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f4d\u7f6e\u306f <code>Window::GetPos()</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\n// \u30b9\u30af\u30ea\u30fc\u30f3\u4e0a\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f4d\u7f6e\u3092\u8868\u793a\u3059\u308b\nPrint &lt;&lt; Window::GetPos();\nif (SimpleGUI::Button(U\"(0, 0)\", Vec2{ 200, 20 }))\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u30b9\u30af\u30ea\u30fc\u30f3\u306e (0, 0) \u306b\u79fb\u52d5\u3055\u305b\u308b\nWindow::SetPos(0, 0);\n}\nif (SimpleGUI::Button(U\"(200, 200)\", Vec2{ 300, 20 }))\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u30b9\u30af\u30ea\u30fc\u30f3\u306e (200, 200) \u306b\u79fb\u52d5\u3055\u305b\u308b\nWindow::SetPos(200, 200);\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/scene/#3212-\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u6700\u5c0f\u5316--\u6700\u5927\u5316\u3059\u308b","title":"32.12 \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u6700\u5c0f\u5316 / \u6700\u5927\u5316\u3059\u308b","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3088\u3063\u3066\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u6700\u5c0f\u5316\u3059\u308b\u306b\u306f <code>Window::Minimize()</code> \u3092\u3001\u6700\u5927\u5316\u3059\u308b\u306b\u306f <code>Window::Maximize()</code> \u3092\u547c\u3073\u307e\u3059\u3002\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u6700\u5927\u5316\u3059\u308b\u5834\u5408\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u30b9\u30bf\u30a4\u30eb\u304c <code>WindowStyle::Sizable</code> \u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u6700\u5c0f\u5316 / \u6700\u5927\u5316\u3057\u305f\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u4ee5\u524d\u306e\u30b5\u30a4\u30ba\u306b\u623b\u3059\u3068\u304d\u306f <code>Window::Restore()</code> \u3092\u547c\u3073\u307e\u3059\u3002</p> <p>\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u6700\u5c0f\u5316\u3055\u308c\u3066\u3044\u308b\u304b\u306f <code>Window::GetState().minimized</code> \u3067\u3001\u6700\u5927\u5316\u3055\u308c\u3066\u3044\u308b\u304b\u306f <code>Window::GetState().maximized</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u6700\u5927\u5316\u3092\u53ef\u80fd\u306b\u3059\u308b\nWindow::SetStyle(WindowStyle::Sizable);\n// \u6700\u5c0f\u5316\u4e2d\u306b\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u5909\u6570\nint32 count = 0;\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"scene size: \" &lt;&lt; Scene::Size();\nPrint &lt;&lt; U\"virtualSize: \" &lt;&lt; Window::GetState().virtualSize;\nPrint &lt;&lt; U\"frameBufferSize: \" &lt;&lt; Window::GetState().frameBufferSize;\nPrint &lt;&lt; U\"minimized: \" &lt;&lt; count;\nPrint &lt;&lt; U\"maximized: \" &lt;&lt; Window::GetState().maximized;\nif (Window::GetState().minimized)\n{\n++count;\n}\n// 100px \u30b5\u30a4\u30ba\u306e\u5e02\u677e\u6a21\u69d8\nfor (int32 y = 0; y &lt; 50; ++y)\n{\nfor (int32 x = 0; x &lt; 50; ++x)\n{\nif ((x + y) % 2)\n{\nRect{ x * 100, y * 100, 100 }.draw(ColorF{ 0.2, 0.3, 0.4 });\n}\n}\n}\nif (SimpleGUI::Button(U\"Minimize\", Vec2{ 300, 40 }))\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u6700\u5c0f\u5316\u3059\u308b\nWindow::Minimize();\n}\nif (SimpleGUI::Button(U\"Maximize\", Vec2{ 300, 80 }))\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u6700\u5927\u5316\u3059\u308b\nWindow::Maximize();\n}\nif (SimpleGUI::Button(U\"Restore\", Vec2{ 300, 120 }))\n{\n// \u6700\u5c0f\u5316 / \u6700\u5927\u5316\u3055\u308c\u305f\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u5143\u306e\u30b5\u30a4\u30ba\u306b\u623b\u3059\nWindow::Restore();\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/scene/#3213-\u30e2\u30cb\u30bf\u306e\u60c5\u5831\u3092\u5f97\u308b","title":"32.13 \u30e2\u30cb\u30bf\u306e\u60c5\u5831\u3092\u5f97\u308b","text":"<p>\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u30e2\u30cb\u30bf\u306e\u60c5\u5831\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f <code>System::EnumerateMonitors()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u7d50\u679c\u306f <code>Array&lt;MonitorInfo&gt;</code> \u578b\u3067\u5f97\u3089\u308c\u307e\u3059\u3002</p> <p><code>MonitorInfo</code> \u578b\u306e\u30e1\u30f3\u30d0\u5909\u6570\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002</p> \u5909\u6570 \u8aac\u660e <code>String name</code> \u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u540d\u524d <code>String id</code> \u30c7\u30a3\u30b9\u30d7\u30ec\u30a4 ID <code>String displayDeviceName</code> \u5185\u90e8\u7684\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u540d\u524d <code>Rect displayRect</code> \u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u5168\u4f53\u306e\u4f4d\u7f6e\u3068\u30b5\u30a4\u30ba <code>Rect workArea</code> \u30bf\u30b9\u30af\u30d0\u30fc\u306a\u3069\u3092\u9664\u3044\u305f\u5229\u7528\u53ef\u80fd\u306a\u9818\u57df\u306e\u4f4d\u7f6e\u3068\u30b5\u30a4\u30ba <code>Size fullscreenResolution</code> \u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u6642\u306e\u89e3\u50cf\u5ea6 <code>bool isPrimary</code> \u30e1\u30a4\u30f3\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3067\u3042\u308b\u5834\u5408 <code>true</code>, \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f <code>false</code> <code>Optional&lt;Size&gt; sizeMillimeter</code> \u7269\u7406\u7684\u306a\u30b5\u30a4\u30ba (mm), \u53d6\u5f97\u3067\u304d\u306a\u304b\u3063\u305f\u5834\u5408\u306f <code>none</code> <code>Optional&lt;double&gt; scaling</code> UI \u306e\u62e1\u5927\u500d\u7387\u3002\u53d6\u5f97\u3067\u304d\u306a\u304b\u3063\u305f\u5834\u5408\u306f <code>none</code> <code>Optional&lt;double&gt; refreshRate</code> \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30ec\u30fc\u30c8\u3002\u53d6\u5f97\u3067\u304d\u306a\u304b\u3063\u305f\u5834\u5408\u306f <code>none</code> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u30e2\u30cb\u30bf\u306e\u60c5\u5831\u4e00\u89a7\u3092\u53d6\u5f97\nconst Array&lt;MonitorInfo&gt; monitors = System::EnumerateMonitors();\nfor (const auto&amp; monitor : monitors)\n{\nPrint &lt;&lt; U\"name: \" &lt;&lt; monitor.name;\nPrint &lt;&lt; U\"displayRect: \" &lt;&lt; monitor.displayRect &lt;&lt; U\" workArea: \" &lt;&lt; monitor.workArea;\nPrint &lt;&lt; U\"fullscreenResolution: \" &lt;&lt; monitor.fullscreenResolution &lt;&lt; U\" sizeMillimeter: \" &lt;&lt; monitor.sizeMillimeter;\nPrint &lt;&lt; U\"scaling: \" &lt;&lt; monitor.scaling &lt;&lt; U\" refreshRate: \" &lt;&lt; monitor.refreshRate;\nPrint &lt;&lt; U\"isPrimary: \" &lt;&lt; monitor.isPrimary;\nPrint &lt;&lt; U\"-----\";\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p>\u73fe\u5728\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u5b58\u5728\u3059\u308b\u30e2\u30cb\u30bf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f <code>System::GetCurrentMonitorIndex()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f <code>System::EnumerateMonitors()</code> \u306e\u623b\u308a\u5024\u306e\u914d\u5217\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; System::GetCurrentMonitorIndex();\n}\n}\n</code></pre>"},{"location":"tutorial2/scene/#3214-\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u30e2\u30fc\u30c9\u306b\u3059\u308b","title":"32.14 \u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u30e2\u30fc\u30c9\u306b\u3059\u308b","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u30e2\u30fc\u30c9\u306b\u3059\u308b\u306b\u306f <code>Window::SetFullscreen(true)</code> \u3092\u547c\u3073\u307e\u3059\u3002\u30a6\u30a3\u30f3\u30c9\u30a6\u30e2\u30fc\u30c9\u306b\u623b\u3059\u306b\u306f <code>Window::SetFullscreen(false)</code> \u3092\u547c\u3073\u307e\u3059\u3002\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u6271\u3063\u3066\u3044\u307e\u305b\u3093\u304c\u3001<code>Window::SetFullscreen(true)</code> \u306e\u7b2c 2 \u5f15\u6570\u306b\u306f\u3001\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u3067\u8868\u793a\u3059\u308b\u5148\u306e\u30e2\u30cb\u30bf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002</p> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u30e2\u30fc\u30c9\u3067\u3042\u308b\u304b\u306f <code>Window::GetState().fullscreen</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"scene size: \" &lt;&lt; Scene::Size();\nPrint &lt;&lt; U\"virtualSize: \" &lt;&lt; Window::GetState().virtualSize;\nPrint &lt;&lt; U\"frameBufferSize: \" &lt;&lt; Window::GetState().frameBufferSize;\nPrint &lt;&lt; U\"fullscreen: \" &lt;&lt; Window::GetState().fullscreen;\n// 100px \u30b5\u30a4\u30ba\u306e\u5e02\u677e\u6a21\u69d8\nfor (int32 y = 0; y &lt; 50; ++y)\n{\nfor (int32 x = 0; x &lt; 50; ++x)\n{\nif ((x + y) % 2)\n{\nRect{ x * 100, y * 100, 100 }.draw(ColorF{ 0.2, 0.3, 0.4 });\n}\n}\n}\nif (Window::GetState().fullscreen)\n{\nif (SimpleGUI::Button(U\"Window mode\", Vec2{ 300, 20 }))\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u30e2\u30fc\u30c9\u306b\u3059\u308b\nWindow::SetFullscreen(false);\n}\n}\nelse\n{\nif (SimpleGUI::Button(U\"Fullscreen mode\", Vec2{ 300, 20 }))\n{\n// \u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u30e2\u30fc\u30c9\u306b\u3059\u308b\nWindow::SetFullscreen(true);\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/scene/#3215-\u5168\u753b\u9762\u30e2\u30fc\u30c9\u306b\u3059\u308bwindows-\u7248","title":"32.15 \u5168\u753b\u9762\u30e2\u30fc\u30c9\u306b\u3059\u308b\uff08Windows \u7248\uff09","text":"<p>Windows \u7248\u3067\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u4e2d\u306b Alt+Enter \u3092\u62bc\u3059\u3053\u3068\u3067\u5168\u753b\u9762\u30e2\u30fc\u30c9\u306b\u3067\u304d\u307e\u3059\u3002\u6319\u52d5\u3068\u3057\u3066\u306f\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u30e2\u30fc\u30c9\u306b\u8fd1\u3044\u3067\u3059\u304c\u3001\u30b7\u30fc\u30f3\u306e\u30ea\u30b5\u30a4\u30ba\u30e2\u30fc\u30c9\u306f <code>Resize::Keep</code> \u306b\u8a2d\u5b9a\u3055\u308c\u3001\u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u304c\u5909\u5316\u3057\u307e\u305b\u3093\u3002\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u30e2\u30fc\u30c9\u3084\u89e3\u50cf\u5ea6\u306e\u5909\u66f4\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3001\u5168\u753b\u9762\u3067\u5927\u304d\u304f\u8868\u793a\u3057\u3066\u5b9f\u884c\u3057\u305f\u3044\u3068\u304d\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u3053\u306e\u30ad\u30fc\u64cd\u4f5c\u3092\u7121\u52b9\u306b\u3059\u308b\u306b\u306f <code>Window::SetToggleFullscreenEnabled(false)</code> \u3092\u547c\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial2/shape/","title":"17. \u56f3\u5f62\u3092\u63cf\u304f","text":"<p>Siv3D \u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3055\u307e\u3056\u307e\u306a 2D \u56f3\u5f62\u306e\u63cf\u753b\u6a5f\u80fd\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial2/shape/#171-\u5186\u3092\u63cf\u304f","title":"17.1 \u5186\u3092\u63cf\u304f","text":"<p><code>Circle</code> \u306f\u6b21\u306e\u3088\u3046\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u534a\u5f84\u304c\u8ca0\u306e\u6642\u306e\u6319\u52d5\u306f\u672a\u898f\u5b9a\u3067\u3059\u3002</p> \u30b3\u30fc\u30c9 \u8aac\u660e <code>Circle{ X \u5ea7\u6a19, Y \u5ea7\u6a19, \u534a\u5f84 }</code> \u4e2d\u5fc3\u5ea7\u6a19\u3068\u534a\u5f84\u304b\u3089\u5186\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Circle{ \u4e2d\u5fc3\u5ea7\u6a19, \u534a\u5f84 }</code> \u4e2d\u5fc3\u5ea7\u6a19\u3068\u534a\u5f84\u304b\u3089\u5186\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>point.asCircle(\u534a\u5f84)</code> <code>Point</code> \u578b\u306e\u5024\u3092\u4e2d\u5fc3\u5ea7\u6a19\u3068\u3057\u3066\u3001\u534a\u5f84\u3092\u6307\u5b9a\u3057\u3066\u5186\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>vec2.asCircle(\u534a\u5f84)</code> <code>Vec2</code> \u578b\u306e\u5024\u3092\u4e2d\u5fc3\u5ea7\u6a19\u3068\u3057\u3066\u3001\u534a\u5f84\u3092\u6307\u5b9a\u3057\u3066\u5186\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <p>\u4f5c\u6210\u3057\u305f\u5186\u306f <code>.draw()</code> \u3067\u63cf\u753b\u3067\u304d\u307e\u3059\u3002</p> \u30b3\u30fc\u30c9 \u8aac\u660e <code>.draw(\u8272)</code> \u5186\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.draw(\u5185\u5074\u306e\u8272, \u5916\u5074\u306e\u8272)</code> \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u5186\u3092\u63cf\u304d\u307e\u3059\u3002 <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nwhile (System::Update())\n{\n// \u4e2d\u5fc3\u304c (200, 300)\u3001\u534a\u5f84\u304c 80 \u306e\u5186\u3092\u63cf\u304f\nCircle{ 200, 300, 80 }.draw(ColorF{ 0.8 });\n// \u4e2d\u5fc3\u304c\u767d\u3001\u5916\u5074\u304c\u30aa\u30ec\u30f3\u30b8\u306e\u5186\u3092\u63cf\u304f\nCircle{ Vec2{ 400, 300 }, 60 }.draw(ColorF{ 1.0 }, ColorF{ 1.0, 0.6, 0.4 });\n// \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u4f4d\u7f6e\u3092\u4e2d\u5fc3\u3068\u3059\u308b\u534a\u5f84 40 \u306e\u5186\u3092\u63cf\u304f\nCursor::Pos().asCircle(40).draw(ColorF{ 0.4 });\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#172-\u5186\u306e\u67a0\u3092\u63cf\u304f","title":"17.2 \u5186\u306e\u67a0\u3092\u63cf\u304f","text":"<p><code>Circle</code> \u306e <code>.drawFrame()</code> \u3092\u4f7f\u3046\u3068\u3001\u5186\u306e\u67a0\u3092\u63cf\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u592a\u3055\u304c\u6b63\u5e38\u306a\u7bc4\u56f2\u306b\u306a\u3044\u5834\u5408\u306e\u6319\u52d5\u306f\u672a\u898f\u5b9a\u3067\u3059\u3002</p> <p><code>.draw()</code> \u3084 <code>.drawFrame()</code> \u306e\u623b\u308a\u5024\u306f\u305d\u306e\u5186\u81ea\u8eab\u3067\u3042\u308b\u305f\u3081\u3001<code>circle.draw().drawFrame()</code> \u306e\u3088\u3046\u306b\u95a2\u6570\u3092\u7d9a\u3051\u3066\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> \u30b3\u30fc\u30c9 \u8aac\u660e <code>.drawFrame(\u67a0\u306e\u592a\u3055, \u8272)</code> \u5186\u306e\u67a0\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.drawFrame(\u67a0\u306e\u592a\u3055, \u5185\u5074\u306e\u8272, \u5916\u5074\u306e\u8272)</code> \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u5186\u306e\u67a0\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.drawFrame(\u5185\u5074\u306e\u592a\u3055, \u5916\u5074\u306e\u592a\u3055, \u8272)</code> \u5186\u306e\u67a0\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.drawFrame(\u5185\u5074\u306e\u592a\u3055, \u5916\u5074\u306e\u592a\u3055, \u5185\u5074\u306e\u8272, \u5916\u5074\u306e\u8272)</code> \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u5186\u306e\u67a0\u3092\u63cf\u304d\u307e\u3059\u3002 <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nwhile (System::Update())\n{\nCircle{ 200, 300, 80 }.drawFrame(10, Palette::Seagreen);\nCircle{ 400, 300, 80 }.drawFrame(10, 10, Palette::Seagreen);\nCircle{ 600, 300, 80 }.drawFrame(40, ColorF{ 0.2 }, ColorF{ 1.0 });\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#173-\u6247\u578b\u3092\u63cf\u304f","title":"17.3 \u6247\u578b\u3092\u63cf\u304f","text":"<p><code>Circle</code> \u306e <code>.drawPie()</code> \u3092\u4f7f\u3046\u3068\u3001\u6247\u578b\u3092\u63cf\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u89d2\u5ea6\u306f\u30e9\u30b8\u30a2\u30f3\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002</p> \u30b3\u30fc\u30c9 \u8aac\u660e <code>.drawPie(\u958b\u59cb\u89d2\u5ea6, \u6247\u306e\u89d2\u5ea6, \u8272)</code> \u6247\u578b\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.drawPie(\u958b\u59cb\u89d2\u5ea6, \u6247\u306e\u89d2\u5ea6, \u5185\u5074\u306e\u8272, \u5916\u5074\u306e\u8272)</code> \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u6247\u578b\u3092\u63cf\u304d\u307e\u3059\u3002 <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nwhile (System::Update())\n{\nCircle{ 200, 300, 100 }.drawPie(0_deg, 90_deg, ColorF{ 1.0 });\nCircle{ 400, 300, 200 }.drawPie(-30_deg, 60_deg, ColorF{ 0.25 });\nCircle{ 600, 300, 100 }.drawPie(120_deg, 120_deg, ColorF{ 0.1, 0.3, 0.1 }, ColorF{ 0.3, 1.0, 0.6 });\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#174-\u5186\u5f27\u3092\u63cf\u304f","title":"17.4 \u5186\u5f27\u3092\u63cf\u304f","text":"<p><code>Circle</code> \u306e <code>.drawArc()</code> \u3092\u4f7f\u3046\u3068\u3001\u5186\u5f27\u3092\u63cf\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u89d2\u5ea6\u306f\u30e9\u30b8\u30a2\u30f3\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u592a\u3055\u304c\u6b63\u5e38\u306a\u7bc4\u56f2\u306b\u306a\u3044\u5834\u5408\u306e\u6319\u52d5\u306f\u672a\u898f\u5b9a\u3067\u3059\u3002</p> \u30b3\u30fc\u30c9 \u8aac\u660e <code>.drawArc(\u958b\u59cb\u89d2\u5ea6, \u5186\u5f27\u306e\u89d2\u5ea6, \u5185\u5074\u306e\u592a\u3055, \u5916\u5074\u306e\u592a\u3055, \u8272)</code> \u5186\u5f27\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.drawArc(\u958b\u59cb\u89d2\u5ea6, \u5186\u5f27\u306e\u89d2\u5ea6, \u5185\u5074\u306e\u592a\u3055, \u5916\u5074\u306e\u592a\u3055, \u5185\u5074\u306e\u8272, \u5916\u5074\u306e\u8272)</code> \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u5186\u5f27\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.drawArc(LineStyle::RoundCap, \u958b\u59cb\u89d2\u5ea6, \u5186\u5f27\u306e\u89d2\u5ea6, \u5185\u5074\u306e\u592a\u3055, \u5916\u5074\u306e\u592a\u3055, \u8272)</code> \u4e21\u7aef\u304c\u4e38\u3044\u5186\u5f27\u3092\u63cf\u304d\u307e\u3059\u3002 <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nwhile (System::Update())\n{\nCircle{ 200, 300, 100 }.drawArc(0_deg, 240_deg, 2, 2, ColorF{ 0.25 });\nCircle{ 400, 300, 200 }.drawArc(-30_deg, 60_deg, 20, 20, ColorF{ 0.25 }, ColorF{ 1.0, 1.0, 0.0 });\nCircle{ 600, 300, 100 }.drawArc(LineStyle::RoundCap, 120_deg, 120_deg, 30, 30, ColorF{ 0.1, 0.3, 0.1 });\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#175-\u5f13\u5f62\u3092\u63cf\u304f","title":"17.5 \u5f13\u5f62\u3092\u63cf\u304f","text":"<p><code>Circle</code> \u306e <code>.drawSegment()</code> \u307e\u305f\u306f <code>.drawSegmentFromAngles()</code> \u3092\u4f7f\u3046\u3068\u3001\u5f13\u5f62\u3092\u63cf\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u89d2\u5ea6\u306f\u30e9\u30b8\u30a2\u30f3\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002</p> \u30b3\u30fc\u30c9 \u8aac\u660e <code>.drawSegment(\u5f27\u306e\u4e2d\u5fc3\u306e\u65b9\u5411, \u5f27\u306e\u89d2\u5ea6, \u8272)</code> \u5f13\u5f62\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.drawSegment(\u5f27\u306e\u958b\u59cb\u89d2\u5ea6, \u5f27\u306e\u89d2\u5ea6, \u8272)</code> \u5f13\u5f62\u3092\u63cf\u304d\u307e\u3059\u3002 <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nwhile (System::Update())\n{\nCircle{ 150, 200, 100 }\n.drawSegment(0_deg, 60, ColorF{ 0.9 });\nCircle{ 400, 200, 100 }\n.drawSegment(30_deg, 60, ColorF{ 0.9 });\nCircle{ 650, 200, 100 }\n.drawSegment(60_deg, 60, ColorF{ 0.9 });\nCircle{ 150, 400, 100 }\n.drawSegment(120_deg, 60, ColorF{ 0.25 });\nCircle{ 400, 400, 100 }\n.drawSegmentFromAngles(60_deg, 240_deg, ColorF{ 0.25 });\nCircle{ 650, 400, 100 }\n.drawSegmentFromAngles(90_deg, 120_deg, ColorF{ 0.25 });\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#176-\u9577\u65b9\u5f62\u3092\u63cf\u304f","title":"17.6 \u9577\u65b9\u5f62\u3092\u63cf\u304f","text":"<p><code>Rect</code> \u304a\u3088\u3073 <code>RectF</code> \u306f\u6b21\u306e\u3088\u3046\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u5e45\u3068\u9ad8\u3055\u304c\u8ca0\u306e\u6642\u306e\u6319\u52d5\u306f\u672a\u898f\u5b9a\u3067\u3059\u3002\u300c\u5e45\u3068\u9ad8\u3055\u300d\u3067\u4f7f\u3048\u308b <code>Size</code>, <code>SizeF</code> \u306f\u3001<code>Point</code>, <code>Vec2</code> \u306e\u5225\u540d\u3067\u3059\u3002</p> \u30b3\u30fc\u30c9 \u8aac\u660e <code>Rect{ \u5de6\u4e0a\u306e X \u5ea7\u6a19, \u5de6\u4e0a\u306e Y \u5ea7\u6a19, \u5e45, \u9ad8\u3055 }</code><code>RectF{ \u5de6\u4e0a\u306e X \u5ea7\u6a19, \u5de6\u4e0a\u306e Y \u5ea7\u6a19, \u5e45, \u9ad8\u3055 }</code> \u9577\u65b9\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Rect{ \u5de6\u4e0a\u306e X \u5ea7\u6a19, \u5de6\u4e0a\u306e Y \u5ea7\u6a19, \u5e45\u3068\u9ad8\u3055 }</code><code>RectF{ \u5de6\u4e0a\u306e X \u5ea7\u6a19, \u5de6\u4e0a\u306e Y \u5ea7\u6a19, \u5e45\u3068\u9ad8\u3055 }</code> \u9577\u65b9\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Rect{ \u5de6\u4e0a\u306e X \u5ea7\u6a19, \u5de6\u4e0a\u306e Y \u5ea7\u6a19, \u4e00\u8fba\u306e\u9577\u3055 }</code><code>RectF{ \u5de6\u4e0a\u306e X \u5ea7\u6a19, \u5de6\u4e0a\u306e Y \u5ea7\u6a19, \u4e00\u8fba\u306e\u9577\u3055 }</code> \u6b63\u65b9\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Rect{ \u5de6\u4e0a\u306e\u5ea7\u6a19, \u5e45, \u9ad8\u3055 }</code><code>RectF{ \u5de6\u4e0a\u306e\u5ea7\u6a19, \u5e45, \u9ad8\u3055 }</code> \u9577\u65b9\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Rect{ \u5de6\u4e0a\u306e\u5ea7\u6a19, \u5e45\u3068\u9ad8\u3055 }</code><code>RectF{ \u5de6\u4e0a\u306e\u5ea7\u6a19, \u5e45\u3068\u9ad8\u3055 }</code> \u9577\u65b9\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Rect{ \u5de6\u4e0a\u306e\u5ea7\u6a19, \u4e00\u8fba\u306e\u9577\u3055 }</code><code>RectF{ \u5de6\u4e0a\u306e\u5ea7\u6a19, \u4e00\u8fba\u306e\u9577\u3055 }</code> \u6b63\u65b9\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Rect{ Arg::center(\u4e2d\u5fc3\u5ea7\u6a19), \u5e45, \u9ad8\u3055 }</code><code>RectF{ Arg::center(\u4e2d\u5fc3\u5ea7\u6a19), \u5e45, \u9ad8\u3055 }</code> \u9577\u65b9\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Rect{ Arg::center(\u4e2d\u5fc3\u5ea7\u6a19), \u5e45\u3068\u9ad8\u3055 }</code><code>RectF{ Arg::center(\u4e2d\u5fc3\u5ea7\u6a19), \u5e45\u3068\u9ad8\u3055 }</code> \u9577\u65b9\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Rect{ Arg::center(\u4e2d\u5fc3\u5ea7\u6a19), \u4e00\u8fba\u306e\u9577\u3055 }</code><code>RectF{ Arg::center(\u4e2d\u5fc3\u5ea7\u6a19), \u4e00\u8fba\u306e\u9577\u3055 }</code> \u6b63\u65b9\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Rect::FromPoints(\u89d2\u306e\u5ea7\u6a19, \u305d\u306e\u5bfe\u89d2\u7dda\u4e0a\u306e\u89d2\u306e\u5ea7\u6a19)</code><code>RectF::FromPoints(\u89d2\u306e\u5ea7\u6a19, \u305d\u306e\u5bfe\u89d2\u7dda\u4e0a\u306e\u89d2\u306e\u5ea7\u6a19)</code> \u9577\u65b9\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <p>\u4f5c\u6210\u3057\u305f\u9577\u65b9\u5f62\u306f <code>.draw()</code> \u3067\u63cf\u753b\u3067\u304d\u307e\u3059\u3002</p> \u30b3\u30fc\u30c9 \u8aac\u660e <code>.draw(\u8272)</code> \u9577\u65b9\u5f62\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.draw(Arg::top = \u4e0a\u5074\u306e\u8272, Arg::bottom = \u4e0b\u5074\u306e\u8272)</code> \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u9577\u65b9\u5f62\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.draw(Arg::left = \u5de6\u5074\u306e\u8272, Arg::right = \u53f3\u5074\u306e\u8272)</code> \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u9577\u65b9\u5f62\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.draw(Arg::topLeft = \u5de6\u4e0a\u306e\u8272, Arg::bottomRight = \u53f3\u4e0b\u306e\u8272)</code> \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u9577\u65b9\u5f62\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.draw(Arg::topRight = \u53f3\u4e0a\u306e\u8272, Arg::bottomLeft = \u5de6\u4e0b\u306e\u8272)</code> \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u9577\u65b9\u5f62\u3092\u63cf\u304d\u307e\u3059\u3002 <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nwhile (System::Update())\n{\nRect{ 100, 20, 400, 80 }.draw();\nRectF{ Vec2{ 100, 120 }, 80 }.draw(ColorF{ 0.5 });\nRect{ Point{ 100, 220 }, Size{ 300, 80 } }.draw(Arg::top = Palette::Yellow, Arg::bottom = Palette::Red);\nRectF{ 100, 320, SizeF{ 80.5, 80.0 } }.draw();\nRect{ 100, 420, 400, 80 }.draw(Arg::topLeft(1.0), Arg::bottomRight(0.5));\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#177-\u9577\u65b9\u5f62\u306e\u67a0\u3092\u63cf\u304f","title":"17.7 \u9577\u65b9\u5f62\u306e\u67a0\u3092\u63cf\u304f","text":"<p><code>Rect</code>, <code>RectF</code> \u306e <code>.drawFrame()</code> \u3092\u4f7f\u3046\u3068\u3001\u9577\u65b9\u5f62\u306e\u67a0\u3092\u63cf\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u592a\u3055\u304c\u6b63\u5e38\u306a\u7bc4\u56f2\u306b\u306a\u3044\u5834\u5408\u306e\u6319\u52d5\u306f\u672a\u898f\u5b9a\u3067\u3059\u3002</p> <p><code>.draw()</code> \u3084 <code>.drawFrame()</code> \u306e\u623b\u308a\u5024\u306f\u305d\u306e\u9577\u65b9\u5f62\u81ea\u8eab\u3067\u3042\u308b\u305f\u3081\u3001<code>rect.draw().drawFrame()</code> \u306e\u3088\u3046\u306b\u95a2\u6570\u3092\u7d9a\u3051\u3066\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> \u30b3\u30fc\u30c9 \u8aac\u660e <code>.drawFrame(\u592a\u3055, \u8272)</code> \u9577\u65b9\u5f62\u306e\u67a0\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.drawFrame(\u592a\u3055, \u5185\u5074\u306e\u8272, \u5916\u5074\u306e\u8272)</code> \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u9577\u65b9\u5f62\u306e\u67a0\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.drawFrame(\u5185\u5074\u306e\u592a\u3055, \u5916\u5074\u306e\u592a\u3055, \u8272)</code> \u9577\u65b9\u5f62\u306e\u67a0\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.drawFrame(\u5185\u5074\u306e\u592a\u3055, \u5916\u5074\u306e\u592a\u3055, \u5185\u5074\u306e\u8272, \u5916\u5074\u306e\u8272)</code> \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u9577\u65b9\u5f62\u306e\u67a0\u3092\u63cf\u304d\u307e\u3059\u3002 <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nwhile (System::Update())\n{\nRect{ 100, 20, 400, 80 }.drawFrame(2);\nRectF{ Vec2{ 100, 120 }, 80 }.drawFrame(5, 5, ColorF{ 0.5 });\nRect{ Point{ 100, 220 }, Size{ 300, 80 } }.drawFrame(10, Palette::Yellow, Palette::Green);\nRectF{ 100, 320, SizeF{ 80.5, 80.0 } }.drawFrame(10, 10);\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#178-\u7dda\u5206\u3092\u63cf\u304f","title":"17.8 \u7dda\u5206\u3092\u63cf\u304f","text":"<p><code>Line</code> \u306f\u6b21\u306e\u3088\u3046\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p> \u30b3\u30fc\u30c9 \u8aac\u660e <code>Line{ \u59cb\u70b9\u306e X \u5ea7\u6a19, \u59cb\u70b9\u306e Y \u5ea7\u6a19, \u7d42\u70b9\u306e X \u5ea7\u6a19, \u7d42\u70b9\u306e Y \u5ea7\u6a19 }</code> \u7dda\u5206\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Line{ \u59cb\u70b9\u306e\u5ea7\u6a19, \u7d42\u70b9\u306e\u5ea7\u6a19 }</code> \u7dda\u5206\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Line{ \u59cb\u70b9, \u7d42\u70b9\u306e X \u5ea7\u6a19, \u7d42\u70b9\u306e Y \u5ea7\u6a19 }</code> \u7dda\u5206\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Line{ \u59cb\u70b9\u306e X \u5ea7\u6a19, \u59cb\u70b9\u306e Y \u5ea7\u6a19, \u7d42\u70b9 }</code> \u7dda\u5206\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Line{ \u59cb\u70b9\u306e X \u5ea7\u6a19, \u59cb\u70b9\u306e Y \u5ea7\u6a19, Arg::angle = \u65b9\u5411, \u9577\u3055 }</code> \u7dda\u5206\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Line{ \u59cb\u70b9\u306e\u5ea7\u6a19, Arg::angle = \u65b9\u5411, \u9577\u3055 }</code> \u7dda\u5206\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Line{ \u59cb\u70b9\u306e X \u5ea7\u6a19, \u59cb\u70b9\u306e Y \u5ea7\u6a19, Arg::direction = \u65b9\u5411\u30d9\u30af\u30c8\u30eb }</code> \u7dda\u5206\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Line{ \u59cb\u70b9\u306e\u5ea7\u6a19, Arg::direction = \u65b9\u5411\u30d9\u30af\u30c8\u30eb }</code> \u7dda\u5206\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <p>\u4f5c\u6210\u3057\u305f <code>Line</code> \u306f\u3001<code>.draw()</code> \u3067\u63cf\u753b\u3067\u304d\u307e\u3059\u3002</p> \u30b3\u30fc\u30c9 \u8aac\u660e <code>.draw(\u8272)</code> \u7dda\u5206\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.draw(\u59cb\u70b9\u306e\u8272, \u7d42\u70b9\u306e\u8272)</code> \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u7dda\u5206\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.draw(\u592a\u3055, \u8272)</code> \u7dda\u5206\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.draw(\u592a\u3055, \u59cb\u70b9\u306e\u8272, \u7d42\u70b9\u306e\u8272)</code> \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u7dda\u5206\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.draw(\u7dda\u306e\u30b9\u30bf\u30a4\u30eb, \u592a\u3055, \u8272)</code> \u7dda\u5206\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.draw(\u7dda\u306e\u30b9\u30bf\u30a4\u30eb, \u592a\u3055, \u59cb\u70b9\u306e\u8272, \u7d42\u70b9\u306e\u8272)</code> \u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u7dda\u5206\u3092\u63cf\u304d\u307e\u3059\u3002 <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u5ea7\u6a19 (100, 100) \u304b\u3089 (400, 150) \u307e\u3067\u592a\u3055 4px \u306e\u7dda\u5206\u3092\u63cf\u304f\nLine{ 100, 100, 400, 150 }.draw(4, Palette::Yellow);\n// \u5ea7\u6a19 (400, 300) \u304b\u3089\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u5ea7\u6a19\u307e\u3067\u592a\u3055 10px \u306e\u7dda\u5206\u3092\u63cf\u304f\nLine{ 400, 300, Cursor::Pos() }.draw(10, Palette::Skyblue);\n// \u901a\u5e38\u306e\u7dda\nLine{ 100, 400, 700, 400 }.draw(12, Palette::Orange);\n// \u4e21\u7aef\u304c\u4e38\u3044\u7dda\nLine{ 100, 450, 700, 450 }.draw(LineStyle::RoundCap, 12, Palette::Orange);\n// \u56db\u89d2\u3044\u30c9\u30c3\u30c8\u306e\u7dda\nLine{ 100, 500, 700, 500 }.draw(LineStyle::SquareDot, 12, Palette::Orange);\n// \u4e38\u3044\u30c9\u30c3\u30c8\u306e\u7dda\nLine{ 100, 550, 700, 550 }.draw(LineStyle::RoundDot, 12, Palette::Orange);\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#179-\u4e09\u89d2\u5f62\u3092\u63cf\u304f","title":"17.9 \u4e09\u89d2\u5f62\u3092\u63cf\u304f","text":"<p>\u4e09\u89d2\u5f62\u3092\u63cf\u304f\u306b\u306f\u3001<code>Triangle</code> \u3092\u4f5c\u6210\u3057\u3066 <code>.draw()</code> \u3057\u307e\u3059\u3002<code>Triangle</code> \u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306a\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002</p> \u30b3\u30fc\u30c9 \u8aac\u660e <code>Triangle{ \u4e00\u8fba\u306e\u9577\u3055 }</code> \u6b63\u4e09\u89d2\u5f62\u306e\u91cd\u5fc3\u5ea7\u6a19\u3092 (0, 0) \u3068\u3057\u3066\u3001\u4e00\u8fba\u306e\u9577\u3055\u3092\u6307\u5b9a\u3057\u3066\u6b63\u4e09\u89d2\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Triangle{ \u4e00\u8fba\u306e\u9577\u3055, \u56de\u8ee2\u89d2\u5ea6 }</code> \u6b63\u4e09\u89d2\u5f62\u306e\u91cd\u5fc3\u5ea7\u6a19\u3092 (0, 0) \u3068\u3057\u3066\u3001\u4e00\u8fba\u306e\u9577\u3055\u3092\u6307\u5b9a\u3057\u3066\u3001\u56de\u8ee2\u3057\u305f\u6b63\u4e09\u89d2\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Triangle{ \u91cd\u5fc3\u306e X \u5ea7\u6a19, \u91cd\u5fc3\u306e Y \u5ea7\u6a19, \u4e00\u8fba\u306e\u9577\u3055 }</code> \u91cd\u5fc3\u5ea7\u6a19\u3068\u4e00\u8fba\u306e\u9577\u3055\u3092\u6307\u5b9a\u3057\u3066\u6b63\u4e09\u89d2\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Triangle{ \u91cd\u5fc3\u306e\u5ea7\u6a19, \u4e00\u8fba\u306e\u9577\u3055 }</code> \u91cd\u5fc3\u5ea7\u6a19\u3068\u4e00\u8fba\u306e\u9577\u3055\u3092\u6307\u5b9a\u3057\u3066\u6b63\u4e09\u89d2\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Triangle{ \u91cd\u5fc3\u306e X \u5ea7\u6a19, \u91cd\u5fc3\u306e Y \u5ea7\u6a19, \u4e00\u8fba\u306e\u9577\u3055, \u56de\u8ee2\u89d2\u5ea6 }</code> \u91cd\u5fc3\u5ea7\u6a19\u3068\u4e00\u8fba\u306e\u9577\u3055\u3092\u6307\u5b9a\u3057\u3066\u3001\u56de\u8ee2\u3057\u305f\u6b63\u4e09\u89d2\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Triangle{ \u91cd\u5fc3\u306e\u5ea7\u6a19, \u4e00\u8fba\u306e\u9577\u3055, \u56de\u8ee2\u89d2\u5ea6 }</code> \u91cd\u5fc3\u5ea7\u6a19\u3068\u4e00\u8fba\u306e\u9577\u3055\u3092\u6307\u5b9a\u3057\u3066\u3001\u56de\u8ee2\u3057\u305f\u6b63\u4e09\u89d2\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Triangle{ x0, y0, x1, y1, x2, y2 }</code> 3 \u3064\u306e\u9802\u70b9\u5ea7\u6a19\u3092\u6642\u8a08\u56de\u308a\u306b\u6307\u5b9a\u3057\u3066\u4e09\u89d2\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>Triangle{ pos0, pos1, pos2 }</code> 3 \u3064\u306e\u9802\u70b9\u5ea7\u6a19\u3092\u6642\u8a08\u56de\u308a\u306b\u6307\u5b9a\u3057\u3066\u4e09\u89d2\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <p>\u4f5c\u6210\u3057\u305f <code>Triangle</code> \u306f\u3001<code>.draw()</code> \u3067\u63cf\u753b\u3067\u304d\u307e\u3059\u3002</p> \u30b3\u30fc\u30c9 \u8aac\u660e <code>.draw(\u8272)</code> \u4e09\u89d2\u5f62\u3092\u63cf\u304d\u307e\u3059\u3002 <code>.draw(\u8272, \u8272, \u8272)</code> 3 \u3064\u306e\u9802\u70b9\u306e\u8272\u3092\u6307\u5b9a\u3057\u3066\u4e09\u89d2\u5f62\u3092\u63cf\u304d\u307e\u3059\u3002 <p>\u53cd\u6642\u8a08\u56de\u308a\u306b\u9802\u70b9\u3092\u6307\u5b9a\u3057\u305f\u4e09\u89d2\u5f62\u306f\u3001\u63cf\u753b\u306f\u3067\u304d\u307e\u3059\u304c\u3001\u305d\u308c\u4ee5\u5916\u306e\u6a5f\u80fd\uff08\u3042\u305f\u308a\u5224\u5b9a\u306a\u3069\uff09\u306f\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u5ea7\u6a19 (100, 100), (400, 300), (100, 300) \u3067\u69cb\u6210\u3055\u308c\u308b\u4e09\u89d2\u5f62\u3092\u63cf\u304f\nTriangle{ 100, 100, 400, 300, 100, 300 }.draw();\n// \u5ea7\u6a19 (300, 100) \u3092\u91cd\u5fc3\u3068\u3059\u308b\u30011 \u8fba\u304c 80px \u306e\u4e09\u89d2\u5f62\u3092\u63cf\u304f\nTriangle{ 300, 100, 80 }.draw(Palette::Orange);\n// \u6642\u8a08\u56de\u308a\u306b 15\u00b0 \u56de\u8ee2\u3055\u305b\u3066\u63cf\u304f\nTriangle{ 400, 100, 80, 15_deg }.draw(Palette::Seagreen);\n// \u6642\u8a08\u56de\u308a\u306b 30\u00b0 \u56de\u8ee2\u3055\u305b\u3066\u63cf\u304f\nTriangle{ 500, 100, 80, 30_deg }.draw(HSV{ 0 }, HSV{ 120 }, HSV{ 240 });\n// 3 \u3064\u306e\u9802\u70b9\u5ea7\u6a19\u3092 Point \u3084 Vec2 \u578b\u3067\u6307\u5b9a\u3059\u308b\nTriangle{ Cursor::Pos(), Vec2{ 700, 500 }, Vec2{ 100, 500 } }.draw(Palette::Skyblue);\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#1710-\u51f8\u306a\u56db\u89d2\u5f62\u3092\u63cf\u304f","title":"17.10 \u51f8\u306a\u56db\u89d2\u5f62\u3092\u63cf\u304f","text":"<p><code>Rect</code> \u3084 <code>RectF</code> \u3067\u306f\u3001\u5404\u8fba\u304c X \u8ef8\u3001Y \u8ef8\u306b\u5e73\u884c\u306a\u9577\u65b9\u5f62\u3057\u304b\u5b9a\u7fa9\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001<code>Quad</code> \u3092\u4f7f\u3046\u3068 4 \u3064\u306e\u9802\u70b9\u5ea7\u6a19\u3092\u6642\u8a08\u56de\u308a\u306b\u6307\u5b9a\u3057\u3066\u56db\u89d2\u5f62\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001<code>Quad</code> \u3067\u5b9a\u7fa9\u3055\u308c\u308b\u56db\u89d2\u5f62\u306f 180\u00b0 \u4ee5\u4e0a\u306e\u5185\u89d2\u3092\u542b\u307e\u306a\u3044\u5f62\u72b6\uff08\u3059\u3079\u3066\u306e\u89d2\u304c\u51f8\uff09\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u51f9\u89d2\u3092\u542b\u3080\u56db\u89d2\u5f62\u3092\u5b9a\u7fa9\u3057\u305f\u3044\u5834\u5408\u306f\u306e\u3061\u306b\u3067\u51fa\u3066\u304f\u308b <code>Polygon</code> \u578b\u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p></p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// 4 \u3064\u306e\u9802\u70b9\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u56db\u89d2\u5f62\u3092\u63cf\u304f\nQuad{ Vec2{ 100, 100 }, Vec2{ 150, 100 }, Vec2{ 300, 300 }, Vec2{ 100, 300 } }.draw();\nQuad{ Vec2{ 300, 400 }, Vec2{ 500, 100 }, Vec2{ 600, 200 }, Vec2{ 500, 500 } }.draw(Palette::Skyblue);\n}\n}\n</code></pre> <p><code>Rect</code> \u3084 <code>RectF</code> \u3092\u4f5c\u6210\u3057\u3001<code>.rotated()</code> \u307e\u305f\u306f <code>.rotatedAt()</code> \u3092\u4f7f\u3046\u3068\u3001\u9577\u65b9\u5f62\u3092\u56de\u8ee2\u3055\u305b\u3066 <code>Quad</code> \u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u305d\u306e <code>Quad</code> \u3092 <code>.draw()</code> \u3059\u308b\u4e00\u9023\u306e\u64cd\u4f5c\u3092\u6b21\u306e\u3088\u3046\u306b 1 \u884c\u3067\u66f8\u3051\u307e\u3059\u3002<code>Rect::pos</code> \u306f <code>Rect</code> \u306e\u5de6\u4e0a\u306e\u5ea7\u6a19\u3092 <code>Point</code> \u578b\u3067\u3001<code>RectF::pos</code> \u306f <code>RectF</code> \u306e\u5de6\u4e0a\u306e\u5ea7\u6a19\u3092 <code>Vec2</code> \u578b\u3067\u8868\u3059\u30e1\u30f3\u30d0\u5909\u6570\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Rect rect{ 150, 200, 400, 100 };\nwhile (System::Update())\n{\nrect.draw();\n// \u6642\u8a08\u56de\u308a\u306b 45\u00b0 \u56de\u8ee2\u3057\u305f\u9577\u65b9\u5f62\u3092\u63cf\u304f\nrect.rotated(45_deg).draw(Palette::Orange);\n// \u9577\u65b9\u5f62\u306e\u5de6\u4e0a\u306e\u5ea7\u6a19\u3092\u56de\u8ee2\u306e\u8ef8\u3068\u3057\u3066\u6642\u8a08\u56de\u308a\u306b 60\u00b0 \u56de\u8ee2\u3057\u305f\u9577\u65b9\u5f62\u3092\u63cf\u304f\nrect.rotatedAt(rect.pos, 60_deg).draw(Palette::Skyblue);\n}\n}\n</code></pre> <p><code>Rect</code> \u3084 <code>RectF</code> \u3092\u4f5c\u6210\u3057\u3001<code>.shearedX()</code> \u307e\u305f\u306f <code>.shearedY()</code> \u3092\u4f7f\u3046\u3068\u3001\u9577\u65b9\u5f62\u306e\u8fba\u3092 X \u8ef8\u307e\u305f\u306f Y \u8ef8\u306b\u6cbf\u3063\u3066\u30b9\u30e9\u30a4\u30c9\u3055\u305b\u305f\u5e73\u884c\u56db\u8fba\u5f62\u3092 <code>Quad</code> \u578b\u3068\u3057\u3066\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u9577\u65b9\u5f62\u306e\u8fba\u3092 X \u8ef8\u65b9\u5411\u306b 30px \u305a\u3064\u30b9\u30e9\u30a4\u30c9\u3055\u305b\u305f\u5e73\u884c\u56db\u8fba\u5f62\u3092\u63cf\u304f\nRect{ 100, 50, 200, 100 }.drawFrame(1, 0)\n.shearedX(30).draw(Palette::Skyblue);\n// \u9577\u65b9\u5f62\u306e\u8fba\u3092 Y \u8ef8\u65b9\u5411\u306b -50px \u305a\u3064\u30b9\u30e9\u30a4\u30c9\u3055\u305b\u305f\u5e73\u884c\u56db\u8fba\u5f62\u3092\u63cf\u304f\nRect{ 400, 150, 300, 200 }.drawFrame(1, 0)\n.shearedY(-50).draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#1711-\u6955\u5186\u3092\u63cf\u304f","title":"17.11 \u6955\u5186\u3092\u63cf\u304f","text":"<p>\u6955\u5186\u3092\u63cf\u304f\u3068\u304d\u306f <code>Ellipse</code> \u3092\u4f5c\u6210\u3057\u3066 <code>.draw()</code> \u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u4e2d\u5fc3 (300, 200), X \u8ef8\u65b9\u5411\u306e\u534a\u5f84 200, Y \u8ef8\u65b9\u5411\u306e\u534a\u5f84\u3000100 \u306e\u6955\u5186\u3092\u63cf\u304f\nEllipse{ 300, 200, 200, 100 }.draw(Palette::Skyblue);\n// \u4e2d\u5fc3 (600, 400), X \u8ef8\u65b9\u5411\u306e\u534a\u5f84 50, Y \u8ef8\u65b9\u5411\u306e\u534a\u5f84\u3000150 \u306e\u6955\u5186\u3092\u63cf\u304f\nEllipse{ 600, 400, 50, 150 }.draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#1712-\u89d2\u4e38\u9577\u65b9\u5f62\u3092\u63cf\u304f","title":"17.12 \u89d2\u4e38\u9577\u65b9\u5f62\u3092\u63cf\u304f","text":"<p>\u89d2\u304c\u4e38\u3044\u9577\u65b9\u5f62\u3092\u63cf\u304f\u306b\u306f\u3001<code>RoundRect</code> \u3092\u4f5c\u6210\u3057\u3066 <code>.draw()</code> \u3057\u307e\u3059\u3002<code>RectF</code> \u3068\u540c\u3058\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u52a0\u3048\u3066\u3001\u6700\u5f8c\u306b\u89d2\u306e\u66f2\u7dda\u306e\u534a\u5f84\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002<code>Rect</code> \u3084 <code>RectF</code> \u306e <code>.rounded()</code> \u30e1\u30f3\u30d0\u95a2\u6570\u3092\u4f7f\u3063\u3066\u3001<code>Rect</code> \u3084 <code>RectF</code> \u304b\u3089 <code>RoundRect</code> \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Rect rect{ 100, 350, 500, 200 };\nwhile (System::Update())\n{\n// RectF{ 100, 100, 200, 100 } \u306e\u89d2\u3092 10px \u4e38\u3081\u305f\u89d2\u4e38\u9577\u65b9\u5f62\u3092\u63cf\u304f\nRoundRect{ 100, 100, 200, 100, 10 }.draw();\n// RectF{ Arg::center(400, 300), 200, 80 } \u306e\u89d2\u3092 5px \u4e38\u3081\u305f\u89d2\u4e38\u9577\u65b9\u5f62\u3092\u63cf\u304f\nRoundRect{ Arg::center(400, 300), 200, 80, 5 }.draw(Palette::Skyblue);\n// \u9577\u65b9\u5f62 rect \u306e\u89d2\u3092 40px \u4e38\u3081\u305f\u89d2\u4e38\u9577\u65b9\u5f62\u3092\u63cf\u304f\nrect.rounded(40).draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#1713-\u4e00\u90e8\u306e\u89d2\u304c\u4e38\u3044\u9577\u65b9\u5f62\u3092\u63cf\u304f","title":"17.13 \u4e00\u90e8\u306e\u89d2\u304c\u4e38\u3044\u9577\u65b9\u5f62\u3092\u63cf\u304f","text":"<p><code>Rect</code> \u3068 <code>RectF</code> \u306e <code>.rounded(tl, tr, br, bl)</code> \u30e1\u30f3\u30d0\u95a2\u6570\u3092\u4f7f\u3046\u3068\u30014 \u3064\u306e\u89d2\u3092\u305d\u308c\u305e\u308c\u7570\u306a\u308b\u30b5\u30a4\u30ba\u3067\u4e38\u3081\u305f\u5f62\u72b6\uff08<code>Polygon</code> \u578b\uff09\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002<code>tl</code> \u306f\u5de6\u4e0a\u306e\u89d2\u3001<code>tr</code> \u306f\u53f3\u4e0a\u306e\u89d2\u3001<code>br</code> \u306f\u53f3\u4e0b\u306e\u89d2\u3001<code>bl</code> \u306f\u5de6\u4e0b\u306e\u89d2\u306e\u66f2\u7dda\u306e\u534a\u5f84\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nRect{ 100, 100, 200, 200 }\n.rounded(40, 0, 0, 0).draw(ColorF{ 0.8, 0.9, 1.0 });\nRect{ 400, 100, 200, 200 }\n.rounded(40, 40, 0, 0).draw(ColorF{ 0.8, 0.9, 1.0 });\nRect{ 100, 350, 200, 200 }\n.rounded(40, 0, 40, 0).draw(ColorF{ 0.8, 0.9, 1.0 });\nRect{ 400, 350, 200, 200 }\n.rounded(20, 40, 60, 80).draw(ColorF{ 0.8, 0.9, 1.0 });\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#1714-\u591a\u89d2\u5f62\u3092\u63cf\u304f","title":"17.14 \u591a\u89d2\u5f62\u3092\u63cf\u304f","text":"<p>\u8907\u96d1\u306a\u56f3\u5f62\u3092\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u308b\u3044\u304f\u3064\u304b\u306e\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u95a2\u6570\u306e\u623b\u308a\u5024\u3067\u3042\u308b <code>Shape2D</code> \u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 <code>.draw()</code>, <code>.drawFrame()</code> \u3059\u308b\u3053\u3068\u3067\u56f3\u5f62\u3092\u63cf\u3051\u307e\u3059\u3002\u95a2\u6570\u306e\u3046\u3061\u3001\u5f15\u6570\u306b <code>double angle</code> \u3092\u3068\u308b\u3082\u306e\u306f\u3001\u6642\u8a08\u56de\u308a\u306e\u56de\u8ee2\u306e\u89d2\u5ea6\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002</p> \u95a2\u6570\u540d \u5f62\u72b6 \u5f15\u6570 Shape2D::Cross \u2716 \u30de\u30fc\u30af <code>double r, double width, const Vec2&amp; center = Vec2{ 0, 0 }, double angle = 0.0</code> Shape2D::Plus \uff0b\u30de\u30fc\u30af <code>double r, double width, const Vec2&amp; center = Vec2{ 0, 0 }, double angle = 0.0</code> Shape2D::Pentagon \u6b63\u4e94\u89d2\u5f62 <code>double r, const Vec2&amp; center = Vec2{ 0, 0 }, double angle = 0.0</code> Shape2D::Hexagon \u6b63\u516d\u89d2\u5f62 <code>double r, const Vec2&amp; center = Vec2{ 0, 0 }, double angle = 0.0</code> Shape2D::Ngon \u6b63 N \u89d2\u5f62 <code>uint32 n, double r, const Vec2&amp; center = Vec2{ 0, 0 }, double angle = 0.0</code> Shape2D::Star \u4e94\u8292\u661f <code>double r, const Vec2&amp; center = Vec2{ 0, 0 }, double angle = 0.0</code> Shape2D::Nstar \u661f <code>uint32 n, double rOuter, double rInner, const Vec2&amp; center = Vec2{ 0, 0 }, double angle = 0.0</code> Shape2D::Arrow \u77e2\u5370 <code>const Vec2&amp; from, const Vec2&amp; to, double width, const Vec2&amp; headSize</code> Shape2D::Arrow \u77e2\u5370 <code>const Line&amp; line, double width, const Vec2&amp; headSize</code> Shape2D::DoubleHeadedArrow \u4e21\u65b9\u5411\u77e2\u5370 <code>const Vec2&amp; from, const Vec2&amp; to, double width, const Vec2&amp; headSize</code> Shape2D::DoubleHeadedArrow \u4e21\u65b9\u5411\u77e2\u5370 <code>const Line&amp; line, double width, const Vec2&amp; headSize</code> Shape2D::Rhombus \u3072\u3057\u5f62 <code>double w, double h, const Vec2&amp; center = Vec2{ 0, 0 }, double angle = 0.0</code> Shape2D::RectBalloon \u9577\u65b9\u5f62\u306e\u5439\u304d\u51fa\u3057 <code>const RectF&amp; rect, const Vec2&amp; target, double pointingRootRatio = 0.5</code> Shape2D::Stairs \u968e\u6bb5\u5f62 <code>const Vec2&amp; base, double w, double h, uint32 steps, bool upStairs = true</code> Shape2D::Heart \u30cf\u30fc\u30c8\u5f62 <code>double r, const Vec2&amp; center = Vec2{ 0, 0 }, double angle = 0.0</code> Shape2D::Squircle \u56db\u89d2\u3068\u5186\u306e\u4e2d\u9593\u5f62 <code>double r, const Vec2&amp; center, uint32 quality</code> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u304a\u3088\u3073\u30b7\u30fc\u30f3\u3092 1000x600 \u306b\u30ea\u30b5\u30a4\u30ba\nWindow::Resize(1000, 600);\nwhile (System::Update())\n{\nShape2D::Cross(80, 10, Vec2{ 100, 100 }).draw(Palette::Skyblue);\nShape2D::Plus(80, 10, Vec2{ 300, 100 }).draw(Palette::Skyblue);\nShape2D::Pentagon(80, Vec2{ 500, 100 }).draw(Palette::Skyblue);\nShape2D::Hexagon(80, Vec2{ 700, 100 }).draw(Palette::Skyblue);\n// 30\u00b0 \u56de\u8ee2\u3055\u305b\u308b\nShape2D::Hexagon(80, Vec2{ 900, 100 }, 30_deg).draw(Palette::Skyblue);\n// \u6b63\u5341\u89d2\u5f62\nShape2D::Ngon(10, 80, Vec2{ 100, 300 }).draw(Palette::Skyblue);\nShape2D::Star(80, Vec2{ 300, 300 }).draw(Palette::Skyblue);\n// rOuter \u306f\u5916\u5468\u306e\u534a\u5f84\u3001rInner \u306f\u5185\u5468\u306e\u534a\u5f84\nShape2D::NStar(10, 80, 60, Vec2{ 500, 300 }).draw(Palette::Skyblue);\n// headSize \u306f\u4e09\u89d2\u5f62\u306e\u5e45\u3068\u9ad8\u3055\nShape2D::Arrow(Line{ 640, 340, 760, 260 }, 20, Vec2{ 40, 30 }).draw(Palette::Skyblue);\nShape2D::DoubleHeadedArrow(Line{ 840, 340, 960, 260 }, 20, Vec2{ 40, 30 }).draw(Palette::Skyblue);\nShape2D::Rhombus(160, 120, Vec2{ 100, 500 }).draw(Palette::Skyblue);\n// \u5439\u304d\u51fa\u3057\u306e\u9577\u65b9\u5f62\u3068\u3001\u4e09\u89d2\u5f62\u306e\u9802\u70b9\u306e\u7f6e\u3092\u6307\u5b9a\u3002\u4e09\u89d2\u5f62\u306e\u30b5\u30a4\u30ba\u306f pointingRootRatio \u3067\u6c7a\u307e\u308b\nShape2D::RectBalloon(RectF{ 220, 420, 160, 120 }, Vec2{ 220, 580 }).draw(Palette::Skyblue);\n// base \u306b\u306f\u968e\u6bb5\u306e\u6700\u3082\u9ad8\u3044\u6bb5\u306e\u5e95\u306e\u7aef\u306e\u5ea7\u6a19\u3092\u6307\u5b9a\u3002steps \u306f\u6bb5\u6570\u3001upStairs \u3092 false \u306b\u3059\u308b\u3068\u4e0b\u308a\u306e\u968e\u6bb5\u306b\nShape2D::Stairs(Vec2{ 560, 560 }, 120, 120, 4).draw(Palette::Skyblue);\nShape2D::Heart(80, Vec2{ 700, 500 }).draw(Palette::Skyblue);\n// \u7b2c 3 \u5f15\u6570\u306f\u89d2\u306e\u4e38\u306e\u5206\u5272\u54c1\u8cea\nShape2D::Squircle(60, Vec2{ 900, 500 }, 64).draw(Palette::Skyblue);\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#1715-\u81ea\u7531\u306b\u591a\u89d2\u5f62\u3092\u63cf\u304f","title":"17.15 \u81ea\u7531\u306b\u591a\u89d2\u5f62\u3092\u63cf\u304f","text":"<p><code>Shape2D</code> \u3067\u306f\u8868\u73fe\u3067\u304d\u306a\u3044\u591a\u89d2\u5f62\u3092\u63cf\u304f\u306b\u306f <code>Polygon</code> \u3092\u4f5c\u6210\u3057\u3066 <code>.draw()</code> \u3057\u307e\u3059\u3002<code>Polygon</code> \u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306f\u3001\u5404\u9802\u70b9\u306e\u5ea7\u6a19\u3092\u6642\u8a08\u56de\u308a\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002<code>Polygon</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\u306b\u306f\u3001\u30e1\u30e2\u30ea\u306e\u78ba\u4fdd\u3084\u4e09\u89d2\u5f62\u5206\u5272\u306e\u8a08\u7b97\u306b\u5b9f\u884c\u6642\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u305f\u3081\u3001\u3068\u304f\u306b\u9802\u70b9\u6570\u304c\u591a\u3044\u3082\u306e\u306f\u30eb\u30fc\u30d7\u306e\u5185\u5074\u3067\u4f5c\u6210\u3059\u308b\u306e\u3092\u907f\u3051\u308b\u3079\u304d\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Polygon polygon\n{\nVec2{ 400, 100 }, Vec2{ 600, 300 }, Vec2{ 500, 500 },\nVec2{ 400, 400 }, Vec2{ 300, 500 }, Vec2{ 200, 300 }\n};\nwhile (System::Update())\n{\npolygon.draw(Palette::Skyblue);\n}\n}\n</code></pre> <p><code>Polygon</code> \u3088\u308a\u3082\u5c11\u306a\u3044\u5b9f\u884c\u6642\u30b3\u30b9\u30c8\u3067\u56f3\u5f62\u3092\u63cf\u304d\u305f\u3044\u5834\u5408\u306f\u3001<code>Shape2D</code> \u3084 <code>Buffer2D</code> \u30af\u30e9\u30b9\u306e\u4f4e\u30ec\u30a4\u30e4\u64cd\u4f5c\u3092\u4f7f\u3044\u307e\u3059\u3002<code>Shape2D</code> \u3067\u306f\u3001\u9802\u70b9\u914d\u5217\u306e\u307b\u304b\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u914d\u5217\u3092\u81ea\u524d\u3067\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002<code>Buffer2D</code> \u3067\u306f\u3055\u3089\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e UV \u5ea7\u6a19\u3082\u5fc5\u8981\u306b\u306a\u308b\u305f\u3081\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u8907\u96d1\u306b\u306a\u308a\u307e\u3059\u3002\u4eca\u56de\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u6271\u3044\u307e\u305b\u3093\u3002</p>"},{"location":"tutorial2/shape/#1716-\u7a74\u306e\u958b\u3044\u305f\u89d2\u5f62\u3092\u63cf\u304f","title":"17.16 \u7a74\u306e\u958b\u3044\u305f\u89d2\u5f62\u3092\u63cf\u304f","text":"<p>\u7a74\u306e\u958b\u3044\u305f <code>Polygon</code> \u3092\u4f5c\u308b\u306b\u306f\u3001\u5916\u5468\u306e\u6642\u8a08\u56de\u308a\u306e\u9802\u70b9\u5ea7\u6a19\u30ea\u30b9\u30c8 (<code>Array&lt;Vec2&gt;</code> \u578b) \u3068\u3001\u7a74\u306e\u5f62\u72b6\u306e\u300c\u53cd\u6642\u8a08\u56de\u308a\u300d\u306e\u9802\u70b9\u5ea7\u6a19\u30ea\u30b9\u30c8\u306e\u914d\u5217 (<code>Array&lt;Array&lt;Vec2&gt;&gt;</code> \u578b) \u304b\u3089 <code>Polygon</code> \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <p>\u65e2\u5b58\u306e <code>Polygon</code> \u306b\u5bfe\u3057\u3066 <code>.addHole()</code> \u3067\u7a74\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Polygon polygon{\n{ Vec2{ 400, 100 }, Vec2{ 600, 300 }, Vec2{ 500, 500 },\nVec2{ 400, 400 }, Vec2{ 300, 500 }, Vec2{ 200, 300 } },\n{ { Vec2{ 450, 250 }, Vec2{ 350, 250 }, Vec2{ 350, 350 }, Vec2{ 450, 350 } } }\n};\nwhile (System::Update())\n{\npolygon.draw(Palette::Skyblue);\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#1717-\u9023\u7d9a\u3059\u308b\u7dda\u5206\u3092\u63cf\u304f","title":"17.17 \u9023\u7d9a\u3059\u308b\u7dda\u5206\u3092\u63cf\u304f","text":"<p>\u9023\u7d9a\u3057\u305f\u7dda\u5206\u3092\u63cf\u304f\u306b\u306f\u3001<code>Vec2</code> \u578b\u306e\u9802\u70b9\u306e\u914d\u5217\u304b\u3089 <code>LineString</code> \u3092\u4f5c\u6210\u3057\u3066 <code>.draw()</code> \u3057\u307e\u3059\u3002<code>.drawClosed()</code> \u3067\u306f\u7d42\u70b9\u3068\u59cb\u70b9\u3092\u7d50\u3093\u3060\u7dda\u3082\u63cf\u753b\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst LineString ls1\n{\nVec2{ 100, 60 }, Vec2{ 400, 140 },\nVec2{ 100, 220 }, Vec2{ 400, 300 },\nVec2{ 100, 380 }, Vec2{ 400, 460 },\nVec2{ 100, 540 }\n};\nconst LineString ls2\n{\nVec2{ 500, 100 }, Vec2{ 700, 200 },\nVec2{ 600, 500 },\n};\nwhile (System::Update())\n{\n// \u592a\u3055 8px \u3067\u63cf\u304f\nls1.draw(8, Palette::Skyblue);\n// \u592a\u3055 4px \u3067\u63cf\u304f\uff08\u7d42\u70b9\u3068\u59cb\u70b9\u3082\u7d50\u3076\uff09\nls2.drawClosed(4, Palette::Orange);\n}\n}\n</code></pre> <p><code>Array&lt;Vec2&gt;</code> \u304b\u3089 <code>LineString</code> \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Array&lt;Vec2&gt; points\n{\nVec2{ 100, 60 }, Vec2{ 400, 140 },\nVec2{ 100, 220 }, Vec2{ 400, 300 },\nVec2{ 100, 380 }, Vec2{ 400, 460 },\nVec2{ 100, 540 }\n};\nconst LineString ls{ points };\nwhile (System::Update())\n{\n// \u592a\u3055 8px \u3067\u63cf\u304f\nls.draw(8, Palette::Skyblue);\n}\n}\n</code></pre> <p><code>LineString</code> \u306f <code>Array&lt;Vec2&gt;</code> \u306e\u3088\u3046\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6301\u3064\u305f\u3081\u3001\u70b9\u306e\u914d\u5217\u3068\u3057\u3066\u64cd\u4f5c\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nLineString ls;\nwhile (System::Update())\n{\nif (MouseL.down()) // \u30af\u30ea\u30c3\u30af\u3057\u305f\u3089\n{\nls &lt;&lt; Cursor::Pos(); // \u70b9\u3092\u8ffd\u52a0\n}\nls.draw(8, Palette::Skyblue);\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#1718-catmull-rom-\u30b9\u30d7\u30e9\u30a4\u30f3\u66f2\u7dda\u3092\u63cf\u304f","title":"17.18 Catmull-Rom \u30b9\u30d7\u30e9\u30a4\u30f3\u66f2\u7dda\u3092\u63cf\u304f","text":"<p>\u6307\u5b9a\u3057\u305f\u901a\u904e\u70b9\u3092\u5fc5\u305a\u901a\u308b Catmull-Rom \u30b9\u30d7\u30e9\u30a4\u30f3\u66f2\u7dda\u3092\u63cf\u304f\u306b\u306f\u3001 <code>Spline2D</code> \u3092\u4f5c\u6210\u3057\u3066 <code>.draw()</code> \u3057\u307e\u3059\u3002<code>Spline2D</code> \u306f <code>Vec2</code> \u306e\u914d\u5217\u307e\u305f\u306f <code>LineString</code> \u304b\u3089\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u7b2c 2 \u5f15\u6570\u306b <code>Close::Ring</code> \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u7d42\u70b9\u3068\u59cb\u70b9\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u30b9\u30d7\u30e9\u30a4\u30f3\u66f2\u7dda\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p> <p>\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u793a\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001<code>.draw()</code> \u306b\u306f\u66f2\u7dda\u8a08\u7b97\u6642\u306e\u54c1\u8cea\uff08\u5206\u5272\u6570\uff09\u3092\u6307\u5b9a\u3059\u308b\u5f15\u6570\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f <code>24</code> \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Spline2D splineA\n{ {\nVec2{ 100, 60 }, Vec2{ 400, 140 },\nVec2{ 100, 220 }, Vec2{ 400, 300 },\nVec2{ 100, 380 }, Vec2{ 400, 460 },\nVec2{ 100, 540 }\n} };\n// CloseRing::Yes -&gt; \u7d42\u70b9\u304b\u3089\u59cb\u70b9\u3082\u7d50\u3076\nconst Spline2D splineB\n{ {\nVec2{ 500, 100 }, Vec2{ 700, 200 },\nVec2{ 600, 500 },\n}, CloseRing::Yes };\nwhile (System::Update())\n{\n// \u592a\u3055 8px \u3067\u63cf\u304f\nsplineA.draw(8, Palette::Skyblue);\n// \u592a\u3055 4px \u3067\u63cf\u304f\nsplineB.draw(4, Palette::Orange);\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#1719-\u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u63cf\u304f","title":"17.19 \u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u63cf\u304f","text":"<p>2 \u6b21\u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u63cf\u304d\u305f\u3044\u3068\u304d\u306f <code>Bezier2</code>, 3 \u6b21\u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u63cf\u304d\u305f\u3044\u3068\u304d\u306f <code>Bezier3</code> \u3092\u4f5c\u6210\u3057\u3066 <code>.draw()</code> \u3057\u307e\u3059\u3002</p> <p>\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u793a\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001<code>.draw()</code> \u306b\u306f\u66f2\u7dda\u8a08\u7b97\u6642\u306e\u54c1\u8cea\uff08\u5206\u5272\u6570\uff09\u3092\u6307\u5b9a\u3059\u308b\u5f15\u6570\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f <code>24</code> \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// 2 \u6b21\u30d9\u30b8\u30a7\u66f2\u7dda\nBezier2{ Vec2{ 100, 400 }, Vec2{ 100, 250 }, Vec2{ 300, 100 } }\n.draw(4, Palette::Skyblue);\n// 3 \u6b21\u30d9\u30b8\u30a7\u66f2\u7dda\nBezier3{ Vec2{ 300, 400 }, Vec2{ 400, 400 }, Vec2{ 400, 100 }, Vec2{ 500, 100 }}\n.draw(4, Palette::Orange);\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#1720-\u77e2\u5370\u3092\u63cf\u304f","title":"17.20 \u77e2\u5370\u3092\u63cf\u304f","text":"<p><code>Line</code> \u306b\u306f\u5358\u65b9\u5411\u306e\u77e2\u5370\u3092\u63cf\u304f <code>.drawArrow()</code> \u3068\u3001\u4e21\u65b9\u5411\u306e\u77e2\u5370\u3092\u63cf\u304f <code>.drawDoubleHeadedArrow()</code> \u30e1\u30f3\u30d0\u95a2\u6570\u304c\u3042\u308a\u307e\u3059\u3002\u3044\u305a\u308c\u3082\u7b2c 1 \u5f15\u6570\u306b\u306f\u7dda\u306e\u5e45\u3001\u7b2c 2 \u5f15\u6570\u306b\u306f\u4e09\u89d2\u5f62\u306e\u5e45\u3068\u9ad8\u3055\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u5358\u65b9\u5411\u77e2\u5370\u306f\u3001<code>Line</code> \u306e\u59cb\u70b9\u304b\u3089\u7d42\u70b9\u65b9\u5411\u3092\u5411\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u7dda\u306e\u5e45 3px, \u4e09\u89d2\u306e\u5e45 20px, \u9ad8\u3055 20px \u306e\u5358\u65b9\u5411\u77e2\u5370\u3092\u63cf\u304f\nLine{ 50, 200, 200, 250 }\n.drawArrow(3, SizeF{ 20, 20 }, Palette::Skyblue);\n// \u7dda\u306e\u5e45 10px, \u4e09\u89d2\u306e\u5e45 40px, \u9ad8\u3055 80px \u306e\u5358\u65b9\u5411\u77e2\u5370\u3092\u63cf\u304f\nLine{ 350, 450, 450, 100 }\n.drawArrow(10, SizeF{ 40, 80 }, Palette::Orange);\n// \u7dda\u306e\u5e45 8px, \u4e09\u89d2\u306e\u5e45 30px, \u9ad8\u3055 30px \u306e\u4e21\u65b9\u5411\u77e2\u5370\u3092\u63cf\u304f\nLine{ 600, 100, 700, 400 }\n.drawDoubleHeadedArrow(8, SizeF{ 30, 30 }, Palette::Limegreen);\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#1721-\u5f71\u3092\u63cf\u304f","title":"17.21 \u5f71\u3092\u63cf\u304f","text":"<p><code>Circle</code>, <code>Rect</code>, <code>RectF</code>, <code>RoundRect</code> \u306f\u3001\u5f71\u3092\u63cf\u753b\u3059\u308b <code>.drawShadow()</code> \u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u7b2c 1 \u5f15\u6570\u3067\u5f71\u306e\u4f4d\u7f6e\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u3001\u7b2c 2 \u5f15\u6570\u3067\u307c\u304b\u3057\u306e\u5927\u304d\u3055\u3001\u7b2c 3 \u5f15\u6570\u3067\u5f71\u306e\u5927\u304d\u3055\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u3001\u7b2c 4 \u5f15\u6570\u3067\u5f71\u306e\u8272\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u5f71\u306f\u56f3\u5f62\u3067\u96a0\u308c\u3066\u898b\u3048\u306a\u3044\u90e8\u5206\u3082\u5857\u308a\u3064\u3076\u3055\u308c\u308b\u305f\u3081\u3001\u5f71\u3092\u63cf\u3044\u305f\u3042\u3068\u306b\u56f3\u5f62\u3092\u4e0a\u304b\u3089\u91cd\u306d\u66f8\u304d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nwhile (System::Update())\n{\nRect{ 100, 50, 150, 200 }\n.drawShadow(Vec2{ 2, 2 }, 8, 1)\n.draw();\nRect{ 300, 50, 150, 200 }\n.drawShadow(Vec2{ 4, 4 }, 16, 1.5)\n.draw();\nRect{ 500, 50, 150, 200 }\n.drawShadow(Vec2{ 6, 6 }, 24, 2)\n.draw();\nCircle{ 100, 400, 50 }\n.drawShadow(Vec2{ 0, 3 }, 8, 1)\n.draw();\nCircle{ 300, 400, 50 }\n.drawShadow(Vec2{ 3, 0 }, 8, 1)\n.draw();\nRoundRect{ 450, 350, 100, 100, 20 }\n.drawShadow(Vec2{ 2, 2 }, 8, 0)\n.draw();\nRoundRect{ 650, 350, 100, 100, 20 }\n.drawShadow(Vec2{ 2, 2 }, 12, 0)\n.draw();\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#1722-\u56f3\u5f62\u306e\u64cd\u4f5c","title":"17.22 \u56f3\u5f62\u306e\u64cd\u4f5c","text":"<p>\u591a\u304f\u306e\u56f3\u5f62\u30af\u30e9\u30b9\u304c <code>.movedBy()</code> \u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6301\u3061\u3001\u81ea\u8eab\u306e\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u305f\u30d9\u30af\u30c8\u30eb\u3067\u5e73\u884c\u79fb\u52d5\u3057\u305f\u56f3\u5f62\u3092\u4f5c\u6210\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\u307e\u305f\u3001<code>Rect</code> \u3084 <code>Circle</code>, <code>Line</code> \u306a\u3069\u4e00\u90e8\u306e\u56f3\u5f62\u30af\u30e9\u30b9\u306f <code>.stretched()</code> \u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6301\u3061\u3001\u81ea\u8eab\u306e\u5e45\u3084\u9ad8\u3055\u3092\u5909\u66f4\u3057\u305f\u56f3\u5f62\u3092\u4f5c\u6210\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Circle circle{ 100, 100, 60 };\nconst Rect rect{ 400, 300, 200 };\nwhile (System::Update())\n{\ncircle.draw();\n// (200, 0) \u306e\u65b9\u5411\u306b\u5e73\u884c\u79fb\u52d5\u3057\u305f\u5186\u3092\u63cf\u753b\u3059\u308b\ncircle.movedBy(200, 0).draw(Palette::Skyblue);\n// (0, 200) \u306e\u65b9\u5411\u306b\u5e73\u884c\u79fb\u52d5\u3057\u305f\u5186\u3092\u63cf\u753b\u3059\u308b\ncircle.movedBy(0, 200).draw(Palette::Orange);\nrect.drawFrame(2, 2);\n// \u4e0a\u4e0b\u5de6\u53f3\u3092 10px \u7e2e\u5c0f\u3057\u305f\u9577\u65b9\u5f62\u3092\u63cf\u753b\u3059\u308b\nrect.stretched(-10).drawFrame(2, 2, Palette::Skyblue);\n// \u5de6\u53f3\u3092 40px \u62e1\u5927\u3001\u4e0a\u4e0b\u3092 20px \u7e2e\u5c0f\u3057\u305f\u9577\u65b9\u5f62\u3092\u63cf\u753b\u3059\u308b\nrect.stretched(40, -20).drawFrame(2, 2, Palette::Orange);\n}\n}\n</code></pre> <p><code>Polygon</code> \u306f\u81ea\u8eab\u3092\u62e1\u5927\u7e2e\u5c0f\u3057\u305f\u65b0\u3057\u3044 <code>Polygon</code> \u3092\u8fd4\u3059 <code>.scaled()</code> \u3084\u3001\u56de\u8ee2\u3057\u305f <code>Polygon</code> \u3092\u8fd4\u3059 <code>.rotated()</code>, <code>.rotatedAt()</code> \u306a\u3069\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6301\u3061\u307e\u3059\u3002\u307e\u305f\u3001<code>Shape2D</code> \u306f <code>Polygon</code> \u306b\u5909\u63db\u53ef\u80fd\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Polygon star = Shape2D::Star(150, Vec2{ 0, 0 });\nwhile (System::Update())\n{\nstar.scaled(1.2).movedBy(200, 200).draw(ColorF{ 0.6 });\nstar.movedBy(200, 200).draw(ColorF{ 0.8 });\nstar.scaled(0.8).movedBy(200, 200).draw(ColorF{ 1.0 });\nstar.rotated(-30_deg).movedBy(600, 400).draw(ColorF{ 0.6 });\nstar.movedBy(600, 400).draw(ColorF{ 0.8 });\nstar.rotated(30_deg).movedBy(600, 400).draw(ColorF{ 1.0 });\n}\n}\n</code></pre>"},{"location":"tutorial2/shape/#1723-\u5186\u5ea7\u6a19","title":"17.23 \u5186\u5ea7\u6a19","text":"<p>\u5ea7\u6a19\u306e\u6307\u5b9a\u306b\u304a\u3044\u3066\u306f\u3001X \u8ef8 Y \u8ef8\u3092\u4f7f\u3063\u305f\u5ea7\u6a19\u7cfb\u3067\u306f\u306a\u304f\u3001\u57fa\u6e96\u70b9\u304b\u3089\u306e\u89d2\u5ea6\u3068\u8ddd\u96e2\u306b\u57fa\u3065\u3044\u305f\u5186\u5ea7\u6a19\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u306a\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306f <code>Vec2</code> \u578b\u306b\u5909\u63db\u53ef\u80fd\u306a\u5186\u5ea7\u6a19\u30af\u30e9\u30b9\u3067\u3059\u3002</p> \u30af\u30e9\u30b9 \u8aac\u660e <code>Circular{ r, theta }</code> \u539f\u70b9\u3092\u4e2d\u5fc3\u3068\u3059\u308b\u534a\u5f84 <code>double r</code> \u306e\u5186\u3092\u8003\u3048\u3001\u305d\u306e\u5186\u5468\u4e0a\u3067 12 \u6642\u306e\u65b9\u5411\u3092 0\u00b0 \u3068\u3057\u3066\u6642\u8a08\u56de\u308a\u306b <code>double theta</code> \uff08\u30e9\u30b8\u30a2\u30f3\uff09\u306e\u4f4d\u7f6e\u3092\u8868\u3057\u307e\u3059\u3002<code>Vec2</code> \u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002 <code>OffsetCircular{ offset, r, theta }</code> <code>Vec2 offset</code> \u3092\u4e2d\u5fc3\u3068\u3059\u308b\u534a\u5f84 <code>double r</code> \u306e\u5186\u3092\u8003\u3048\u3001\u305d\u306e\u5186\u5468\u4e0a\u3067 12 \u6642\u306e\u65b9\u5411\u3092 0\u00b0 \u3068\u3057\u3066\u6642\u8a08\u56de\u308a\u306b <code>double theta</code> \uff08\u30e9\u30b8\u30a2\u30f3\uff09\u306e\u4f4d\u7f6e\u3092\u8868\u3057\u307e\u3059\u3002<code>Vec2</code> \u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002 <p></p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(Palette::White);\nwhile (System::Update())\n{\nconst double t = Scene::Time();\nfor (int32 i = 0; i &lt; 12; ++i)\n{\nconst double theta = (i * 30_deg);\n// (400, 300) \u3092\u4e2d\u5fc3\u3068\u3059\u308b\u534a\u5f84 200 \u306e\u5186\u5468\u4e0a\u3067\u3001\u89d2\u5ea6 theta \u306e\u4f4d\u7f6e\u306b\u3042\u308b\u70b9\u306e\u5ea7\u6a19\u3092\u8a08\u7b97\u3059\u308b\nconst Vec2 pos = OffsetCircular{ Vec2{ 400, 300 }, 200, theta };\nCircle{ pos, 20 }.draw(HSV{ i * 30 });\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/string/","title":"19. \u6587\u5b57\u5217\u30af\u30e9\u30b9","text":"<p>\u6587\u5b57\u5217\u30af\u30e9\u30b9 <code>String</code> \u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial2/string/#191-\u6587\u5b57\u5217\u30af\u30e9\u30b9","title":"19.1 \u6587\u5b57\u5217\u30af\u30e9\u30b9","text":"<p>Siv3D \u3067\u306f <code>String</code> \u578b\u3092\u4f7f\u3063\u3066\u6587\u5b57\u5217\u3092\u8868\u73fe\u3057\u307e\u3059\u3002<code>String</code> \u306f\u3001UTF-32 \u306e\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u8868\u73fe\u3059\u308b <code>char32</code> \u578b\uff08\u6587\u5b57\uff09\u306e\u914d\u5217\u3067\u3059\u3002UTF-32 \u306e\u6587\u5b57\u3084\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306b\u306f\u3001<code>U'\u3042'</code>, <code>U\"Hello\"</code> \u306e\u3088\u3046\u306b <code>U</code> \u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u4ed8\u3051\u307e\u3059\u3002</p> <p><code>String</code> \u306f\u5185\u90e8\u3067 <code>std::u32string</code> \u3092\u4f7f\u3063\u3066\u6587\u5b57\u5217\u3092\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6587\u5b57\u5217\u30af\u30e9\u30b9\u3088\u308a\u591a\u304f\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6301\u3061\u3001\u69d8\u3005\u306a\u4fbf\u5229\u306a\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u6587\u5b57\u5217\u306f\u30e1\u30e2\u30ea\u4e0a\u3067\u306e\u9023\u7d9a\u6027\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String s = U\"Siv3D\";\nPrint &lt;&lt; s;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#192-\u6587\u5b57\u5217\u306e\u9577\u3055","title":"19.2 \u6587\u5b57\u5217\u306e\u9577\u3055","text":"<p>\u6587\u5b57\u5217\u306e\u9577\u3055\u306f <code>.size()</code> \u3067\u53d6\u5f97\u3057\u307e\u3059\u3002\u4e00\u90e8\u306e\u7d75\u6587\u5b57\u306a\u3069\u3092\u9664\u304d\u3001\u6587\u5b57\u5217\u306e\u9577\u3055\u306f\u898b\u305f\u76ee\u306e\u6587\u5b57\u6570\u3068\u540c\u3058\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String s1 = U\"Siv3D\";\nPrint &lt;&lt; s1.size();\nconst String s2 = U\"\u3053\u3093\u306b\u3061\u306f\";\nPrint &lt;&lt; s2.size();\nconst String s3 = U\"\ud83d\udc08\";\nPrint &lt;&lt; s3.size();\n// \u8907\u6570\u306e\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u304b\u3089\u69cb\u6210\u3055\u308c\u3066\u3044\u308b\u7d75\u6587\u5b57\u3082\u3042\u308b\nconst String s4 = U\"\ud83d\udc69\u200d\ud83c\udfa4\";\nPrint &lt;&lt; s4.size();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#193-\u6307\u5b9a\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u6587\u5b57\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","title":"19.3 \u6307\u5b9a\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u6587\u5b57\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","text":"<p>\u6587\u5b57\u5217\u5185\u306e\u6307\u5b9a\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u3042\u308b\u6587\u5b57\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u3001<code>[]</code> \u6f14\u7b97\u5b50\u3092\u4f7f\u3044\u307e\u3059\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f 0 \u304b\u3089\u59cb\u307e\u308a\u307e\u3059\u3002<code>s.front()</code> \u306f <code>s[0]</code> \u3068\u540c\u3058\u3067\u3059\u3002<code>s.back()</code> \u306f <code>s[s.size() - 1]</code> \u3068\u540c\u3058\u3067\u672b\u5c3e\u306e\u6587\u5b57\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\u7bc4\u56f2\u5916\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nString s = U\"Siv3D\";\nconst char32 c = s[0];\nPrint &lt;&lt; c;\nPrint &lt;&lt; s[1];\n// \u5148\u982d\u306e\u6587\u5b57\u306b\u30a2\u30af\u30bb\u30b9\nPrint &lt;&lt; s.front();\n// \u672b\u5c3e\u306e\u6587\u5b57\u306b\u30a2\u30af\u30bb\u30b9\nPrint &lt;&lt; s.back();\ns[3] = U'4';\ns.back() = U'X';\nPrint &lt;&lt; s;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#194-\u7bc4\u56f2\u30d9\u30fc\u30b9\u306e-for-\u6587\u3067\u6587\u5b57\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","title":"19.4 \u7bc4\u56f2\u30d9\u30fc\u30b9\u306e for \u6587\u3067\u6587\u5b57\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b","text":"<p>\u7bc4\u56f2\u30d9\u30fc\u30b9 for \u6587\u3092\u4f7f\u3063\u3066\u6587\u5b57\u5217\u306e\u5404\u6587\u5b57\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String s = U\"Siv3D\";\nfor (const auto&amp; ch : s)\n{\nPrint &lt;&lt; ch;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#195-\u7a7a\u306e\u6587\u5b57\u5217","title":"19.5 \u7a7a\u306e\u6587\u5b57\u5217","text":"<p>\u8981\u7d20\u3092\u4fdd\u6301\u3057\u3066\u3044\u306a\u3044\u3001\u9577\u3055\u304c 0 \u306e\u6587\u5b57\u5217\u306f\u7a7a\u306e\u6587\u5b57\u5217\u3067\u3059\u3002\u4ee3\u5165\u3084\u8ffd\u52a0\u306b\u3088\u3063\u3066\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001\u7a7a\u3067\u306a\u3044\u6587\u5b57\u5217\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nString s;\nPrint &lt;&lt; s;\nPrint &lt;&lt; s.size();\ns = U\"Hello, Siv3D!\";\nPrint &lt;&lt; s;\nPrint &lt;&lt; s.size();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#196-\u6587\u5b57\u5217\u304c\u7a7a\u3067\u3042\u308b\u304b\u3092\u8abf\u3079\u308b","title":"19.6 \u6587\u5b57\u5217\u304c\u7a7a\u3067\u3042\u308b\u304b\u3092\u8abf\u3079\u308b","text":"<p><code>String</code> \u578b\u306e\u5024 <code>s</code> \u304c\u7a7a\u3067\u3042\u308b\u304b\u306f\u3001<code>if (s.isEmpty())</code> \u3084 <code>if (s)</code> / <code>if (not s)</code> \u3067\u8abf\u3079\u3089\u308c\u307e\u3059\u3002</p> <p></p> <p>not \u306b\u3064\u3044\u3066</p> <p><code>not</code> \u306f <code>!</code> \u3068\u540c\u3058\u3067\u3059\u3002Siv3D \u3067\u306f <code>!</code> \u3088\u308a\u3082\u8996\u8a8d\u6027\u306e\u9ad8\u3044 <code>not</code> \u3092\u4f7f\u3046\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u3092\u63a1\u7528\u3057\u3066\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nString s1;\nString s2 = U\"Hello, Siv3D!\";\nPrint &lt;&lt; s1.isEmpty();\nPrint &lt;&lt; s2.isEmpty();\nif (not s1)\n{\nPrint &lt;&lt; U\"s1 is empty\";\n}\nif (s2)\n{\nPrint &lt;&lt; U\"s2 is not empty\";\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#197-\u6587\u5b57\u5217\u306e\u672b\u5c3e\u306b\u6587\u5b57\u3092\u8ffd\u52a0\u3059\u308b","title":"19.7 \u6587\u5b57\u5217\u306e\u672b\u5c3e\u306b\u6587\u5b57\u3092\u8ffd\u52a0\u3059\u308b","text":"<p><code>&lt;&lt;</code> \u3067\u6587\u5b57\u5217\u306e\u672b\u5c3e\u306b\u6587\u5b57\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>&lt;&lt;</code> \u306f\u9023\u7d9a\u3057\u3066\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nString s = U\"Siv3\";\nPrint &lt;&lt; s;\ns &lt;&lt; U'D';\nfor (int32 i = 0; i &lt; 3; ++i)\n{\ns &lt;&lt; U'!';\nPrint &lt;&lt; s;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#198-\u6587\u5b57\u5217\u306e\u672b\u5c3e\u306b\u6587\u5b57\u5217\u3092\u8ffd\u52a0\u3059\u308b","title":"19.8 \u6587\u5b57\u5217\u306e\u672b\u5c3e\u306b\u6587\u5b57\u5217\u3092\u8ffd\u52a0\u3059\u308b","text":"<p><code>+=</code> \u3067\u6587\u5b57\u5217\u306e\u672b\u5c3e\u306b\u6587\u5b57\u5217\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nString s = U\"Siv\";\nPrint &lt;&lt; s;\ns += U\"3D\";\nPrint &lt;&lt; s;\nfor (int32 i = 0; i &lt; 3; ++i)\n{\ns += U\"!?\";\nPrint &lt;&lt; s;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#199-\u6587\u5b57\u5217\u3092\u7d50\u5408\u3059\u308b","title":"19.9 \u6587\u5b57\u5217\u3092\u7d50\u5408\u3059\u308b","text":"<p><code>+</code> \u3067\u5de6\u53f3\u306e\u6587\u5b57\u5217\u3092\u7d50\u5408\u3057\u305f\u65b0\u3057\u3044\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u5143\u306e\u6587\u5b57\u5217\u306f\u5909\u66f4\u3055\u308c\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String s1 = U\"Hello, \";\nconst String s2 = U\"Siv3D!\";\nPrint &lt;&lt; (s1 + s2);\nconst String s3 = (s1 + s2);\nPrint &lt;&lt; (s3 + U\"!!!\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#1910-\u6587\u5b57\u5217\u3092\u7a7a\u306b\u3059\u308b","title":"19.10 \u6587\u5b57\u5217\u3092\u7a7a\u306b\u3059\u308b","text":"<p><code>.clear()</code> \u3067\u6587\u5b57\u5217\u3092\u7a7a\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nString s = U\"Hello, Siv3D!\";\nPrint &lt;&lt; s;\nPrint &lt;&lt; s.isEmpty();\n// \u6587\u5b57\u5217\u3092\u7a7a\u306b\u3059\u308b\ns.clear();\nPrint &lt;&lt; s;\nPrint &lt;&lt; s.isEmpty();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#1911-\u672b\u5c3e\u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b","title":"19.11 \u672b\u5c3e\u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b","text":"<p><code>.pop_back()</code> \u3067\u6587\u5b57\u5217\u306e\u672b\u5c3e\u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>.pop_back_N(n)</code> \u3067\u672b\u5c3e\u304b\u3089 <code>n</code> \u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u7a7a\u306e\u6587\u5b57\u5217\u3067 <code>.pop_back()</code> \u3092\u547c\u3093\u3067\u306f\u3044\u3051\u307e\u305b\u3093\u3002\u4e00\u65b9\u3001<code>.pop_back_N(n)</code> \u306f\u7a7a\u306e\u6587\u5b57\u5217\u3067\u3082\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>.pop_back_N(n)</code> \u306f\u5b9f\u969b\u306e\u8981\u7d20\u6570\u4ee5\u4e0a\u3092\u524a\u9664\u3057\u3088\u3046\u3068\u3057\u305f\u5834\u5408\u306b\u6587\u5b57\u5217\u3092\u7a7a\u306b\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nString s = U\"Siv3D!\";\nPrint &lt;&lt; s;\ns.pop_back();\nPrint &lt;&lt; s;\ns.pop_back_N(2);\nPrint &lt;&lt; s;\n// \u5b9f\u969b\u306e\u8981\u7d20\u6570\u4ee5\u4e0a\u3092\u524a\u9664\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u6587\u5b57\u5217\u3092\u7a7a\u306b\u3059\u308b\ns.pop_back_N(100);\nPrint &lt;&lt; s.isEmpty();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#1912-\u5148\u982d\u306e\u6587\u5b57\u3092\u524a\u9664\u3059\u308b","title":"19.12 \u5148\u982d\u306e\u6587\u5b57\u3092\u524a\u9664\u3059\u308b","text":"<p><code>.pop_front()</code> \u3067\u6587\u5b57\u5217\u306e\u5148\u982d\u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>.pop_front_N(n)</code> \u3067\u5148\u982d\u304b\u3089 <code>n</code> \u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u7a7a\u306e\u6587\u5b57\u5217\u3067 <code>.pop_front()</code> \u3092\u547c\u3093\u3067\u306f\u3044\u3051\u307e\u305b\u3093\u3002\u4e00\u65b9\u3001<code>.pop_front_N(n)</code> \u306f\u7a7a\u306e\u6587\u5b57\u5217\u3067\u3082\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>.pop_front_N(n)</code> \u306f\u5b9f\u969b\u306e\u8981\u7d20\u6570\u4ee5\u4e0a\u3092\u524a\u9664\u3057\u3088\u3046\u3068\u3057\u305f\u5834\u5408\u306b\u6587\u5b57\u5217\u3092\u7a7a\u306b\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nString s = U\"Siv3D!\";\nPrint &lt;&lt; s;\ns.pop_front();\nPrint &lt;&lt; s;\ns.pop_front_N(2);\nPrint &lt;&lt; s;\n// \u5b9f\u969b\u306e\u8981\u7d20\u6570\u4ee5\u4e0a\u3092\u524a\u9664\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u6587\u5b57\u5217\u3092\u7a7a\u306b\u3059\u308b\ns.pop_front_N(100);\nPrint &lt;&lt; s.isEmpty();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#1913-\u3042\u308b\u6587\u5b57\u3084\u6587\u5b57\u5217\u3092\u542b\u3080\u304b\u3092\u8abf\u3079\u308b","title":"19.13 \u3042\u308b\u6587\u5b57\u3084\u6587\u5b57\u5217\u3092\u542b\u3080\u304b\u3092\u8abf\u3079\u308b","text":"<p>\u3042\u308b\u6587\u5b57\u3084\u6587\u5b57\u5217\u3092\u542b\u3080\u304b\u3092\u3001<code>.contains()</code> \u3067\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3042\u308b\u6587\u5b57\u3084\u6587\u5b57\u5217\u3067\u59cb\u307e\u308b\u304b\u3092\u3001<code>.starts_with()</code> \u3067\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3042\u308b\u6587\u5b57\u3084\u6587\u5b57\u5217\u3067\u7d42\u308f\u308b\u304b\u3092\u3001<code>.ends_with()</code> \u3067\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String s = U\"Hello, Siv3D!\";\n// \u542b\u3080\u304b\u3092\u8abf\u3079\u308b\nPrint &lt;&lt; s.contains(U\"Siv\");\nPrint &lt;&lt; s.contains(U'S');\n// \u6307\u5b9a\u3057\u305f\u6587\u5b57\u3084\u6587\u5b57\u5217\u3067\u59cb\u307e\u308b\u304b\u3092\u8abf\u3079\u308b\nPrint &lt;&lt; s.starts_with(U\"Siv\");\nPrint &lt;&lt; s.starts_with(U'H');\n// \u6307\u5b9a\u3057\u305f\u6587\u5b57\u3084\u6587\u5b57\u5217\u3067\u7d42\u308f\u308b\u304b\u3092\u8abf\u3079\u308b\nPrint &lt;&lt; s.ends_with(U\"3D!\");\nPrint &lt;&lt; s.ends_with(U'?');\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#1914-\u6587\u5b57\u5217\u306e\u4e00\u90e8\u304b\u3089\u65b0\u3057\u3044\u6587\u5b57\u5217\u3092\u4f5c\u308b","title":"19.14 \u6587\u5b57\u5217\u306e\u4e00\u90e8\u304b\u3089\u65b0\u3057\u3044\u6587\u5b57\u5217\u3092\u4f5c\u308b","text":"<p><code>.substr(offset, count)</code> \u3067\u3001\u6587\u5b57\u5217\u306e <code>offset</code> \u6587\u5b57\u76ee\u304b\u3089 <code>count</code> \u6587\u5b57\u306e\u90e8\u5206\u6587\u5b57\u5217\uff08<code>String</code>\uff09\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>offset</code> \u306f 0 \u304b\u3089\u59cb\u307e\u308a\u307e\u3059\u3002<code>count</code> \u304c\u7701\u7565\u3055\u308c\u305f\u5834\u5408\u306f\u3001<code>offset</code> \u6587\u5b57\u76ee\u304b\u3089\u672b\u5c3e\u307e\u3067\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002<code>offset</code> \u304c\u5b9f\u969b\u306e\u6587\u5b57\u5217\u306e\u9577\u3055\u3088\u308a\u5927\u304d\u3044\u5834\u5408\u306f\u3001\u672b\u5c3e\u307e\u3067\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String s = U\"Hello, Siv3D!\";\n// 0 \u6587\u5b57\u76ee\u304b\u3089 5 \u6587\u5b57\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b\nPrint &lt;&lt; s.substr(0, 5);\n// 7 \u6587\u5b57\u76ee\u304b\u3089 3 \u6587\u5b57\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b\nPrint &lt;&lt; s.substr(7, 3);\n// 7 \u6587\u5b57\u76ee\u304b\u3089\u672b\u5c3e\u307e\u3067\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b\nPrint &lt;&lt; s.substr(7);\n// \u7b2c 2 \u5f15\u6570\u304c\u5b9f\u969b\u306e\u6587\u5b57\u5217\u306e\u9577\u3055\u3088\u308a\u5927\u304d\u3044\u5834\u5408\u306f\u3001\u672b\u5c3e\u307e\u3067\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b\nPrint &lt;&lt; s.substr(0, 100);\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p>\u6b21\u306e\u3088\u3046\u306b\u3001\u6642\u9593\u7d4c\u904e\u306b\u5fdc\u3058\u3066\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5fdc\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String s = U\"Hello, Siv3D!\";\nStopwatch stopwatch{ StartImmediately::Yes };\nwhile (System::Update())\n{\nClearPrint();\nconst int32 count = (stopwatch.ms() / 300);\nPrint &lt;&lt; s.substr(0, count);\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#1915-\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3092\u5c0f\u6587\u5b57--\u5927\u6587\u5b57\u306b\u3059\u308b","title":"19.15 \u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3092\u5c0f\u6587\u5b57 / \u5927\u6587\u5b57\u306b\u3059\u308b","text":"<p><code>.lowercased()</code> \u3067\u3001\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3092\u5c0f\u6587\u5b57\u306b\u3057\u305f\u65b0\u3057\u3044\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <p><code>.uppercased()</code> \u3067\u3001\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3092\u5927\u6587\u5b57\u306b\u3057\u305f\u65b0\u3057\u3044\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String s1 = U\"Hello, Siv3D!\";\nPrint &lt;&lt; s1.lowercased();\nPrint &lt;&lt; s1.uppercased();\nconst String s2 = U\"\u3053\u3093\u306b\u3061\u306f\u3001Siv3D!\";\nPrint &lt;&lt; s2.lowercased();\nPrint &lt;&lt; s2.uppercased();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#1916-\u6587\u5b57\u3084\u6587\u5b57\u5217\u3092\u7f6e\u304d\u63db\u3048\u308b","title":"19.16 \u6587\u5b57\u3084\u6587\u5b57\u5217\u3092\u7f6e\u304d\u63db\u3048\u308b","text":"<p><code>.replace(from, to)</code> \u3067\u3001\u6587\u5b57\u5217\u306e\u4e2d\u306e <code>from</code> \u3092 <code>to</code> \u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002</p> <p><code>.replaced(from, to)</code> \u3067\u3001\u6587\u5b57\u5217\u306e\u4e2d\u306e <code>from</code> \u3092 <code>to</code> \u306b\u7f6e\u304d\u63db\u3048\u305f\u65b0\u3057\u3044\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u5143\u306e\u6587\u5b57\u5217\u306f\u5909\u66f4\u3055\u308c\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nString s = U\"Hello, Siv3D!\";\n// Siv3D \u3092 C++ \u306b\u7f6e\u304d\u63db\u3048\u308b\ns.replace(U\"Siv3D\", U\"C++\");\nPrint &lt;&lt; s;\n// ! \u3092 ? \u306b\u7f6e\u304d\u63db\u3048\u308b\ns.replace(U'!', U'?');\nPrint &lt;&lt; s;\n// \u7f6e\u304d\u63db\u3048\u305f\u65b0\u3057\u3044\u6587\u5b57\u5217\u3092\u8fd4\u3059\nPrint &lt;&lt; s.replaced(U\"Hello\", U\"Hi\");\n// \u5143\u306e\u6587\u5b57\u5217\u306f\u5909\u66f4\u3055\u308c\u3066\u3044\u306a\u3044\nPrint &lt;&lt; s;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#1917-\u524d\u5f8c\u306e\u7a7a\u767d\u6587\u5b57\u3092\u524a\u9664\u3059\u308b","title":"19.17 \u524d\u5f8c\u306e\u7a7a\u767d\u6587\u5b57\u3092\u524a\u9664\u3059\u308b","text":"<p><code>.trim()</code> \u3067\u3001\u6587\u5b57\u5217\u306e\u524d\u5f8c\u306b\u3042\u308b\u7a7a\u767d\u6587\u5b57\uff08\u30b9\u30da\u30fc\u30b9\u3001\u30bf\u30d6\u3001\u6539\u884c\u306a\u3069\uff09\u3092\u524a\u9664\u3057\u307e\u3059\u3002</p> <p><code>.trimmed()</code> \u3067\u3001\u6587\u5b57\u5217\u306e\u524d\u5f8c\u306b\u3042\u308b\u7a7a\u767d\u6587\u5b57\u3092\u524a\u9664\u3057\u305f\u65b0\u3057\u3044\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u5143\u306e\u6587\u5b57\u5217\u306f\u5909\u66f4\u3055\u308c\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nString s1 = U\" Hello, Siv3D!   \";\ns1.trim();\nPrint &lt;&lt; s1;\nPrint &lt;&lt; s1.size();\nconst String s2 = U\"\\n\\n Siv3D  \\n\\n\\n\";\nPrint &lt;&lt; s2.trimmed();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#1918-\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305f\u6587\u5b57\u3067\u5206\u5272\u3059\u308b","title":"19.18 \u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305f\u6587\u5b57\u3067\u5206\u5272\u3059\u308b","text":"<p><code>.split(delimiter)</code> \u3092\u4f7f\u3046\u3068\u3001\u6587\u5b57\u5217\u3092 <code>delimiter</code> \u3067\u5206\u5272\u3057\u305f\u7d50\u679c\u3092 <code>Array&lt;String&gt;</code> \u3067\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String s = U\"red,green,blue\";\nconst Array&lt;String&gt; values = s.split(U',');\nfor (const auto&amp; value : values)\n{\nPrint &lt;&lt; value;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p><code>U','</code> \u3067\u533a\u5207\u3089\u308c\u305f\u6570\u5b57\u306e\u6587\u5b57\u5217\u3092 <code>Array&lt;int32&gt;</code> \u306b\u5909\u63db\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String s = U\"1, 2, 3, 4, 5\";\nconst Array&lt;int32&gt; a = s.split(U',').map(Parse&lt;int32&gt;);\nPrint &lt;&lt; a;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#1919-\u4ed6\u306e\u6587\u5b57\u5217\u578b\u3078\u5909\u63db\u3059\u308b","title":"19.19 \u4ed6\u306e\u6587\u5b57\u5217\u578b\u3078\u5909\u63db\u3059\u308b","text":"<p><code>String</code> \u3092\u5225\u306e\u6587\u5b57\u5217\u578b\u306b\u5909\u63db\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002</p> \u30e1\u30f3\u30d0\u95a2\u6570 \u8aac\u660e <code>.narrow()</code> <code>std::string</code> (\u6587\u5b57\u30b3\u30fc\u30c9\u306f\u74b0\u5883\u4f9d\u5b58) \u306b\u5909\u63db\u3057\u307e\u3059\u3002 <code>.toUTF8()</code> <code>std::string</code> (UTF-8) \u306b\u5909\u63db\u3057\u307e\u3059\u3002 <code>.toWstr()</code> <code>std::wstring</code> \u306b\u5909\u63db\u3057\u307e\u3059\u3002 <code>.toUTF16()</code> <code>std::u16string</code> \u306b\u5909\u63db\u3057\u307e\u3059\u3002 <code>.toUTF32()</code> <code>std::u32string</code> \u306b\u5909\u63db\u3057\u307e\u3059\u3002 \u74b0\u5883\u4f9d\u5b58\u306e\u6587\u5b57\u30b3\u30fc\u30c9 <p><code>std::string</code> \u306e\u6587\u5b57\u30b3\u30fc\u30c9\u306f\u74b0\u5883\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u3002\u65e5\u672c\u8a9e\u306e Windows \u3067\u306f Shift_JIS (CP932), macOS \u3084 Linux \u3067\u306f UTF-8 \u3067\u3059\u3002Siv3D v0.8.0 \u4ee5\u964d\u306f <code>std::string</code> \u306e\u6587\u5b57\u30b3\u30fc\u30c9\u306f UTF-8 \u306b\u7d71\u4e00\u3055\u308c\u308b\u4e88\u5b9a\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String s = U\"\u3053\u3093\u306b\u3061\u306f\u3001Siv3D!\";\nconst std::string s1 = s.narrow();\nconst std::string s2 = s.toUTF8();\nconst std::wstring s3 = s.toWstr();\nconst std::u16string s4 = s.toUTF16();\nconst std::u32string s5 = s.toUTF32();\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p><code>const char*</code> \u3092\u53d7\u3051\u53d6\u308b\u95a2\u6570\u306b <code>String</code> \u306e\u6587\u5b57\u5217\u3092\u6e21\u3059\u306b\u306f\u3001<code>.narrow()</code> \u3067\u5f97\u3089\u308c\u305f <code>std::string</code> \u306e\u5148\u982d\u30dd\u30a4\u30f3\u30bf\u3092 <code>c_str()</code> \u3067\u53d6\u5f97\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String s = U\"12345\";\n// const char* \u3092\u53d7\u3051\u53d6\u308b\u95a2\u6570\u306b String \u306e\u6587\u5b57\u5217\u3092\u6e21\u3059\nconst int32 n = atoi(s.narrow().c_str());\nPrint &lt;&lt; n;\n// String \u306e\u6587\u5b57\u5217\u3092 int32 \u306b\u5909\u63db\u3059\u308b Siv3D \u306e\u6a19\u6e96\u7684\u306a\u65b9\u6cd5\nPrint &lt;&lt; Parse&lt;int32&gt;(s);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/string/#1920-\u4ed6\u306e\u6587\u5b57\u5217\u578b\u304b\u3089\u5909\u63db\u3059\u308b","title":"19.20 \u4ed6\u306e\u6587\u5b57\u5217\u578b\u304b\u3089\u5909\u63db\u3059\u308b","text":"<p>\u5225\u306e\u6587\u5b57\u5217\u578b\u304b\u3089 <code>String</code> \u306b\u5909\u63db\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002</p> \u95a2\u6570 \u8aac\u660e <code>Unicode::Widen(s)</code> <code>std::string</code> (\u6587\u5b57\u30b3\u30fc\u30c9\u306f\u74b0\u5883\u4f9d\u5b58) \u304b\u3089 <code>String</code> \u306b\u5909\u63db\u3057\u307e\u3059\u3002 <code>Unicode::WidenAscii(s)</code> <code>std::string</code> (ASCII) \u304b\u3089 <code>String</code> \u306b\u5909\u63db\u3057\u307e\u3059\u3002 <code>Unicode::FromWstring(s)</code> <code>std::wstring</code> \u304b\u3089 <code>String</code> \u306b\u5909\u63db\u3057\u307e\u3059\u3002 <code>Unicode::FromUTF8(s)</code> <code>std::string</code> (UTF-8) \u304b\u3089 <code>String</code> \u306b\u5909\u63db\u3057\u307e\u3059\u3002 <code>Unicode::FromUTF16(s)</code> <code>std::u16string</code> \u304b\u3089 <code>String</code> \u306b\u5909\u63db\u3057\u307e\u3059\u3002 <code>Unicode::FromUTF32(s)</code> <code>std::u32string</code> \u304b\u3089 <code>String</code> \u306b\u5909\u63db\u3057\u307e\u3059\u3002 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String s1 = Unicode::Widen(\"\u3053\u3093\u306b\u3061\u306f\u3001Siv3D!\");\nconst String s2 = Unicode::WidenAscii(\"Hello, Siv3D!\");\nconst String s3 = Unicode::FromWstring(L\"\u3053\u3093\u306b\u3061\u306f\u3001Siv3D!\");\nconst String s4 = Unicode::FromUTF8(\"\u3053\u3093\u306b\u3061\u306f\u3001Siv3D!\");\nconst String s5 = Unicode::FromUTF16(u\"\u3053\u3093\u306b\u3061\u306f\u3001Siv3D!\");\nconst String s6 = Unicode::FromUTF32(U\"\u3053\u3093\u306b\u3061\u306f\u3001Siv3D!\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/","title":"25. \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304f","text":"<p>\u7d75\u6587\u5b57\u3084\u30a2\u30a4\u30b3\u30f3\u3001\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3057\u63cf\u753b\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>\u753b\u9762\u306b\u63cf\u753b\u3059\u308b\u753b\u50cf\u30c7\u30fc\u30bf\u306f\u30c6\u30af\u30b9\u30c1\u30e3\u30af\u30e9\u30b9 <code>Texture</code> \u3067\u7ba1\u7406\u3057\u307e\u3059\u3002\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u3067\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4f5c\u6210\u306b\u306f\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u305f\u3081\u3001\u901a\u5e38\u306f\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d\u3067\u884c\u3044\u307e\u3059\u3002\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u5185\u3067\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u306f\u3001\u6bce\u30d5\u30ec\u30fc\u30e0\u4f5c\u6210\u3055\u308c\u306a\u3044\u3088\u3046\u306a\u5236\u5fa1\u304c\u5fc5\u8981\u3067\u3059\u3002</p>"},{"location":"tutorial2/texture/#251-\u7d75\u6587\u5b57\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b","title":"25.1 \u7d75\u6587\u5b57\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b","text":"<p><code>Texture \u5909\u6570\u540d{ U\"\u7d75\u6587\u5b57\"_emoji };</code> \u3067\u3001\u7d75\u6587\u5b57\u3092\u3082\u3068\u306b\u56fa\u5b9a\u30b5\u30a4\u30ba\uff08136x128\uff09\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p> <p>\u7d75\u6587\u5b57\u3092\u63a2\u3059</p> <ul> <li>\u7d75\u6587\u5b57\u306e\u7a2e\u985e\u306f emojipedia  \u3067\u63a2\u3059\u3068\u4fbf\u5229\u3067\u3059\u3002\u5168\u90e8\u3067 3700 \u7a2e\u985e\u4ee5\u4e0a\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</li> <li>Windows \u306e\u5834\u5408\u306f\u3001Win+. \u3067\u51fa\u3066\u304f\u308b\u3001OS \u6a19\u6e96\u306e\u7d75\u6587\u5b57\u5165\u529b\u30e1\u30cb\u30e5\u30fc\u3082\u4f7f\u3048\u307e\u3059\u3002</li> </ul> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture emoji1{ U\"\ud83d\udc08\"_emoji };\nconst Texture emoji2{ U\"\ud83c\udf4e\"_emoji };\nwhile (System::Update())\n{\nemoji1.drawAt(100, 100);\nemoji2.drawAt(200, 300);\nemoji1.drawAt(400, 300);\nemoji2.drawAt(Cursor::Pos());\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#252-\u30a2\u30a4\u30b3\u30f3\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b","title":"25.2 \u30a2\u30a4\u30b3\u30f3\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b","text":"<p><code>Texture \u5909\u6570\u540d{ \u30a2\u30a4\u30b3\u30f3\u756a\u53f7_icon, \u30b5\u30a4\u30ba };</code> \u3067\u3001\u30a2\u30a4\u30b3\u30f3\u3092\u3082\u3068\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u30a2\u30a4\u30b3\u30f3\u306f Material Design Icons  \u307e\u305f\u306f Font Awesome  \u3067\u8abf\u3079\u3089\u308c\u308b 16 \u9032\u6570\u30b3\u30fc\u30c9\u306b <code>_icon</code> \u3092\u4ed8\u3051\u305f\u5024\u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture icon1{ 0xF034E_icon, 80 };\nconst Texture icon2{ 0xF0493_icon, 120 };\nwhile (System::Update())\n{\nicon1.drawAt(100, 100);\nicon2.drawAt(200, 300);\nicon1.drawAt(400, 300, ColorF{ 0.25 });\nicon2.drawAt(Cursor::Pos(), ColorF{ 0.5, 0.25, 0.0 });\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#253-\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b","title":"25.3 \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b","text":"<p><code>Texture \u5909\u6570\u540d{ U\"\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\" };</code> \u3067\u3001\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u306f\u3001\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u30d5\u30a9\u30eb\u30c0\uff08\u958b\u767a\u4e2d\u306f <code>App</code> \u30d5\u30a9\u30eb\u30c0\uff09\u3092\u57fa\u6e96\u3068\u3059\u308b\u76f8\u5bfe\u30d1\u30b9\u304b\u3001\u7d76\u5bfe\u30d1\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p>\u4f8b\u3048\u3070 <code>U\"example/windmill.png\"</code> \u3068\u3059\u308b\u3068\u3001\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u30d5\u30a9\u30eb\u30c0\uff08<code>App</code> \u30d5\u30a9\u30eb\u30c0\uff09\u306e <code>example</code> \u30d5\u30a9\u30eb\u30c0\u306e <code>windmill.png</code> \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u3057\u307e\u3059\u3002</p> <p>Siv3D \u3067\u306f\u3001\u6b21\u306e 9 \u7a2e\u985e\u306e\u753b\u50cf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u8aad\u307f\u8fbc\u307f\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002</p> \u30d5\u30a9\u30fc\u30de\u30c3\u30c8 \u62e1\u5f35\u5b50 \u5bfe\u5fdc\u72b6\u6cc1 PNG png \u2714 JPEG jpg/jpeg/jfif \u2714 BMP bmp \u2714 SVG svg \u2714 GIF gif \u2714 TGA tga \u2714 PPM ppm/pgm/pbm/pnm \u2714 WebP webp \u2714 TIFF tif/tiff \u2714 JPEG2000 jp2 (\u5c06\u6765\u306e\u30d0\u30fc\u30b8\u30e7\u30f3) DDS dds (\u5c06\u6765\u306e\u30d0\u30fc\u30b8\u30e7\u30f3) WBMP wbmp (\u5c06\u6765\u306e\u30d0\u30fc\u30b8\u30e7\u30f3) JPEG XL jxl (\u5c06\u6765\u306e\u30d0\u30fc\u30b8\u30e7\u30f3) <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\n// \u98a8\u8eca\u306e\u753b\u50cf\nconst Texture texture1{ U\"example/windmill.png\" };\n// Siv3D \u304f\u3093\uff08Siv3D \u306e\u516c\u5f0f\u30de\u30b9\u30b3\u30c3\u30c8\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\uff09\u306e\u753b\u50cf\nconst Texture texture2{ U\"example/siv3d-kun.png\" };\nwhile (System::Update())\n{\ntexture1.draw(40, 20);\ntexture2.draw(400, 100);\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#254-\u753b\u50cf\u30af\u30e9\u30b9image\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b","title":"25.4 \u753b\u50cf\u30af\u30e9\u30b9\uff08Image\uff09\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u751f\u6210\u30fb\u52a0\u5de5\u3057\u305f\u753b\u50cf\u30c7\u30fc\u30bf\uff08<code>Image</code> \u30af\u30e9\u30b9\uff09\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002<code>Image</code> \u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u306f \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 53. \u753b\u50cf\u7de8\u96c6 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nImage MakeImage()\n{\nImage image{ 256, 256 };\nfor (int32 y = 0; y &lt; image.height(); ++y)\n{\nfor (int32 x = 0; x &lt; image.width(); ++x)\n{\nimage[y][x] = ColorF{ (x / 255.0), (y / 255.0), 0.0 };\n}\n}\nreturn image;\n}\nvoid Main()\n{\nconst Texture texture{ MakeImage() };\nwhile (System::Update())\n{\ntexture.draw();\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#255-\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u306e\u751f\u6210","title":"25.5 \u30df\u30c3\u30d7\u30de\u30c3\u30d7\u306e\u751f\u6210","text":"<p>\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5143\u306e\u30b5\u30a4\u30ba\u3088\u308a\u3082\u7e2e\u5c0f\u3057\u3066\u63cf\u753b\u3059\u308b\u5834\u5408\u306b\u306f\u3001\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u6ed1\u3089\u304b\u306a\u63cf\u753b\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u3068\u306f\u3001\u5143\u306e\u753b\u50cf\u3092\u7e2e\u5c0f\u3057\u305f\u753b\u50cf\u306e\u96c6\u5408\u3067\u3059\u3002\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u7e2e\u5c0f\u63cf\u753b\u6642\u306e\u30ce\u30a4\u30ba\u3068\u51e6\u7406\u30b3\u30b9\u30c8\u304c\u63d0\u8a00\u3057\u307e\u3059\u3002</p> <p>Siv3D \u3067\u306f\u3001\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u306f <code>Texture</code> \u306e\u5185\u90e8\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u3066\u3001<code>Texture</code> \u3092\u4f5c\u6210\u3059\u308b\u969b\u306b <code>TextureDesc::Mipped</code> \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u304c\u751f\u6210\u3055\u308c\u3001\u9069\u5207\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u7d75\u6587\u5b57\u3068\u30a2\u30a4\u30b3\u30f3\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\u969b\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\u4e00\u65b9\u3001\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3084 <code>Image</code> \u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306b\u306f\u660e\u793a\u7684\u306a <code>TextureDesc::Mipped</code> \u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002</p> \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4f5c\u6210\u65b9\u6cd5 \u30df\u30c3\u30d7\u30de\u30c3\u30d7\u306e\u751f\u6210 \u7d75\u6587\u5b57\u304b\u3089\u4f5c\u6210 \u2714 \u30a2\u30a4\u30b3\u30f3\u304b\u3089\u4f5c\u6210 \u2714 \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u4f5c\u6210 <code>TextureDesc::Mipped</code> \u306e\u6307\u5b9a\u304c\u5fc5\u8981 <code>Image</code> \u304b\u3089\u4f5c\u6210 <code>TextureDesc::Mipped</code> \u306e\u6307\u5b9a\u304c\u5fc5\u8981 <p>\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u3092\u751f\u6210\u3059\u308b\u3068\u3001\u305d\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30d3\u30c7\u30aa\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u7d04 30% \u5897\u52a0\u3057\u307e\u3059\u304c\u3001\u7e2e\u5c0f\u63cf\u753b\u6642\u306e\u51e6\u7406\u8ca0\u8377\u306f\u5927\u304d\u304f\u8efd\u6e1b\u3055\u308c\u307e\u3059\u3002\u7e2e\u5c0f\u63cf\u753b\u3092\u884c\u308f\u306a\u3044\u5834\u5408\u306b\u306f\u3001\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u3092\u751f\u6210\u3057\u306a\u3044\u3068\u3044\u3046\u9078\u629e\u80a2\u3082\u3042\u308a\u307e\u3059\u3002</p> <p>\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u30011 \u3064\u76ee\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u3092\u751f\u6210\u305b\u305a\u30012 \u3064\u76ee\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u3092\u751f\u6210\u3057\u3066\u63cf\u753b\u3057\u3066\u3044\u307e\u3059\u3002\u7e2e\u5c0f\u6642\u306b\u30ce\u30a4\u30ba\u304c\u5c11\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30df\u30c3\u30d7\u30de\u30c3\u30d7\u3092\u751f\u6210\u3057\u306a\u3044\nconst Texture texture1{ U\"example/windmill.png\" };\n// \u30df\u30c3\u30d7\u30de\u30c3\u30d7\u3092\u751f\u6210\u3059\u308b\nconst Texture texture2{ U\"example/windmill.png\", TextureDesc::Mipped };\nwhile (System::Update())\n{\nconst double scale = Periodic::Sine0_1(12s);\ntexture1.scaled(scale).drawAt(400, 150);\ntexture2.scaled(scale).drawAt(400, 450);\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#256-\u7a7a\u306e\u30c6\u30af\u30b9\u30c1\u30e3","title":"25.6 \u7a7a\u306e\u30c6\u30af\u30b9\u30c1\u30e3","text":"<p><code>Texture</code> \u578b\u306e\u5909\u6570\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u7a7a\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u7d75\u6587\u5b57\u3084\u30a2\u30a4\u30b3\u30f3\u3001\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306e\u30ed\u30fc\u30c9\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u3082\u7a7a\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u7a7a\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u300116x16 \u306e\u9ec4\u8272\u306e\u753b\u50cf\u3067\u3001\u6709\u52b9\u306a\u30c6\u30af\u30b9\u30c1\u30e3\u3068\u540c\u3058\u3088\u3046\u306b\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u3001\u63cf\u753b\u3057\u3066\u3082\u30a8\u30e9\u30fc\u306f\u767a\u751f\u3057\u307e\u305b\u3093\u3002</p> <p>\u7a7a\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u3042\u308b\u304b\u3092\u8abf\u3079\u308b\u306b\u306f\u3001<code>if (texture.isEmpty())</code>, <code>if (texture)</code>, <code>if (not texture)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nTexture texture1;\nPrint &lt;&lt; texture1.isEmpty();\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4ee3\u5165\u3059\u308b\ntexture1 = Texture{ U\"\ud83d\udc08\"_emoji };\nPrint &lt;&lt; texture1.isEmpty();\n// \u5b58\u5728\u3057\u306a\u3044\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\nconst Texture texture2{ U\"example/aaa.png\" };\nif (not texture2)\n{\nPrint &lt;&lt; U\"Failed to load a texture\";\n}\nwhile (System::Update())\n{\n// \u7a7a\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b\uff0816x16 \u306e\u9ec4\u8272\u3044\u753b\u50cf\uff09\ntexture2.drawAt(400, 300);\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#257-\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30b5\u30a4\u30ba","title":"25.7 \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30b5\u30a4\u30ba","text":"<p>\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5e45\u3068\u9ad8\u3055\u3092\u8abf\u3079\u308b\u306b\u306f\u3001<code>.width()</code>, <code>.height()</code>, <code>.size()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002<code>.size()</code> \u306f <code>Size</code> \u578b\u306e\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Texture texture1{ U\"\ud83d\udc08\"_emoji };\nPrint &lt;&lt; texture1.size();\nconst Texture texture2{ U\"example/windmill.png\" };\nPrint &lt;&lt; texture2.width();\nPrint &lt;&lt; texture2.height();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#258-\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b","title":"25.8 \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b","text":""},{"location":"tutorial2/texture/#2581-\u5de6\u4e0a\u306e\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u63cf\u753b\u3059\u308b","title":"25.8.1 \u5de6\u4e0a\u306e\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u63cf\u753b\u3059\u308b","text":"<p>\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u753b\u9762\u306b\u63cf\u753b\u3059\u308b\u306b\u306f\u3001\u63cf\u753b\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5de6\u4e0a\u306e\u5ea7\u6a19\u3092\u753b\u9762\u306e\u3069\u3053\u306b\u7f6e\u304f\u304b\u3092\u6307\u5b9a\u3057\u3066 <code>.draw(x, y)</code> \u307e\u305f\u306f <code>.draw(pos)</code> \u3057\u307e\u3059\u3002\u5ea7\u6a19\u3092\u7701\u7565\u3057\u305f\u5834\u5408\u3001<code>.draw(Vec2{ 0, 0 })</code> \u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture1{ U\"\ud83d\udc08\"_emoji };\nconst Texture texture2{ U\"example/windmill.png\" };\nwhile (System::Update())\n{\n// \u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408 (0, 0) \u304b\u3089\u63cf\u753b\u3059\u308b\ntexture1.draw();\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5ea7\u6a19 (200, 100) \u304b\u3089\u63cf\u753b\u3059\u308b\ntexture2.draw(200, 100);\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#2582-\u4e2d\u5fc3\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u63cf\u753b\u3059\u308b","title":"25.8.2 \u4e2d\u5fc3\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u63cf\u753b\u3059\u308b","text":"<p>\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5de6\u4e0a\u4f4d\u7f6e\u3067\u306f\u306a\u304f\u3001\u4e2d\u5fc3\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u63cf\u753b\u3059\u308b\u306b\u306f\u3001<code>.drawAt(x, y)</code> \u307e\u305f\u306f <code>.drawAt(pos)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture1{ U\"\ud83d\udc08\"_emoji };\nconst Texture texture2{ U\"example/windmill.png\" };\nwhile (System::Update())\n{\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5ea7\u6a19 (100, 100) \u3092\u4e2d\u5fc3\u306b\u63cf\u753b\u3059\u308b\ntexture1.drawAt(100, 100);\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5ea7\u6a19 (400, 300) \u3092\u4e2d\u5fc3\u306b\u63cf\u753b\u3059\u308b\ntexture2.drawAt(400, 300);\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#2583-\u305d\u308c\u4ee5\u5916\u306e\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u63cf\u753b\u3059\u308b","title":"25.8.3 \u305d\u308c\u4ee5\u5916\u306e\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u63cf\u753b\u3059\u308b","text":"<p>\u5de6\u4e0a\u3001\u4e2d\u5fc3\u4ee5\u5916\u306e\u5ea7\u6a19\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001\u6b21\u306e\u8868\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u3063\u3066\u3001<code>.draw(Arg::bottomLeft(x, y))</code> \u3042\u308b\u3044\u306f <code>.draw(Arg::bottomLeft = pos)</code> \u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5de6\u4e0b\u304c <code>x, y</code> \u307e\u305f\u306f <code>pos</code> \u3067\u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u306b\u306a\u308b\u3088\u3046\u306b\u63cf\u753b\u3055\u308c\u307e\u3059\u3002</p> \u5ea7\u6a19\u6307\u5b9a \u8aac\u660e <code>Arg::topLeft</code> \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5de6\u4e0a\u306e\u4f4d\u7f6e\u3092\u6307\u5b9a\u3059\u308b\uff08\u901a\u5e38\u306e <code>.draw()</code> \u3068\u540c\u3058\uff09 <code>Arg::topCenter</code> \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4e0a\u8fba\u306e\u4e2d\u592e\u3092\u6307\u5b9a\u3059\u308b <code>Arg::topRight</code> \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u53f3\u4e0a\u306e\u4f4d\u7f6e\u3092\u6307\u5b9a\u3059\u308b <code>Arg::leftCenter</code> \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5de6\u8fba\u306e\u4e2d\u592e\u3092\u6307\u5b9a\u3059\u308b <code>Arg::center</code> \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4e2d\u5fc3\u3092\u6307\u5b9a\u3059\u308b\uff08\u901a\u5e38\u306e <code>.drawAt()</code> \u3068\u540c\u3058\uff09 <code>Arg::rightCenter</code> \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u53f3\u8fba\u306e\u4e2d\u592e\u3092\u6307\u5b9a\u3059\u308b <code>Arg::bottomLeft</code> \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5de6\u4e0b\u306e\u4f4d\u7f6e\u3092\u6307\u5b9a\u3059\u308b <code>Arg::bottomCenter</code> \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4e0b\u8fba\u306e\u4e2d\u592e\u3092\u6307\u5b9a\u3059\u308b <code>Arg::bottomRight</code> \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u53f3\u4e0b\u306e\u4f4d\u7f6e\u3092\u6307\u5b9a\u3059\u308b <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture1{ U\"\ud83d\udc08\"_emoji };\nconst Texture texture2{ U\"example/windmill.png\" };\nwhile (System::Update())\n{\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5ea7\u6a19 (600, 0) \u304c\u53f3\u4e0a\u306b\u306a\u308b\u3088\u3046\u306b\u63cf\u753b\u3059\u308b\ntexture1.draw(Arg::topRight = Vec2{ 800, 0 });\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5ea7\u6a19 (20, 580) \u304c\u5de6\u4e0b\u306b\u306a\u308b\u3088\u3046\u306b\u63cf\u753b\u3059\u308b\ntexture2.draw(Arg::bottomLeft(20, 580));\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#259-\u8272\u3092\u4e57\u7b97\u3057\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b","title":"25.9 \u8272\u3092\u4e57\u7b97\u3057\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b","text":"<p>\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b\u969b\u306b\u3001\u8272\u3092\u4e57\u7b97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u5143\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30d4\u30af\u30bb\u30eb\u8272\u304c <code>ColorF{ sr, sg, sb }</code> \u3067\u3042\u308b\u3068\u304d\u3001\u8272 <code>ColorF{ r, g, b }</code> \u3092\u4e57\u7b97\u3059\u308b\u3068\u3001\u63cf\u753b\u3055\u308c\u308b\u8272\u306f <code>ColorF{ (sr * r), (sg * g), (sb * b) }</code> \u306b\u306a\u308a\u307e\u3059\uff08\u901a\u5e38\u306e\u30d6\u30ec\u30f3\u30c9\u30e2\u30fc\u30c9\u6642\uff09\u3002</p> <p>\u3064\u307e\u308a\u3001<code>ColorF{ 0.5 }</code> \u3092\u4e57\u7b97\u3059\u308b\u3068\u3001\u8272\u306e\u6210\u5206\u304c\u3059\u3079\u3066\u534a\u5206\u306b\u306a\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u5143\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30d4\u30af\u30bb\u30eb\u8272\u304c <code>ColorF{ 1.0 }</code> \u306e\u5834\u5408\u306f\u4e57\u7b97\u3057\u305f\u8272\u304c\u305d\u306e\u307e\u307e\u4f7f\u308f\u308c\u307e\u3059\u3002\u5143\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30d4\u30af\u30bb\u30eb\u8272\u304c <code>ColorF{ 0.0 }</code> \u306e\u5834\u5408\u306f\u3001\u3069\u306e\u3088\u3046\u306a\u8272\u3092\u4e57\u7b97\u3057\u3066\u3082 <code>ColorF{ 0.0 }</code> \u3067\u63cf\u753b\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture1{ 0xF034E_icon, 100 };\nconst Texture texture2{ U\"example/windmill.png\" };\nwhile (System::Update())\n{\ntexture1.drawAt(100, 100, ColorF{ 0.0 });\ntexture1.drawAt(300, 100, ColorF{ 0.5 });\ntexture1.drawAt(500, 100, ColorF{ 0.3, 0.8, 0.5 });\ntexture2.draw(200, 200, ColorF{ 0.5 });\n}\n}\n</code></pre> <p>\u4e0d\u900f\u660e\u5ea6\uff08\u30a2\u30eb\u30d5\u30a1\u5024\uff09\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u5143\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30d4\u30af\u30bb\u30eb\u8272\u304c <code>ColorF{ sr, sg, sb }</code> \u3067\u3001\u66f8\u304d\u8fbc\u307f\u5148\u306e\u30d4\u30af\u30bb\u30eb\u306e\u8272\u304c <code>ColorF{ dr, dg, db }</code> \u3067\u3042\u308b\u3068\u304d\u3001\u8272 <code>ColorF{ r, g, b, a }</code> \u3092\u4e57\u7b97\u3059\u308b\u3068\u3001\u63cf\u753b\u3055\u308c\u308b\u8272\u306f <code>ColorF{ (sr * a + dr * (1 - a)), (sg * a + dg * (1 - a)), (sb * a + db * (1 - a)) }</code> \u306b\u306a\u308a\u307e\u3059\uff08\u901a\u5e38\u306e\u30d6\u30ec\u30f3\u30c9\u30e2\u30fc\u30c9\u6642\uff09\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture1{ 0xF034E_icon, 100 };\nconst Texture texture2{ U\"example/windmill.png\" };\nwhile (System::Update())\n{\nRect{ 100, 100, 600, 400 }.draw();\ntexture1.drawAt(100, 100, ColorF{ 0.0, 0.2 });\ntexture1.drawAt(300, 100, ColorF{ 0.5, 0.8 });\ntexture1.drawAt(500, 100, ColorF{ 0.3, 0.8, 0.5, 0.5 });\nconst double a = Periodic::Sine0_1(4s);\ntexture2.draw(200, 200, ColorF{ 1.0, a });\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#2510-\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u62e1\u5927\u7e2e\u5c0f\u3057\u3066\u63cf\u753b\u3059\u308b","title":"25.10 \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u62e1\u5927\u7e2e\u5c0f\u3057\u3066\u63cf\u753b\u3059\u308b","text":""},{"location":"tutorial2/texture/#25101-\u500d\u7387\u3092\u6307\u5b9a\u3059\u308b","title":"25.10.1 \u500d\u7387\u3092\u6307\u5b9a\u3059\u308b","text":"<p>\u30c6\u30af\u30b9\u30c1\u30e3\u3092<code>.scaled(s)</code> \u307e\u305f\u306f <code>.scaled(sx, sy)</code> \u3059\u308b\u3053\u3068\u3067\u3001<code>Texture</code> \u306b\u30b5\u30a4\u30ba\u60c5\u5831\u3092\u4ed8\u52a0\u3057\u305f <code>TextureRegion</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u7e26\u6a2a s \u500d\u3042\u308b\u3044\u306f (sx, sy) \u500d\u306e\u5927\u304d\u3055\u306b\u62e1\u5927\u7e2e\u5c0f\u3055\u308c\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u3059\u3002</p> <p>\u65e2\u5b58\u306e <code>Texture</code> \u304b\u3089 <code>TextureRegion</code> \u3092\u4f5c\u6210\u3059\u308b\u64cd\u4f5c\u306f\u4f4e\u30b3\u30b9\u30c8\u306a\u306e\u3067\u3001\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u5185\u3067\u5b9f\u884c\u3057\u3066\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture{ U\"\ud83c\udf4e\"_emoji };\nwhile (System::Update())\n{\n// 0.3 \u500d\u306e\u5927\u304d\u3055\u3067\u63cf\u753b\u3059\u308b\ntexture.scaled(0.3).drawAt(100, 100);\n// 1.0 \u500d\u306e\u5927\u304d\u3055\u3067\u63cf\u753b\u3059\u308b\ntexture.scaled(1.0).drawAt(200, 200);\n// 2.0 \u500d\u306e\u5927\u304d\u3055\u3067\u63cf\u753b\u3059\u308b\ntexture.scaled(2.0).drawAt(400, 400);\n// \u5e45 0.5 \u500d\u3001\u9ad8\u3055 4.0 \u500d\u306e\u5927\u304d\u3055\u3067\u63cf\u753b\u3059\u308b\ntexture.scaled(0.5, 4.0).drawAt(700, 300);\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#25102-\u5e45\u3068\u9ad8\u3055\u3092\u6307\u5b9a\u3059\u308b","title":"25.10.2 \u5e45\u3068\u9ad8\u3055\u3092\u6307\u5b9a\u3059\u308b","text":"<p>\u500d\u7387\u306e\u4ee3\u308f\u308a\u306b\u30d4\u30af\u30bb\u30eb\u6570\u3092\u6307\u5b9a\u3057\u3066\u62e1\u5927\u7e2e\u5c0f\u3059\u308b\u306b\u306f\u3001<code>.resized(size)</code> \u307e\u305f\u306f <code>.resized(width, height)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002<code>.scaled()</code> \u3068\u540c\u3058\u3088\u3046\u306b\u3001<code>Texture</code> \u306b\u30b5\u30a4\u30ba\u60c5\u5831\u3092\u4ed8\u52a0\u3057\u305f <code>TextureRegion</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002<code>size</code> \u306f <code>double</code> \u578b\u306e\u5024\u3067\u9577\u8fba\u3092\u6307\u5b9a\u3059\u308b\u304b\u3001<code>SizeF</code> \u578b\u306e\u5024\u3067\u5e45\u3068\u9ad8\u3055\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture{ U\"\ud83c\udf4e\"_emoji };\nwhile (System::Update())\n{\n// \u9577\u8fba\u304c 40 \u30d4\u30af\u30bb\u30eb\u306b\u306a\u308b\u3088\u3046\u306b\u62e1\u5927\u7e2e\u5c0f\u3057\u3066\u63cf\u753b\u3059\u308b\ntexture.resized(40).drawAt(100, 100);\n// \u9577\u8fba\u304c 100 \u30d4\u30af\u30bb\u30eb\u306b\u306a\u308b\u3088\u3046\u306b\u62e1\u5927\u7e2e\u5c0f\u3057\u3066\u63cf\u753b\u3059\u308b\ntexture.resized(100).drawAt(200, 200);\n// \u5e45 250 \u30d4\u30af\u30bb\u30eb\u306b\u306a\u308b\u3088\u3046\u306b\u62e1\u5927\u7e2e\u5c0f\u3057\u3066\u63cf\u753b\u3059\u308b\ntexture.resized(250).drawAt(400, 400);\n// \u5e45 80 \u30d4\u30af\u30bb\u30eb\u3001\u9ad8\u3055 400 \u30d4\u30af\u30bb\u30eb\u306b\u306a\u308b\u3088\u3046\u306b\u62e1\u5927\u7e2e\u5c0f\u3057\u3066\u63cf\u753b\u3059\u308b\ntexture.resized(80, 400).drawAt(700, 300);\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#2511-\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u56de\u8ee2\u3057\u3066\u63cf\u753b\u3059\u308b","title":"25.11 \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u56de\u8ee2\u3057\u3066\u63cf\u753b\u3059\u308b","text":"<p><code>.rotated(angle)</code> \u307e\u305f\u306f <code>.rotatedAt(pos, angle)</code> \u306b\u3088\u3063\u3066\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u56de\u8ee2\u60c5\u5831\u3092\u4ed8\u52a0\u3057\u305f <code>TexturedQuad</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002<code>TexturedQuad</code> \u306f <code>Texture</code> \u306e\u3088\u3046\u306b <code>.draw()</code> \u307e\u305f\u306f <code>.drawAt()</code> \u3067\u304d\u307e\u3059\u3002<code>TextureRegion</code> \u3068\u540c\u69d8\u3001<code>TexturedQuad</code> \u3092\u4f5c\u6210\u3059\u308b\u306e\u306f\u8efd\u91cf\u306a\u64cd\u4f5c\u3067\u3042\u308b\u305f\u3081\u3001\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u5185\u3067\u5b9f\u884c\u3057\u3066\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"tutorial2/texture/#25111-\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4e2d\u5fc3\u3092\u8ef8\u306b\u3057\u3066\u56de\u8ee2\u3059\u308b","title":"25.11.1 \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4e2d\u5fc3\u3092\u8ef8\u306b\u3057\u3066\u56de\u8ee2\u3059\u308b","text":"<p><code>.rotated(angle)</code> \u306f\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4e2d\u5fc3\u3092\u8ef8\u306b\u3057\u3066 <code>angle</code> \u3060\u3051\u56de\u8ee2\u3057\u305f <code>TexturedQuad</code> \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002<code>angle</code> \u306f <code>double</code> \u578b\u306e\u5024\u3067\u3001\u5358\u4f4d\u306f\u30e9\u30b8\u30a2\u30f3\u3067\u3059\u3002</p> <p>\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4e2d\u5fc3\u306b\u753b\u92f2\u3092\u6253\u3061\u8fbc\u3093\u3060\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u56de\u8ee2\u3055\u305b\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture{ U\"\ud83c\udf4e\"_emoji };\nwhile (System::Update())\n{\n// \u6642\u8a08\u56de\u308a\u306b 15\u00b0 \u56de\u8ee2\u3055\u305b\u3066\u63cf\u753b\u3059\u308b\ntexture.rotated(15_deg).drawAt(100, 100);\n// \u6642\u8a08\u56de\u308a\u306b 180\u00b0 \u56de\u8ee2\u3055\u305b\u3066\u63cf\u753b\u3059\u308b\ntexture.rotated(180_deg).drawAt(200, 300);\n// \u6642\u8a08\u56de\u308a\u306b 45\u00b0 \u56de\u8ee2\u3055\u305b\u3066\u63cf\u753b\u3059\u308b\ntexture.rotated(45_deg).drawAt(400, 300);\n// 0.5 \u500d\u306b\u7e2e\u5c0f\u3057\u3066\u6642\u8a08\u56de\u308a\u306b 90\u00b0 \u56de\u8ee2\u3055\u305b\u3066\u63cf\u753b\u3059\u308b\ntexture.scaled(0.5).rotated(90_deg).drawAt(600, 300);\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#25112-\u30c6\u30af\u30b9\u30c1\u30e3\u4e0a\u306e\u6307\u5b9a\u3057\u305f\u5ea7\u6a19\u3092\u8ef8\u306b\u3057\u3066\u56de\u8ee2\u3059\u308b","title":"25.11.2 \u30c6\u30af\u30b9\u30c1\u30e3\u4e0a\u306e\u6307\u5b9a\u3057\u305f\u5ea7\u6a19\u3092\u8ef8\u306b\u3057\u3066\u56de\u8ee2\u3059\u308b","text":"<p><code>.rotatedAt(pos, angle)</code> \u306f\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u4e0a\u306e <code>pos</code> \u3092\u8ef8\u306b\u3057\u3066 <code>angle</code> \u3060\u3051\u56de\u8ee2\u3057\u305f <code>TexturedQuad</code> \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002<code>pos</code> \u306f <code>Vec2</code> \u578b\u306e\u5024\u3067\u3059\u3002<code>angle</code> \u306f <code>double</code> \u578b\u306e\u5024\u3067\u3001\u5358\u4f4d\u306f\u30e9\u30b8\u30a2\u30f3\u3067\u3059\u3002</p> <p>\u30c6\u30af\u30b9\u30c1\u30e3\u4e0a\u306e\u6307\u5b9a\u3057\u305f\u5ea7\u6a19\u306b\u753b\u92f2\u3092\u6253\u3061\u8fbc\u3093\u3060\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u56de\u8ee2\u3055\u305b\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture{ U\"\ud83c\udf4e\"_emoji };\nwhile (System::Update())\n{\nconst double angle = (Scene::Time() * 90_deg);\n// \u753b\u50cf\u4e2d\u306e (58, 13) \u3092\u8ef8\u306b\u56de\u8ee2\u3055\u305b\u3066\u3001\u753b\u9762\u306e\u4e2d\u5fc3\u306b\u63cf\u753b\u3059\u308b\ntexture.rotatedAt(Vec2{ 58, 13 }, angle).drawAt(Scene::Center());\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#2512-\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4e0a\u4e0b\u5de6\u53f3\u53cd\u8ee2\u3057\u3066\u63cf\u753b\u3059\u308b","title":"25.12 \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4e0a\u4e0b\u30fb\u5de6\u53f3\u53cd\u8ee2\u3057\u3066\u63cf\u753b\u3059\u308b","text":"<p>\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4e0a\u4e0b\u53cd\u8ee2\u3057\u3066\u63cf\u753b\u3059\u308b\u306b\u306f\u3001<code>.flipped()</code> \u307e\u305f\u306f <code>.flipped(onOff)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5de6\u53f3\u53cd\u8ee2\u3057\u3066\u63cf\u753b\u3059\u308b\u306b\u306f\u3001<code>.mirrored()</code> \u307e\u305f\u306f <code>.mirrored(onOff)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p>\u3053\u308c\u3089\u306e\u95a2\u6570\u306f <code>Texture</code> \u306b\u4e0a\u4e0b\u53cd\u8ee2\u307e\u305f\u306f\u5de6\u53f3\u53cd\u8ee2\u306e\u60c5\u5831\u3092\u4ed8\u52a0\u3057\u305f <code>TextureRegion</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002<code>onOff</code> \u306f <code>bool</code> \u578b\u306e\u5024\u3067\u3001<code>true</code> \u306e\u3068\u304d\u306b\u53cd\u8ee2\u3057\u307e\u3059\u3002<code>onOff</code> \u3092\u7701\u7565\u3057\u305f\u5834\u5408\u306f <code>true</code> \u3068\u307f\u306a\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture{ U\"\ud83d\udc08\"_emoji };\nwhile (System::Update())\n{\n// \u5de6\u53f3\u53cd\u8ee2\u3057\u3066\u63cf\u753b\u3059\u308b\ntexture.mirrored().drawAt(200, 100);\n// \u5de6\u53f3\u53cd\u8ee2\u3057\u3066\u63cf\u753b\u3059\u308b\ntexture.mirrored(true).drawAt(400, 100);\n// \u901a\u5e38\ntexture.mirrored(false).drawAt(600, 100);\n// \u4e0a\u4e0b\u53cd\u8ee2\u3057\u3066\u63cf\u753b\u3059\u308b\ntexture.flipped().drawAt(200, 300);\n// \u4e0a\u4e0b\u53cd\u8ee2\u3057\u3066\u63cf\u753b\u3059\u308b\ntexture.flipped(true).drawAt(400, 300);\n// \u901a\u5e38\ntexture.flipped(false).drawAt(600, 300);\n// \u5de6\u53f3\u53cd\u8ee2\u30fb\u4e0a\u4e0b\u53cd\u8ee2\u3057\u3066\u63cf\u753b\u3059\u308b\ntexture.mirrored().flipped().drawAt(200, 500);\n// \u5de6\u53f3\u53cd\u8ee2\u30fb\u4e0a\u4e0b\u53cd\u8ee2\u3057\u3066\u63cf\u753b\u3059\u308b\ntexture.mirrored(true).flipped(true).drawAt(400, 500);\n// \u901a\u5e38\ntexture.mirrored(false).flipped(false).drawAt(600, 500);\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#2513-\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4e00\u90e8\u3092\u63cf\u753b\u3059\u308b\u30d4\u30af\u30bb\u30eb\u6307\u5b9a","title":"25.13 \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4e00\u90e8\u3092\u63cf\u753b\u3059\u308b\uff08\u30d4\u30af\u30bb\u30eb\u6307\u5b9a\uff09","text":"<p>\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5168\u90e8\u3067\u306f\u306a\u304f\u3001\u4e00\u90e8\u306e\u9577\u65b9\u5f62\u306e\u9818\u57df\u3060\u3051\u3092\u63cf\u753b\u3057\u305f\u3044\u5834\u5408\u306f\u3001<code>(x, y, w, h)</code> \u3092\u4f7f\u3063\u3066\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e <code>(x, y)</code> \u304b\u3089\u5e45 <code>w</code>\u3001\u9ad8\u3055 <code>h</code> \u3092\u9078\u629e\u3057\u305f <code>TexturedRegion</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3092\u63cf\u753b\u3057\u307e\u3059\u3002<code>x</code>, <code>y</code>, <code>w</code>, <code>h</code> \u306e\u5358\u4f4d\u306f\u30d4\u30af\u30bb\u30eb\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture1{ U\"example/windmill.png\" };\nconst Texture texture2{ U\"\ud83c\udf4e\"_emoji };\nwhile (System::Update())\n{\n// \u753b\u50cf\u306e (250, 100) \u304b\u3089\u5e45 200, \u9ad8\u3055 150 \u306e\u90e8\u5206\u3092\u63cf\u753b\u3059\u308b\ntexture1(250, 100, 200, 150).draw(40, 20);\n// \u753b\u50cf\u306e (0, 0) \u304b\u3089\u5e45 68, \u9ad8\u3055 64 \u306e\u90e8\u5206\u3092\u63cf\u753b\u3059\u308b\ntexture2(0, 0, 68, 64).drawAt(400, 300);\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#2514-\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4e00\u90e8\u3092\u63cf\u753b\u3059\u308buv-\u6307\u5b9a","title":"25.14 \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4e00\u90e8\u3092\u63cf\u753b\u3059\u308b\uff08UV \u6307\u5b9a\uff09","text":"<p>\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4e00\u90e8\u306e\u9577\u65b9\u5f62\u306e\u9818\u57df\u3092\u9078\u629e\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u3001UV \u5ea7\u6a19\u3092\u6307\u5b9a\u3059\u308b\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u3002UV \u5ea7\u6a19\u306f\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5de6\u4e0a\u3092 (0.0, 0.0)\u3001\u53f3\u4e0b\u3092 (1.0, 1.0) \u3068\u3057\u305f\u3068\u304d\u306e\u5ea7\u6a19\u3067\u3001\u753b\u50cf\u306e\u5927\u304d\u3055\u306b\u95a2\u4fc2\u306a\u304f\u3001\u5e38\u306b 0.0 \u304b\u3089 1.0 \u306e\u7bc4\u56f2\u306b\u306a\u308a\u307e\u3059\u3002</p> <p><code>.uv(u, v, w, h)</code> \u3092\u4f7f\u3063\u3066\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e UV \u5ea7\u6a19 <code>(u, v)</code> \u304b\u3089\u5e45 <code>w</code>\u3001\u9ad8\u3055 <code>h</code> \u3092\u9078\u629e\u3057\u305f <code>TexturedRegion</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3092\u63cf\u753b\u3057\u307e\u3059\u3002</p> <p>\u4f8b\u3048\u3070\u30c6\u30af\u30b9\u30c1\u30e3 <code>texture</code> \u306e\u30b5\u30a4\u30ba\u304c 400 x 200 \u306e\u3068\u304d\u3001<code>texture.uv(0.5, 0.0, 0.5, 1.0)</code> \u306f <code>texture(200, 0, 200, 200)</code> \u3068\u540c\u3058\u3067\u3059\u3002\u8a08\u7b97\u65b9\u6cd5\u306f <code>texture((texture.width() * 0.5), (texture.height() * 0.0), (texture.width() * 0.5), (texture.height() * 1.0))</code> \u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture1{ U\"example/windmill.png\" };\nconst Texture texture2{ U\"\ud83c\udf4e\"_emoji };\nwhile (System::Update())\n{\n// \u753b\u50cf\u306e UV \u5ea7\u6a19 (0.1, 0.2) \u304b\u3089\u5e45 0.5, \u9ad8\u3055 0.8 \u306e\u90e8\u5206\u3092\u63cf\u753b\u3059\u308b\ntexture1.uv(0.1, 0.2, 0.5, 0.8).draw(40, 20);\n// \u753b\u50cf\u306e UV \u5ea7\u6a19 (0.5, 0.0) \u304b\u3089\u5e45 0.5, \u9ad8\u3055 0.75 \u306e\u90e8\u5206\u3092\u63cf\u753b\u3059\u308b\ntexture2.uv(0.5, 0.0, 0.5, 0.75).drawAt(400, 300);\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#2515-\u57fa\u672c\u56f3\u5f62\u306e\u5f62\u306b\u5408\u308f\u305b\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304f","title":"25.15 \u57fa\u672c\u56f3\u5f62\u306e\u5f62\u306b\u5408\u308f\u305b\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304f","text":"<p><code>Rect</code> \u3084 <code>RectF</code>, <code>Circle</code>, <code>Quad</code>, <code>RoundRect</code> \u306b\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u5168\u4f53\u3084\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4e00\u90e8\u9818\u57df\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u63cf\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u56f3\u5f62\u3092 <code>shape</code>, <code>Texture</code> \u3042\u308b\u3044\u306f <code>TextureRegion</code> \u3092 <code>texture</code> \u3068\u3059\u308b\u3068\u3001<code>shape(texture).draw()</code> \u3067\u3001\u56f3\u5f62\u306e\u5f62\u306b\u5408\u308f\u305b\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture1{ U\"example/windmill.png\", TextureDesc::Mipped };\nconst Texture texture2{ U\"example/siv3d-kun.png\", TextureDesc::Mipped };\nconst Rect rect{ 430, 50, 100, 100 };\nconst RoundRect roundRect{ 430, 190, 100, 100, 25 };\nconst Circle circle{ 480, 380, 50 };\nwhile (System::Update())\n{\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u9577\u65b9\u5f62\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u63cf\u753b\u3059\u308b\nRect{ 50, 50, 350, 400 }(texture1).draw();\nrect.draw(HSV{ 0, 0.5, 1.0 });\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u9577\u65b9\u5f62\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u63cf\u753b\u3059\u308b\nrect(texture2(90, 5, 110, 110)).draw();\nroundRect.draw(HSV{ 120, 0.5, 1.0 });\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u89d2\u4e38\u9577\u65b9\u5f62\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u63cf\u753b\u3059\u308b\nroundRect(texture2(90, 5, 110, 110)).draw();\ncircle.draw(HSV{ 240, 0.5, 1.0 });\n// \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5186\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u63cf\u753b\u3059\u308b\ncircle(texture2(90, 5, 110, 110)).draw();\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#2516-polygon-\u306e\u5f62\u306b\u5408\u308f\u305b\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304f","title":"25.16 Polygon \u306e\u5f62\u306b\u5408\u308f\u305b\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304f","text":"<p><code>Polygon</code> \u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u8cbc\u308a\u4ed8\u3051\u308b\u3068\u304d\u306f\u3001\u3088\u308a\u7d30\u304b\u3044\u5236\u5fa1\u304c\u3067\u304d\u307e\u3059\u3002<code>Polygon</code> \u306e <code>.toBuffer2D(offset, size)</code> \u3042\u308b\u3044\u306f <code>.toBuffer(Arg::center = offset, size)</code> \u3067\u3001<code>Polygon</code> \u306e\u5f62\u306b\u5408\u308f\u305b\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304f\u305f\u3081\u306e <code>Buffer2D</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <p><code>offset</code>\u306f\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u753b\u9762\u5ea7\u6a19\u57fa\u6e96\u3067\u3069\u306e\u4f4d\u7f6e\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002<code>size</code> \u306f\u8cbc\u308a\u4ed8\u3051\u308b\u3068\u304d\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30b5\u30a4\u30ba\u3067\u3059\u3002<code>size</code> \u304c\u5143\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30b5\u30a4\u30ba\u3088\u308a\u5c0f\u3055\u3044\u5834\u5408\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u7e2e\u5c0f\u3055\u308c\u307e\u3059\u3002<code>size</code> \u304c\u5143\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30b5\u30a4\u30ba\u3088\u308a\u5927\u304d\u3044\u5834\u5408\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u62e1\u5927\u3055\u308c\u307e\u3059\u3002</p> <p><code>Buffer2D</code> \u306e\u4f5c\u6210\u306f\u5c11\u3057\u3060\u3051\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u305f\u3081\u3001\u53ef\u80fd\u3067\u3042\u308c\u3070\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d\u3067\u4f5c\u6210\u3057\u3001\u4f5c\u6210\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3044\u56de\u3059\u3088\u3046\u306b\u3059\u308b\u3068\u3088\u3044\u3067\u3059\u3002</p> <p><code>Buffer2D</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 <code>b</code>, <code>Texture</code>\u3092 <code>t</code> \u3068\u3059\u308b\u3068\u3001<code>b.draw(t)</code> \u3067\u3001<code>Polygon</code> \u306e\u5f62\u306b\u5408\u308f\u305b\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture1{ U\"example/windmill.png\", TextureDesc::Mipped };\nconst Texture texture2{ U\"example/siv3d-kun.png\", TextureDesc::Mipped };\nconst Polygon star = Shape2D::Star(180, Vec2{ 200, 200 });\nconst Polygon hexagon = Shape2D::Hexagon(60, Vec2{ 480, 380 });\nwhile (System::Update())\n{\nconst double xOffset = (200 + Periodic::Sine1_1(5s) * 80.0);\n// star \u306b\u5bfe\u3057\u3001(xOffset, 200) \u3092\u753b\u50cf\u306e\u4e2d\u5fc3\u3068\u3059\u308b\u3088\u3046\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u63cf\u753b\u3059\u308b\nstar.toBuffer2D(Arg::center(xOffset, 200), texture1.size())\n.draw(texture1);\nhexagon.draw(HSV{ 240, 0.5, 1.0 });\n// hexagon \u306b\u5bfe\u3057\u3001(515, 560) \u3092\u753b\u50cf\u306e\u4e2d\u5fc3\u3068\u3059\u308b\u3088\u3046\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u63cf\u753b\u3059\u308b\nhexagon.toBuffer2D(Arg::center = Vec2{ 515, 560 }, texture2.size())\n.draw(texture2);\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#2517-\u9577\u65b9\u5f62\u5185\u306b\u30d5\u30a3\u30c3\u30c8\u3059\u308b\u3088\u3046\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304f","title":"25.17 \u9577\u65b9\u5f62\u5185\u306b\u30d5\u30a3\u30c3\u30c8\u3059\u308b\u3088\u3046\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304f","text":"<p>\u3042\u308b\u30b5\u30a4\u30ba\u306e\u67a0\u5185\u306b\u3001\u6700\u5927\u9650\u5927\u304d\u304f\u306a\u308b\u3088\u3046\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304f\u306b\u306f\u3001<code>.fitted(size)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002<code>.fitted(size)</code> \u306f\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u3092\u4fdd\u3063\u305f\u307e\u307e\u3001\u5e45 size.x, \u9ad8\u3055 size.y \u306e\u67a0\u5185\u306b\u53ce\u307e\u308a\u3001\u6700\u5927\u9650\u5927\u304d\u304f\u306a\u308b\u3088\u3046\u62e1\u5927\u7e2e\u5c0f\u3057\u305f <code>TextureRegion</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p><code>Rect</code> \u304a\u3088\u3073 <code>RectF</code> \u306b\u306f <code>.center()</code> \u3068\u3044\u3046\u3001\u9577\u65b9\u5f62\u306e\u4e2d\u5fc3\u5ea7\u6a19\u3092\u8fd4\u3059\u30e1\u30f3\u30d0\u95a2\u6570\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u67a0\u5185\u306b\u53ce\u307e\u308b\u5f62\u3067\u3001\u6700\u5927\u9650\u5927\u304d\u304f\u3001\u4e2d\u5fc3\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture1{ U\"example/windmill.png\", TextureDesc::Mipped };\nconst Texture texture2{ U\"example/siv3d-kun.png\", TextureDesc::Mipped };\nconst Rect rect1{ 50, 100, 320, 200 };\nconst Rect rect2{ 400, 200, 300 };\nwhile (System::Update())\n{\nrect1.drawFrame(0, 8, ColorF{ 0.25 });\ntexture1.fitted(rect1.size).drawAt(rect1.center());\nrect2.drawFrame(0, 8, ColorF{ 0.25 });\ntexture2.fitted(rect2.size).drawAt(rect2.center());\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#2518-\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u7e70\u308a\u8fd4\u3057\u6577\u304d\u8a70\u3081\u3066\u63cf\u304f","title":"25.18 \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u7e70\u308a\u8fd4\u3057\u6577\u304d\u8a70\u3081\u3066\u63cf\u304f","text":"<p>\u901a\u5e38\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30c9\u30ec\u30b9\u30e2\u30fc\u30c9\uff08Clamp\uff09\u3067\u306f\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u7bc4\u56f2\u5916\u3092\u63cf\u3053\u3046\u3068\u3059\u308b\u3068\u3001\u305d\u306e\u90e8\u5206\u306f\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u7aef\u306e\u8272\u3067\u5857\u308a\u3064\u3076\u3055\u308c\u307e\u3059\u3002UV \u5ea7\u6a19\u3067 0.0 \u3088\u308a\u5c0f\u3055\u3044\u5024\u3084 1.0 \u3088\u308a\u5927\u304d\u3044\u5024\u3092\u6307\u5b9a\u3057\u305f\u3068\u304d\u3001\u305d\u308c\u305e\u308c 0.0 \u3068 1.0 \u3068\u3057\u3066\u6271\u3046\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u6642\u8a08\u306e\u91dd\u3067 13 \u3092\u6307\u305d\u3046\u3068\u3057\u3066\u3082\u3001\u6642\u8a08\u306e\u91dd\u304c 12 \u304b\u3089\u9032\u307e\u306a\u3044\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002</p> <p>\u4e00\u65b9\u3001\u6642\u8a08\u306e\u91dd\u3067 13 \u3092\u6307\u305d\u3046\u3068\u3057\u305f\u3068\u304d\u3001\u6642\u8a08\u306e\u91dd\u304c 12 \u304b\u3089\u9032\u307f\u30010 \u306b\u623b\u3063\u3066 1 \u306b\u306a\u308b\u3088\u3046\u306b\u7e70\u308a\u8fd4\u3059\u3053\u3068\u3082\u3067\u304d\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u3082\u540c\u3058\u3053\u3068\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002UV \u5ea7\u6a19\u3067 1.1 \u3084 2.3, -0.3 \u3068\u3044\u3063\u305f\u5024\u3092\u6307\u5b9a\u3057\u305f\u3068\u304d\u3001\u305d\u308c\u305e\u308c 0.1 \u3084 0.3, 0.7 \u3068\u3057\u3066\u6271\u3046\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3053\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30c9\u30ec\u30b9\u30e2\u30fc\u30c9\u306f\u300c\u7e70\u308a\u8fd4\u3057\u300d\u3092\u610f\u5473\u3059\u308b Repeat \u3068\u547c\u3070\u308c\u307e\u3059\u3002</p>"},{"location":"tutorial2/texture/#25181-\u7e70\u308a\u8fd4\u3057\u306e\u7bc4\u56f2\u3092\u6307\u5b9a\u3059\u308b","title":"25.18.1 \u7e70\u308a\u8fd4\u3057\u306e\u7bc4\u56f2\u3092\u6307\u5b9a\u3059\u308b","text":"<p>\u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30c9\u30ec\u30b9\u30e2\u30fc\u30c9\u3092 Repeat \u306b\u3059\u308b\u306b\u306f\u3001<code>const ScopedRenderStates2D sampler{ SamplerState::RepeatLinear };</code> \u3068\u3044\u3046\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3059\u308b\u3068\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6709\u52b9\u306a\u9593\u306f\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30c9\u30ec\u30b9\u30e2\u30fc\u30c9\u304c Repeat \u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u30b9\u30b3\u30fc\u30d7\u3092\u629c\u3051\u308b\u3068\u81ea\u52d5\u7684\u306b\u7834\u68c4\u3055\u308c\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30c9\u30ec\u30b9\u30e2\u30fc\u30c9\u306f\u5143\u306b\u623b\u308a\u307e\u3059\u3002\u8a73\u3057\u304f\u306f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 39. 2D \u30ec\u30f3\u30c0\u30fc\u30b9\u30c6\u30fc\u30c8\u3067\u89e3\u8aac\u3057\u307e\u3059\u3002</p> <p><code>Texture</code> \u3092 <code>.mapped(width, height)</code> \u3059\u308b\u3068\u3001\u305d\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u3001\u5e45 width, \u9ad8\u3055 height \u306e\u7bc4\u56f2\u306b\u6577\u304d\u8a70\u3081\u308b\u3088\u3046\u306b\u7e70\u308a\u8fd4\u3057\u305f <code>TextureRegion</code> \u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30c9\u30ec\u30b9\u30e2\u30fc\u30c9\u304c Repeat \u3067\u3042\u308b\u3068\u304d\u306b\u305d\u308c\u3092\u63cf\u753b\u3059\u308b\u3068\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u304c\u6577\u304d\u8a70\u3081\u3089\u308c\u3066\u63cf\u753b\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture{ U\"\ud83c\udf33\"_emoji };\nwhile (System::Update())\n{\n{\n// \u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30c9\u30ec\u30b9\u30e2\u30fc\u30c9\u3092\u30ea\u30d4\u30fc\u30c8\u306b\u8a2d\u5b9a\u3059\u308b\nconst ScopedRenderStates2D sampler{ SamplerState::RepeatLinear };\n// 600x400 \u306e\u7bc4\u56f2\u306b\u6577\u304d\u8a70\u3081\u308b\u3088\u3046\u7e70\u308a\u8fd4\u3057\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b\ntexture.mapped(600, 400).draw(0, 0);\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#25182-\u7e70\u308a\u8fd4\u3057\u306e\u56de\u6570\u3092\u6307\u5b9a\u3059\u308b","title":"25.18.2 \u7e70\u308a\u8fd4\u3057\u306e\u56de\u6570\u3092\u6307\u5b9a\u3059\u308b","text":"<p><code>Texture</code> \u3092 <code>.repeated(x, y)</code> \u3059\u308b\u3068\u3001\u305d\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u3001\u6a2a\u306b x \u56de\u3001\u7e26\u306b y \u56de\u7e70\u308a\u8fd4\u3057\u305f <code>TextureRegion</code> \u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30c9\u30ec\u30b9\u30e2\u30fc\u30c9\u304c Repeat \u3067\u3042\u308b\u3068\u304d\u306b\u305d\u308c\u3092\u63cf\u753b\u3059\u308b\u3068\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u304c\u7e70\u308a\u8fd4\u3055\u308c\u3066\u63cf\u753b\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture{ U\"\ud83c\udf33\"_emoji };\nwhile (System::Update())\n{\n{\n// \u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30c9\u30ec\u30b9\u30e2\u30fc\u30c9\u3092\u30ea\u30d4\u30fc\u30c8\u306b\u8a2d\u5b9a\u3059\u308b\nconst ScopedRenderStates2D sampler{ SamplerState::RepeatLinear };\n// \u6a2a\u306b 4, \u7e26\u306b 3 \u7e70\u308a\u8fd4\u3057\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b\ntexture.repeated(4, 3).draw(0, 0);\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#2519-\u5927\u304d\u306a\u753b\u50cf\u3092\u7e2e\u5c0f\u3057\u3066\u8aad\u307f\u8fbc\u3080","title":"25.19 \u5927\u304d\u306a\u753b\u50cf\u3092\u7e2e\u5c0f\u3057\u3066\u8aad\u307f\u8fbc\u3080","text":"<p>\u89e3\u50cf\u5ea6\u306e\u5927\u304d\u3044\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u7e2e\u5c0f\u3057\u3066\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30e1\u30e2\u30ea\u306e\u7bc0\u7d04\u3084\u63cf\u753b\u901f\u5ea6\u306e\u5411\u4e0a\u304c\u671f\u5f85\u3067\u304d\u307e\u3059\u3002<code>Image</code> \u3092 <code>.scaled(scale)</code> \u3059\u308b\u3068\u3001\u305d\u306e\u753b\u50cf\u3092 scale \u500d\u306b\u7e2e\u5c0f\u3057\u305f <code>Image</code> \u304c\u5f97\u3089\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\n// \u753b\u50cf\u3092 1/4 \u306b\u7e2e\u5c0f\u3057\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\nconst Texture texture{ Image{ U\"example/bay.jpg\"}.scaled(0.25) };\nPrint &lt;&lt; texture.size();\nwhile (System::Update())\n{\ntexture.draw();\n}\n}\n</code></pre>"},{"location":"tutorial2/texture/#2520-\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b","title":"25.20 \u30df\u30c3\u30d7\u30de\u30c3\u30d7\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b","text":"<p>\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f <code>Image</code> \u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u3001<code>TextureDesc::Mipped</code> \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u81ea\u52d5\u7684\u306b\u5143\u306e\u753b\u50cf\u3092\u7e2e\u5c0f\u3057\u3066\u3044\u304f\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u304c\u3001\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u306e\u5185\u5bb9\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002</p> <p><code>Texture</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u3001<code>Image</code> \u3068 <code>Array&lt;Image&gt;</code> \u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u306e\u5185\u5bb9\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002<code>Image</code> \u306f\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u306e\u6700\u4e0a\u4f4d\u30ec\u30d9\u30eb\u306e\u753b\u50cf\u3067\u3001<code>Array&lt;Image&gt;</code> \u306f\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u306e\u4e0b\u4f4d\u30ec\u30d9\u30eb\u306e\u753b\u50cf\u306e\u914d\u5217\u3067\u3059\u3002\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u306e\u4e0b\u4f4d\u30ec\u30d9\u30eb\u306e\u753b\u50cf\u306f\u3001\u4e0a\u4f4d\u30ec\u30d9\u30eb\u306e\u753b\u50cf\u3092 2 \u5206\u306e 1 \u305a\u3064\u7e2e\u5c0f\u3057\u305f\u753b\u50cf\u3067\u3059\u3002</p> <p>\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u7e2e\u5c0f\u63cf\u753b\u6642\u306b\u4e0b\u4f4d\u306e\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u304c\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u3001\u8272\u306e\u5909\u5316\u306b\u3088\u3063\u3066\u53ef\u8996\u5316\u3055\u308c\u307e\u3059\uff08\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u306f\u30ec\u30d9\u30eb\u3092\u307e\u305f\u3044\u3067\u30d6\u30ec\u30f3\u30c9\u3055\u308c\u308b\u305f\u3081\u3001\u8272\u306e\u5909\u5316\u306f\u306a\u3081\u3089\u304b\u3067\u3059\uff09\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nTexture CreateTexture()\n{\nconst Image image{ 320, 256, HSV{ 0 } };\n// \u5e45\u3068\u9ad8\u3055\u3092 2 \u5206\u306e 1 \u305a\u3064\u7e2e\u5c0f\u3057\u305f\u4e00\u9023\u306e\u753b\u50cf\nconst Array&lt;Image&gt; mipmaps\n{\nImage{ 160, 128, HSV{ 40 }},\nImage{ 80, 64, HSV{ 80 }},\nImage{ 40, 32, HSV{ 120 }},\nImage{ 20, 16, HSV{ 160 }},\nImage{ 10, 8, HSV{ 200 }},\nImage{ 5, 4, HSV{ 240 }},\nImage{ 2, 2, HSV{ 280 }},\nImage{ 1, 1, HSV{ 320 }},\n};\nreturn Texture{ image, mipmaps };\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture texture = CreateTexture();\nwhile (System::Update())\n{\nconst double scale = Periodic::Sine0_1(10s);\n// \u7e2e\u5c0f\u7387\u306b\u5fdc\u3058\u3066\u7570\u306a\u308b\u30ec\u30d9\u30eb\u306e\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u30c6\u30af\u30b9\u30c1\u30e3\u304c\u4f7f\u308f\u308c\u308b\ntexture.scaled(scale).drawAt(Scene::Center());\n}\n}\n</code></pre>"},{"location":"tutorial2/time/","title":"30. \u65e5\u4ed8\u3068\u6642\u523b\u3001\u6642\u9593","text":"<p>\u6642\u9593\u306e\u8a08\u6e2c\u3084\u3001\u65e5\u4ed8\u3001\u6642\u523b\u306b\u95a2\u3059\u308b\u6a5f\u80fd\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial2/time/#301-\u30b7\u30fc\u30f3\u306e\u7d4c\u904e\u6642\u9593\u306e\u53d6\u5f97","title":"30.1 \u30b7\u30fc\u30f3\u306e\u7d4c\u904e\u6642\u9593\u306e\u53d6\u5f97","text":""},{"location":"tutorial2/time/#scenedeltatime","title":"Scene::DeltaTime()","text":"<p><code>Scene::DeltaTime()</code> \u306f\u3001\u76f4\u524d\u306e\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593 (\u79d2) \uff08\u305f\u3060\u3057 <code>Scene::GetMaxDeltaTime()</code> \u3092\u8d85\u3048\u308b\u5834\u5408\u306f <code>Scene::GetMaxDeltaTime()</code> \u306e\u5024\uff09\u3092 <code>double</code> \u578b\u306e\u5024\u3067\u8fd4\u3057\u307e\u3059\u3002\u30e2\u30cb\u30bf\u304c 60Hz \u306e\u5834\u5408\u306f\u7d04 0.0166 \u306b\u306a\u308a\u307e\u3059\u304c\u3001\u5b9f\u884c\u74b0\u5883\u3084\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8ca0\u8377\u306b\u3088\u3063\u3066\u5909\u5316\u3057\u307e\u3059\u3002</p> <p>\u3053\u306e\u5024\u306f <code>System::Update()</code> \u304c\u547c\u3070\u308c\u308b\u305f\u3073\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\u540c\u4e00\u30d5\u30ec\u30fc\u30e0\u5185\u3067\u306e <code>Scene::DeltaTime()</code> \u306e\u547c\u3073\u51fa\u3057\u306f\u540c\u3058\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial2/time/#scenetime","title":"Scene::Time()","text":"<p><code>Scene::Time()</code> \u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u8d77\u52d5\u3055\u308c\u3066\u304b\u3089\u306e \u30b7\u30fc\u30f3\u306e\u7d4c\u904e\u6642\u9593\uff08\u79d2\uff09\u3092 <code>double</code> \u578b\u306e\u5024\u3067\u8fd4\u3057\u307e\u3059\u3002\u30b7\u30fc\u30f3\u306e\u7d4c\u904e\u6642\u9593\u3068\u306f\u3001<code>Scene::DeltaTime()</code> \u306e\u7d2f\u7a4d\u306e\u3053\u3068\u3067\u3059\u3002</p> <p>\u3053\u306e\u5024\u306f <code>System::Update()</code> \u304c\u547c\u3070\u308c\u308b\u305f\u3073\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\u540c\u4e00\u30d5\u30ec\u30fc\u30e0\u5185\u3067\u306e <code>Scene::Time()</code> \u306e\u547c\u3073\u51fa\u3057\u306f\u540c\u3058\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial2/time/#scenegetmaxdeltatime","title":"Scene::GetMaxDeltaTime()","text":"<p>\u4e00\u822c\u306b\u3001\u76f4\u524d\u306e\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\u304c\u5927\u304d\u3059\u304e\u308b\u3068\u3001\u30b2\u30fc\u30e0\u5185\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u3084\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u5909\u5316\u30b9\u30c6\u30c3\u30d7\u304c\u5927\u304d\u304f\u306a\u308a\u3001\u5b89\u5b9a\u6027\u304c\u640d\u306a\u308f\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001<code>Scene::DeltaTime()</code> \u306f <code>Scene::GetMaxDeltaTime()</code> \u306e\u5024\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f <code>0.1</code>\uff09\u3088\u308a\u3082\u5927\u304d\u304f\u306a\u3089\u306a\u3044\u3088\u3046\u5236\u9650\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"tutorial2/time/#scenesetmaxdeltatimet","title":"Scene::SetMaxDeltaTime(t)","text":"<p><code>Scene::SetMaxDeltaTime(t)</code> \u306f\u3001<code>Scene::DeltaTime()</code> \u304c\u8fd4\u3059\u5024\u306e\u6700\u5927\u5024\uff08\u79d2\uff09\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002<code>Scene::DeltaTime()</code> \u304c\u8fd4\u3059\u5024\u306f\u3001<code>Scene::SetMaxDeltaTime()</code> \u3067\u8a2d\u5b9a\u3057\u305f\u5024\u3088\u308a\u3082\u5927\u304d\u304f\u306a\u308a\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; Scene::GetMaxDeltaTime();\nPrint &lt;&lt; Scene::Time();\nPrint &lt;&lt; Scene::DeltaTime();\n}\n}\n</code></pre>"},{"location":"tutorial2/time/#302-\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8d77\u52d5\u6642\u9593\u306e\u53d6\u5f97","title":"30.2 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8d77\u52d5\u6642\u9593\u306e\u53d6\u5f97","text":"<p><code>Scene::GetMaxDeltaTime()</code> \u306b\u5f71\u97ff\u3055\u308c\u306a\u3044\u3001\u53b3\u5bc6\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8d77\u52d5\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u6b21\u306e\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002\u623b\u308a\u5024\u306f <code>uint64</code> \u578b\u3067\u3059\u3002</p> \u95a2\u6570 \u623b\u308a\u5024\u306e\u5024 <code>Time::GetSec()</code> \u79d2 <code>Time::GetMillisec()</code> \u30df\u30ea\u79d2 <code>Time::GetMicrosec()</code> \u30de\u30a4\u30af\u30ed\u79d2 <code>Time::GetNanosec()</code> \u30ca\u30ce\u79d2 <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; Time::GetSec();\nPrint &lt;&lt; Time::GetMillisec();\nPrint &lt;&lt; Time::GetMicrosec();\nPrint &lt;&lt; Time::GetNanosec();\n}\n}\n</code></pre>"},{"location":"tutorial2/time/#303-unix-\u6642\u9593\u306e\u53d6\u5f97","title":"30.3 UNIX \u6642\u9593\u306e\u53d6\u5f97","text":"<p>UTC \u6642\u523b\u306b\u304a\u3051\u308b 1970 \u5e74 1 \u6708 1 \u65e5 \u5348\u524d 0 \u6642 0 \u5206 0 \u79d2\uff08UNIX \u30a8\u30dd\u30c3\u30af\uff09\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\u306f\u3001\u6b21\u306e\u95a2\u6570\u3092\u4f7f\u3063\u3066\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u623b\u308a\u5024\u306f <code>uint64</code> \u578b\u3067\u3059\u3002</p> \u95a2\u6570 \u623b\u308a\u5024\u306e\u5024 <code>Time::GetSecSinceEpoch()</code> \u79d2 <code>Time::GetMillisecSinceEpoch()</code> \u30df\u30ea\u79d2 <code>Time::GetMicrosecSinceEpoch()</code> \u30de\u30a4\u30af\u30ed\u79d2 <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; Time::GetSecSinceEpoch();\nPrint &lt;&lt; Time::GetMillisecSinceEpoch();\nPrint &lt;&lt; Time::GetMicrosecSinceEpoch();\n}\n}\n</code></pre>"},{"location":"tutorial2/time/#304-\u6642\u9593\u578b","title":"30.4 \u6642\u9593\u578b","text":"<p>\u6642\u9593\u3092\u8868\u73fe\u3059\u308b\u578b\u304c\u6b21\u306e\u3088\u3046\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002<code>F</code> \u306e\u4ed8\u304f\u578b\u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3067\u5024\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002<code>SecondsF</code> \u578b\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3068\u3057\u3066 <code>Duration</code> \u578b\u304c\u3042\u308a\u307e\u3059\u3002</p> \u578b \u8868\u73fe\u3059\u308b\u6642\u9593 <code>Days</code> \u307e\u305f\u306f <code>DaysF</code> \u65e5 <code>Hours</code> \u307e\u305f\u306f <code>HoursF</code> \u6642 <code>Minutes</code> \u307e\u305f\u306f <code>MinutesF</code> \u5206 <code>Seconds</code> \u307e\u305f\u306f <code>SecondsF</code> \u79d2 <code>Milliseconds</code> \u307e\u305f\u306f <code>MillisecondsF</code> \u30df\u30ea\u79d2 <code>Microseconds</code> \u307e\u305f\u306f <code>MicrosecondsF</code> \u30de\u30a4\u30af\u30ed\u79d2 <code>Nanoseconds</code> \u307e\u305f\u306f <code>NanosecondsF</code> \u30ca\u30ce\u79d2 <code>Duration</code> <code>SecondsF</code> \u3068\u540c\u3058 <p>\u6574\u6570\u3084\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u30ea\u30c6\u30e9\u30eb\u306b\u3001\u6b21\u306e\u3088\u3046\u306a\u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u4ed8\u3051\u3066\u6642\u9593\u578b\u3092\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p> \u30b5\u30d5\u30a3\u30c3\u30af\u30b9 \u6642\u9593 <code>_d</code> \u65e5 <code>h</code> \u6642 <code>min</code> \u5206 <code>s</code> \u79d2 <code>ms</code> \u30df\u30ea\u79d2 <code>us</code> \u30de\u30a4\u30af\u30ed\u79d2 <code>ns</code> \u30ca\u30ce\u79d2 <p>\u6642\u9593\u3092\u8868\u73fe\u3059\u308b\u578b\u306f\u76f8\u4e92\u306b\u5909\u63db\u53ef\u80fd\u3067\u3059\u3002\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3067\u8868\u73fe\u3059\u308b\u6642\u9593\u578b\u304b\u3089\u6574\u6570\u3067\u8868\u73fe\u3059\u308b\u6642\u9593\u578b\u3078\u306e\u5909\u63db\u306b\u306f <code>DurationCast&lt;Type&gt;()</code> \u304c\u5fc5\u8981\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Hours t0{ 5 };\nPrint &lt;&lt; t0;\nPrint &lt;&lt; t0.count(); // \u6570\u5024\u578b\u3068\u3057\u3066\u5024\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f .count()\nconst MinutesF t1 = (1h + 30min + 180s);\nPrint &lt;&lt; t1;\nPrint &lt;&lt; t1.count();\nconst Duration t2 = (10min + 5.5s);\nPrint &lt;&lt; t2;\nPrint &lt;&lt; t2.count();\nconst Seconds t3 = DurationCast&lt;Seconds&gt;(t2);\nPrint &lt;&lt; t3;\nPrint &lt;&lt; t3.count();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/time/#305-stopwatch-\u30af\u30e9\u30b9","title":"30.5 Stopwatch \u30af\u30e9\u30b9","text":"<p><code>Stopwatch</code> \u306f\u3001\u7d4c\u904e\u6642\u9593\u306e\u8a08\u6e2c\u3084\u30ea\u30bb\u30c3\u30c8\u3092\u4fbf\u5229\u306b\u884c\u3048\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002<code>Stopwatch</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u5f15\u6570\u3067 <code>StartImmediately::Yes</code> \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u4f5c\u6210\u3068\u540c\u6642\u306b\u8a08\u6e2c\u3092\u958b\u59cb\u3057\u307e\u3059\u3002<code>Stopwatch::sF()</code> \u306f\u305d\u306e\u6642\u70b9\u3067\u306e\u7d4c\u904e\u6642\u9593\uff08\u79d2\uff09\u3092 <code>double</code> \u578b\u3067\u8fd4\u3057\u307e\u3059\u3002<code>Stopwatch::restart()</code> \u3059\u308b\u3068\u3001\u7d4c\u904e\u6642\u9593\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u3066\u518d\u3073 0 \u304b\u3089\u8a08\u6e2c\u3092\u958b\u59cb\uff08\u30ea\u30b9\u30bf\u30fc\u30c8\uff09\u3057\u307e\u3059\u3002\u4e3b\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002</p> \u30e1\u30f3\u30d0\u95a2\u6570 \u8aac\u660e <code>.isStarted()</code> \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u304c\u52d5\u4f5c\u4e2d\u3067\u3042\u308b\u304b\u3092\u793a\u3057\u307e\u3059\uff08\u958b\u59cb\u5f8c\u306e\u4e00\u6642\u505c\u6b62\u3082\u52d5\u4f5c\u4e2d\u306b\u542b\u307f\u307e\u3059\uff09\u3002 <code>.isPaused()</code> \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u304c\u4e00\u6642\u505c\u6b62\u4e2d\u3067\u3042\u308b\u304b\u3092\u793a\u3057\u307e\u3059\u3002 <code>.isRunning()</code> \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u304c\u52d5\u4f5c\u4e2d\u3067\u3042\u308b\u304b\u3092\u793a\u3057\u307e\u3059\u3002 <code>.start()</code> \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u3092\u958b\u59cb\u30fb\u518d\u958b\u3057\u307e\u3059\u3002 <code>.pause()</code> \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u3092\u4e00\u6642\u505c\u6b62\u3057\u307e\u3059\u3002 <code>.resume()</code> \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u304c\u4e00\u6642\u505c\u6b62\u4e2d\u3067\u3042\u308b\u5834\u5408\u3001\u518d\u958b\u3057\u307e\u3059\u3002 <code>.reset()</code> \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u3092\u505c\u6b62\u3057\u3001\u7d4c\u904e\u6642\u9593\u3092 0 \u306b\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002 <code>.restart()</code> \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u3092\u505c\u6b62\u3057\u3001\u7d4c\u904e\u6642\u9593\u3092 0 \u306b\u30ea\u30bb\u30c3\u30c8\u3057\u3066\u304b\u3089\u518d\u958b\u3057\u307e\u3059\u3002 <code>.set(t)</code> \u7d4c\u904e\u6642\u9593\u3092 <code>t</code> \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002 <code>.d()</code> \u7d4c\u904e\u6642\u9593\uff08\u65e5\uff09\u3092\u8fd4\u3057\u307e\u3059\u3002 <code>.dF()</code> \u7d4c\u904e\u6642\u9593\uff08\u65e5\uff09\u3092 <code>double</code> \u578b\u3067\u8fd4\u3057\u307e\u3059\u3002 <code>.h()</code> \u7d4c\u904e\u6642\u9593\uff08\u6642\uff09\u3092\u8fd4\u3057\u307e\u3059\u3002 <code>.hF()</code> \u7d4c\u904e\u6642\u9593\uff08\u6642\uff09\u3092 <code>double</code> \u578b\u3067\u8fd4\u3057\u307e\u3059\u3002 <code>.min()</code> \u7d4c\u904e\u6642\u9593\uff08\u5206\uff09\u3092\u8fd4\u3057\u307e\u3059\u3002 <code>.minF()</code> \u7d4c\u904e\u6642\u9593\uff08\u5206\uff09\u3092 <code>double</code> \u578b\u3067\u8fd4\u3057\u307e\u3059\u3002 <code>.s()</code> \u7d4c\u904e\u6642\u9593\uff08\u79d2\uff09\u3092\u8fd4\u3057\u307e\u3059\u3002 <code>.sF()</code> \u7d4c\u904e\u6642\u9593\uff08\u79d2\uff09\u3092 <code>double</code> \u578b\u3067\u8fd4\u3057\u307e\u3059\u3002 <code>.ms()</code> \u7d4c\u904e\u6642\u9593\uff08\u30df\u30ea\u79d2\uff09\u3092\u8fd4\u3057\u307e\u3059\u3002 <code>.msF()</code> \u7d4c\u904e\u6642\u9593\uff08\u30df\u30ea\u79d2\uff09\u3092 <code>double</code> \u578b\u3067\u8fd4\u3057\u307e\u3059\u3002 <code>.us()</code> \u7d4c\u904e\u6642\u9593\uff08\u30de\u30a4\u30af\u30ed\u79d2\uff09\u3092\u8fd4\u3057\u307e\u3059\u3002 <code>.usF()</code> \u7d4c\u904e\u6642\u9593\uff08\u30de\u30a4\u30af\u30ed\u79d2\uff09\u3092 <code>double</code> \u578b\u3067\u8fd4\u3057\u307e\u3059\u3002 <code>.elapsed()</code> \u7d4c\u904e\u6642\u9593\u3092 <code>Duration</code> \u578b\u3067\u8fd4\u3057\u307e\u3059\u3002 <p><code>Stopwatch</code> \u306e\u7d4c\u904e\u6642\u9593\u306f <code>Scene::GetMaxDeltaTime()</code> \u306e\u5f71\u97ff\u3092\u53d7\u3051\u305a\u3001\u5e38\u306b\u5b9f\u6642\u9593\u3067\u8a08\u6e2c\u3055\u308c\u307e\u3059\u3002\u540c\u4e00\u30d5\u30ec\u30fc\u30e0\u5185\u3067 <code>Stopwatch::sF()</code> \u3092\u8907\u6570\u547c\u3073\u51fa\u3059\u3068\u3001\u6642\u9593\u306e\u7d4c\u904e\u306b\u3088\u3063\u3066\u6bce\u56de\u7570\u306a\u308b\u5024\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\nStopwatch stopwatch;\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"isStarted: \" &lt;&lt; stopwatch.isStarted();\nPrint &lt;&lt; U\"isPaused: \" &lt;&lt; stopwatch.isPaused();\nPrint &lt;&lt; U\"isRunning: \" &lt;&lt; stopwatch.isRunning();\nPrint &lt;&lt; stopwatch;\nif (SimpleGUI::Button(U\"start\", Vec2{ 200, 20 }))\n{\nstopwatch.start();\n}\nif (SimpleGUI::Button(U\"pause\", Vec2{ 200, 60 }))\n{\nstopwatch.pause();\n}\nif (SimpleGUI::Button(U\"resume\", Vec2{ 200, 100 }))\n{\nstopwatch.resume();\n}\nif (SimpleGUI::Button(U\"reset\", Vec2{ 200, 140 }))\n{\nstopwatch.reset();\n}\nif (SimpleGUI::Button(U\"restart\", Vec2{ 200, 180 }))\n{\nstopwatch.restart();\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/time/#306-\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u7d4c\u904e\u6642\u9593\u306e\u8868\u793a","title":"30.6 \u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u7d4c\u904e\u6642\u9593\u306e\u8868\u793a","text":"<p><code>Stopwatch</code> \u306f <code>.format()</code> \u306b\u3088\u3063\u3066 <code>String</code> \u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002\u66f8\u5f0f\u3092\u5f15\u6570\u3067\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nStopwatch stopwatch{ StartImmediately::Yes };\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; stopwatch;\nPrint &lt;&lt; stopwatch.format(U\"H:mm:ss.xx\");\nPrint &lt;&lt; stopwatch.format(U\"S.x\");\n}\n}\n</code></pre>"},{"location":"tutorial2/time/#307-stopwatch-\u3068\u6642\u9593\u578b\u306e\u6bd4\u8f03","title":"30.7 Stopwatch \u3068\u6642\u9593\u578b\u306e\u6bd4\u8f03","text":"<p><code>Stopwatch</code> \u578b\u306e\u5909\u6570\u306f\u6642\u9593\u578b\u306e\u5024\u3068\u6bd4\u8f03\u3057\u3066\u3001\u7d4c\u904e\u6642\u9593\u304c\u7279\u5b9a\u306e\u6642\u9593\u3092\u8d85\u3048\u305f\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nStopwatch stopwatch{ StartImmediately::Yes };\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; stopwatch;\nif (3s &lt;= stopwatch)\n{\nPrint &lt;&lt; U\"3 \u79d2\u7d4c\u904e\";\n}\nif (5.5s &lt;= stopwatch)\n{\nPrint &lt;&lt; U\"5.5 \u79d2\u7d4c\u904e\";\n}\nif (stopwatch &lt; 20s)\n{\nPrint &lt;&lt; U\"20 \u79d2\u672a\u6e80\";\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/time/#308-timer-\u30af\u30e9\u30b9","title":"30.8 Timer \u30af\u30e9\u30b9","text":"<p><code>Timer</code> \u306f\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u306b\u3088\u3063\u3066\u7d4c\u904e\u6642\u9593\u3092\u8a08\u6e2c\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\u4f7f\u3044\u65b9\u306f\u307b\u307c <code>Stopwatch</code> \u3068\u540c\u69d8\u3067\u3059\u3002\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u6642\u9593\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u6307\u5b9a\u3057\u305f\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u6642\u9593\u304c\u7d4c\u904e\u3057\u305f\u5834\u5408\u306b <code>true</code> \u3092\u8fd4\u3059\u30e1\u30f3\u30d0\u95a2\u6570 <code>reachedZero()</code> \u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nTimer timer{ 15s };\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"isStarted: \" &lt;&lt; timer.isStarted();\nPrint &lt;&lt; U\"isPaused: \" &lt;&lt; timer.isPaused();\nPrint &lt;&lt; U\"isRunning: \" &lt;&lt; timer.isRunning();\nPrint &lt;&lt; U\"reachedZero: \" &lt;&lt; timer.reachedZero();\nPrint &lt;&lt; timer;\nif (SimpleGUI::Button(U\"start\", Vec2{ 200, 20 }))\n{\ntimer.start();\n}\nif (SimpleGUI::Button(U\"pause\", Vec2{ 200, 60 }))\n{\ntimer.pause();\n}\nif (SimpleGUI::Button(U\"resume\", Vec2{ 200, 100 }))\n{\ntimer.resume();\n}\nif (SimpleGUI::Button(U\"reset\", Vec2{ 200, 140 }))\n{\ntimer.reset();\n}\nif (SimpleGUI::Button(U\"restart\", Vec2{ 200, 180 }))\n{\ntimer.restart();\n}\n}\n}\n</code></pre>"},{"location":"tutorial2/time/#309-\u65e5\u4ed8\u30af\u30e9\u30b9","title":"30.9 \u65e5\u4ed8\u30af\u30e9\u30b9","text":"<p><code>Date</code> \u306f\u65e5\u4ed8\u3092\u8868\u73fe\u3059\u308b\u30af\u30e9\u30b9\u3067\u3001<code>int32 year</code>, <code>int32 month</code>, <code>int32 day</code> \u3092\u30e1\u30f3\u30d0\u5909\u6570\u306b\u6301\u3061\u307e\u3059\u3002<code>Days</code> \u578b\u306e\u5024\u3092\u4f7f\u3063\u3066\u52a0\u6e1b\u7b97\u304c\u3067\u304d\u307e\u3059\u3002</p> <p><code>Date::Today()</code> \u306f\u73fe\u5728\u306e\u65e5\u4ed8\u3092\u3001<code>Date::Tomorrow()</code> \u306f\u660e\u65e5\u306e\u65e5\u4ed8\u3092\u3001<code>Date::Yesterday()</code> \u306f\u6628\u65e5\u306e\u65e5\u4ed8\u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u73fe\u5728\u306e\u65e5\u4ed8\u3092\u53d6\u5f97\nconst Date date = Date::Today();\nPrint &lt;&lt; date;\nPrint &lt;&lt; date.year;\nPrint &lt;&lt; date.month;\nPrint &lt;&lt; date.day;\n// 10 \u65e5\u524d\u306e\u65e5\u4ed8\nPrint &lt;&lt; (date - 10_d);\n// 10 \u65e5\u5f8c\u306e\u65e5\u4ed8\nPrint &lt;&lt; (date + 10_d);\n// \u65e5\u4ed8\u306e\u5f15\u304d\u7b97\nPrint &lt;&lt; (Date::Tomorrow() - Date::Yesterday());\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/time/#3010-\u65e5\u4ed8\u3068\u6642\u523b\u30af\u30e9\u30b9","title":"30.10 \u65e5\u4ed8\u3068\u6642\u523b\u30af\u30e9\u30b9","text":"<p><code>DateTime</code> \u306f\u65e5\u4ed8\u3068\u6642\u523b\u3092\u8868\u73fe\u3059\u308b\u30af\u30e9\u30b9\u3067\u3001<code>int32 year</code>, <code>int32 month</code>, <code>int32 day</code>, <code>int32 hour</code>, <code>int32 minute</code>, <code>int32 second</code>, <code>int32 milliseconds</code> \u3092\u30e1\u30f3\u30d0\u5909\u6570\u306b\u6301\u3061\u307e\u3059\u3002\u6642\u9593\u578b\u306e\u5024\u3092\u4f7f\u3063\u3066\u52a0\u6e1b\u7b97\u304c\u3067\u304d\u307e\u3059\u3002</p> <p><code>DateTime::Now()</code> \u306f\u73fe\u5728\u306e\u65e5\u4ed8\u3068\u6642\u523b\u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u73fe\u5728\u306e\u65e5\u4ed8\u3068\u6642\u523b\u3092\u53d6\u5f97\nconst DateTime t = DateTime::Now();\nPrint &lt;&lt; t;\nPrint &lt;&lt; t.year;\nPrint &lt;&lt; t.month;\nPrint &lt;&lt; t.day;\nPrint &lt;&lt; t.hour;\nPrint &lt;&lt; t.minute;\nPrint &lt;&lt; t.second;\nPrint &lt;&lt; t.milliseconds;\n// 30 \u5206\u524d\nPrint &lt;&lt; (t - 30min);\n// \u6765\u9031\nPrint &lt;&lt; (t + 7_d);\n// 2030 \u5e74\u307e\u3067\u3042\u3068\nconst Duration s = (DateTime{ 2030, 1, 1 } - t);\nPrint &lt;&lt; s;\nPrint &lt;&lt; DaysF{ s };\nPrint &lt;&lt; DurationCast&lt;Days&gt;(s);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/time/#3011-\u6642\u5dee\u306e\u53d6\u5f97","title":"30.11 \u6642\u5dee\u306e\u53d6\u5f97","text":"<p><code>Time::UTCOffsetMinutes()</code> \u306f\u3001\u4f7f\u7528\u3057\u3066\u3044\u308b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u3001\u5354\u5b9a\u4e16\u754c\u6642 (UTC) \u3068\u306e\u6642\u5dee\uff08\u5206\uff09\u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; Time::UTCOffsetMinutes();\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/","title":"35. \u4fbf\u5229\u306a\u95a2\u6570","text":"<p>Siv3D \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u5f79\u7acb\u3064\u5c0f\u3055\u306a\u4fbf\u5229\u95a2\u6570\u3084\u6a5f\u80fd\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial2/utility/#351-\u6700\u5c0f\u5024\u6700\u5927\u5024","title":"35.1 \u6700\u5c0f\u5024\u3001\u6700\u5927\u5024","text":"<p><code>Min()</code>, <code>Max()</code> \u306f\u3001\u6e21\u3055\u308c\u305f\u5f15\u6570\u304b\u3089\u6700\u5c0f\u5024\u3001\u6700\u5927\u5024\u3092\u8fd4\u3057\u307e\u3059\u30022 \u3064\u306e\u5f15\u6570\u306e\u578b\u304c\u7570\u306a\u308b\u5834\u5408\u306f <code>Min&lt;size_t&gt;()</code> \u306e\u3088\u3046\u306b\u578b\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Array&lt;int32&gt; v = { 10, 20, 30 };\nPrint &lt;&lt; Max(100, 200);\nPrint &lt;&lt; Max(1.234, -3.456);\nPrint &lt;&lt; Max&lt;size_t&gt;(v.size(), 10);\nPrint &lt;&lt; Max({ 11, 44, 22, 55, 33 });\nPrint &lt;&lt; Min(100, 200);\nPrint &lt;&lt; Min(1.234, -3.456);\nPrint &lt;&lt; Min&lt;size_t&gt;(v.size(), 10);\nPrint &lt;&lt; Min({ 11, 44, 22, 55, 33 });\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#352-\u6307\u5b9a\u3057\u305f\u7bc4\u56f2\u306b\u53ce\u3081\u308b","title":"35.2 \u6307\u5b9a\u3057\u305f\u7bc4\u56f2\u306b\u53ce\u3081\u308b","text":"<p><code>Clamp(x, min, max)</code> \u306f\u3001\u5024 <code>x</code> \u3092 <code>min</code> \u4ee5\u4e0a\u3001<code>max</code> \u4ee5\u4e0b\u306b\u53ce\u3081\u3066\u8fd4\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nPrint &lt;&lt; Clamp(10, 0, 100);\nPrint &lt;&lt; Clamp(-10, 0, 100);\nPrint &lt;&lt; Clamp(110, 0, 100);\nPrint &lt;&lt; Clamp(9.99, -1.0, 1.0);\nPrint &lt;&lt; Clamp(-9.99, -1.0, 1.0);\nPrint &lt;&lt; Clamp(0.0, -1.0, 1.0);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#353-\u6307\u5b9a\u3057\u305f\u7bc4\u56f2\u5185\u304b\u3092\u8abf\u3079\u308b","title":"35.3 \u6307\u5b9a\u3057\u305f\u7bc4\u56f2\u5185\u304b\u3092\u8abf\u3079\u308b","text":"<p><code>InRange(x, min, max)</code> \u306f\u3001\u5024 <code>x</code> \u304c <code>min</code> \u4ee5\u4e0a <code>max</code> \u4ee5\u4e0b\u3067\u3042\u308b\u304b\u3092 <code>bool</code> \u578b\u3067\u8fd4\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nPrint &lt;&lt; InRange(10, 0, 100);\nPrint &lt;&lt; InRange(-10, 0, 100);\nPrint &lt;&lt; InRange(110, 0, 100);\nPrint &lt;&lt; InRange(9.99, -1.0, 1.0);\nPrint &lt;&lt; InRange(-9.99, -1.0, 1.0);\nPrint &lt;&lt; InRange(0.0, -1.0, 1.0);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#354-\u5947\u6570\u304b\u5076\u6570\u304b\u3092\u5224\u5b9a\u3059\u308b","title":"35.4 \u5947\u6570\u304b\u5076\u6570\u304b\u3092\u5224\u5b9a\u3059\u308b","text":"<p><code>IsOdd(n)</code>, <code>IsEven(n)</code> \u306f\u3001\u305d\u308c\u305e\u308c\u5024 <code>n</code> \u304c\u5947\u6570\u3067\u3042\u308b\u304b\u3001\u5076\u6570\u3067\u3042\u308b\u304b\u3092 <code>bool</code> \u578b\u3067\u8fd4\u3057\u307e\u3059\u3002</p> <p>\u5076\u6570\u3068\u5947\u6570\u306e\u82f1\u8a9e\u306e\u899a\u3048\u65b9</p> <p>\u300cOdd \u2192 3 \u6587\u5b57 \u2192 \u5947\u6570\u300d\u300cEven \u2192 4 \u6587\u5b57 \u2192 \u5076\u6570\u300d\u3068\u899a\u3048\u308b\u3068\u7c21\u5358\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// IsOdd: \u5947\u6570\u3067\u3042\u308b\u304b\u5224\u5b9a\u3059\u308b\nPrint &lt;&lt; IsOdd(1);\nPrint &lt;&lt; IsOdd(0);\nPrint &lt;&lt; IsOdd(-11);\nPrint &lt;&lt; IsOdd(9876543210ULL);\n// IsEven: \u5076\u6570\u3067\u3042\u308b\u304b\u5224\u5b9a\u3059\u308b\nPrint &lt;&lt; IsEven(1);\nPrint &lt;&lt; IsEven(0);\nPrint &lt;&lt; IsEven(-11);\nPrint &lt;&lt; IsEven(9876543210ULL);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#355-\u6307\u5b9a\u3057\u305f\u6570\u306e\u7bc4\u56f2\u3092\u30eb\u30fc\u30d7\u3059\u308b","title":"35.5 \u6307\u5b9a\u3057\u305f\u6570\u306e\u7bc4\u56f2\u3092\u30eb\u30fc\u30d7\u3059\u308b","text":"<p>Siv3D \u306b\u306f\u3001<code>for (int32 i = 0; i &lt; N; ++i)</code> \u3092 <code>for (auto i : step(N))</code> \u3068\u77ed\u304f\u66f8\u3051\u308b\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u307e\u305f\u3001<code>for (auto i : Range(from, to))</code> (\u305f\u3060\u3057 <code>from &lt;= to</code>) \u306f\u3001<code>for (auto i = from; i &lt;= to; ++i)</code> \u306e\u4ee3\u308f\u308a\u306b\u306a\u308a\u307e\u3059\u3002</p> <p><code>for (auto i : Range(from, to, step))</code> \u306f</p> <ul> <li><code>0 &lt; step</code> \u306e\u3068\u304d <code>for (auto i = from; i &lt;= to; i += step)</code></li> <li><code>step &lt; 0</code> \u306e\u3068\u304d <code>for (auto i = from; to &lt;= i; i += step)</code></li> </ul> <p>\u306e\u4ee3\u308f\u308a\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// 0, 1, 2\nfor (auto i : step(3))\n{\nPrint &lt;&lt; i;\n}\nPrint &lt;&lt; U\"---\";\n// 5, 6, 7, 8, 9, 10\nfor (auto i : Range(5, 10))\n{\nPrint &lt;&lt; i;\n}\nPrint &lt;&lt; U\"---\";\n// 20, 18, 16, 14, 12, 10\nfor (auto i : Range(20, 10, -2))\n{\nPrint &lt;&lt; i;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#356-\u4e8c\u91cd\u30eb\u30fc\u30d7\u3092-1-\u3064\u306b\u307e\u3068\u3081\u308b","title":"35.6 \u4e8c\u91cd\u30eb\u30fc\u30d7\u3092 1 \u3064\u306b\u307e\u3068\u3081\u308b","text":"<p><code>for (auto p : step({size.w, size.h}))</code> \u304a\u3088\u3073 <code>for (auto p : step(size))</code> (<code>size</code> \u306f <code>Size</code> \u578b) \u306f\u3001</p> <pre><code>for (int32 y = 0; y &lt; size.h; ++y)\n{\nfor (int32 x = 0; x &lt; size.w; ++x)\n{\nPoint p{ x, y };\n}\n}\n</code></pre> <p>\u306e\u4ee3\u308f\u308a\u306b\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u306f\u82e5\u5e72\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u751f\u3058\u308b\u305f\u3081\u3001\u901f\u5ea6\u304c\u6700\u512a\u5148\u306e\u5834\u9762\u3067\u306f\u901a\u5e38\u306e\u4e8c\u91cd\u30eb\u30fc\u30d7\u3092\u66f8\u304f\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nfor (auto p : step({ 2, 3 }))\n{\nPrint &lt;&lt; p;\n}\nPrint &lt;&lt; U\"---\";\nconst Size size{ 2, 4 };\nfor (auto p : step(size))\n{\nPrint &lt;&lt; p;\n}\nPrint &lt;&lt; U\"---\";\nconst Grid grid{ {10, 20}, {30, 40} };\nfor (auto p : step(grid.size()))\n{\nPrint &lt;&lt; grid[p];\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#357-\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u4ed8\u304d\u306e-range-based-for","title":"35.7 \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u4ed8\u304d\u306e range-based for","text":"<p>range-based for \u30eb\u30fc\u30d7\u306b\u304a\u3044\u3066 <code>Indexed()</code> \u3092\u4f7f\u3046\u3068\u3001\u6574\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u7bc4\u56f2\u306e\u5404\u8981\u7d20\u306e\u4e21\u65b9\u3092\u540c\u6642\u306b\u6271\u3048\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Array&lt;String&gt; animals = { U\"cat\", U\"dog\", U\"bird\" };\nfor (auto&amp;&amp; [i, animal] : Indexed(animals))\n{\nPrint &lt;&lt; U\"{}: {}\"_fmt(i, animal);\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#358-\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b","title":"35.8 \u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b","text":"<p><code>Abs(x)</code> \u306f <code>x</code> \u306e\u7d76\u5bfe\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u7d76\u5bfe\u5024\nPrint &lt;&lt; Abs(123);\nPrint &lt;&lt; Abs(-123);\nPrint &lt;&lt; Abs(3.45);\nPrint &lt;&lt; Abs(-3.45);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#359-\u5dee\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b","title":"35.9 \u5dee\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b","text":"<p><code>AbsDiff(a, b)</code> \u306f <code>a</code> \u3068 <code>b</code> \u306e\u5dee\u306e\u7d76\u5bfe\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u5dee\u306e\u7d76\u5bfe\u5024\nPrint &lt;&lt; AbsDiff(50, 10);\nPrint &lt;&lt; AbsDiff(10u, 50u);\nPrint &lt;&lt; AbsDiff(-2000000000, 2000000000);\nPrint &lt;&lt; AbsDiff(1.23, -1.23);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#3510-\u6587\u5b57\u306e\u6027\u8cea\u3092\u8abf\u3079\u308b","title":"35.10 \u6587\u5b57\u306e\u6027\u8cea\u3092\u8abf\u3079\u308b","text":"<p>\u6587\u5b57\uff08ASCII \u6587\u5b57\uff09\u306e\u6027\u8cea\u3092\u8abf\u3079\u308b\u6b21\u306e\u3088\u3046\u306a\u95a2\u6570\u304c\u3042\u308a\u307e\u3059\u3002</p> \u95a2\u6570 \u8aac\u660e <code>bool IsASCII(char32)</code> ASCII \u6587\u5b57\u3067\u3042\u308b\u304b\u3092\u8fd4\u3059 <code>bool IsDigit(char32)</code> 10 \u9032\u6570\u306e\u6570\u5b57\u3067\u3042\u308b\u304b\u3092\u8fd4\u3059 <code>bool IsLower(char32)</code> \u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\u5c0f\u6587\u5b57\u3067\u3042\u308b\u304b\u3092\u8fd4\u3059 <code>bool IsUpper(char32)</code> \u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\u5927\u6587\u5b57\u3067\u3042\u308b\u304b\u3092\u8fd4\u3059 <code>bool IsAlpha(char32)</code> \u6587\u5b57\u304c\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3067\u3042\u308b\u304b\u3092\u8fd4\u3059 <code>bool IsAlnum(char32)</code> \u6587\u5b57\u304c\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3082\u3057\u304f\u306f\u6570\u5b57\u3067\u3042\u308b\u304b\u3092\u8fd4\u3059 <code>bool IsXdigit(char32)</code> \u6587\u5b57\u304c 16 \u9032\u6570\u306e\u6570\u5b57\u3067\u3042\u308b\u304b\u3092\u8fd4\u3059 <code>bool IsControl(char32)</code> \u6587\u5b57\u304c\u5236\u5fa1\u6587\u5b57\u3067\u3042\u308b\u304b\u3092\u8fd4\u3059 <code>bool IsBlank(char32)</code> \u6587\u5b57\u304c\u7a7a\u767d\u6587\u5b57 (<code>' '</code>, <code>'\\t'</code>, \u304a\u3088\u3073\u5168\u89d2\u7a7a\u767d) \u3067\u3042\u308b\u304b\u3092\u8fd4\u3059 <code>bool IsSpace(char32)</code> \u6587\u5b57\u304c\u7a7a\u767d\u985e\u6587\u5b57 (<code>' '</code>, <code>'\\t'</code>, <code>'\\n'</code>, <code>'\\v'</code>, <code>'\\f'</code>, <code>'\\r'</code>, \u304a\u3088\u3073\u5168\u89d2\u7a7a\u767d) \u3067\u3042\u308b\u304b\u3092\u8fd4\u3059 <code>bool IsPrint(char32)</code> \u6587\u5b57\u304c\u5370\u5b57\u53ef\u80fd\u6587\u5b57\u3067\u3042\u308b\u304b\u3092\u8fd4\u3059 <code>char32 ToLower(char32)</code> \u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\u5927\u6587\u5b57\u3092\u5c0f\u6587\u5b57\u306b\u3059\u308b <code>char32 ToUpper(char32)</code> \u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\u5c0f\u6587\u5b57\u3092\u5927\u6587\u5b57\u306b\u3059\u308b <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nPrint &lt;&lt; IsASCII(U'A') &lt;&lt; U' ' &lt;&lt; IsASCII(U'\u3042');\nPrint &lt;&lt; IsUpper(U'A') &lt;&lt; U' ' &lt;&lt; IsUpper(U'a');\nPrint &lt;&lt; IsAlnum(U'4') &lt;&lt; U' ' &lt;&lt; IsAlnum(U'#');\nPrint &lt;&lt; IsSpace(U' ') &lt;&lt; U' ' &lt;&lt; IsSpace(U'-');\nPrint &lt;&lt; ToLower(U'A') &lt;&lt; U' ' &lt;&lt; ToLower(U'a');\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#3511-\u4efb\u610f\u306e\u5834\u6240\u306b\u7c21\u5358\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u7c21\u6613\u8868\u793a\u3059\u308b","title":"35.11 \u4efb\u610f\u306e\u5834\u6240\u306b\u7c21\u5358\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u7c21\u6613\u8868\u793a\u3059\u308b","text":"<p><code>PutText(s, pos)</code> \u306f\u3001\u6587\u5b57\u5217 <code>s</code> \u3092\u5ea7\u6a19 <code>pos</code> \u3092\u4e2d\u5fc3\u306b\u63cf\u304d\u307e\u3059\u3002\u8868\u793a\u306b\u306f <code>Print</code> \u3068\u540c\u3058\u30d5\u30a9\u30f3\u30c8\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002<code>Print</code> \u3068\u306f\u7570\u306a\u308a\u3001\u51fa\u529b\u7d50\u679c\u304c\u30d5\u30ec\u30fc\u30e0\u3092\u307e\u305f\u3044\u3067\u6b8b\u308a\u7d9a\u3051\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <p><code>PutText(s, Arg::topLeft = pos)</code> \u306e\u3088\u3046\u306b\u57fa\u6e96\u4f4d\u7f6e\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n// \u753b\u9762\u306e\u4e2d\u5fc3\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u7c21\u6613\u8868\u793a\u3059\u308b\nPutText(DateTime::Now().format(), Scene::Center());\n// \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u53f3\u4e0a\u306e\u4f4d\u7f6e\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u7c21\u6613\u8868\u793a\u3059\u308b\nPutText(U\"Hello, Siv3D!\", Arg::bottomLeft = Cursor::Pos());\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#3512-\u6570\u5b66\u5b9a\u6570","title":"35.12 \u6570\u5b66\u5b9a\u6570","text":"<p>Siv3D \u306b\u306f\u6b21\u306e\u3088\u3046\u306a\u6570\u5b66\u5b9a\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> double \u578bfloat \u578b \u540d\u524d \u8aac\u660e \u5024 (\u5b9f\u969b\u3088\u308a\u9ad8\u3044\u7cbe\u5ea6\u306e\u6841\u6570\u3067\u793a\u3057\u3066\u3044\u307e\u3059) <code>Math::E</code> \u81ea\u7136\u5bfe\u6570\u306e\u5e95 2.718281828459045235360287471352662498 <code>Math::Log2E</code> 2 \u3092\u5e95\u3068\u3059\u308b e \u306e\u5bfe\u6570 1.442695040888963407359924681001892137 <code>Math::Log10E</code> 10 \u3092\u5e95\u3068\u3059\u308b e \u306e\u5bfe\u6570 0.434294481903251827651128918916605082 <code>Math::Pi</code> \u03c0\uff08\u5186\u5468\u7387\uff09 3.141592653589793238462643383279502884 <code>Math::QuarterPi</code> \u03c0/4 0.785398163397448309615660845819875721 <code>Math::OneThirdPi</code> \u03c0/3 1.047197551196597746154214461093167628 <code>Math::HalfPi</code> \u03c0/2 1.570796326794896619231321691639751442 <code>Math::TwoPi</code> 2\u03c0 6.283185307179586476925286766559005768 <code>Math::Tau</code> \u03c4\uff082\u03c0\uff09 6.283185307179586476925286766559005768 <code>Math::InvTwoPi</code> 1/(2\u03c0) 0.159154943091895335768883763372514362 <code>Math::InvPi</code> 1/\u03c0 0.318309886183790671537767526745028724 <code>Math::InvSqrtPi</code> 1/\u221a\u03c0 0.564189583547756286948079451560772586 <code>Math::Ln2</code> 2 \u306e\u81ea\u7136\u5bfe\u6570 0.693147180559945309417232121458176568 <code>Math::Ln10</code> 10 \u306e\u81ea\u7136\u5bfe\u6570 2.302585092994045684017991454684364208 <code>Math::Sqrt2</code> \u221a2 1.414213562373095048801688724209698078 <code>Math::Sqrt3</code> \u221a3 1.732050807568877293527446341505872366 <code>Math::InvSqrt2</code> 1/\u221a2 0.707106781186547524400844362104849039 <code>Math::InvSqrt3</code> 1/\u221a3 0.577350269189625764509148780501957456 <code>Math::EGamma</code> \u30aa\u30a4\u30e9\u30fc\u306e\u5b9a\u6570 0.577215664901532860606512090082402431 <code>Math::Phi</code> \u9ec4\u91d1\u6570 (\u03c6) 1.618033988749894848204586834365638117 <code>Math::QNaN</code> Quiet NaN QNaN <code>Math::NaN</code> Signaling NaN SNaN <code>Math::Inf</code> Inf Inf \u540d\u524d \u8aac\u660e \u5024 (\u5b9f\u969b\u3088\u308a\u9ad8\u3044\u7cbe\u5ea6\u306e\u6841\u6570\u3067\u793a\u3057\u3066\u3044\u307e\u3059) <code>Math::PiF</code> \u03c0\uff08\u5186\u5468\u7387\uff09 3.141592653589793238462643383279502884 <code>Math::QuarterPiF</code> \u03c0/4 0.785398163397448309615660845819875721 <code>Math::OneThirdPiF</code> \u03c0/3 1.047197551196597746154214461093167628 <code>Math::HalfPiF</code> \u03c0/2 1.570796326794896619231321691639751442 <code>Math::TwoPiF</code> 2\u03c0 6.283185307179586476925286766559005768 <code>Math::TauF</code> \u03c4\uff082\u03c0\uff09 6.283185307179586476925286766559005768 <code>Math::InvTwoPiF</code> 1/(2\u03c0) 0.159154943091895335768883763372514362 <code>Math::InvPiF</code> 1/\u03c0 0.318309886183790671537767526745028724 <code>Math::InvSqrtPiF</code> 1/\u221a\u03c0 0.564189583547756286948079451560772586 <code>Math::QNaNF</code> Quiet NaN QNaN <code>Math::NaNF</code> Signaling NaN SNaN <code>Math::InfF</code> Inf Inf <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u5186\u5468\u7387\nPrint &lt;&lt; Math::Pi;\n// \u9ec4\u91d1\u6bd4\nPrint &lt;&lt; Math::Phi;\n// NaN\nPrint &lt;&lt; Math::QNaN;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#3513-\u5ea6\u6570\u6cd5\u03c0-\u03c4-\u306b\u3088\u308b\u89d2\u5ea6\u306e\u8868\u73fe","title":"35.13 \u5ea6\u6570\u6cd5\u3001\u03c0, \u03c4 \u306b\u3088\u308b\u89d2\u5ea6\u306e\u8868\u73fe","text":"<p>Siv3D \u306e API \u306f\u89d2\u5ea6\u3092\u30e9\u30b8\u30a2\u30f3\u3067\u6271\u3044\u307e\u3059\u304c\u3001\u30b3\u30fc\u30c9\u4e2d\u3067\u306f\u305d\u308c\u4ee5\u5916\u306e\u5358\u4f4d\u3067\u89d2\u5ea6\u3092\u8868\u73fe\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p><code>_deg</code> \u3068\u3044\u3046\u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u5ea6\u6570\u6cd5\u3067\u89d2\u5ea6\u3092\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070 <code>90_deg</code> \u306f <code>(90 * Math::Pi / 180.0)</code> \u3068\u540c\u3058\u3067\u3059\u3002</p> <p><code>_pi</code> \u3068\u3044\u3046\u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u03c0 \u3068\u306e\u304b\u3051\u7b97\u3092\u7701\u7565\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070 <code>0.5_pi</code> \u306f <code>(0.5 * Math::Pi)</code> \u3068\u540c\u3058\u3067\u3059\u3002</p> <p>\u307e\u305f\u3001\u5186\u306e\u534a\u5f84\u306b\u5bfe\u3059\u308b\u5468\u9577\u306e\u6bd4\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u308b\u5b9a\u6570 \u03c4 \u3092\u7528\u3044\u3066\u3001\u89d2\u5ea6\u3092\u8868\u73fe\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u306f <code>_tau</code> \u3067\u3059\u3002\u4f8b\u3048\u3070 <code>0.5_tau</code> \u306f <code>(0.5 * Math::TwoPi)</code> \u3068\u540c\u3058\u3067\u3059\u3002</p> \u30b5\u30d5\u30a3\u30c3\u30af\u30b9 \u8aac\u660e \u4e57\u7b97\u3059\u308b\u5024 <code>_deg</code> \u5ea6\u6570\u6cd5 Math::Pi / 180.0 <code>_pi</code> \u03c0 Math::Pi <code>_tau</code> \u03c4 Math::TwoPi <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nPrint &lt;&lt; U\"{}\"_fmt(180_deg);\nPrint &lt;&lt; U\"{}\"_fmt(1_pi);\nPrint &lt;&lt; U\"{}\"_fmt(0.5_tau);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#3514-\u89d2\u5ea6\u306e\u6b63\u898f\u5316","title":"35.14 \u89d2\u5ea6\u306e\u6b63\u898f\u5316","text":"<p>\u89d2\u5ea6\uff08\u30e9\u30b8\u30a2\u30f3\uff09\u3092\u6b63\u898f\u5316\u3059\u308b\u306b\u306f <code>Math::NormalizeAngle(radian, cenetr = Pi)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u7b2c 2 \u5f15\u6570\u306f\u6b63\u898f\u5316\u306e\u4e2d\u5fc3\u89d2\u5ea6\u3067\u3001Pi \u306e\u5834\u5408\u306e\u623b\u308a\u5024\u306f <code>[0, 2\u03c0)</code>, 0 \u306e\u5834\u5408\u306e\u623b\u308a\u5024\u306f <code>[-\u03c0, \u03c0)</code> \u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nconst double a = (Scene::Time() * -90_deg);\nconst double b = (Scene::Time() * 90_deg);\nClearPrint();\nPrint &lt;&lt; a;\n// \u89d2\u5ea6\u3092 [0.0, 2\u03c0) \u306e\u7bc4\u56f2\u306b\u6b63\u898f\u5316\u3057\u305f\u5024\u3092\u8fd4\u3059\nPrint &lt;&lt; Math::NormalizeAngle(a);\n// \u89d2\u5ea6\u3092 [-\u03c0, \u03c0) \u306e\u7bc4\u56f2\u306b\u6b63\u898f\u5316\u3057\u305f\u5024\u3092\u8fd4\u3059\nPrint &lt;&lt; Math::NormalizeAngle(a, 0.0);\nPrint &lt;&lt; U\"----\";\nPrint &lt;&lt; b;\n// \u89d2\u5ea6\u3092 [0.0, 2\u03c0) \u306e\u7bc4\u56f2\u306b\u6b63\u898f\u5316\u3057\u305f\u5024\u3092\u8fd4\u3059\nPrint &lt;&lt; Math::NormalizeAngle(b);\n// \u89d2\u5ea6\u3092 [-\u03c0, \u03c0) \u306e\u7bc4\u56f2\u306b\u6b63\u898f\u5316\u3057\u305f\u5024\u3092\u8fd4\u3059\nPrint &lt;&lt; Math::NormalizeAngle(b, 0.0);\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#3515-\u30e9\u30b8\u30a2\u30f3\u3068\u5ea6\u6570\u6cd5\u306e\u5909\u63db","title":"35.15 \u30e9\u30b8\u30a2\u30f3\u3068\u5ea6\u6570\u6cd5\u306e\u5909\u63db","text":"<p>\u30e9\u30b8\u30a2\u30f3\u3068\u5ea6\u6570\u6cd5\u306e\u5909\u63db\u306b\u306f <code>Math::ToDegrees(radian)</code> \u3068 <code>Math::ToRadians(degrees)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst double angle = 45_deg;\nPrint &lt;&lt; angle;\nPrint &lt;&lt; Math::ToDegrees(angle);\nPrint &lt;&lt; Math::ToRadians(Math::ToDegrees(angle));\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#3516-\u5217\u6319\u578b\u304b\u3089\u6574\u6570\u3078\u306e\u5909\u63db","title":"35.16 \u5217\u6319\u578b\u304b\u3089\u6574\u6570\u3078\u306e\u5909\u63db","text":"<p><code>FromEnum(enum)</code> \u3092\u4f7f\u3046\u3068\u3001\u5217\u6319\u578b\u306e\u5024\u3092\u6574\u6570\u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nenum class State\n{\nMenu,\nGame,\nResult\n};\nvoid Main()\n{\nState state = State::Result;\nconst int32 n = FromEnum(state);\nPrint &lt;&lt; n;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#3517-\u6574\u6570\u304b\u3089\u5217\u6319\u578b\u3078\u306e\u5909\u63db","title":"35.17 \u6574\u6570\u304b\u3089\u5217\u6319\u578b\u3078\u306e\u5909\u63db","text":"<p><code>ToEnum&lt;Enum&gt;(i)</code> \u3092\u4f7f\u3046\u3068\u3001\u6574\u6570\u3092\u5217\u6319\u578b\u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002 </p> <pre><code># include &lt;Siv3D.hpp&gt;\nenum class State\n{\nMenu,\nGame,\nResult\n};\nvoid Main()\n{\nconst int32 n = 2;\nState state = ToEnum&lt;State&gt;(n);\nPrint &lt;&lt; (state == State::Result);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#3518-\u30a8\u30e9\u30fc","title":"35.18 \u30a8\u30e9\u30fc","text":"<p>Siv3D \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30a8\u30e9\u30fc\u3092\u4f1d\u3048\u308b\u4f8b\u5916\u3092\u7c21\u5358\u306b\u9001\u51fa\u3057\u305f\u3044\u5834\u5408\u3001<code>Error</code> \u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002\u3053\u306e\u4f8b\u5916\u304c\u6355\u6349\u3055\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u3001Siv3D \u30a8\u30f3\u30b8\u30f3\u306f\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u5185\u5bb9\u3092\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306b\u8868\u793a\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3057\u307e\u3059\u3002</p> <p>Windows \u7248\uff08Visual Studio\uff09\u306b\u304a\u3044\u3066\u3001\u4f8b\u5916\u306e\u767a\u751f\u7b87\u6240\u3092 IDE \u4e0a\u3067\u8868\u793a\u3059\u308b\u65b9\u6cd5\u306f\u3001\u4f8b\u5916\u306e\u767a\u751f\u7b87\u6240\u306e\u8868\u793a\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Texture texture{ U\"aaa.png\" };\nif (not texture)\n{\n// \u4f8b\u5916\u3092\u9001\u51fa\u3059\u308b\nthrow Error{ U\"Failed to load `aaa.png`\" };\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#3519-\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306e\u53d6\u5f97","title":"35.19 \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306e\u53d6\u5f97","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8d77\u52d5\u6642\u306b\u6e21\u3055\u308c\u305f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001<code>System::GetCommandLineArgs()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Array&lt;String&gt; commands = System::GetCommandLineArgs();\nfor (const auto&amp; command : commands)\n{\nPrint &lt;&lt; command;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#3520-\u30b9\u30ea\u30fc\u30d7","title":"35.20 \u30b9\u30ea\u30fc\u30d7","text":"<p>\u73fe\u5728\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u6307\u5b9a\u3057\u305f\u6642\u9593\u3060\u3051\u30b9\u30ea\u30fc\u30d7\u3055\u305b\u308b\u306b\u306f\u3001<code>System::Sleep(duration)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// 3 \u79d2\u30b9\u30ea\u30fc\u30d7\u3059\u308b\nSystem::Sleep(3s);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#3521-\u30c7\u30fc\u30bf\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\u3059\u308b","title":"35.21 \u30c7\u30fc\u30bf\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\u3059\u308b","text":"<p><code>Console</code> \u306b\u5411\u304b\u3063\u3066\u3001\u51fa\u529b\u306e\u8a18\u53f7 <code>&lt;&lt;</code> \u3067\u5024\u3092\u9001\u308b\u3068\u3001\u305d\u306e\u5024\u304c\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\u3055\u308c\u307e\u3059\u3002Windows \u306e\u5834\u5408\u306f\u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002<code>Print</code> \u3067\u306f\u8ffd\u3044\u304d\u308c\u306a\u3044\u307b\u3069\u51fa\u529b\u30c7\u30fc\u30bf\u304c\u5927\u91cf\u306b\u3042\u308b\u5834\u5408\u3084\u3001\u30c7\u30fc\u30bf\u3092\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u306b\u30b3\u30d4\u30fc\u3057\u305f\u3044\u969b\u306b\u4fbf\u5229\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;int32&gt; v = { 10,20,30,40,50 };\nPrint &lt;&lt; v;\n// \u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\nConsole &lt;&lt; v;\nConsole &lt;&lt; U\"Hello, Siv3D!\";\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/utility/#3522-\u30c7\u30fc\u30bf\u3092\u30ed\u30b0\u51fa\u529b\u3059\u308b","title":"35.22 \u30c7\u30fc\u30bf\u3092\u30ed\u30b0\u51fa\u529b\u3059\u308b","text":"<p><code>Logger</code> \u306b\u5411\u304b\u3063\u3066\u3001\u51fa\u529b\u306e\u8a18\u53f7 <code>&lt;&lt;</code> \u3067\u5024\u3092\u9001\u308b\u3068\u3001\u305d\u306e\u5024\u304c\u30ed\u30b0\u51fa\u529b\u3055\u308c\u307e\u3059\u3002Windows \u306e\u5834\u5408\u306f Visual Studio \u306e\u300c\u51fa\u529b\u300d\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\uff08\u30c7\u30d0\u30c3\u30b0\u5b9f\u884c\u6642\uff09\u3002<code>Console</code> \u540c\u69d8\u3001\u5927\u91cf\u306e\u51fa\u529b\u30c7\u30fc\u30bf\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;int32&gt; v = { 10,20,30,40,50 };\nPrint &lt;&lt; v;\n// \u30ed\u30b0\u51fa\u529b\nLogger &lt;&lt; v;\nLogger &lt;&lt; U\"Hello, Siv3D!\";\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial2/video/","title":"26. \u52d5\u753b\u3092\u63cf\u304f","text":"<p>\u52d5\u753b\u3084 GIF \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u63cf\u753b\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial2/video/#261-\u52d5\u753b\u3092\u63cf\u304f","title":"26.1 \u52d5\u753b\u3092\u63cf\u304f","text":"<p>\u753b\u9762\u4e0a\u3067\u52d5\u753b\u3092\u518d\u751f\u3059\u308b\u306b\u306f <code>VideoTexture</code> \u3092\u4f5c\u6210\u3057\u3001<code>.draw()</code> \u307e\u305f\u306f <code>.drawAt()</code> \u3057\u307e\u3059\u3002<code>VideoTexture</code> \u306f <code>Texture</code> \u3068\u307b\u307c\u540c\u3058\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6301\u3061\u3001\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u3092 <code>Texture</code> \u306e\u3088\u3046\u306b\u6271\u3048\u307e\u3059\u3002\u52d5\u753b\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u9032\u3081\u308b\u306b\u306f\u3001<code>VideoTexture</code> \u306f\u6bce\u30d5\u30ec\u30fc\u30e0 <code>.advance()</code> \u3092\u547c\u3093\u3067\u518d\u751f\u4f4d\u7f6e\u3092\u9032\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>Siv3D \u306f\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u52d5\u753b\u306e\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u5148\u8aad\u307f\u3092\u884c\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6642\u9593\u3092\u9032\u3081\u308b\u65b9\u5411\u3078\u306e\u52d5\u753b\u306e\u518d\u751f\u306f\u3001\u305d\u3053\u307e\u3067\u5927\u304d\u306a\u8ca0\u8377\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3002</p> <p><code>VideoTexture</code> \u3067\u306f\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u304c\u4f5c\u6210\u3055\u308c\u306a\u3044\u305f\u3081\u3001\u52d5\u753b\u3092\u7e2e\u5c0f\u3057\u3066\u63cf\u304f\u5834\u5408\u306f\u3001\u3042\u3089\u304b\u3058\u3081\u5c0f\u3055\u3044\u89e3\u50cf\u5ea6\u306e\u52d5\u753b\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002</p> <p>\u5bfe\u5fdc\u3059\u308b\u52d5\u753b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u3002MP4 \u30d5\u30a1\u30a4\u30eb\u306f Windows, macOS, Linux \u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>Windows \u306b\u304a\u3051\u308b\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306e\u57cb\u3081\u8fbc\u307f</p> <p>Windows \u3067\u306f\u3001\u306e\u3061\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u8aac\u660e\u3059\u308b\u300c\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u57cb\u3081\u8fbc\u307f\u300d\u3067\u57cb\u3081\u8fbc\u3093\u3060\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306f <code>VideoTexture</code> \u3067\u8aad\u307f\u8fbc\u3081\u306a\u3044\u5236\u7d04\u304c\u3042\u308a\u307e\u3059\u3002\u30ef\u30fc\u30af\u30a2\u30e9\u30a6\u30f3\u30c9\u3068\u3057\u3066\u3001\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3059\u65b9\u6cd5  \u304c\u3042\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30eb\u30fc\u30d7\u3059\u308b\u5834\u5408\u306f Loop::Yes, \u30eb\u30fc\u30d7\u3057\u306a\u3044\u5834\u5408\u306f Loop::No\nconst VideoTexture videoTexture{ U\"example/video/river.mp4\", Loop::Yes };\nwhile (System::Update())\n{\nClearPrint();\n// \u518d\u751f\u4f4d\u7f6e\uff08\u79d2\uff09 / \u52d5\u753b\u306e\u9577\u3055\uff08\u79d2\uff09\nPrint &lt;&lt; U\"{:.2f}/{:.2f}\"_fmt(videoTexture.posSec(), videoTexture.lengthSec());\n// \u52d5\u753b\u306e\u6642\u9593\u3092\u9032\u3081\u308b (\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f Scece::DeltaTime() \u79d2)\nvideoTexture.advance();\nvideoTexture\n.scaled(0.5).draw();\nvideoTexture\n.scaled(0.5)\n.rotated(Scene::Time() * 30_deg)\n.drawAt(Cursor::Pos());\n}\n}\n</code></pre>"},{"location":"tutorial2/video/#262-\u97f3\u58f0\u4ed8\u304d\u306e\u52d5\u753b\u306b\u5bfe\u5fdc\u3059\u308b","title":"26.2 \u97f3\u58f0\u4ed8\u304d\u306e\u52d5\u753b\u306b\u5bfe\u5fdc\u3059\u308b","text":"<p>\u97f3\u58f0\u4ed8\u304d\u306e\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u304b\u3089 <code>VideoTexture</code> \u3068 <code>Audio</code> \u3092\u540c\u6642\u306b\u4f5c\u6210\u3057\u3001\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u5408\u308f\u305b\u3066\u518d\u751f\u3059\u308b\u3053\u3068\u3067\u3001\u97f3\u58f0\u4ed8\u304d\u306e\u52d5\u753b\u3092\u518d\u751f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>Audio</code> \u306b\u3064\u3044\u3066\u306f \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 37. \u30aa\u30fc\u30c7\u30a3\u30aa\u518d\u751f  \u3067\u8a73\u3057\u304f\u8aac\u660e\u3057\u307e\u3059\u3002\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u3088\u3063\u3066\u306f\u3001\u97f3\u58f0\u4ed8\u304d\u306e\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u52d5\u753b\u306e\u518d\u751f\u4f4d\u7f6e\u3068\u97f3\u58f0\u306e\u518d\u751f\u4f4d\u7f6e\u306e\u5dee\u304c 0.1 \u79d2\u4ee5\u4e0a\u3042\u308b\u5834\u5408\u3001\u97f3\u58f0\u306e\u518d\u751f\u4f4d\u7f6e\u3092\u52d5\u753b\u306e\u518d\u751f\u4f4d\u7f6e\u306b\u5408\u308f\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u52d5\u753b\u3068\u97f3\u58f0\u306e\u518d\u751f\u4f4d\u7f6e\u304c\u305a\u308c\u308b\u3053\u3068\u3092\u9632\u3052\u307e\u3059\u304c\u3001\u97f3\u58f0\u304c\u9014\u5207\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306e\u7528\u610f</p> <p>Siv3D \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u97f3\u58f0\u4ed8\u304d\u306e\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306f\u540c\u68b1\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u30b5\u30f3\u30d7\u30eb\u3092\u5b9f\u884c\u3059\u308b\u524d\u306b\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u524d\u3067\u7528\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u97f3\u58f0\u4ed8\u304d\u306e\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\uff08\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u540c\u68b1\u3055\u308c\u3066\u3044\u307e\u305b\u3093\uff09\nconst FilePath path = U\"test.mp4\";\nif (not FileSystem::Exists(path))\n{\nthrow Error{ U\"{} \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\"_fmt(path) };\n}\n// \u30eb\u30fc\u30d7\u3059\u308b\u5834\u5408\u306f Loop::Yes, \u30eb\u30fc\u30d7\u3057\u306a\u3044\u5834\u5408\u306f Loop::No\nconst VideoTexture videoTexture{ path, Loop::Yes };\n// \u52d5\u753b\u306e\u97f3\u58f0\u3092\u518d\u751f\u3059\u308b\u305f\u3081\u306e Audio \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\nconst Audio audio{ Audio::Stream, path, Loop::Yes };\n// \u97f3\u58f0\u306e\u8aad\u307f\u8fbc\u307f\u306b\u6210\u529f\u3057\u305f\u3089\nif (not audio)\n{\nthrow Error{ U\"\u97f3\u58f0\u306e\u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3057\u307e\u3057\u305f\" };\n}\n// \u97f3\u58f0\u3092\u518d\u751f\u3059\u308b\naudio.play();\nwhile (System::Update())\n{\nClearPrint();\n// \u52d5\u753b\u306e\u518d\u751f\u4f4d\u7f6e\uff08\u79d2\uff09\nconst double videoTime = videoTexture.posSec();\n// \u97f3\u58f0\u306e\u518d\u751f\u4f4d\u7f6e\uff08\u79d2\uff09\nconst double audioTime = audio.posSec();\nPrint &lt;&lt; U\"{:.2f}/{:.2f}/{:.2f}\"_fmt(videoTime, audioTime, videoTexture.lengthSec());\n// \u52d5\u753b\u306e\u518d\u751f\u4f4d\u7f6e\u3068\u97f3\u58f0\u306e\u518d\u751f\u4f4d\u7f6e\u306e\u5dee\u304c 0.1 \u79d2\u4ee5\u4e0a\u3042\u308b\u5834\u5408\nif (0.1 &lt; AbsDiff(audioTime, videoTime))\n{\n// \u97f3\u58f0\u306e\u518d\u751f\u4f4d\u7f6e\u3092\u52d5\u753b\u306e\u518d\u751f\u4f4d\u7f6e\u306b\u5408\u308f\u305b\u308b\naudio.seekTime(videoTime);\n}\n// \u52d5\u753b\u306e\u6642\u9593\u3092\u9032\u3081\u308b (\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f Scece::DeltaTime() \u79d2)\nvideoTexture.advance();\nvideoTexture\n.scaled(0.5).draw();\n}\n}\n</code></pre>"},{"location":"tutorial2/video/#263-gif-\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u63cf\u304f","title":"26.3 GIF \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u63cf\u304f","text":"<p><code>AnimatedGIFReader</code> \u3092\u4f7f\u3046\u3068\u3001\u5404\u30d5\u30ec\u30fc\u30e0\u306e\u753b\u50cf\u30c7\u30fc\u30bf <code>Image</code> \u3068\u3001\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u307e\u3067\u306e\u30c7\u30a3\u30ec\u30a4\uff08\u30df\u30ea\u79d2\uff09\u306e\u914d\u5217\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002<code>Image</code> \u306e\u914d\u5217\u304b\u3089 <code>Texture</code> \u306e\u914d\u5217\u3092\u4f5c\u6210\u3057\u3001\u9069\u5207\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30d5\u30ec\u30fc\u30e0\u3092\u63cf\u304f\u3053\u3068\u3067\u3001GIF \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u63cf\u753b\u3067\u304d\u307e\u3059\u3002</p> <p>\u3042\u308b\u6642\u9593\u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u3001\u4f55\u756a\u76ee\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u63cf\u3051\u3070\u3088\u3044\u304b\u306f\u3001<code>AnimatedGIFReader::GetFrameIndex()</code> \u3092\u4f7f\u3046\u3063\u3066\u6c42\u3081\u3089\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// GIF \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u753b\u50cf\u3092\u958b\u304f\nconst AnimatedGIFReader gif{ U\"example/gif/test.gif\" };\n// \u5404\u30d5\u30ec\u30fc\u30e0\u306e\u753b\u50cf\u3068\u3001\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u3078\u306e\u30c7\u30a3\u30ec\u30a4\uff08\u30df\u30ea\u79d2\uff09\u3092\u30ed\u30fc\u30c9\nArray&lt;Image&gt; images;\nArray&lt;int32&gt; delays;\ngif.read(images, delays);\n// \u30d5\u30ec\u30fc\u30e0\u6570\nPrint &lt;&lt; images.size() &lt;&lt; U\" frames\";\n// \u5404\u30d5\u30ec\u30fc\u30e0\u306e\u30c7\u30a3\u30ec\u30a4\uff08\u30df\u30ea\u79d2\uff09\u4e00\u89a7\nPrint &lt;&lt; U\"delays: \" &lt;&lt; delays;\n// \u5404\u30d5\u30ec\u30fc\u30e0\u306e Image \u304b\u3089 Texure \u3092\u4f5c\u6210\nconst Array&lt;Texture&gt; textures = images.map([](const Image&amp; image) { return Texture{ image }; });\n// \u753b\u50cf\u30c7\u30fc\u30bf\u306f\u3082\u3046\u4f7f\u308f\u306a\u3044\u305f\u3081\u3001\u6d88\u53bb\u3057\u3066\u30e1\u30e2\u30ea\u6d88\u8cbb\u3092\u6e1b\u3089\u3059\nimages.clear();\nwhile (System::Update())\n{\n// \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u7d4c\u904e\u6642\u9593\nconst double t = Scene::Time();\n// \u7d4c\u904e\u6642\u9593\u3068\u5404\u30d5\u30ec\u30fc\u30e0\u306e\u30c7\u30a3\u30ec\u30a4\u306b\u57fa\u3065\u3044\u3066\u3001\u4f55\u756a\u76ee\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u63cf\u3051\u3070\u3088\u3044\u304b\u3092\u8a08\u7b97\nconst size_t frameIndex = AnimatedGIFReader::GetFrameIndex(t, delays);\ntextures[frameIndex].draw(200, 200);\n}\n}\n</code></pre>"},{"location":"tutorial3/2d-render-state/","title":"39. 2D \u30ec\u30f3\u30c0\u30fc\u30b9\u30c6\u30fc\u30c8","text":"<p>2D \u63cf\u753b\u306e\u8a2d\u5b9a\uff08\u30ec\u30f3\u30c0\u30fc\u30b9\u30c6\u30fc\u30c8\uff09\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u3001\u3055\u307e\u3056\u307e\u306a\u52b9\u679c\u3092\u5f97\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Scoped\uff5e \u306e\u306f\u305f\u3089\u304d</p> <p>\u3053\u306e\u7ae0\u3067\u5b66\u3076 <code>Scoped\uff5e</code> \u3084 <code>Transformer2D</code> \u306a\u3069\u306e\u5909\u6570\u306f\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e0a\u3067\u306f\u4f55\u3082\u50cd\u3044\u3066\u3044\u306a\u3044\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u5b9f\u969b\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u4e2d\u3067\u306f\u3001\u6e21\u3055\u308c\u305f\u30ec\u30f3\u30c0\u30fc\u30b9\u30c6\u30fc\u30c8\u3092\u30a8\u30f3\u30b8\u30f3\u306b\u8a2d\u5b9a\u3057\u3001\u81ea\u8eab\u304c\u7834\u68c4\u3055\u308c\u308b\u3068\u304d\uff08\u30b9\u30b3\u30fc\u30d7\u304c\u7d42\u4e86\u3059\u308b\u3068\u304d\uff09\u306b\u3001\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u8a2d\u5b9a\u3092\u5143\u306e\u72b6\u614b\u306b\u623b\u3059\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\n{\n// \u30ec\u30f3\u30c0\u30fc\u30b9\u30c6\u30fc\u30c8\u3092\u5909\u66f4\u3059\u308b\uff08\u5143\u306e\u72b6\u614b\u3082\u4fdd\u5b58\uff09\nconst ScopedRenderStates2D rasterizer{ RasterizerState::WireframeCullNone };\nCircle{ 200, 300, 150 }.draw();\n} // \u3053\u3053\u3067 rasterizer \u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u547c\u3073\u51fa\u3055\u308c\u3001\u30ec\u30f3\u30c0\u30fc\u30b9\u30c6\u30fc\u30c8\u3092\u5143\u306e\u72b6\u614b\u306b\u623b\u3059\nCircle{ 600, 300, 150 }.draw();\n}\n}\n</code></pre>"},{"location":"tutorial3/2d-render-state/#391-\u52a0\u7b97\u30d6\u30ec\u30f3\u30c9\u3067\u63cf\u304f","title":"39.1 \u52a0\u7b97\u30d6\u30ec\u30f3\u30c9\u3067\u63cf\u304f","text":"<p><code>ScopedRenderStates2D</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b <code>BlendState::Additive</code> \u3092\u6e21\u3059\u3068\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30b3\u30fc\u30d7\u304c\u6709\u52b9\u306a\u9593\u3001\u56f3\u5f62\u3084\u753b\u50cf\u304c\u52a0\u7b97\u30d6\u30ec\u30f3\u30c9\u3067\u63cf\u753b\u3055\u308c\u307e\u3059\u3002\u52a0\u7b97\u30d6\u30ec\u30f3\u30c9\u3067\u306f\u3001\u80cc\u666f\u8272\u306b RGB \u6210\u5206\u3092\u52a0\u7b97\u3059\u308b\u3088\u3046\u306b\u63cf\u753b\u3055\u308c\u308b\u306e\u3067\u3001\u91cd\u306d\u3066\u63cf\u753b\u3057\u305f\u90e8\u5206\u304c\u660e\u308b\u304f\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nArray&lt;Vec2&gt; points;\nfor (int32 i = 0; i &lt; 400; ++i)\n{\npoints &lt;&lt; RandomVec2(Scene::Rect());\n}\n// \u52a0\u7b97\u30d6\u30ec\u30f3\u30c9\u3092\u6709\u52b9\u306b\u3059\u308b\u304b\nbool enabled = true;\nwhile (System::Update())\n{\nif (enabled)\n{\n// \u52a0\u7b97\u30d6\u30ec\u30f3\u30c9\u6709\u52b9\nconst ScopedRenderStates2D blend{ BlendState::Additive };\nfor (const auto&amp; point : points)\n{\nCircle{ point, 20 }.draw(HSV{ (point.y * 100 + point.x * 100), 0.5 });\n}\n}\nelse\n{\n// \u901a\u5e38\u306e\u30d6\u30ec\u30f3\u30c9\u30e2\u30fc\u30c9\nfor (const auto&amp; point : points)\n{\nCircle{ point, 20 }.draw(HSV{ (point.y * 100 + point.x * 100), 0.5 });\n}\n}\nSimpleGUI::CheckBox(enabled, U\"AdditiveBlend\", Vec2{ 40, 40 });\n}\n}\n</code></pre>"},{"location":"tutorial3/2d-render-state/#392-\u63cf\u753b\u8272\u3092\u52a0\u7b97\u3059\u308b","title":"39.2 \u63cf\u753b\u8272\u3092\u52a0\u7b97\u3059\u308b","text":"<p>\u753b\u50cf\u3084\u56f3\u5f62\u3092\u63cf\u304f\u3068\u304d\u306b\u3001\u672c\u6765\u306e\u8272\u306b RGBA \u6210\u5206\u3092\u52a0\u7b97\u3057\u3066\u63cf\u753b\u3059\u308b\u306b\u306f\u3001<code>ScopedColorAdd2D</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u3001\u52a0\u7b97\u3057\u305f\u3044\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30b3\u30fc\u30d7\u304c\u6709\u52b9\u306a\u9593\u3001\u63cf\u753b\u306e RGBA \u5024\u304c\u52a0\u7b97\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture textureWindmill{ U\"example/windmill.png\" };\nconst Texture textureSiv3DKun{ U\"example/siv3d-kun.png\" };\nColorF color{ 0.0, 0.0, 0.0, 0.0 };\nwhile (System::Update())\n{\n{\n// \u63cf\u753b\u6642\u306b\u8272\u3092\u52a0\u7b97\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\nconst ScopedColorAdd2D colorAdd{ color };\ntextureWindmill.draw(40, 40);\ntextureSiv3DKun.draw(400, 100);\n}\nSimpleGUI::Slider(U\"R\", color.r, Vec2{ 620, 40 }, 40);\nSimpleGUI::Slider(U\"G\", color.g, Vec2{ 620, 80 }, 40);\nSimpleGUI::Slider(U\"B\", color.b, Vec2{ 620, 120 }, 40);\n}\n}\n</code></pre>"},{"location":"tutorial3/2d-render-state/#393-\u63cf\u753b\u8272\u3092\u4e57\u7b97\u3059\u308b","title":"39.3 \u63cf\u753b\u8272\u3092\u4e57\u7b97\u3059\u308b","text":"<p>\u753b\u50cf\u3084\u56f3\u5f62\u3092\u63cf\u304f\u3068\u304d\u306b\u3001\u672c\u6765\u306e\u8272\u306b RGBA \u6210\u5206\u3092\u4e57\u7b97\u3057\u3066\u63cf\u753b\u3059\u308b\u306b\u306f\u3001<code>ScopedColorMul2D</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u3001\u4e57\u7b97\u3057\u305f\u3044\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30b3\u30fc\u30d7\u304c\u6709\u52b9\u306a\u9593\u3001\u63cf\u753b\u306e RGBA \u5024\u304c\u4e57\u7b97\u3055\u308c\u307e\u3059\u3002</p> <p><code>Texture</code> \u306e <code>.draw()</code> \u306b\u8272\u3092\u6e21\u3059\u3053\u3068\u3067\u4e57\u7b97\u306e\u8272\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff08\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 25.9 \u53c2\u7167\uff09\u3002<code>ScopedColorMul2D</code> \u306f\u305d\u306e\u8a2d\u5b9a\u3092\u4e00\u62ec\u3057\u3066\u884c\u3048\u308b\u3082\u306e\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture textureWindmill{ U\"example/windmill.png\" };\nconst Texture textureSiv3DKun{ U\"example/siv3d-kun.png\" };\nColorF color{ 1.0, 1.0, 1.0, 1.0 };\nwhile (System::Update())\n{\n{\n// \u63cf\u753b\u6642\u306b\u8272\u3092\u4e57\u7b97\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\nconst ScopedColorMul2D colorMul{ color };\ntextureWindmill.draw(40, 40);\ntextureSiv3DKun.draw(400, 100);\n}\nSimpleGUI::Slider(U\"R\", color.r, Vec2{ 620, 40 }, 40);\nSimpleGUI::Slider(U\"G\", color.g, Vec2{ 620, 80 }, 40);\nSimpleGUI::Slider(U\"B\", color.b, Vec2{ 620, 120 }, 40);\nSimpleGUI::Slider(U\"A\", color.a, Vec2{ 620, 160 }, 40);\n}\n}\n</code></pre>"},{"location":"tutorial3/2d-render-state/#394-\u30c6\u30af\u30b9\u30c1\u30e3\u62e1\u5927\u7e2e\u5c0f\u6642\u306e\u30d5\u30a3\u30eb\u30bf\u3092\u5909\u3048\u308b","title":"39.4 \u30c6\u30af\u30b9\u30c1\u30e3\u62e1\u5927\u7e2e\u5c0f\u6642\u306e\u30d5\u30a3\u30eb\u30bf\u3092\u5909\u3048\u308b","text":"<p>\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u62e1\u5927\u7e2e\u5c0f\u3057\u3066\u63cf\u753b\u3059\u308b\u969b\u306b\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30d0\u30a4\u30ea\u30cb\u30a2\u88dc\u9593\u306b\u3088\u3063\u3066\u8272\u304c\u88dc\u9593\u3055\u308c\u307e\u3059\u3002\u30c9\u30c3\u30c8\u611f\u3092\u4fdd\u3063\u305f\u307e\u307e\u62e1\u5927\u3057\u305f\u3044\u3068\u304d\u306b\u306f\u30b5\u30f3\u30d7\u30e9\u30fc\u30b9\u30c6\u30fc\u30c8 <code>SamplerState::ClampNearest</code> \u3092 <code>ScopedRenderStates2D</code> \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Texture texture{ U\"\ud83d\udc08\"_emoji };\nbool bilinear = true;\ndouble scale = 1.0;\nwhile (System::Update())\n{\nif (bilinear)\n{\n// \u30d0\u30a4\u30ea\u30cb\u30a2\u88dc\u9593\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09\ntexture.scaled(scale).drawAt(Scene::Center());\n}\nelse\n{\n// \u6700\u8fd1\u508d\u88dc\u9593\nconst ScopedRenderStates2D sampler{ SamplerState::ClampNearest };\ntexture.scaled(scale).drawAt(Scene::Center());\n}\nSimpleGUI::Slider(scale, 0.5, 12.0, Vec2{ 40, 40 }, 200);\nSimpleGUI::CheckBox(bilinear, U\"Bilinear\", Vec2{ 40, 80 });\n}\n}\n</code></pre>"},{"location":"tutorial3/2d-render-state/#395-\u30ef\u30a4\u30e4\u30d5\u30ec\u30fc\u30e0\u30e2\u30fc\u30c9\u3067\u63cf\u753b\u3059\u308b","title":"39.5 \u30ef\u30a4\u30e4\u30d5\u30ec\u30fc\u30e0\u30e2\u30fc\u30c9\u3067\u63cf\u753b\u3059\u308b","text":"<p><code>ScopedRenderStates2D</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b <code>RasterizerState::WireframeCullNone</code> \u3092\u6e21\u3059\u3068\u3001\u56f3\u5f62\u3084\u753b\u50cf\u3092\u69cb\u6210\u3059\u308b\u4e09\u89d2\u5f62\u306e\u30ef\u30a4\u30e4\u30d5\u30ec\u30fc\u30e0\u306e\u307f\u304c\u63cf\u753b\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u30ef\u30a4\u30e4\u30d5\u30ec\u30fc\u30e0\u30e2\u30fc\u30c9\u306f Web \u7248\u3067\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Texture textureWindmill{ U\"example/windmill.png\" };\nwhile (System::Update())\n{\n{\n// \u30ef\u30a4\u30e4\u30d5\u30ec\u30fc\u30e0\u8868\u793a\u30e2\u30fc\u30c9\u306b\u8a2d\u5b9a\u3059\u308b\nconst ScopedRenderStates2D rasterizer{ RasterizerState::WireframeCullNone };\ntextureWindmill.draw(40, 40);\nCircle{ Scene::Center(), 100 }.draw();\nShape2D::Star(100, Vec2{ 160, 400 }).draw(Palette::Yellow);\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/2d-render-state/#396-\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u304f\u308a\u8fd4\u3057\u3066\u63cf\u753b\u3059\u308b","title":"39.6 \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u304f\u308a\u8fd4\u3057\u3066\u63cf\u753b\u3059\u308b","text":"<p><code>ScopedRenderStates2D</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u30b5\u30f3\u30d7\u30e9\u30fc\u30b9\u30c6\u30fc\u30c8\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u63cf\u753b\u6642\u306b UV \u5ea7\u6a19\u304c 0.0\uff5e1.0 \u306e\u7bc4\u56f2\u3092\u8d85\u3048\u305f\u3068\u304d\u306e\u51e6\u7406\u306e\u65b9\u6cd5\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u307e\u3059\u3002</p> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001UV \u5ea7\u6a19\u304c 0.0\uff5e1.0 \u306e\u7bc4\u56f2\u3092\u8d85\u3048\u305f\u3068\u304d\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u7aef\u306e\u8272\u304c\u305d\u306e\u307e\u307e\u63cf\u753b\u3055\u308c\u307e\u3059\u3002\u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30c9\u30ec\u30b9\u30e2\u30fc\u30c9\u304c Repeat \u306e\u3068\u304d\u306f\u3001UV \u5ea7\u6a19\u304c 0.0\uff5e1.0 \u306e\u7bc4\u56f2\u3092\u8d85\u3048\u305f\u3068\u304d\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u7aef\u306e\u8272\u304c\u53cd\u5bfe\u5074\u306e\u7aef\u304b\u3089\u7d9a\u304f\u3088\u3046\u306b\u63cf\u753b\u3055\u308c\u307e\u3059\u3002</p> <p><code>Texture::mapped()</code> \u306b\u3064\u3044\u3066\u306f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 25.18 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p></p> <pre><code>#include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture tree{ U\"\ud83c\udf32\"_emoji };\nwhile (System::Update())\n{\n{\n// UV \u5ea7\u6a19\u304c 0.0\uff5e1.0 \u306e\u7bc4\u56f2\u3092\u8d85\u3048\u305f\u3068\u304d\u3001\u304f\u308a\u8fd4\u3057\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\nconst ScopedRenderStates2D sampler{ SamplerState::RepeatLinear };\n// \u30b7\u30fc\u30f3\u306e\u30b5\u30a4\u30ba\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u63cf\u753b\u3059\u308b\ntree.mapped(Scene::Size()).draw();\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/2d-render-state/#397-\u30b7\u30b6\u30fc\u77e9\u5f62\u3092\u8a2d\u5b9a\u3059\u308b","title":"39.7 \u30b7\u30b6\u30fc\u77e9\u5f62\u3092\u8a2d\u5b9a\u3059\u308b","text":"<p>\u30b7\u30b6\u30fc\u77e9\u5f62\u3092\u4f7f\u3046\u3068\u3001\u6307\u5b9a\u3057\u305f\u9577\u65b9\u5f62\u9818\u57df\u4ee5\u5916\u3078\u306e\u63cf\u753b\u3092\u884c\u308f\u306a\u3044\u3088\u3046\u306b\u3067\u304d\u307e\u3059\u3002</p> <p><code>Graphics2D::SetScissorRect()</code> \u3067\u30b7\u30b6\u30fc\u77e9\u5f62\u306e\u9818\u57df\u3092\u767b\u9332\u3057\u3001<code>.scissorEnable</code> \u3092 <code>true</code> \u306b\u3057\u305f <code>RasterizerState</code> \u3092 <code>ScopedRenderStates2D</code> \u3067\u9069\u7528\u3059\u308b\u3068\u3001\u30b7\u30b6\u30fc\u77e9\u5f62\u304c\u6709\u52b9\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code>#include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture textureWindmill{ U\"example/windmill.png\" };\nconst Texture textureSiv3DKun{ U\"example/siv3d-kun.png\" };\n// \u30b7\u30b6\u30fc\u77e9\u5f62\u306e\u7bc4\u56f2\u3092\u767b\u9332\u3059\u308b\nGraphics2D::SetScissorRect(Rect{ 100, 100, 300, 200 });\nwhile (System::Update())\n{\n{\nRasterizerState rs = RasterizerState::Default2D;\nrs.scissorEnable = true;\n// \u30b7\u30b6\u30fc\u77e9\u5f62\u3092\u6709\u52b9\u5316\u3059\u308b\nconst ScopedRenderStates2D rasterizer{ rs };\ntextureWindmill.draw(40, 40);\ntextureSiv3DKun.draw(160, 100);\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/2d-render-state/#398-\u30d3\u30e5\u30fc\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a\u3059\u308b","title":"39.8 \u30d3\u30e5\u30fc\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a\u3059\u308b","text":"<p><code>ScopedViewport2D</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001\u30b7\u30fc\u30f3\u5185\u306b\u4eee\u60f3\u306e\u30b7\u30fc\u30f3\u3092\u4f5c\u308a\u3001\u65b0\u3057\u3044\u63cf\u753b\u9818\u57df\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\u63cf\u753b\u6642\u306b\u306f\u30d3\u30e5\u30fc\u30dd\u30fc\u30c8\u306e\u9577\u65b9\u5f62\u306e\u5de6\u4e0a\u304c (0, 0) \u306e\u63cf\u753b\u5ea7\u6a19\u306b\u306a\u308a\u3001\u9577\u65b9\u5f62\u306e\u7bc4\u56f2\u5916\u306b\u306f\u307f\u51fa\u305f\u3082\u306e\u306f\u63cf\u753b\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p> <p>\u30d3\u30e5\u30fc\u30dd\u30fc\u30c8\u306f\u63cf\u753b\u306e\u5ea7\u6a19\u306b\u3057\u304b\u5f71\u97ff\u3092\u53ca\u307c\u3057\u307e\u305b\u3093\u3002\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u5ea7\u6a19\u3082\u540c\u69d8\u306b\u79fb\u52d5\u3055\u305b\u305f\u3044\u5834\u5408\u306b\u306f\u3001\u5f8c\u8ff0\u3059\u308b <code>Transformer2D</code> \u3068\u7d44\u307f\u5408\u308f\u305b\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture cat{ U\"\ud83d\udc08\"_emoji };\nwhile (System::Update())\n{\n{\n// \u30d3\u30e5\u30fc\u30dd\u30fc\u30c8\u3092\u9069\u7528\u3059\u308b\nconst ScopedViewport2D viewport{ 400, 300, 400, 300 };\nCircle{ 200, 150, 200 }.draw();\ncat.draw(0, 0);\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/2d-render-state/#399-\u5ea7\u6a19\u5909\u63db\u884c\u5217\u3092\u9069\u7528\u3059\u308b","title":"39.9 \u5ea7\u6a19\u5909\u63db\u884c\u5217\u3092\u9069\u7528\u3059\u308b","text":"<p><code>Transformer2D</code> \u306f\u3001\u63cf\u753b\u3084\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u5ea7\u6a19\u306b\u5bfe\u3057\u3066\u3001\u56de\u8ee2\u30fb\u62e1\u5927\u7e2e\u5c0f\u3001\u5ea7\u6a19\u79fb\u52d5\u306a\u3069\u306e\u5ea7\u6a19\u5909\u63db\uff08\u30a2\u30d5\u30a3\u30f3\u5909\u63db\uff09\u3092\u9069\u7528\u3067\u304d\u308b\u3001\u975e\u5e38\u306b\u5f37\u529b\u3067\u4fbf\u5229\u306a\u6a5f\u80fd\u3067\u3059\u3002</p> <p>\u5ea7\u6a19\u5909\u63db\u884c\u5217\u3092 <code>Mat3x2</code> \u306b\u3088\u3063\u3066\u5b9a\u7fa9\u3057\u3001<code>Transformer2D</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30b3\u30fc\u30d7\u304c\u6709\u52b9\u306a\u9593\u3001\u305d\u306e\u884c\u5217\u306b\u3088\u308b\u5ea7\u6a19\u5909\u63db\u304c\u63cf\u753b\u3084\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture textureWindmill{ U\"example/windmill.png\", TextureDesc::Mipped };\nconst Texture textureSiv3DKun{ U\"example/siv3d-kun.png\", TextureDesc::Mipped };\nconst Circle circle{ 200, 400, 60 };\nsize_t index = 0;\nwhile (System::Update())\n{\n// \u4f55\u3082\u3057\u306a\u3044\u884c\u5217\nMat3x2 mat = Mat3x2::Identity();\nif (index == 0)\n{\n}\nelse if (index == 1)\n{\n// \u30b7\u30fc\u30f3\u306e\u4e2d\u5fc3\u3092\u57fa\u6e96\u306b 1.5 \u500d\u62e1\u5927\u3059\u308b\u884c\u5217\nmat = Mat3x2::Scale(1.5, Scene::Center());\n}\nelse if (index == 2)\n{\n// (50, 50) \u4e26\u884c\u79fb\u52d5\u3059\u308b\u884c\u5217\nmat = Mat3x2::Translate(50, 50);\n}\nelse if (index == 3)\n{\n// \u30b7\u30fc\u30f3\u306e\u4e2d\u5fc3\u3092\u56de\u8ee2\u306e\u8ef8\u306b\u3057\u3066 30\u00b0 \u56de\u8ee2\u3059\u308b\u884c\u5217\nmat = Mat3x2::Rotate(30_deg, Scene::Center());\n}\nelse if (index == 4)\n{\n// \u30b7\u30fc\u30f3\u306e\u4e2d\u5fc3\u3092\u56de\u8ee2\u306e\u8ef8\u306b\u3057\u3066\u5f90\u3005\u306b\u56de\u8ee2\u3057\u306a\u304c\u3089\u62e1\u5927\u3059\u308b\u884c\u5217\nmat = Mat3x2::Rotate(Scene::Time() * 5_deg, Scene::Center())\n.scaled(0.5 + Scene::Time() * 0.03, Scene::Center());\n}\n{\n// \u5ea7\u6a19\u5909\u63db\u884c\u5217\u3092\u9069\u7528\u3059\u308b\uff08\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306b\u3082\u9069\u7528\uff09\nconst Transformer2D transformer{ mat, TransformCursor::Yes };\ntextureWindmill.draw(0, 0);\ntextureSiv3DKun.draw(360, 100);\ncircle.draw(circle.mouseOver() ? Palette::Red : Palette::Yellow);\n}\nSimpleGUI::RadioButtons(index, { U\"Identity\", U\"Scale\", U\"Translate\", U\"Rotate\", U\"Rotate * Scale\" }, Vec2{ 600, 40 });\n}\n}\n</code></pre>"},{"location":"tutorial3/2d-render-state/#3910-\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3060\u3051\u306b\u5ea7\u6a19\u5909\u63db\u884c\u5217\u3092\u9069\u7528\u3059\u308b","title":"39.10 \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3060\u3051\u306b\u5ea7\u6a19\u5909\u63db\u884c\u5217\u3092\u9069\u7528\u3059\u308b","text":"<p>\u30d3\u30e5\u30fc\u30dd\u30fc\u30c8\u3092\u4f7f\u3063\u3066\u30df\u30cb\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u4f5c\u6210\u3057\u305f\u969b\u306a\u3069\u3001\u63cf\u753b\u306e\u5ea7\u6a19\u5909\u63db\u306f\u4e0d\u8981\u3067\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u5ea7\u6a19\u5909\u63db\u3060\u3051\u884c\u3044\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u3068\u304d\u306f\u3001<code>Transformer2D</code> \u306e\u7b2c 1 \u5f15\u6570\u306b <code>Mat3x2:Identity()</code> \u3092\u3001\u7b2c 2 \u5f15\u6570\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u7528\u306e\u5ea7\u6a19\u5909\u63db\u884c\u5217\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nwhile (System::Update())\n{\n{\nconst ScopedViewport2D viewport{ 400, 300, 400, 300 };\n// \u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u5ea7\u6a19\u3060\u3051 (400, 300) \u4e26\u884c\u79fb\u52d5\u3055\u305b\u308b\nconst Transformer2D transformer{ Mat3x2::Identity(), Mat3x2::Translate(400, 300) };\nCircle{ 200, 150, 200 }.draw();\nCircle{ Cursor::PosF(), 40 }.draw(Palette::Orange);\nif (SimpleGUI::Button(U\"Button\", Vec2{ 20,20 }))\n{\nPrint &lt;&lt; U\"Pushed\";\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/2d-render-state/#3911-\u5ea7\u6a19\u5909\u63db\u884c\u5217\u3092\u91cd\u306d\u3066\u9069\u7528\u3059\u308b","title":"39.11 \u5ea7\u6a19\u5909\u63db\u884c\u5217\u3092\u91cd\u306d\u3066\u9069\u7528\u3059\u308b","text":"<p><code>Transformer2D</code> \u306e\u52b9\u679c\u304c\u9069\u7528\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306b\u65b0\u3057\u3044 <code>Transformer2D</code> \u3092\u4f5c\u6210\u3059\u308b\u3068\u3001\u5ea7\u6a19\u5909\u63db\u306e\u52b9\u679c\u304c\u4e57\u7b97\u3055\u308c\u307e\u3059\u3002\u6b21\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u884c\u5217\u306e\u4e57\u7b97\u306b\u3088\u3063\u3066\u8907\u96d1\u306a\u52d5\u304d\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nwhile (System::Update())\n{\nconst double t = (Scene::Time() * -30_deg);\n{\nconst Transformer2D t0{ Mat3x2::Translate(Scene::Center()) };\nCircle{ 0, 0, 40 }.draw(Palette::Orange);\nCircle{ 0, 0, 160 }.drawFrame(2);\n{\nconst Transformer2D t1{ Mat3x2::Translate(160, 0).rotated(t) };\nCircle{ 0, 0, 20 }.draw(Palette::Skyblue);\nCircle{ 0, 0, 40 }.drawFrame(2);\n{\nconst Transformer2D t2{ Mat3x2::Translate(40, 0).rotated(t * 4) };\nCircle{ 0, 0, 10 }.draw(Palette::Yellow);\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/2d-render-state/#3912-2d-\u30ab\u30e1\u30e9","title":"39.12 2D \u30ab\u30e1\u30e9","text":"<p><code>Camera2D</code> \u3092\u4f7f\u3046\u3068\u3001\u30de\u30a6\u30b9\u3084\u30ad\u30fc\u30dc\u30fc\u30c9\u3092\u4f7f\u3063\u305f\u76f4\u611f\u7684\u306a\u64cd\u4f5c\u3067 <code>Transformer2D</code> \u3092\u4f5c\u6210\u3001\u66f4\u65b0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <p><code>Camera2D::update()</code> \u3067\u306f W / A / S / D \u30ad\u30fc\u3067\u4e0a\u4e0b\u5de6\u53f3\u79fb\u52d5\u3001Up / Down \u30ad\u30fc\u3067\u62e1\u5927\u7e2e\u5c0f\u3001\u30de\u30a6\u30b9\u53f3\u30af\u30ea\u30c3\u30af\u3067\u81ea\u7531\u79fb\u52d5\u3001\u30de\u30a6\u30b9\u30db\u30a4\u30fc\u30eb\u3067\u62e1\u5927\u7e2e\u5c0f\u306e\u64cd\u4f5c\u3092\u884c\u3044\u307e\u3059\u3002\u30ad\u30fc\u64cd\u4f5c\u3092\u7121\u52b9\u306b\u3057\u305f\u3044\u5834\u5408\u306f <code>Camera2D</code> \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b <code>CameraControl::Mouse</code> \u3092\u6e21\u3057\u307e\u3059\u3002\u30ad\u30fc\u64cd\u4f5c\u3082\u30de\u30a6\u30b9\u64cd\u4f5c\u3082\u7121\u52b9\u306b\u3057\u305f\u3044\u5834\u5408\u306f <code>CameraControl::None_</code> \u3092\u6e21\u3057\u307e\u3059\u3002</p> <p>\u30ab\u30e1\u30e9\u306e\u8a73\u7d30\u306a\u6319\u52d5\u306f <code>Camera2DParameters</code> \u306b\u3088\u3063\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u307e\u3059\u3002</p> <p><code>Camera2D</code> \u306e\u4e3b\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002</p> \u95a2\u6570 \u8aac\u660e <code>.createTransformer()</code> \u73fe\u5728\u306e\u30ab\u30e1\u30e9\u306e\u8a2d\u5b9a\u304b\u3089 <code>Transformer2D</code> \u3092\u4f5c\u6210\u3059\u308b <code>.setTargetCenter(Vec2)</code> \u30ab\u30e1\u30e9\u306e\u4e2d\u5fc3\u5ea7\u6a19\u306e\u76ee\u6a19\u3092\u8a2d\u5b9a\u3059\u308b <code>.setTargetScale(double)</code> \u30ab\u30e1\u30e9\u306e\u30ba\u30fc\u30e0\u30a2\u30c3\u30d7\u500d\u7387\u306e\u76ee\u6a19\u3092\u8a2d\u5b9a\u3059\u308b <code>.jumpTo(Vec2, double)</code> \u30ab\u30e1\u30e9\u306e\u4e2d\u5fc3\u5ea7\u6a19\u304a\u3088\u3073\u30ba\u30fc\u30e0\u30a2\u30c3\u30d7\u500d\u7387\u3092\u5373\u5ea7\u306b\u5909\u66f4\u3059\u308b <code>.update()</code> \u30ab\u30e1\u30e9\u306e\u64cd\u4f5c\u3084\u3001\u76ee\u6a19\u5024\u3078\u306e\u79fb\u52d5\u3092\u884c\u3046 <code>.draw(const ColorF&amp;)</code> \u30de\u30a6\u30b9\u3067\u306e\u30ab\u30e1\u30e9\u64cd\u4f5c\u3092\u88dc\u52a9\u3059\u308b\u77e2\u5370 UI \u3092\u8868\u793a\u3059\u308b <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture cat{ U\"\ud83d\udc08\"_emoji };\n// 2D \u30ab\u30e1\u30e9\n// \u521d\u671f\u8a2d\u5b9a: \u4e2d\u5fc3 (0, 0), \u30ba\u30fc\u30e0\u30a2\u30c3\u30d7\u500d\u7387 1.0\nCamera2D camera{ Vec2{ 0, 0 }, 1.0 };\n//Camera2D camera{ Vec2{ 0, 0 }, 1.0, CameraControl::Mouse }; // \u30de\u30a6\u30b9\u64cd\u4f5c\u306e\u307f\u306e\u5834\u5408\nwhile (System::Update())\n{\n// 2D \u30ab\u30e1\u30e9\u3092\u66f4\u65b0\ncamera.update();\n{\n// 2D \u30ab\u30e1\u30e9\u306e\u8a2d\u5b9a\u304b\u3089 Transformer2D \u3092\u4f5c\u6210\u3059\u308b\nconst auto t = camera.createTransformer();\nfor (int32 i = 0; i &lt; 8; ++i)\n{\nCircle{ 0, 0, (50 + i * 50) }.drawFrame(2);\n}\ncat.drawAt(0, 0);\nShape2D::Star(50, Vec2{ 200, 200 }).draw(Palette::Yellow);\n}\nif (SimpleGUI::Button(U\"Jump to center\", Vec2{ 20, 20 }))\n{\n// \u4e2d\u5fc3\u3068\u30ba\u30fc\u30e0\u30a2\u30c3\u30d7\u500d\u7387\u3092\u5373\u5ea7\u306b\u5909\u66f4\u3059\u308b\ncamera.jumpTo(Vec2{ 0, 0 }, 1.0);\n}\nif (SimpleGUI::Button(U\"Move to center\", Vec2{ 20, 60 }))\n{\n// \u4e2d\u5fc3\u3068\u30ba\u30fc\u30e0\u30a2\u30c3\u30d7\u500d\u7387\u306e\u76ee\u6a19\u5024\u3092\u30bb\u30c3\u30c8\u3057\u3066\u3001\u6642\u9593\u3092\u304b\u3051\u3066\u5909\u66f4\u3059\u308b\ncamera.setTargetCenter(Vec2{ 0, 0 });\ncamera.setTargetScale(1.0);\n}\n// 2D \u30ab\u30e1\u30e9\u64cd\u4f5c\u306e UI \u3092\u8868\u793a\u3059\u308b\ncamera.draw(Palette::Orange);\n}\n}\n</code></pre>"},{"location":"tutorial3/2d-render-state/#3913-\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5236\u5fa1\u3059\u308b-2d-\u30ab\u30e1\u30e9","title":"39.13 \u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5236\u5fa1\u3059\u308b 2D \u30ab\u30e1\u30e9","text":"<p><code>CameraControl::None_</code> \u3092\u8a2d\u5b9a\u3057\u305f 2D \u30ab\u30e1\u30e9\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5236\u5fa1\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });\nconst Texture playerTexture{ U\"\ud83d\ude42\"_emoji };\nconst Texture treeTexture{ U\"\ud83c\udf33\"_emoji };\n// \u30d7\u30ec\u30a4\u30e4\u30fc\u306e X \u5ea7\u6a19\ndouble playerPosX = 400;\n// \u6728\u306e X \u5ea7\u6a19\nArray&lt;int32&gt; trees = { 100, 300, 500, 700, 900 };\n// (400, 300) \u3092\u4e2d\u5fc3\u3068\u3059\u308b, \u62e1\u5927\u7387 1.0 \u500d\u306e, (\u30de\u30a6\u30b9\u3084\u30ad\u30fc\u3067\u306f\u306a\u304f\uff09\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u52d5\u304b\u3059\u30ab\u30e1\u30e9\nCamera2D camera{ Scene::Center(), 1.0, CameraControl::None_ };\nwhile (System::Update())\n{\nconst double deltaTime = Scene::DeltaTime();\n// \u30ab\u30e1\u30e9\u306e X \u5ea7\u6a19\nconst double cameraPosX = camera.getCenter().x;\nClearPrint();\nPrint &lt;&lt; U\"playerPosX: {:.1f}\"_fmt(playerPosX);\nPrint &lt;&lt; U\"cameraPosX: {:.1f}\"_fmt(cameraPosX);\n// \u5de6\u53f3\u30ad\u30fc\u3067\u79fb\u52d5\nif (KeyLeft.pressed())\n{\nplayerPosX -= (200 * deltaTime);\n}\nif (KeyRight.pressed())\n{\nplayerPosX += (200 * deltaTime);\n}\n// \u30ab\u30e1\u30e9\u306e\u76ee\u6a19\u4e2d\u5fc3\u5ea7\u6a19\u3092\u8a2d\u5b9a\u3059\u308b\ncamera.setTargetCenter(Vec2{ playerPosX, 300 });\n// \u30ab\u30e1\u30e9\u3092\u66f4\u65b0\u3059\u308b\ncamera.update();\n{\n// \u30ab\u30e1\u30e9\u306b\u3088\u308b\u5ea7\u6a19\u5909\u63db\u3092\u9069\u7528\u3059\u308b\nconst auto tr = camera.createTransformer();\nfor (const auto&amp; tree : trees)\n{\n// \u30ab\u30e1\u30e9\u306e\u4e2d\u5fc3 X \u5ea7\u6a19\u3068\u5dee\u304c 400 \u30d4\u30af\u30bb\u30eb\u306e\u7269\u3060\u3051\u3092\u63cf\u304f\uff08\u753b\u9762\u5916\u306e\u3082\u306e\u3092\u63cf\u304b\u306a\u3044\uff09\nif (Abs(cameraPosX - tree) &lt; 400.0)\n{\ntreeTexture.drawAt(tree, 400);\n}\n}\nplayerTexture.drawAt(playerPosX, 400);\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/2d-render-state/#3914-\u30b2\u30fc\u30e0\u3084\u30a2\u30d7\u30ea\u306e\u9ad8\u89e3\u50cf\u5ea6\u9ad8\u7cbe\u7d30\u5316","title":"39.14 \u30b2\u30fc\u30e0\u3084\u30a2\u30d7\u30ea\u306e\u9ad8\u89e3\u50cf\u5ea6\u30fb\u9ad8\u7cbe\u7d30\u5316","text":"<p>800x600 \u306a\u3069\u306e\u4f4e\u3044\u30b7\u30fc\u30f3\u89e3\u50cf\u5ea6\u3067\u958b\u767a\u3057\u305f\u30b2\u30fc\u30e0\u3084\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3001\u7c21\u5358\u306b\u9ad8\u89e3\u50cf\u5ea6\u30fb\u9ad8\u7cbe\u7d30\u5316\u3059\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002</p> <p>\u307e\u305a\u3001\u5927\u304d\u306a\u89e3\u50cf\u5ea6\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u30b7\u30fc\u30f3\u3092\u63cf\u753b\u3059\u308b\u305f\u3081\u306b\u3001<code>Transformer2D</code> \u3092\u7528\u3044\u3066\u63cf\u753b\u3084\u30de\u30a6\u30b9\u5ea7\u6a19\u3092\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u30fb\u79fb\u52d5\u3067\u304d\u307e\u3059\u3002\u3055\u3089\u306b\u3001OS \u8a2d\u5b9a\u306e\u62e1\u5927\u7e2e\u5c0f\uff08150% \u306a\u3069\uff09\u3092\u7121\u8996\u3057\u3066\u30b7\u30fc\u30f3\u3092\u30c9\u30c3\u30c8\u30d0\u30a4\u30c9\u30c3\u30c8\u3067\u8868\u793a\u3059\u308b\u305f\u3081\u306b\u3001<code>ResizeMode::Actual</code> \u3092\u8a2d\u5b9a\u3057\u3066\u30b7\u30fc\u30f3\u3092\u9ad8\u7cbe\u7d30\u5316\u3067\u304d\u307e\u3059\uff08\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 32.1 \u53c2\u7167\uff09\u3002</p> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e <code>ResizeMode::Virtual</code> \u3067\u306f\u3001\u4f8b\u3048\u3070 4K \u89e3\u50cf\u5ea6\u3001150% \u62e1\u5927\u306e\u30ce\u30fc\u30c8 PC \u3067\u306f\u3001\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u6642\u306e\u30b7\u30fc\u30f3\u89e3\u50cf\u5ea6\u304c 2560x1440 \u3067\u3059\u304c\u3001<code>ResizeMode::Actual</code> \u3067\u306f 3840x2160 \u306b\u306a\u308a\u307e\u3059\u3002\u30b7\u30fc\u30f3\u306e\u89e3\u50cf\u5ea6\u304c\u5927\u304d\u3044\u3068\u63cf\u753b\u8ca0\u8377\u304c\u5927\u304d\u304f\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>\u4e0b\u8a18\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001800x600 \u306e\u30b7\u30fc\u30f3\u89e3\u50cf\u5ea6\u3092\u60f3\u5b9a\u3057\u3066\u958b\u767a\u3055\u308c\u305f\u30b2\u30fc\u30e0\u306e\u5165\u529b\u3084\u63cf\u753b\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u3001\u500b\u3005\u306e\u63cf\u753b\u3084\u5165\u529b\u306e\u30b3\u30fc\u30c9\u306b\u5909\u66f4\u3092\u52a0\u3048\u305a\u306b\u3001\u5bfe\u5fdc\u89e3\u50cf\u5ea6\u3092 800x600 \u3088\u308a\u3082\u5927\u304d\u304f\u3057\u3066\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30b7\u30fc\u30f3\u3092\u4f55\u500d\u3059\u308c\u3070\u3088\u3044\u304b\u3092\u8fd4\u3059\u95a2\u6570\ndouble CalculateScale(const Vec2&amp; baseSize, const Vec2&amp; currentSize)\n{\nreturn Min((currentSize.x / baseSize.x), (currentSize.y / baseSize.y));\n}\n// \u753b\u9762\u306e\u4e2d\u592e\u306b\u914d\u7f6e\u3059\u308b\u305f\u3081\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u3092\u8fd4\u3059\u95a2\u6570\nVec2 CalculateOffset(const Vec2&amp; baseSize, const Vec2&amp; currentSize)\n{\nreturn ((currentSize - baseSize * CalculateScale(baseSize, currentSize)) / 2.0);\n}\nvoid Game(const Size&amp; baseSize, const Font&amp; font)\n{\nconst Circle circle{ 600, 260, 100 };\nRect{ baseSize }.draw(ColorF{ 0.15, 0.6, 0.4 });\nRect{ 40, 100, 400, 400 }.rounded(15).drawFrame(5);\nfont(U\"Hello, Siv3D\").drawAt(40, Vec2{ 600, 120 });\ncircle.draw(circle.mouseOver() ? ColorF{ 1.0 } : ColorF{ 0.75 });\nfor (int32 i = 0; i &lt; 8; ++i)\n{\nfont(i + 1).drawAt(20, Vec2{ 20, (125 + 50 * i) }, ColorF{ 0.25 });\nfont(char32{ U'a' + i }).drawAt(20, Vec2{ (65 + 50 * i), 80 }, ColorF{ 0.25 });\n}\n}\nvoid Main()\n{\n// \u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30b7\u30fc\u30f3\u89e3\u50cf\u5ea6\nconst Size BaseSceneSize{ 800, 600 };\nScene::Resize(BaseSceneSize);\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nconstexpr Rect MenuRect{ 0, 0, 700, 32 };\nconstexpr Rect WindowModeButton{ 300, 0, 200, 32 };\nconstexpr Rect DotByDotButton{ 500, 0, 200, 32 };\nwhile (System::Update())\n{\n// \u30b7\u30fc\u30f3\u306e\u62e1\u5927\u500d\u7387\u3092\u8a08\u7b97\u3059\u308b\nconst double scale = CalculateScale(BaseSceneSize, Scene::Size());\nconst Vec2 offset = CalculateOffset(BaseSceneSize, Scene::Size());\nClearPrint();\nPrint &lt;&lt; U\"\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30b7\u30fc\u30f3\u89e3\u50cf\u5ea6: \" &lt;&lt; BaseSceneSize;\nPrint &lt;&lt; U\"\u30b7\u30fc\u30f3\u89e3\u50cf\u5ea6: \" &lt;&lt; Scene::Size();\nPrint &lt;&lt; U\"\u30b7\u30fc\u30f3\u306e\u62e1\u5927\u500d\u7387 = \" &lt;&lt; scale;\nPrint &lt;&lt; U\"\u30aa\u30d5\u30bb\u30c3\u30c8 = \" &lt;&lt; offset;\n{\n// draw() \u3068\u30de\u30a6\u30b9\u5ea7\u6a19\u306b\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u9069\u7528\nconst Transformer2D screenScaling{ Mat3x2::Scale(scale).translated(offset), TransformCursor::Yes };\nGame(BaseSceneSize, font);\n{\nMenuRect.draw(ColorF{ 0.75 });\n// \u30a6\u30a3\u30f3\u30c9\u30a6 \u21d4 \u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u30dc\u30bf\u30f3\n{\nif (WindowModeButton.mouseOver())\n{\nWindowModeButton.draw(ColorF{ 0.85 });\nCursor::RequestStyle(CursorStyle::Hand);\nif (WindowModeButton.leftClicked())\n{\n// \u30a6\u30a3\u30f3\u30c9\u30a6 \u21d4 \u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u3092\u5207\u308a\u66ff\u3048\u308b\nWindow::SetFullscreen(!Window::GetState().fullscreen);\n}\n}\nWindowModeButton.drawFrame(2);\nfont(Window::GetState().fullscreen ? U\"\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u3059\u308b\" : U\"\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u3059\u308b\").drawAt(16, WindowModeButton.center(), ColorF{ 0.25 });\n}\n// DotByDot \u30dc\u30bf\u30f3\n{\nif (DotByDotButton.mouseOver())\n{\nDotByDotButton.draw(ColorF{ 0.85 });\nCursor::RequestStyle(CursorStyle::Hand);\nif (DotByDotButton.leftClicked())\n{\nif (Scene::GetResizeMode() == ResizeMode::Virtual)\n{\nScene::SetResizeMode(ResizeMode::Actual);\n}\nelse\n{\nScene::SetResizeMode(ResizeMode::Virtual);\n}\n}\n}\nDotByDotButton.drawFrame(2);\nfont((Scene::GetResizeMode() == ResizeMode::Actual) ? U\"OS \u30b9\u30b1\u30fc\u30eb\u306b\u5408\u308f\u305b\u308b\" : U\"Dot by Dot \u306b\u3059\u308b\").drawAt(16, DotByDotButton.center(), ColorF{ 0.25 });\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/asset/","title":"38. \u30a2\u30bb\u30c3\u30c8\u7ba1\u7406","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u3042\u3089\u3086\u308b\u3068\u3053\u308d\u304b\u3089 <code>Texture</code>, <code>Font</code>, <code>Audio</code> \u306a\u3069\u306e\u30a2\u30bb\u30c3\u30c8\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u6a5f\u80fd\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial3/asset/#381-\u30a2\u30bb\u30c3\u30c8\u7ba1\u7406\u306e\u6982\u8981","title":"38.1 \u30a2\u30bb\u30c3\u30c8\u7ba1\u7406\u306e\u6982\u8981","text":"<p>Siv3D \u306f <code>Texture</code> \u3084 <code>Font</code>, <code>Audio</code> \u306a\u3069\u306e\u30a2\u30bb\u30c3\u30c8\u306e\u30cf\u30f3\u30c9\u30eb\u306b\u540d\u524d\u3092\u3064\u3051\u3001\u305d\u306e\u540d\u524d\u3092\u901a\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u3069\u3053\u304b\u3089\u3067\u3082\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306e\u3088\u3046\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u300c\u30a2\u30bb\u30c3\u30c8\u7ba1\u7406\u300d\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30a2\u30bb\u30c3\u30c8\u7ba1\u7406\u3092\u6271\u3046\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002</p> <ol> <li>\u30a2\u30bb\u30c3\u30c8\u306e\u300c\u767b\u9332 (Register)\u300d</li> <li>\u30a2\u30bb\u30c3\u30c8\u306e\u300c\u30ed\u30fc\u30c9 (Load)\u300d\uff08\u7701\u7565\u53ef\u80fd\uff09</li> <li>\u30a2\u30bb\u30c3\u30c8\u306e\u300c\u4f7f\u7528\u300d</li> <li>\u30a2\u30bb\u30c3\u30c8\u306e\u300c\u30ea\u30ea\u30fc\u30b9 (Release)\u300d\uff08\u7701\u7565\u53ef\u80fd\uff09</li> <li>\u30a2\u30bb\u30c3\u30c8\u306e\u300c\u767b\u9332\u89e3\u9664 (Unregister)\u300d\uff08\u7701\u7565\u53ef\u80fd\uff09</li> </ol>"},{"location":"tutorial3/asset/#\u767b\u9332","title":"\u767b\u9332","text":"<p>\u30a2\u30bb\u30c3\u30c8\u3092\u30a8\u30f3\u30b8\u30f3\u306b\u767b\u9332\u3057\u307e\u3059\u3002\u30a2\u30bb\u30c3\u30c8\u306e\u7a2e\u985e\uff08\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u3042\u308b\u304b\u3001\u30aa\u30fc\u30c7\u30a3\u30aa\u3067\u3042\u308b\u304b\u306a\u3069\uff09\u3092\u95a2\u6570\u3067\u6307\u5b9a\u3057\u3001\u30a2\u30bb\u30c3\u30c8\u306b\u4e00\u610f\u306e\u540d\u524d\u3092\u3064\u3051\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u3084\u30d7\u30ed\u30d1\u30c6\u30a3\u306a\u3069\u306e\u60c5\u5831\u3092\u767b\u9332\u3057\u307e\u3059\u3002</p> <p>\u7279\u306b\u6307\u5b9a\u3057\u306a\u3044\u9650\u308a\u3001\u3053\u306e\u6642\u70b9\u3067\u306f\u30a2\u30bb\u30c3\u30c8\u30c7\u30fc\u30bf\u306f\u69cb\u7bc9\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u767b\u9332\u306b\u3088\u3063\u3066\u30e1\u30e2\u30ea\u306e\u6d88\u8cbb\u91cf\u304c\u5897\u3048\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"tutorial3/asset/#\u30ed\u30fc\u30c9","title":"\u30ed\u30fc\u30c9","text":"<p>\u30a2\u30bb\u30c3\u30c8\u30c7\u30fc\u30bf\u3092\u5b9f\u969b\u306b\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\u30a2\u30bb\u30c3\u30c8\u306e\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30a8\u30f3\u30b8\u30f3\u304c\u8a72\u5f53\u30a2\u30bb\u30c3\u30c8\u306e\u767b\u9332\u6642\u306b\u4e0e\u3048\u3089\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3084\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5f93\u3063\u3066\u3001\u30e1\u30e2\u30ea\u4e0a\u306b\u30a2\u30bb\u30c3\u30c8\u30c7\u30fc\u30bf\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002\u6307\u5b9a\u3055\u308c\u305f\u30a2\u30bb\u30c3\u30c8\u304c\u3059\u3067\u306b\u30ed\u30fc\u30c9\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u4f55\u3082\u3057\u307e\u305b\u3093\u3002</p> <p>\u975e\u540c\u671f\u3067\u30ed\u30fc\u30c9\u3092\u884c\u3046\u30aa\u30d7\u30b7\u30e7\u30f3\u3082\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"tutorial3/asset/#\u4f7f\u7528","title":"\u4f7f\u7528","text":"<p>\u30a2\u30bb\u30c3\u30c8\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u3066\u3001<code>Texture</code> \u3084 <code>Audio</code> \u3092\u53d6\u5f97\u3057\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066\u3001\u524d\u7ae0\u307e\u3067\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u3088\u3046\u306b <code>.draw()</code> \u3057\u305f\u308a\u3001<code>.play()</code> \u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002</p> <p>\u8a72\u5f53\u30a2\u30bb\u30c3\u30c8\u304c\u672a\u30ed\u30fc\u30c9\u3067\u3042\u308b\u5834\u5408\u3001\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u81ea\u52d5\u7684\u306b\u30ed\u30fc\u30c9\u3092\u884c\u3044\u307e\u3059\u3002\u6307\u5b9a\u3055\u308c\u305f\u30a2\u30bb\u30c3\u30c8\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u7a7a\u306e <code>Texture</code> \u3084 <code>Audio</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p>"},{"location":"tutorial3/asset/#\u30ea\u30ea\u30fc\u30b9","title":"\u30ea\u30ea\u30fc\u30b9","text":"<p>\u767b\u9332\u60c5\u5831\u3092\u6b8b\u3057\u305f\u307e\u307e\u3001\u30a2\u30bb\u30c3\u30c8\u30c7\u30fc\u30bf\u3092\u30e1\u30e2\u30ea\u4e0a\u304b\u3089\u89e3\u653e\u3057\u307e\u3059\u3002\u30ea\u30ea\u30fc\u30b9\u5f8c\u3082\u30a2\u30bb\u30c3\u30c8\u306e\u767b\u9332\u60c5\u5831\u306f\u6b8b\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u518d\u5ea6\u30ed\u30fc\u30c9\u3057\u305f\u308a\u3001\u4f7f\u7528\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u4e00\u5ea6\u30ed\u30fc\u30c9\u3057\u305f\u30a2\u30bb\u30c3\u30c8\u3092\u3057\u3070\u3089\u304f\u4f7f\u308f\u305a\u3001\u30e1\u30e2\u30ea\u6d88\u8cbb\u3092\u6e1b\u3089\u3057\u305f\u3044\u5834\u5408\u306b\u30a2\u30bb\u30c3\u30c8\u3092\u30ea\u30ea\u30fc\u30b9\u3059\u308b\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002</p>"},{"location":"tutorial3/asset/#\u767b\u9332\u89e3\u9664","title":"\u767b\u9332\u89e3\u9664","text":"<p>\u30a2\u30bb\u30c3\u30c8\u306e\u767b\u9332\u60c5\u5831\u3068\u540d\u524d\u3092\u30a2\u30bb\u30c3\u30c8\u7ba1\u7406\u304b\u3089\u524a\u9664\u3057\u307e\u3059\u3002\u8a72\u5f53\u30a2\u30bb\u30c3\u30c8\u304c\u672a\u30ea\u30ea\u30fc\u30b9\u3067\u3042\u308b\u5834\u5408\u3001\u81ea\u52d5\u7684\u306b\u30ea\u30ea\u30fc\u30b9\u3057\u307e\u3059\u3002</p> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7d42\u4e86\u6642\u306b\u306f\u3001\u3059\u3079\u3066\u306e\u30a2\u30bb\u30c3\u30c8\u304c\u81ea\u52d5\u3067\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u767b\u9332\u89e3\u9664\u3055\u308c\u308b\u305f\u3081\u3001\u30a2\u30bb\u30c3\u30c8\u306e\u767b\u9332\u89e3\u9664\u3092\u660e\u793a\u7684\u306b\u884c\u3046\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"tutorial3/asset/#\u5404\u7a2e\u64cd\u4f5c\u306e\u95a2\u6570","title":"\u5404\u7a2e\u64cd\u4f5c\u306e\u95a2\u6570","text":"\u95a2\u6570 \u8aac\u660e <code>Register(name, ...)</code> \u30a2\u30bb\u30c3\u30c8\u3092\u767b\u9332\u3057\u307e\u3059\u3002 <code>IsRegistered(name)</code> \u30a2\u30bb\u30c3\u30c8\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u8fd4\u3057\u307e\u3059\u3002 <code>Load(name)</code> \u30a2\u30bb\u30c3\u30c8\u3092\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 <code>LoadAsync(name)</code> \u30a2\u30bb\u30c3\u30c8\u306e\u975e\u540c\u671f\u30ed\u30fc\u30c9\u3092\u958b\u59cb\u3057\u307e\u3059\u3002 <code>Wait(name)</code> \u30a2\u30bb\u30c3\u30c8\u306e\u975e\u540c\u671f\u30ed\u30fc\u30c9\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u5f85\u6a5f\u3057\u307e\u3059\u3002 <code>IsReady(name)</code> \u30a2\u30bb\u30c3\u30c8\u304c\u30ed\u30fc\u30c9\u304c\uff08\u6210\u5426\u306b\u304b\u304b\u308f\u3089\u305a\uff09\u5b8c\u4e86\u3057\u3066\u3044\u308b\u304b\u3092\u8fd4\u3057\u307e\u3059\u3002 <code>Release(name)</code> \u30a2\u30bb\u30c3\u30c8\u3092\u30ea\u30ea\u30fc\u30b9\u3057\u307e\u3059\u3002 <code>Unregister(name)</code> \u30a2\u30bb\u30c3\u30c8\u3092\u767b\u9332\u89e3\u9664\u3057\u307e\u3059\u3002 <code>ReleaseAll()</code> \u767b\u9332\u3055\u308c\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u30a2\u30bb\u30c3\u30c8\u3092\u30ea\u30ea\u30fc\u30b9\u3057\u307e\u3059\u3002 <code>UnregisterAll()</code> \u767b\u9332\u3055\u308c\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u30a2\u30bb\u30c3\u30c8\u3092\u767b\u9332\u89e3\u9664\u3057\u307e\u3059\u3002 <code>Enumerate()</code> \u767b\u9332\u3055\u308c\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u30a2\u30bb\u30c3\u30c8\u306e\u60c5\u5831\u4e00\u89a7\u3092\u5217\u6319\u3057\u307e\u3059\u3002"},{"location":"tutorial3/asset/#382-texture-\u30a2\u30bb\u30c3\u30c8\u306e\u30b5\u30f3\u30d7\u30eb","title":"38.2 Texture \u30a2\u30bb\u30c3\u30c8\u306e\u30b5\u30f3\u30d7\u30eb","text":"<p>\u767b\u9332\u6e08\u307f\u306e Texture \u30a2\u30bb\u30c3\u30c8\u306f <code>TextureAsset(\u540d\u524d)</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u53d6\u5f97\u3057\u305f\u5024\u306f <code>Texture</code> \u3068\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Draw()\n{\n// \u30a2\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\nTextureAsset(U\"Windmill\").draw(40, 40);\nTextureAsset(U\"Siv3D-kun\").scaled(0.8).drawAt(300, 300);\nTextureAsset(U\"Cat\").drawAt(600, 400);\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u30a2\u30bb\u30c3\u30c8\u3092\u767b\u9332\u3059\u308b\nTextureAsset::Register(U\"Windmill\", U\"example/windmill.png\");\nTextureAsset::Register(U\"Siv3D-kun\", U\"example/siv3d-kun.png\", TextureDesc::Mipped);\nTextureAsset::Register(U\"Cat\", U\"\ud83d\udc08\"_emoji);\nwhile (System::Update())\n{\nDraw();\n}\n}\n</code></pre>"},{"location":"tutorial3/asset/#383-\u8907\u96d1\u306a-texture-\u30a2\u30bb\u30c3\u30c8\u306e\u767b\u9332","title":"38.3 \u8907\u96d1\u306a Texture \u30a2\u30bb\u30c3\u30c8\u306e\u767b\u9332","text":"<p><code>Image</code> \u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3057\u305f\u308a\u3001\u30ed\u30fc\u30c9\u6642\u306b\u524d\u51e6\u7406\u3092\u884c\u3063\u305f\u308a\u3059\u308b\u3088\u3046\u306a\u8907\u96d1\u306a Texture \u30a2\u30bb\u30c3\u30c8\u306e\u767b\u9332\u3092\u884c\u3046\u5834\u5408\u306f\u3001<code>TextureAssetData</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p>\u7a7a\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3001<code>onLoad</code> \u30e1\u30f3\u30d0\u5909\u6570\u306b\u3001\u30ed\u30fc\u30c9\u6642\u306e\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u305f <code>bool(TextureAssetData&amp;, const String&amp;)</code> \u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u6301\u3064\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u30a2\u30bb\u30c3\u30c8\u306e\u30ed\u30fc\u30c9\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u3001<code>asset.texture</code> \u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4ee3\u5165\u3059\u308b\u3053\u3068\u3067\u3001\u30a2\u30bb\u30c3\u30c8\u30c7\u30fc\u30bf\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nstd::unique_ptr&lt;TextureAssetData&gt; MakeTextureAssetData1()\n{\n// \u7a7a\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30bb\u30c3\u30c8\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\nstd::unique_ptr&lt;TextureAssetData&gt; assetData = std::make_unique&lt;TextureAssetData&gt;();\n// \u30ed\u30fc\u30c9\u6642\u306e\u4ed5\u4e8b\u3092\u8a2d\u5b9a\u3059\u308b\nassetData-&gt;onLoad = [](TextureAssetData&amp; asset, [[maybe_unused]] const String&amp; hint)\n{\n// \u30a2\u30bb\u30c3\u30c8\u30c7\u30fc\u30bf\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4ee3\u5165\u3059\u308b\nasset.texture = Texture{ Image{ 256, 256, Palette::Skyblue },  TextureDesc::Mipped };\nreturn (not asset.texture.isEmpty());\n};\nreturn assetData;\n}\nstd::unique_ptr&lt;TextureAssetData&gt; MakeTextureAssetData2(const FilePath&amp; path, TextureDesc textureDesc)\n{\n// \u7a7a\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30bb\u30c3\u30c8\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\nstd::unique_ptr&lt;TextureAssetData&gt; assetData = std::make_unique&lt;TextureAssetData&gt;();\n// \u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u4ee3\u5165\u3059\u308b\nassetData-&gt;path = path;\n// \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u8a2d\u5b9a\u3092\u4ee3\u5165\u3059\u308b\nassetData-&gt;desc = textureDesc;\n// \u30ed\u30fc\u30c9\u6642\u306e\u4ed5\u4e8b\u3092\u8a2d\u5b9a\u3059\u308b\nassetData-&gt;onLoad = [](TextureAssetData&amp; asset, [[maybe_unused]] const String&amp; hint)\n{\n// \u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u306e\u753b\u50cf\u3092 0.5 \u500d\u306b\u7e2e\u5c0f\u3057\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u3059\u308b\nasset.texture = Texture{ Image{ asset.path }.scaled(0.5), asset.desc };\nreturn (not asset.texture.isEmpty());\n};\nreturn assetData;\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u30a2\u30bb\u30c3\u30c8\u3092\u767b\u9332\u3059\u308b\uff08\u30ab\u30b9\u30bf\u30e0\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30a2\u30bb\u30c3\u30c8\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\uff09\nTextureAsset::Register(U\"MyTexture1\", MakeTextureAssetData1());\nTextureAsset::Register(U\"MyTexture2\", MakeTextureAssetData2(U\"example/windmill.png\", TextureDesc::Mipped));\nTextureAsset::Register(U\"MyTexture3\", MakeTextureAssetData2(U\"example/siv3d-kun.png\", TextureDesc::Mipped));\nwhile (System::Update())\n{\nTextureAsset(U\"MyTexture1\").draw(100, 100);\nTextureAsset(U\"MyTexture2\").draw(300, 300);\nTextureAsset(U\"MyTexture3\").draw(400, 200);\n}\n}\n</code></pre>"},{"location":"tutorial3/asset/#384-font-\u30a2\u30bb\u30c3\u30c8\u306e\u30b5\u30f3\u30d7\u30eb","title":"38.4 Font \u30a2\u30bb\u30c3\u30c8\u306e\u30b5\u30f3\u30d7\u30eb","text":"<p>\u767b\u9332\u6e08\u307f\u306e Font \u30a2\u30bb\u30c3\u30c8\u306f <code>FontAsset(\u540d\u524d)</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u53d6\u5f97\u3057\u305f\u5024\u306f <code>Font</code> \u3068\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Draw()\n{\n// \u30a2\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\nFontAsset(U\"Title\")(U\"My Game\").drawAt(Vec2{ 400, 100 });\nFontAsset(U\"Menu\")(U\"Play\").drawAt(40, Vec2{ 400, 400 });\nFontAsset(U\"Menu\")(U\"Exit\").drawAt(40, Vec2{ 400, 500 });\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u30a2\u30bb\u30c3\u30c8\u3092\u767b\u9332\u3059\u308b\nFontAsset::Register(U\"Title\", 60, U\"example/font/RocknRoll/RocknRollOne-Regular.ttf\");\nFontAsset::Register(U\"Menu\", FontMethod::MSDF, 48, Typeface::Medium);\nwhile (System::Update())\n{\nDraw();\n}\n}\n</code></pre>"},{"location":"tutorial3/asset/#385-audio-\u30a2\u30bb\u30c3\u30c8\u306e\u30b5\u30f3\u30d7\u30eb","title":"38.5 Audio \u30a2\u30bb\u30c3\u30c8\u306e\u30b5\u30f3\u30d7\u30eb","text":"<p>\u767b\u9332\u6e08\u307f\u306e Audio \u30a2\u30bb\u30c3\u30c8\u306f <code>AudioAsset(\u540d\u524d)</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u53d6\u5f97\u3057\u305f\u5024\u306f <code>Audio</code> \u3068\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid PlayPiano()\n{\n// \u30a2\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\nAudioAsset(U\"Piano\").playOneShot();\n}\nvoid PlayShot()\n{\n// \u30a2\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\nAudioAsset(U\"SE\").playOneShot();\n}\nvoid Main()\n{\n// \u30a2\u30bb\u30c3\u30c8\u3092\u767b\u9332\u3059\u308b\nAudioAsset::Register(U\"BGM\", Audio::Stream, U\"example/test.mp3\");\nAudioAsset::Register(U\"SE\", U\"example/shot.mp3\");\nAudioAsset::Register(U\"Piano\", GMInstrument::Piano1, PianoKey::A4, 0.5s);\n// \u30a2\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\nAudioAsset(U\"BGM\").setVolume(0.2);\nAudioAsset(U\"BGM\").play();\nwhile (System::Update())\n{\nif (MouseL.down())\n{\nPlayPiano();\n}\nif (MouseR.down())\n{\nPlayShot();\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/asset/#386-\u30a2\u30bb\u30c3\u30c8\u306e\u4e8b\u524d\u30ed\u30fc\u30c9","title":"38.6 \u30a2\u30bb\u30c3\u30c8\u306e\u4e8b\u524d\u30ed\u30fc\u30c9","text":"<p>\u5404\u30a2\u30bb\u30c3\u30c8\u306e <code>Load()</code> \u3092\u4f7f\u3046\u3068\u3001\u305d\u306e\u30a2\u30bb\u30c3\u30c8\u304c\u672a\u30ed\u30fc\u30c9\u3067\u3042\u308b\u5834\u5408\u306b\u30ed\u30fc\u30c9\u3092\u5373\u5ea7\u306b\u884c\u3044\u307e\u3059\u3002\u30b2\u30fc\u30e0\u306e\u5b9f\u884c\u4e2d\u306b\u30a2\u30bb\u30c3\u30c8\u306e\u30ed\u30fc\u30c9\u304c\u767a\u751f\u3057\u3066\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u304c\u4f4e\u4e0b\u3059\u308b\u306e\u3092\u9632\u304e\u305f\u3044\u5834\u5408\u306f\u3001\u3053\u306e\u95a2\u6570\u3092\u547c\u3073\u307e\u3059\u3002</p> <p><code>FontAsset::Load()</code> \u3067\u306f\u3001\u30d7\u30ea\u30ed\u30fc\u30c9\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u3092\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30a2\u30bb\u30c3\u30c8\u306e\u30ed\u30fc\u30c9\u304c\u5b8c\u4e86\u3057\u3066\u3044\u308b\u304b\u306f <code>IsReady()</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String preloadText = U\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nFontAsset::Register(U\"MyFont\", FontMethod::MSDF, 48, Typeface::Bold);\nTextureAsset::Register(U\"MyTexture\", U\"example/bay.jpg\");\nAudioAsset::Register(U\"MyAudio\", Audio::Stream, U\"example/test.mp3\");\nAudioAsset::Register(U\"MyMIDI\", U\"example/midi/test.mid\");\n// \u4e8b\u524d\u30ed\u30fc\u30c9\u3059\u308b\nFontAsset::Load(U\"MyFont\", preloadText);\nTextureAsset::Load(U\"MyTexture\");\nAudioAsset::Load(U\"MyAudio\");\nAudioAsset::Load(U\"MyMIDI\");\n// \u30ed\u30fc\u30c9\u304c\u5b8c\u4e86\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\nPrint &lt;&lt; FontAsset::IsReady(U\"MyFont\");\nPrint &lt;&lt; TextureAsset::IsReady(U\"MyTexture\");\nPrint &lt;&lt; AudioAsset::IsReady(U\"MyAudio\");\nPrint &lt;&lt; AudioAsset::IsReady(U\"MyMIDI\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/asset/#387-\u30a2\u30bb\u30c3\u30c8\u306e\u975e\u540c\u671f\u30ed\u30fc\u30c9","title":"38.7 \u30a2\u30bb\u30c3\u30c8\u306e\u975e\u540c\u671f\u30ed\u30fc\u30c9","text":"<p>\u5404\u30a2\u30bb\u30c3\u30c8\u306e <code>LoadAsync()</code> \u3092\u4f7f\u3046\u3068\u3001\u305d\u306e\u30a2\u30bb\u30c3\u30c8\u304c\u672a\u30ed\u30fc\u30c9\u3067\u3042\u308b\u5834\u5408\u306b\u3001\u5225\u30b9\u30ec\u30c3\u30c9\u3092\u4f7f\u3063\u305f\u30a2\u30bb\u30c3\u30c8\u306e\u975e\u540c\u671f\u30ed\u30fc\u30c9\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\u30a2\u30bb\u30c3\u30c8\u306e\u30ed\u30fc\u30c9\u4e2d\u306b\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u306e\u51e6\u7406\u304c\u6b62\u307e\u308b\u306e\u3092\u907f\u3051\u305f\u3044\u5834\u5408\u306f\u3053\u306e\u95a2\u6570\u3092\u547c\u3073\u307e\u3059\u3002</p> <p>\u30a2\u30bb\u30c3\u30c8\u306e\u975e\u540c\u671f\u30ed\u30fc\u30c9\u304c\u5b8c\u4e86\u3057\u305f\u304b\u306f <code>IsReady()</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u975e\u540c\u671f\u30ed\u30fc\u30c9\u4e2d\u306b\u305d\u306e\u30a2\u30bb\u30c3\u30c8\u306e\u4f7f\u7528\u307e\u305f\u306f <code>Wait()</code> \u3092\u3059\u308b\u3068\u3001\u30ed\u30fc\u30c9\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u306e\u5f85\u6a5f\u304c\u767a\u751f\u3057\u307e\u3059\u3002</p> <p>OpenGL \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\uff08macOS \u3068 Linux \u306e\u30c7\u30d5\u30a9\u30eb\u30c8, \u304a\u3088\u3073 Windows \u3067\u9078\u629e\u3057\u305f\u5834\u5408\uff09\u3067\u306e\u6ce8\u610f</p> <p>OpenGL \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\uff08macOS \u3068 Linux \u306e\u30c7\u30d5\u30a9\u30eb\u30c8, \u304a\u3088\u3073 Windows \u3067\u9078\u629e\u3057\u305f\u5834\u5408\uff09\u3067\u306f\u3001<code>TextureAsset</code> \u306e\u975e\u540c\u671f\u30ed\u30fc\u30c9\u304c <code>System::Update()</code> \u5185\u3067\u5b8c\u4e86\u3057\u307e\u3059\u3002<code>TextureAsset</code> \u306e\u975e\u540c\u671f\u30ed\u30fc\u30c9\u4e2d\u306f <code>System::Update()</code> \u306e\u547c\u3073\u51fa\u3057\u3092\u901a\u5e38\u901a\u308a\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst String preloadText = U\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nFontAsset::Register(U\"MyFont\", FontMethod::MSDF, 48, Typeface::Bold);\nTextureAsset::Register(U\"MyTexture\", U\"example/bay.jpg\");\nAudioAsset::Register(U\"MyAudio\", Audio::Stream, U\"example/test.mp3\");\nAudioAsset::Register(U\"MyMIDI\", U\"example/midi/test.mid\");\n// \u975e\u540c\u671f\u30ed\u30fc\u30c9\u3092\u958b\u59cb\u3059\u308b\nFontAsset::LoadAsync(U\"MyFont\", preloadText);\nTextureAsset::LoadAsync(U\"MyTexture\");\nAudioAsset::LoadAsync(U\"MyAudio\");\nAudioAsset::LoadAsync(U\"MyMIDI\");\nwhile (System::Update())\n{\nClearPrint();\n// \u30ed\u30fc\u30c9\u304c\u5b8c\u4e86\u3057\u305f\u304b\u3092\u8abf\u3079\u308b\nPrint &lt;&lt; FontAsset::IsReady(U\"MyFont\");\nPrint &lt;&lt; TextureAsset::IsReady(U\"MyTexture\");\nPrint &lt;&lt; AudioAsset::IsReady(U\"MyAudio\");\nPrint &lt;&lt; AudioAsset::IsReady(U\"MyMIDI\");\n}\n}\n</code></pre>"},{"location":"tutorial3/asset/#388-\u30a2\u30bb\u30c3\u30c8\u4e00\u89a7\u306e\u53d6\u5f97\u3068\u30bf\u30b0","title":"38.8 \u30a2\u30bb\u30c3\u30c8\u4e00\u89a7\u306e\u53d6\u5f97\u3068\u30bf\u30b0","text":"<p><code>Register()</code> \u3067\u306f\u3001<code>{ asstName, { assetTag, ... } }</code> \u306b\u3088\u3063\u3066\u3001\u30a2\u30bb\u30c3\u30c8\u540d\u3068\u30a2\u30bb\u30c3\u30c8\u306e\u30bf\u30b0\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002</p> <p>\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u30a2\u30bb\u30c3\u30c8\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b <code>::Enumerate()</code> \u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u7279\u5b9a\u306e\u30bf\u30b0\u3092\u6301\u3064\u30a2\u30bb\u30c3\u30c8\u3092\u30ed\u30fc\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3059\u308b\u306a\u3069\u3001\u30a2\u30bb\u30c3\u30c8\u306e\u5206\u985e\u304c\u4fbf\u5229\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nAudioAsset::Register({ U\"BGM-0\", { U\"BGM\" } }, Audio::Stream, U\"example/test.mp3\");\nAudioAsset::Register({ U\"BGM-1\", { U\"BGM\" } }, U\"example/midi/test.mid\");\nAudioAsset::Register({ U\"PianoC\", { U\"SE\", U\"Piano\" } }, GMInstrument::Piano1, PianoKey::C4, 0.5s);\nAudioAsset::Register({ U\"PianoD\", { U\"SE\", U\"Piano\" } }, GMInstrument::Piano1, PianoKey::D4, 0.5s);\nAudioAsset::Register({ U\"PianoE\", { U\"SE\", U\"Piano\" } }, GMInstrument::Piano1, PianoKey::E4, 0.5s);\nAudioAsset::Register({ U\"TrumpetC\", { U\"SE\", U\"Trumpet\" } }, GMInstrument::Trumpet, PianoKey::C4, 0.5s);\nAudioAsset::Register({ U\"TrumpetD\", { U\"SE\", U\"Trumpet\" } }, GMInstrument::Trumpet, PianoKey::D4, 0.5s);\nAudioAsset::Register({ U\"TrumpetE\", { U\"SE\", U\"Trumpet\" } }, GMInstrument::Trumpet, PianoKey::E4, 0.5s);\nfor (auto&amp;&amp; [name, info] : AudioAsset::Enumerate())\n{\nPrint &lt;&lt; name &lt;&lt; U\": \" &lt;&lt; info.tags;\n// \"SE\" \u3068\u3044\u3046\u30bf\u30b0\u3092\u6301\u3064\u30a2\u30bb\u30c3\u30c8\u3060\u3051\u30ed\u30fc\u30c9\u3059\u308b\nif (info.tags.includes(U\"SE\"))\n{\nAudioAsset::Load(name);\n}\n}\nPrint &lt;&lt; U\"---\";\nPrint &lt;&lt; AudioAsset::IsReady(U\"BGM-0\");\nPrint &lt;&lt; AudioAsset::IsReady(U\"BGM-1\");\nPrint &lt;&lt; AudioAsset::IsReady(U\"PianoC\");\nPrint &lt;&lt; AudioAsset::IsReady(U\"PianoD\");\nPrint &lt;&lt; AudioAsset::IsReady(U\"PianoE\");\nPrint &lt;&lt; AudioAsset::IsReady(U\"TrumpetC\");\nPrint &lt;&lt; AudioAsset::IsReady(U\"TrumpetD\");\nPrint &lt;&lt; AudioAsset::IsReady(U\"TrumpetE\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/","title":"37. \u30aa\u30fc\u30c7\u30a3\u30aa\u518d\u751f","text":"<p>\u52b9\u679c\u97f3\u3084\u97f3\u697d\u306e\u518d\u751f\u3092\u5236\u5fa1\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>\u518d\u751f\u3059\u308b\u97f3\u58f0\u30c7\u30fc\u30bf\u306f\u30aa\u30fc\u30c7\u30a3\u30aa\u30af\u30e9\u30b9 <code>Audio</code> \u3067\u7ba1\u7406\u3057\u307e\u3059\u3002\u30aa\u30fc\u30c7\u30a3\u30aa\u306f\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u3067\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u4f5c\u6210\u306b\u306f\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u305f\u3081\u3001\u901a\u5e38\u306f\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u524d\u3067\u884c\u3044\u307e\u3059\u3002\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u5185\u3067\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u306f\u3001\u6bce\u30d5\u30ec\u30fc\u30e0\u4f5c\u6210\u3055\u308c\u306a\u3044\u3088\u3046\u306a\u5236\u5fa1\u304c\u5fc5\u8981\u3067\u3059\u3002</p>"},{"location":"tutorial3/audio/#371-\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u3068\u518d\u751f","title":"37.1 \u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u3068\u518d\u751f","text":"<p><code>Audio \u5909\u6570\u540d{ U\"\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\" };</code> \u3067\u3001\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u304b\u3089 <code>Audio</code> \u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u306f\u3001\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u30d5\u30a9\u30eb\u30c0\uff08\u958b\u767a\u4e2d\u306f <code>App</code> \u30d5\u30a9\u30eb\u30c0\uff09\u3092\u57fa\u6e96\u3068\u3059\u308b\u76f8\u5bfe\u30d1\u30b9\u304b\u3001\u7d76\u5bfe\u30d1\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p>Siv3D \u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u97f3\u58f0\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u8aad\u307f\u8fbc\u307f\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4e00\u90e8\u306e\u97f3\u58f0\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f OS \u306b\u3088\u3063\u3066\u5bfe\u5fdc\u72b6\u6cc1\u304c\u7570\u306a\u308a\u307e\u3059\u3002</p> \u30d5\u30a9\u30fc\u30de\u30c3\u30c8 \u62e1\u5f35\u5b50 Windows macOS Linux Web WAVE .wav \u2714 \u2714 \u2714 \u2714 MP3 .mp3 \u2714 \u2714 \u2714 \u2714* AAC .m4a \u2714 \u2714 \u2714 \u2714* OggVorbis .ogg \u2714 \u2714 \u2714 \u2714 Opus .opus \u2714 \u2714 \u2714 \u2714 MIDI .mid \u2714 \u2714 \u2714 \u2714 WMA .wma \u2714 FLAC .flac \u2714 \u2714 AIFF .aif, .aiff, .aifc \u2714 <p>(*) \u30d3\u30eb\u30c9\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\u3068\u3001\u7279\u5225\u306a\u95a2\u6570\u306e\u4f7f\u7528\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <p>\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u518d\u751f\u3059\u308b\u306b\u306f <code>Audio</code> \u306e <code>.play()</code> \u3092\u547c\u3073\u307e\u3059\u3002\u3059\u3067\u306b\u518d\u751f\u4e2d\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u306b\u5bfe\u3057\u3066 <code>.play()</code> \u3092\u3057\u3066\u3082\u4f55\u3082\u8d77\u3053\u308a\u307e\u305b\u3093\u3002\u540c\u3058\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u91cd\u306d\u3066\u518d\u751f\u3057\u305f\u3044\u5834\u5408\u306f\u300137.5 \u306e <code>.playOneShot()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067 Audio \u3092\u4f5c\u6210\u3059\u308b\nconst Audio audio{ U\"example/test.mp3\" };\n// \u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u518d\u751f\u3059\u308b\naudio.play();\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p>\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u518d\u751f\u4e2d\u306f\u30aa\u30fc\u30c7\u30a3\u30aa\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u5b58\u5728\u3057\u3066\u3044\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u305f\u3081\u3001<code>Audio{ U\"example/test.mp3\" }.play();</code> \u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u306f\u97f3\u58f0\u306f\u518d\u751f\u3067\u304d\u307e\u305b\u3093\u3002</p>"},{"location":"tutorial3/audio/#372-\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u7528\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u4f5c\u6210\u3059\u308b","title":"37.2 \u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u7528\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u4f5c\u6210\u3059\u308b","text":"<p>WAVE, MP3, OggVorbis, FLAC \u5f62\u5f0f\u306e\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u3068\u306f\u3001\u6700\u521d\u306b\u30d5\u30a1\u30a4\u30eb\u5185\u5bb9\u306e\u5168\u90e8\u3092\u8aad\u307f\u8fbc\u3080\u306e\u3067\u306f\u306a\u304f\u3001\u4e00\u90e8\u3060\u3051\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u518d\u751f\u3057\u306a\u304c\u3089\u3001\u7d9a\u304f\u90e8\u5206\u3092\u9010\u6b21\u8aad\u307f\u8fbc\u3080\u65b9\u5f0f\u306e\u3053\u3068\u3067\u3059\u3002\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u3092\u4f7f\u3046\u3068\u3001\u30e1\u30e2\u30ea\u306e\u4f7f\u7528\u91cf\u3084\u30d5\u30a1\u30a4\u30eb\u306e\u30ed\u30fc\u30c9\u6642\u9593\u304c\u5927\u5e45\u306b\u524a\u6e1b\u3055\u308c\u307e\u3059\u3002</p> <p><code>Audio</code> \u3067\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f\u3001<code>Audio</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b <code>Audio::Stream</code> \u3092\u6e21\u3057\u3066\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u307e\u3059\u3002\u3082\u3057 <code>Audio::Stream</code> \u3092\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u901a\u5e38\u306e\u8aad\u307f\u8fbc\u307f\u304c\u884c\u308f\u308c\u307e\u3059\u3002<code>Audio</code> \u3067\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u306f\u3001<code>.isStreaming()</code> \u3067\u8abf\u3079\u3089\u308c\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067 Audio \u3092\u4f5c\u6210\uff08\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u3092\u30ea\u30af\u30a8\u30b9\u30c8\uff09\nconst Audio audio{ Audio::Stream, U\"example/test.mp3\" };\n// \u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u306b\u306a\u308b\u304b\u3092\u53d6\u5f97\nPrint &lt;&lt; audio.isStreaming();\n// \u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u518d\u751f\naudio.play();\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p>\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u3092\u6709\u52b9\u306b\u3057\u305f <code>Audio</code> \u306b\u3064\u3044\u3066\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u5236\u7d04\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u901a\u5e38\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u518d\u751f\u7528\u9014\u3067\u306f\u554f\u984c\u306b\u306a\u308a\u307e\u305b\u3093\u3002</p> <ul> <li>\u533a\u9593\u30eb\u30fc\u30d7\u518d\u751f\u306b\u304a\u3044\u3066\u3001\u30eb\u30fc\u30d7\u672b\u5c3e\u4f4d\u7f6e\u3092\u30aa\u30fc\u30c7\u30a3\u30aa\u7d42\u7aef\u4ee5\u5916\u306b\u8a2d\u5b9a\u3067\u304d\u306a\u3044</li> <li><code>.getSamples()</code> \u3067\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u97f3\u58f0\u6ce2\u5f62\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044</li> <li>FFT \u3092\u884c\u3046\u3068\u304d\u306e\u30b5\u30f3\u30d7\u30eb\u6570\u304c\u5c11\u306a\u304f\u306a\u308b</li> </ul>"},{"location":"tutorial3/audio/#373-\u697d\u5668\u306e\u97f3\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u4f5c\u6210\u3059\u308b","title":"37.3 \u697d\u5668\u306e\u97f3\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u4f5c\u6210\u3059\u308b","text":"<p>\u697d\u5668\u306e\u7a2e\u985e\u3068\u97f3\u306e\u9ad8\u3055\u3001\u9577\u3055\u306a\u3069\u3092\u3082\u3068\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u697d\u5668\u306e\u97f3\u3092\u751f\u6210\u3057\u3066 <code>Audio</code> \u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002<code>Audio</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b <code>GMInstrument</code> \u3067\u5217\u6319\u3055\u308c\u308b\u697d\u5668\u540d\u3001<code>PianoKey</code> \u3067\u5217\u6319\u3055\u308c\u308b\u97f3\u306e\u9ad8\u3055\u3001\u97f3\u306e\u9577\u3055\u3092\u6e21\u3057\u307e\u3059\u3002</p> <p>\u97f3\u306e\u9577\u3055\u306f</p> <ul> <li>\u30ce\u30fc\u30c8\u30fb\u30aa\u30f3\uff08\u9cf4\u3089\u3059\uff09\u6642\u9593</li> <li>\u30ce\u30fc\u30c8\u30fb\u30aa\u30f3\u6642\u9593\u3068\u30ce\u30fc\u30c8\u30fb\u30aa\u30d5\uff08\u9cf4\u3089\u3057\u7d42\u3048\u308b\uff09\u6642\u9593</li> </ul> <p>\u306e 2 \u901a\u308a\u306e\u6307\u5b9a\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\u524d\u8005\u3067\u306f 1.0 \u79d2\u306e\u30ce\u30fc\u30c8\u30fb\u30aa\u30d5\u6642\u9593\u304c\u8ffd\u52a0\u3067\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002</p> \u697d\u5668\u306e\u4e00\u89a7 \u5b9a\u6570 \u697d\u5668\u540d <code>GMInstrument::Piano1</code> \u30a2\u30b3\u30fc\u30b9\u30c6\u30a3\u30c3\u30af\u30d4\u30a2\u30ce <code>GMInstrument::Piano2</code> \u30d6\u30e9\u30a4\u30c8\u30d4\u30a2\u30ce <code>GMInstrument::Piano3</code> \u30a8\u30ec\u30af\u30c8\u30ea\u30c3\u30af\u30fb\u30b0\u30e9\u30f3\u30c9\u30d4\u30a2\u30ce <code>GMInstrument::Piano4</code> \u30db\u30f3\u30ad\u30fc\u30c8\u30f3\u30af\u30d4\u30a2\u30ce <code>GMInstrument::ElectricPiano1</code> \u30a8\u30ec\u30af\u30c8\u30ea\u30c3\u30af\u30fb\u30b0\u30e9\u30f3\u30c9\u30fb\u30d4\u30a2\u30ce <code>GMInstrument::ElectricPiano2</code> FM \u30a8\u30ec\u30af\u30c8\u30ea\u30c3\u30af\u30d4\u30a2\u30ce <code>GMInstrument::Harpsichord</code> \u30cf\u30fc\u30d7\u30b7\u30b3\u30fc\u30c9 <code>GMInstrument::Clavinet</code> \u30af\u30e9\u30d3\u30cd\u30c3\u30c8 <code>GMInstrument::Celesta</code> \u30c1\u30a7\u30ec\u30b9\u30bf <code>GMInstrument::Glockenspiel</code> \u30b0\u30ed\u30c3\u30b1\u30f3\u30b7\u30e5\u30d4\u30fc\u30eb <code>GMInstrument::MusicBox</code> \u30aa\u30eb\u30b4\u30fc\u30eb <code>GMInstrument::Vibraphone</code> \u30f4\u30a3\u30d6\u30e9\u30d5\u30a9\u30f3 <code>GMInstrument::Marimba</code> \u30de\u30ea\u30f3\u30d0 <code>GMInstrument::Xylophone</code> \u30b7\u30ed\u30d5\u30a9\u30f3 <code>GMInstrument::TubularBells</code> \u30c1\u30e5\u30fc\u30d6\u30e9\u30fc\u30d9\u30eb <code>GMInstrument::Dulcimer</code> \u30c0\u30eb\u30b7\u30de\u30fc <code>GMInstrument::DrawbarOrgan</code> \u30c9\u30ed\u30fc\u30d0\u30fc\u30fb\u30aa\u30eb\u30ac\u30f3 <code>GMInstrument::PercussiveOrgan</code> \u30d1\u30fc\u30ab\u30c3\u30b7\u30d6\u30fb\u30aa\u30eb\u30ac\u30f3 <code>GMInstrument::RockOrgan</code> \u30ed\u30c3\u30af\u30fb\u30aa\u30eb\u30ac\u30f3 <code>GMInstrument::ChurchOrgan</code> \u30c1\u30e3\u30fc\u30c1\u30fb\u30aa\u30eb\u30ac\u30f3 <code>GMInstrument::ReedOrgan</code> \u30ea\u30fc\u30c9\u30fb\u30aa\u30eb\u30ac\u30f3 <code>GMInstrument::Accordion</code> \u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3 <code>GMInstrument::Harmonica</code> \u30cf\u30fc\u30e2\u30cb\u30ab <code>GMInstrument::TangoAccordion</code> \u30bf\u30f3\u30b4\u30fb\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3 <code>GMInstrument::NylonGuitar</code> \u30ca\u30a4\u30ed\u30f3\u30fb\u30ae\u30bf\u30fc <code>GMInstrument::SteelGuitar</code> \u30b9\u30c6\u30a3\u30fc\u30eb\u30fb\u30ae\u30bf\u30fc <code>GMInstrument::JazzGuitar</code> \u30b8\u30e3\u30ba\u30fb\u30ae\u30bf\u30fc <code>GMInstrument::CleanGuitar</code> \u30af\u30ea\u30fc\u30f3\u30fb\u30ae\u30bf\u30fc <code>GMInstrument::MutedGuitar</code> \u30df\u30e5\u30fc\u30c8\u30fb\u30ae\u30bf\u30fc <code>GMInstrument::OverdrivenGuitar</code> \u30aa\u30fc\u30d0\u30fc\u30c9\u30e9\u30a4\u30d6\u30fb\u30ae\u30bf\u30fc <code>GMInstrument::DistortionGuitar</code> \u30c7\u30a3\u30b9\u30c8\u30fc\u30b7\u30e7\u30f3\u30fb\u30ae\u30bf\u30fc <code>GMInstrument::GuitarHarmonics</code> \u30ae\u30bf\u30fc\u30fb\u30cf\u30fc\u30e2\u30cb\u30af\u30b9 <code>GMInstrument::AcousticBass</code> \u30a2\u30b3\u30fc\u30b9\u30c6\u30a3\u30c3\u30af\u30fb\u30d9\u30fc\u30b9 <code>GMInstrument::FingeredBass</code> \u30d5\u30a3\u30f3\u30ac\u30fc\u30fb\u30d9\u30fc\u30b9 <code>GMInstrument::PickedBass</code> \u30d4\u30c3\u30af\u30fb\u30d9\u30fc\u30b9 <code>GMInstrument::FretlessBass</code> \u30d5\u30ec\u30c3\u30c8\u30ec\u30b9\u30fb\u30d9\u30fc\u30b9 <code>GMInstrument::SlapBass1</code> \u30b9\u30e9\u30c3\u30d7\u30fb\u30d9\u30fc\u30b9 1 <code>GMInstrument::SlapBass2</code> \u30b9\u30e9\u30c3\u30d7\u30fb\u30d9\u30fc\u30b9 2 <code>GMInstrument::SynthBass1</code> \u30b7\u30f3\u30bb\u30fb\u30d9\u30fc\u30b9 1 <code>GMInstrument::SynthBass2</code> \u30b7\u30f3\u30bb\u30fb\u30d9\u30fc\u30b9 2 <code>GMInstrument::Violin</code> \u30f4\u30a1\u30a4\u30aa\u30ea\u30f3 <code>GMInstrument::Viola</code> \u30f4\u30a3\u30aa\u30e9 <code>GMInstrument::Cello</code> \u30c1\u30a7\u30ed <code>GMInstrument::Contrabass</code> \u30b3\u30f3\u30c8\u30e9\u30d0\u30b9 <code>GMInstrument::TremoloStrings</code> \u30c8\u30ec\u30e2\u30ed\u30fb\u30b9\u30c8\u30ea\u30f3\u30b0\u30b9 <code>GMInstrument::PizzicatoStrings</code> \u30d4\u30c3\u30c1\u30ab\u30fc\u30c8\u30fb\u30b9\u30c8\u30ea\u30f3\u30b0\u30b9 <code>GMInstrument::OrchestralHarp</code> \u30aa\u30fc\u30b1\u30b9\u30c8\u30e9\u30fb\u30cf\u30fc\u30d7 <code>GMInstrument::Timpani</code> \u30c6\u30a3\u30f3\u30d1\u30cb <code>GMInstrument::StringEnsemble1</code> \u30b9\u30c8\u30ea\u30f3\u30b0\u30fb\u30a2\u30f3\u30b5\u30f3\u30d6\u30eb 1 <code>GMInstrument::StringEnsemble2</code> \u30b9\u30c8\u30ea\u30f3\u30b0\u30fb\u30a2\u30f3\u30b5\u30f3\u30d6\u30eb 2 <code>GMInstrument::SynthStrings1</code> \u30b7\u30f3\u30bb\u30fb\u30b9\u30c8\u30ea\u30f3\u30b0\u30b9 1 <code>GMInstrument::SynthStrings2</code> \u30b7\u30f3\u30bb\u30fb\u30b9\u30c8\u30ea\u30f3\u30b0\u30b9 2 <code>GMInstrument::ChoirAahs</code> \u58f0\u300c\u30a2\u30fc\u300d <code>GMInstrument::VoiceOohs</code> \u58f0\u300c\u30aa\u30fc\u300d <code>GMInstrument::SynthChoir</code> \u30b7\u30f3\u30bb\u30f4\u30a9\u30a4\u30b9 <code>GMInstrument::OrchestraHit</code> \u30aa\u30fc\u30b1\u30b9\u30c8\u30e9\u30fb\u30d2\u30c3\u30c8 <code>GMInstrument::Trumpet</code> \u30c8\u30e9\u30f3\u30da\u30c3\u30c8 <code>GMInstrument::Trombone</code> \u30c8\u30ed\u30f3\u30dc\u30fc\u30f3 <code>GMInstrument::Tuba</code> \u30c1\u30e5\u30fc\u30d0 <code>GMInstrument::MutedTrumpet</code> \u30df\u30e5\u30fc\u30c8\u30fb\u30c8\u30e9\u30f3\u30da\u30c3\u30c8 <code>GMInstrument::FrenchHorn</code> \u30d5\u30ec\u30f3\u30c1\u30fb\u30db\u30eb\u30f3 <code>GMInstrument::BrassSection</code> \u30d6\u30e9\u30b9\u30fb\u30bb\u30af\u30b7\u30e7\u30f3 <code>GMInstrument::SynthBrass1</code> \u30b7\u30f3\u30bb\u30fb\u30d6\u30e9\u30b9 1 <code>GMInstrument::SynthBrass2</code> \u30b7\u30f3\u30bb\u30fb\u30d6\u30e9\u30b9 2 <code>GMInstrument::SopranoSax</code> \u30bd\u30d7\u30e9\u30ce\u30fb\u30b5\u30c3\u30af\u30b9 <code>GMInstrument::AltoSax</code> \u30a2\u30eb\u30c8\u30fb\u30b5\u30c3\u30af\u30b9 <code>GMInstrument::TenorSax</code> \u30c6\u30ca\u30fc\u30fb\u30b5\u30c3\u30af\u30b9 <code>GMInstrument::BaritoneSax</code> \u30d0\u30ea\u30c8\u30f3\u30fb\u30b5\u30c3\u30af\u30b9 <code>GMInstrument::Oboe</code> \u30aa\u30fc\u30dc\u30a8 <code>GMInstrument::EnglishHorn</code> \u30a4\u30f3\u30b0\u30ea\u30c3\u30b7\u30e5\u30fb\u30db\u30eb\u30f3 <code>GMInstrument::Bassoon</code> \u30d5\u30a1\u30b4\u30c3\u30c8 <code>GMInstrument::Clarinet</code> \u30af\u30e9\u30ea\u30cd\u30c3\u30c8 <code>GMInstrument::Piccolo</code> \u30d4\u30c3\u30b3\u30ed <code>GMInstrument::Flute</code> \u30d5\u30eb\u30fc\u30c8 <code>GMInstrument::Recorder</code> \u30ea\u30b3\u30fc\u30c0\u30fc <code>GMInstrument::PanFlute</code> \u30d1\u30f3\u30fb\u30d5\u30eb\u30fc\u30c8 <code>GMInstrument::BlownBottle</code> \u30d6\u30ed\u30a6\u30f3\u30fb\u30dc\u30c8\u30eb <code>GMInstrument::Shakuhachi</code> \u5c3a\u516b <code>GMInstrument::Whistle</code> \u53e3\u7b1b <code>GMInstrument::Ocarina</code> \u30aa\u30ab\u30ea\u30ca <code>GMInstrument::SquareWave</code> \u77e9\u5f62\u6ce2 <code>GMInstrument::SawWave</code> \u30ce\u30b3\u30ae\u30ea\u6ce2 <code>GMInstrument::SynCalliope</code> \u30ab\u30ea\u30aa\u30da\u30ea\u30fc\u30c9 <code>GMInstrument::ChifferLead</code> \u30c1\u30d5\u30ea\u30fc\u30c9 <code>GMInstrument::Charang</code> \u30c1\u30e3\u30e9\u30f3\u30b4\u30ea\u30fc\u30c9 <code>GMInstrument::SoloVox</code> \u58f0\u30ea\u30fc\u30c9 <code>GMInstrument::FifthSawWave</code> \u30d5\u30a3\u30d5\u30b9\u30ba\u30ea\u30fc\u30c9 <code>GMInstrument::BassAndLead</code> \u30d9\u30fc\u30b9 + \u30ea\u30fc\u30c9 <code>GMInstrument::Fantasia</code> \u30d5\u30a1\u30f3\u30bf\u30b8\u30a2 <code>GMInstrument::WarmPad</code> \u30a6\u30a9\u30fc\u30e0\u30fb\u30d1\u30c3\u30c9 <code>GMInstrument::Polysynth</code> \u30dd\u30ea\u30b7\u30f3\u30bb <code>GMInstrument::SpaceVoice</code> \u30b9\u30da\u30fc\u30b9\u30fb\u30f4\u30a9\u30a4\u30b9 <code>GMInstrument::BowedGlass</code> \u30dc\u30a6\u30c9\u30fb\u30b0\u30e9\u30b9 <code>GMInstrument::MetalPad</code> \u30e1\u30bf\u30eb\u30fb\u30d1\u30c3\u30c9 <code>GMInstrument::HaloPad</code> \u30cf\u30ed\u30fc\u30fb\u30d1\u30c3\u30c9 <code>GMInstrument::SweepPad</code> \u30b9\u30a4\u30fc\u30d7\u30fb\u30d1\u30c3\u30c9 <code>GMInstrument::IceRain</code> \u96e8 <code>GMInstrument::Soundtrack</code> \u30b5\u30a6\u30f3\u30c9\u30c8\u30e9\u30c3\u30af <code>GMInstrument::Crystal</code> \u30af\u30ea\u30b9\u30bf\u30eb <code>GMInstrument::Atmosphere</code> \u30a2\u30c8\u30e2\u30b9\u30d5\u30a3\u30a2 <code>GMInstrument::Brightness</code> \u30d6\u30e9\u30a4\u30c8\u30cd\u30b9 <code>GMInstrument::Goblin</code> \u30b4\u30d6\u30ea\u30f3 <code>GMInstrument::EchoDrops</code> \u30a8\u30b3\u30fc\u30fb\u30c9\u30ed\u30c3\u30d7\u30b9 <code>GMInstrument::StarTheme</code> \u30b9\u30bf\u30fc\u30fb\u30c6\u30fc\u30de <code>GMInstrument::Sitar</code> \u30b7\u30bf\u30fc\u30eb <code>GMInstrument::Banjo</code> \u30d0\u30f3\u30b8\u30e7\u30fc <code>GMInstrument::Shamisen</code> \u4e09\u5473\u7dda <code>GMInstrument::Koto</code> \u7434 <code>GMInstrument::Kalimba</code> \u30ab\u30ea\u30f3\u30d0 <code>GMInstrument::Bagpipe</code> \u30d0\u30b0\u30d1\u30a4\u30d7 <code>GMInstrument::Fiddle</code> \u30d5\u30a3\u30c9\u30eb <code>GMInstrument::Shanai</code> \u30b7\u30e3\u30cf\u30ca\u30a4 <code>GMInstrument::TinkleBell</code> \u30c6\u30a3\u30f3\u30af\u30eb\u30fb\u30d9\u30eb <code>GMInstrument::Agogo</code> \u30a2\u30b4\u30b4 <code>GMInstrument::SteelDrums</code> \u30b9\u30c1\u30fc\u30eb\u30fb\u30c9\u30e9\u30e0 <code>GMInstrument::Woodblock</code> \u30a6\u30c3\u30c9\u30d6\u30ed\u30c3\u30af <code>GMInstrument::TaikoDrum</code> \u592a\u9f13 <code>GMInstrument::MelodicTom</code> \u30e1\u30ed\u30c7\u30a3\u30c3\u30af\u30fb\u30bf\u30e0 <code>GMInstrument::SynthDrum</code> \u30b7\u30f3\u30bb\u30fb\u30c9\u30e9\u30e0 <code>GMInstrument::ReverseCymbal</code> \u30ea\u30d0\u30fc\u30b9\u30fb\u30b7\u30f3\u30d0\u30eb <code>GMInstrument::GuitarFretNoise</code> \u30ae\u30bf\u30fc\u30fb\u30d5\u30ec\u30c3\u30c8\u30fb\u30ce\u30a4\u30ba <code>GMInstrument::BreathNoise</code> \u30d6\u30ec\u30b9\u30fb\u30ce\u30a4\u30ba <code>GMInstrument::Seashore</code> \u6d77\u5cb8 <code>GMInstrument::BirdTweet</code> \u9ce5\u306e\u3055\u3048\u305a\u308a <code>GMInstrument::TelephoneRing</code> \u96fb\u8a71\u306e\u30d9\u30eb <code>GMInstrument::Helicopter</code> \u30d8\u30ea\u30b3\u30d7\u30bf\u30fc <code>GMInstrument::Applause</code> \u62cd\u624b <code>GMInstrument::Gunshot</code> \u9283\u58f0 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30d4\u30a2\u30ce\u306e C4 (\u30c9) \u306e\u97f3\nconst Audio piano{ GMInstrument::Piano1, PianoKey::C4, 0.5s };\n// \u30af\u30e9\u30ea\u30cd\u30c3\u30c8\u306e D4 (\u30ec) \u306e\u97f3\nconst Audio clarinet{ GMInstrument::Clarinet, PianoKey::D4, 0.5s };\n// \u30c8\u30e9\u30f3\u30da\u30c3\u30c8\u306e E4 (\u30df) \u306e\u97f3\u3002\u30ce\u30fc\u30c8\u30fb\u30aa\u30f3 2.0 \u79d2\u3001\u30ce\u30fc\u30c8\u30fb\u30aa\u30d5 0.5 \u79d2\nconst Audio trumpet{ GMInstrument::Trumpet, PianoKey::E4, 2.0s, 0.5s };\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Piano\", Vec2{ 20, 20 }))\n{\npiano.play();\n}\nif (SimpleGUI::Button(U\"Clarinet\", Vec2{ 20, 60 }))\n{\nclarinet.play();\n}\nif (SimpleGUI::Button(U\"Trumpet\", Vec2{ 20, 100 }))\n{\ntrumpet.play();\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#374-\u97f3\u58f0\u6ce2\u5f62\u30c7\u30fc\u30bf\u304b\u3089\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u4f5c\u6210\u3059\u308b","title":"37.4 \u97f3\u58f0\u6ce2\u5f62\u30c7\u30fc\u30bf\u304b\u3089\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u4f5c\u6210\u3059\u308b","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u751f\u6210\u30fb\u52a0\u5de5\u3057\u305f\u97f3\u58f0\u6ce2\u5f62\u30c7\u30fc\u30bf\uff08<code>Wave</code> \u30af\u30e9\u30b9\uff09\u304b\u3089\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002<code>Wave</code> \u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u306f \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 54. \u97f3\u58f0\u6ce2\u5f62 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nWave MakeWave()\n{\nWave wave{ Wave::DefaultSampleRate * 2 };\nfor (size_t i = 0; i &lt; wave.size(); ++i)\n{\nconst double t = (static_cast&lt;double&gt;(i) / Wave::DefaultSampleRate);\nwave[i] = static_cast&lt;float&gt;(Math::Sin(t * 220.0 * 2_pi));\n}\nreturn wave;\n}\nvoid Main()\n{\n// \u97f3\u58f0\u6ce2\u5f62\u30c7\u30fc\u30bf\u304b\u3089\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u4f5c\u6210\u3059\u308b\nconst Audio audio{ MakeWave() };\naudio.play();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#375-\u540c\u3058\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u91cd\u306d\u3066\u518d\u751f\u3059\u308b","title":"37.5 \u540c\u3058\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u91cd\u306d\u3066\u518d\u751f\u3059\u308b","text":"<p>1 \u3064\u306e <code>Audio</code> \u3092\u91cd\u306d\u3066\u518d\u751f\u3057\u305f\u3044\u5834\u5408\u306b\u306f <code>.play()</code> \u306e\u4ee3\u308f\u308a\u306b <code>.playOneShot()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002<code>.playOneShot()</code> \u306e\u5f15\u6570\u306b\u306f\u97f3\u91cf\u3001\u30d1\u30f3\u3001\u518d\u751f\u30b9\u30d4\u30fc\u30c9\u3092\u6e21\u305b\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30d4\u30a2\u30ce\u306e C4 (\u30c9) \u306e\u97f3\u3002\nconst Audio piano{ GMInstrument::Piano1, PianoKey::C4, 0.5s };\n// \u30af\u30e9\u30ea\u30cd\u30c3\u30c8\u306e D4 (\u30ec) \u306e\u97f3\nconst Audio clarinet{ GMInstrument::Clarinet, PianoKey::D4, 0.5s };\n// \u30c8\u30e9\u30f3\u30da\u30c3\u30c8\u306e E4 (\u30df) \u306e\u97f3\nconst Audio trumpet{ GMInstrument::Trumpet, PianoKey::E4, 0.5s };\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Piano\", Vec2{ 20, 20 }))\n{\n// \u97f3\u91cf 0.5 \u3067\u518d\u751f\npiano.playOneShot(0.5);\n}\nif (SimpleGUI::Button(U\"Clarinet\", Vec2{ 20, 60 }))\n{\nclarinet.playOneShot(0.5);\n}\nif (SimpleGUI::Button(U\"Trumpet\", Vec2{ 20, 100 }))\n{\ntrumpet.playOneShot(0.5);\n}\n}\n}\n</code></pre> <p>\u540c\u6642\u306b\u518d\u751f\u3059\u308b\u97f3\u58f0\u304c\u591a\u304f\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3059\u308b</p> <p>\u540c\u6642\u306b\u518d\u751f\u3059\u308b\u97f3\u58f0\u304c\u591a\u304f\u306a\u308b\u3068\uff08\u3068\u304f\u306b 64 \u3092\u8d85\u3048\u308b\u3068\uff09\u52d5\u4f5c\u304c\u4e0d\u5b89\u5b9a\u306b\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u97f3\u58f0\u306e\u6642\u9593\u3092\u77ed\u304f\u3057\u305f\u308a\u3001\u91cd\u306d\u3066\u518d\u751f\u3059\u308b\u983b\u5ea6\u3092\u6e1b\u3089\u3059\u306a\u3069\u3057\u3066\u3001\u540c\u6642\u306b\u518d\u751f\u3059\u308b\u97f3\u58f0\u306e\u6570\u3092\u6e1b\u3089\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"tutorial3/audio/#376-\u7a7a\u306e\u30aa\u30fc\u30c7\u30a3\u30aa","title":"37.6 \u7a7a\u306e\u30aa\u30fc\u30c7\u30a3\u30aa","text":"<p><code>Audio</code> \u578b\u306e\u5909\u6570\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u7a7a\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u306e\u30ed\u30fc\u30c9\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u3082\u7a7a\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u7a7a\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u306f\u3001\u300c\u30d5\u30ef\u300d\u3068\u9cf4\u308b 0.5 \u79d2\u306e\u97f3\u3067\u3001\u6709\u52b9\u306a\u30aa\u30fc\u30c7\u30a3\u30aa\u3068\u540c\u3058\u3088\u3046\u306b\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u3001\u518d\u751f\u3057\u3066\u3082\u30a8\u30e9\u30fc\u306f\u767a\u751f\u3057\u307e\u305b\u3093\u3002</p> <p>\u7a7a\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u3067\u3042\u308b\u304b\u3092\u8abf\u3079\u308b\u306b\u306f\u3001<code>if (audio.isEmpty())</code>, <code>if (audio)</code>, <code>if (not audio)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u521d\u671f\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u306a\u3044\u3068\u3001\u7a7a\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u306b\u306a\u308b\nAudio audioA;\nif (not audioA)\n{\nPrint &lt;&lt; U\"audioA is empty\";\n}\n// \u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3059\u308b\u3068\u3001\u7a7a\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u306b\u306a\u308b\nAudio audioB{ U\"aaa/bbb.wav\" };\nif (not audioB)\n{\nPrint &lt;&lt; U\"audioB is empty\";\n}\nwhile (System::Update())\n{\nif (SimpleGUI::Button(U\"Play A\", Vec2{ 200, 20 }))\n{\naudioA.playOneShot();\n}\nif (SimpleGUI::Button(U\"Play B\", Vec2{ 200, 60 }))\n{\naudioB.playOneShot();\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#377-\u4e00\u6642\u505c\u6b62\u3068\u505c\u6b62","title":"37.7 \u4e00\u6642\u505c\u6b62\u3068\u505c\u6b62","text":"<p>\u518d\u751f\u4e2d\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u4e00\u6642\u505c\u6b62\u3059\u308b\u306b\u306f <code>.pause()</code>, \u505c\u6b62\u3057\u3066\u518d\u751f\u4f4d\u7f6e\u3092\u6700\u521d\u306b\u623b\u3059\u306b\u306f <code>.stop()</code> \u3092\u547c\u3073\u307e\u3059\u3002</p> <p>\u30aa\u30fc\u30c7\u30a3\u30aa\u304c\u518d\u751f\u4e2d\u3067\u3042\u308b\u304b\u306f <code>.isPlaying()</code>, \u4e00\u6642\u505c\u6b62\u4e2d\u3067\u3042\u308b\u304b\u306f <code>.isPaused()</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Audio audio{ Audio::Stream, U\"example/test.mp3\" };\nwhile (System::Update())\n{\nClearPrint();\n// \u518d\u751f\u3055\u308c\u3066\u3044\u308b\u304b\nPrint &lt;&lt; U\"isPlaying: \" &lt;&lt; audio.isPlaying();\n// \u4e00\u6642\u505c\u6b62\u4e2d\u3067\u3042\u308b\u304b\nPrint &lt;&lt; U\"isPaused: \" &lt;&lt; audio.isPaused();\nif (SimpleGUI::Button(U\"Play\", Vec2{ 200, 20 }))\n{\n// \u518d\u751f\u30fb\u518d\u958b\naudio.play();\n}\nif (SimpleGUI::Button(U\"Pause\", Vec2{ 200, 60 }))\n{\n// \u4e00\u6642\u505c\u6b62\naudio.pause();\n}\nif (SimpleGUI::Button(U\"Stop\", Vec2{ 200, 100 }))\n{\n// \u505c\u6b62\u3057\u3066\u518d\u751f\u4f4d\u7f6e\u3092\u6700\u521d\u306b\u623b\u3059\naudio.stop();\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#378-\u97f3\u91cf\u3092\u5909\u3048\u308b","title":"37.8 \u97f3\u91cf\u3092\u5909\u3048\u308b","text":"<p>\u500b\u5225\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u97f3\u91cf\u3092\u5909\u66f4\u3059\u308b\u306b\u306f <code>.setVolume()</code> \u306b 0.0\uff5e1.0 \u306e\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u97f3\u91cf\u306f 1.0 \u3067\u3059\u3002\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u97f3\u91cf\u306f <code>.getVolume()</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <p><code>.setVolume()</code> \u306f\u3001<code>.playOneShot()</code> \u3067\u518d\u751f\u3057\u3066\u3044\u308b\u97f3\u58f0\u306b\u306f\u9069\u7528\u3055\u308c\u307e\u305b\u3093\u3002</p> <p>\u97f3\u91cf\u306f\u7b49\u6bd4\u3067\u52d5\u304b\u3059\u3068\u81ea\u7136\u306b\u805e\u3053\u3048\u308b</p> <p>\u97f3\u91cf\u3068\u8033\u306b\u805e\u3053\u3048\u308b\u97f3\u306e\u5927\u304d\u3055\u306e\u95a2\u4fc2\u306f\u3001\u4eba\u9593\u306e\u8033\u306e\u7279\u6027\u306b\u3088\u308a\u3001\u7dda\u5f62\u3067\u306f\u306a\u304f\u5bfe\u6570\u7684\u306a\u95a2\u4fc2\u306b\u306a\u308a\u307e\u3059\u30021.0 \u2192 0.8 \u2192 0.6 \u2192 0.4 \u2192 0.2 \u306e\u3088\u3046\u306b\u7b49\u5dee\u3067\u5909\u66f4\u3059\u308b\u3068\u30010 \u306b\u8fd1\u3065\u304f\u306b\u3064\u308c\u8033\u304c\u611f\u3058\u308b\u97f3\u91cf\u306e\u5909\u5316\u304c\u5927\u304d\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u4ee3\u308f\u308a\u306b 1.0 \u2192 0.8 \u2192 0.64 \u2192 0.512 \u2192 0.4096 \u306e\u3088\u3046\u306b\u7b49\u6bd4\u3067\u5909\u66f4\u3059\u308b\u3068\u3001\u3088\u308a\u81ea\u7136\u306a\u97f3\u91cf\u5909\u5316\u3068\u3057\u3066\u805e\u3053\u3048\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Audio audio{ Audio::Stream, U\"example/test.mp3\" };\naudio.play();\ndouble volume = 1.0;\nwhile (System::Update())\n{\nClearPrint();\n// \u73fe\u5728\u306e\u97f3\u91cf\u3092\u53d6\u5f97\nPrint &lt;&lt; audio.getVolume();\nif (SimpleGUI::Slider(U\"volume: {:.2f}\"_fmt(volume), volume, Vec2{ 200, 20 }, 160, 140))\n{\n// \u97f3\u91cf\u3092\u8a2d\u5b9a\naudio.setVolume(volume);\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#379-\u30d5\u30a7\u30fc\u30c9\u30a4\u30f3\u30d5\u30a7\u30fc\u30c9\u30a2\u30a6\u30c8","title":"37.9 \u30d5\u30a7\u30fc\u30c9\u30a4\u30f3\u30fb\u30d5\u30a7\u30fc\u30c9\u30a2\u30a6\u30c8","text":"<p><code>.play()</code>, <code>.pause()</code>, <code>.stop()</code> \u306e\u5f15\u6570\u306b\u6642\u9593\u3092\u6e21\u3059\u3068\u3001\u305d\u306e\u6642\u9593\u3092\u304b\u3051\u3066\u97f3\u91cf\u304c\u30d5\u30a7\u30fc\u30c9\u30a4\u30f3\u30fb\u30d5\u30a7\u30fc\u30c9\u30a2\u30a6\u30c8\u3057\u307e\u3059\u3002\u4e00\u6642\u505c\u6b62\u3068\u505c\u6b62\u306f\u3001\u30d5\u30a7\u30fc\u30c9\u30a2\u30a6\u30c8\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u9045\u5ef6\u3055\u308c\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Audio audio{ Audio::Stream, U\"example/test.mp3\" };\nwhile (System::Update())\n{\nClearPrint();\n// \u518d\u751f\u3055\u308c\u3066\u3044\u308b\u304b\nPrint &lt;&lt; U\"isPlaying: \" &lt;&lt; audio.isPlaying();\n// \u4e00\u6642\u505c\u6b62\u4e2d\u3067\u3042\u308b\u304b\nPrint &lt;&lt; U\"isPaused: \" &lt;&lt; audio.isPaused();\n// \u73fe\u5728\u306e\u97f3\u91cf\nPrint &lt;&lt; audio.getVolume();\nif (SimpleGUI::Button(U\"Play\", Vec2{ 200, 20 }))\n{\n// 2 \u79d2\u304b\u3051\u3066\u518d\u751f\u30fb\u518d\u958b\naudio.play(2s);\n}\nif (SimpleGUI::Button(U\"Pause\", Vec2{ 200, 60 }))\n{\n// 2 \u79d2\u304b\u3051\u3066\u4e00\u6642\u505c\u6b62\naudio.pause(2s);\n}\nif (SimpleGUI::Button(U\"Stop\", Vec2{ 200, 100 }))\n{\n// 2 \u79d2\u304b\u3051\u3066\u505c\u6b62\u3057\u3066\u518d\u751f\u4f4d\u7f6e\u3092\u6700\u521d\u306b\u623b\u3059\naudio.stop(2s);\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#3710-\u518d\u751f\u4e2d\u306b\u97f3\u91cf\u3092\u5f90\u3005\u306b\u5909\u3048\u308b","title":"37.10 \u518d\u751f\u4e2d\u306b\u97f3\u91cf\u3092\u5f90\u3005\u306b\u5909\u3048\u308b","text":"<p><code>.fadeVolume(volume, duration)</code> \u3092\u4f7f\u3046\u3068\u3001\u6307\u5b9a\u3057\u305f\u6642\u9593 <code>duration</code> \u3060\u3051\u304b\u3051\u3066\u3001\u97f3\u91cf\u304c\u5f90\u3005\u306b <code>volume</code> \u3078\u5909\u5316\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Audio audio{ Audio::Stream, U\"example/test.mp3\" };\naudio.play();\nwhile (System::Update())\n{\nClearPrint();\n// \u73fe\u5728\u306e\u97f3\u91cf\nPrint &lt;&lt; audio.getVolume();\nif (SimpleGUI::Button(U\"1.0\", Vec2{ 200, 20 }))\n{\n// 2 \u79d2\u304b\u3051\u3066\u97f3\u91cf\u3092 1.0 \u306b\naudio.fadeVolume(1.0, 2s);\n}\nif (SimpleGUI::Button(U\"0.5\", Vec2{ 200, 60 }))\n{\n// 1 \u79d2\u304b\u3051\u3066\u97f3\u91cf\u3092 0.5 \u306b\naudio.fadeVolume(0.5, 1s);\n}\nif (SimpleGUI::Button(U\"0.1\", Vec2{ 200, 100 }))\n{\n// 1.5 \u79d2\u304b\u3051\u3066\u97f3\u91cf\u3092 0.1 \u306b\naudio.fadeVolume(0.1, 1.5s);\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#3711-\u518d\u751f\u30b9\u30d4\u30fc\u30c9\u3092\u5909\u3048\u308b","title":"37.11 \u518d\u751f\u30b9\u30d4\u30fc\u30c9\u3092\u5909\u3048\u308b","text":"<p>\u518d\u751f\u30b9\u30d4\u30fc\u30c9\u3092\u5909\u3048\u308b\u306b\u306f <code>.setSpeed(speed)</code> \u307e\u305f\u306f <code>.fadeSpeed(speed, duration)</code> \u3092\u4f7f\u3063\u3066\u3001\u518d\u751f\u30b9\u30d4\u30fc\u30c9\u306e\u500d\u7387\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 1.0 \u3067\u3059\u3002\u518d\u751f\u30b9\u30d4\u30fc\u30c9\u304c\u901f\u304f\u306a\u308b\u3068\u97f3\u306f\u9ad8\u304f\u805e\u3053\u3048\u3001\u9045\u304f\u306a\u308b\u3068\u4f4e\u304f\u805e\u3053\u3048\u307e\u3059\u3002\u30b9\u30d4\u30fc\u30c9\u3092\u65e9\u304f\u3057\u3066\u3082\u97f3\u306e\u9ad8\u4f4e\u304c\u767a\u751f\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u300137.18 \u306e\u300c\u30d4\u30c3\u30c1\u30b7\u30d5\u30c8\u300d\u3068\u7d44\u307f\u5408\u308f\u305b\u307e\u3059\u3002</p> <p>\u73fe\u5728\u306e\u518d\u751f\u30b9\u30d4\u30fc\u30c9\u306f <code>.getSpeed()</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Audio audio{ Audio::Stream, U\"example/test.mp3\" };\naudio.play();\nwhile (System::Update())\n{\nClearPrint();\n// \u73fe\u5728\u306e\u30b9\u30d4\u30fc\u30c9\nPrint &lt;&lt; audio.getSpeed();\nif (SimpleGUI::Button(U\"1.2\", Vec2{ 200, 20 }))\n{\n// 2 \u79d2\u304b\u3051\u3066\u30b9\u30d4\u30fc\u30c9\u3092 1.2 \u306b\naudio.fadeSpeed(1.2, 2s);\n}\nif (SimpleGUI::Button(U\"1.0\", Vec2{ 200, 60 }))\n{\n// 1 \u79d2\u304b\u3051\u3066\u30b9\u30d4\u30fc\u30c9\u3092 1.0 \u306b\naudio.fadeSpeed(1.0, 1s);\n}\nif (SimpleGUI::Button(U\"0.8\", Vec2{ 200, 100 }))\n{\n// 1.5 \u79d2\u304b\u3051\u3066\u30b9\u30d4\u30fc\u30c9\u3092 0.8 \u306b\naudio.fadeSpeed(0.8, 1.5s);\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#3712-\u30d1\u30f3\u3092\u5909\u3048\u308b","title":"37.12 \u30d1\u30f3\u3092\u5909\u3048\u308b","text":"<p>\u5de6\u53f3\u306e\u97f3\u91cf\u30d0\u30e9\u30f3\u30b9\uff08\u30d1\u30f3\uff09\u3092\u5909\u3048\u308b\u306b\u306f <code>.setPan(pan)</code> \u307e\u305f\u306f <code>.fadePan(pan, duration)</code> \u3092\u4f7f\u3063\u3066\u3001\u30d1\u30f3\u3092 -1.0\uff5e1.0 \u306e\u7bc4\u56f2\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002-1.0 \u306f\u6700\u3082\u5de6\u30011.0 \u306f\u6700\u3082\u53f3\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u4e2d\u592e\u306e 0.0 \u3067\u3059\u3002</p> <p>\u73fe\u5728\u306e\u30d1\u30f3\u306f <code>.getPan()</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Audio audio{ Audio::Stream, U\"example/test.mp3\" };\naudio.play();\nwhile (System::Update())\n{\nClearPrint();\n// \u73fe\u5728\u306e\u30d1\u30f3\nPrint &lt;&lt; audio.getPan();\nif (SimpleGUI::Button(U\"0.9\", Vec2{ 200, 20 }))\n{\n// 2 \u79d2\u304b\u3051\u3066\u30d1\u30f3\u3092 0.9 \u306b\naudio.fadePan(0.9, 2s);\n}\nif (SimpleGUI::Button(U\"0.0\", Vec2{ 200, 60 }))\n{\n// 1 \u79d2\u304b\u3051\u3066\u30d1\u30f3\u3092 0.0 \u306b\naudio.fadePan(0.0, 1s);\n}\nif (SimpleGUI::Button(U\"-0.9\", Vec2{ 200, 100 }))\n{\n// 1.5 \u79d2\u304b\u3051\u3066\u30d1\u30f3\u3092 -0.9 \u306b\naudio.fadePan(-0.9, 1.5s);\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#3713-\u518d\u751f\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b","title":"37.13 \u518d\u751f\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u5408\u8a08\u518d\u751f\u6642\u9593\uff08\u79d2\uff09\u306f <code>.lengthSec()</code>, \u5408\u8a08\u518d\u751f\u30b5\u30f3\u30d7\u30eb\u306f <code>.samples()</code> \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e\u3092 <code>.posSec()</code> \u3067\u306f\u79d2\u3001 <code>.posSample()</code> \u3067\u306f\u30b5\u30f3\u30d7\u30eb\u6570\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <p>\u97f3\u697d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u5408\u308f\u305b\u305f\u6f14\u51fa\u3084\u3001\u97f3\u697d\u30b2\u30fc\u30e0\u306e\u5224\u5b9a\u306b\u3001\u3053\u308c\u3089\u306e\u5024\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Audio audio{ Audio::Stream, U\"example/test.mp3\" };\naudio.play();\nwhile (System::Update())\n{\nClearPrint();\n// \u66f2\u5168\u4f53\u306e\u9577\u3055\nPrint &lt;&lt; U\"all: {:.1f} sec ({} samples)\"_fmt(audio.lengthSec(), audio.samples());\n// \u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e\nPrint &lt;&lt; U\"play: {:.1f} sec ({} samples)\"_fmt(audio.posSec(), audio.posSample());\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#3714-\u518d\u751f\u4f4d\u7f6e\u3092\u5909\u66f4\u3059\u308b","title":"37.14 \u518d\u751f\u4f4d\u7f6e\u3092\u5909\u66f4\u3059\u308b","text":"<p>\u518d\u751f\u4f4d\u7f6e\u3092\u5909\u66f4\u3059\u308b\u306b\u306f\u3001<code>.seekSamples()</code> \u3067\u79fb\u52d5\u5148\u306e\u4f4d\u7f6e\u3092\u30b5\u30f3\u30d7\u30eb\u5358\u4f4d\u3067\u6307\u5b9a\u3059\u308b\u304b\u3001<code>.seekTime()</code> \u3067\u79fb\u52d5\u5148\u306e\u4f4d\u7f6e\u3092\u6642\u9593\uff08\u79d2\uff09\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Audio audio{ Audio::Stream, U\"example/test.mp3\" };\naudio.play();\nwhile (System::Update())\n{\nClearPrint();\n// \u66f2\u5168\u4f53\nPrint &lt;&lt; U\"all: {:.1f} sec ({} samples)\"_fmt(audio.lengthSec(), audio.samples());\n// \u518d\u751f\u4f4d\u7f6e\nPrint &lt;&lt; U\"play: {:.1f} sec ({} samples)\"_fmt(audio.posSec(), audio.posSample());\nif (SimpleGUI::Button(U\"0 samples\", Vec2{ 300, 20 }))\n{\n// 0 \u30b5\u30f3\u30d7\u30eb\u76ee\uff08\u66f2\u306e\u5148\u982d\uff09\u306b\u79fb\u52d5\naudio.seekSamples(0);\n}\nif (SimpleGUI::Button(U\"441,000 samples\", Vec2{ 300, 60 }))\n{\n// 441,000 \u30b5\u30f3\u30d7\u30eb\u76ee\u306b\u79fb\u52d5\naudio.seekSamples(441000);\n}\nif (SimpleGUI::Button(U\"20.0 sec\", Vec2{ 300, 100 }))\n{\n// 20 \u79d2\u306e\u4f4d\u7f6e\u306b\u79fb\u52d5\naudio.seekTime(20.0);\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#3715-\u30eb\u30fc\u30d7\u518d\u751f\u3059\u308b","title":"37.15 \u30eb\u30fc\u30d7\u518d\u751f\u3059\u308b","text":"<p>\u66f2\u306e\u518d\u751f\u304c\u7d42\u7aef\u306b\u5230\u9054\u3057\u305f\u3068\u304d\u3001\u81ea\u52d5\u7684\u306b\u5148\u982d\u304b\u3089\u518d\u3073\u518d\u751f\uff08\u30eb\u30fc\u30d7\uff09\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u3001<code>Audio</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b <code>Loop::Yes</code> \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Audio audio{ Audio::Stream, U\"example/test.mp3\", Loop::Yes };\naudio.play();\nwhile (System::Update())\n{\nClearPrint();\n// \u30eb\u30fc\u30d7\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\nPrint &lt;&lt; audio.isLoop();\n// \u30eb\u30fc\u30d7\u56de\u6570\nPrint &lt;&lt; audio.loopCount();\n// \u66f2\u5168\u4f53\nPrint &lt;&lt; U\"all: {:.1f} sec ({} samples)\"_fmt(audio.lengthSec(), audio.samples());\n// \u518d\u751f\u4f4d\u7f6e\nPrint &lt;&lt; U\"play: {:.1f} sec ({} samples)\"_fmt(audio.posSec(), audio.posSample());\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#3716-\u533a\u9593\u3092\u6307\u5b9a\u3057\u3066\u30eb\u30fc\u30d7\u518d\u751f\u3059\u308b","title":"37.16 \u533a\u9593\u3092\u6307\u5b9a\u3057\u3066\u30eb\u30fc\u30d7\u518d\u751f\u3059\u308b","text":"<p>\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u518d\u751f\u304c\u6307\u5b9a\u3057\u305f\u30eb\u30fc\u30d7\u7d42\u7aef\u4f4d\u7f6e\u306b\u5230\u9054\u3057\u305f\u3068\u304d\u3001\u6307\u5b9a\u3057\u305f\u30eb\u30fc\u30d7\u5148\u982d\u4f4d\u7f6e\u306b\u623b\u3063\u3066\u533a\u9593\u30eb\u30fc\u30d7\u518d\u751f\u3055\u305b\u308b\u306b\u306f\u3001\u30eb\u30fc\u30d7\u533a\u9593\u306e\u5148\u982d\u4f4d\u7f6e\u3092 <code>Arg::loopBegin</code>, \u7d42\u7aef\u4f4d\u7f6e\u3092 <code>Arg::loopEnd</code> \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u4f4d\u7f6e\u306e\u6307\u5b9a\u65b9\u6cd5\u306f\u30b5\u30f3\u30d7\u30eb\u6570\u304b\u6642\u9593\u304b\u3092\u9078\u3079\u307e\u3059\u304c\u3001begin \u3068 end \u3067\u63c3\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p><code>Arg::loopEnd</code> \u3092\u6307\u5b9a\u3059\u308b\u3068\u305d\u308c\u4ee5\u964d\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30fc\u30bf\u306f\u4fdd\u6301\u305b\u305a\u3001\u30e1\u30e2\u30ea\u306e\u6d88\u8cbb\u91cf\u304c\u7bc0\u7d04\u3055\u308c\u307e\u3059\u3002</p> <p>\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u3067\u306f\u3001<code>Arg::loopEnd</code> \u3092\u6307\u5b9a\u3067\u304d\u306a\u3044\u5236\u7d04\u304c\u3042\u308a\u307e\u3059\u3002\u5fc5\u8981\u306a\u5834\u5408\u306f\u97f3\u58f0\u30c7\u30fc\u30bf\u3092\u3042\u3089\u304b\u3058\u3081\u4e8b\u524d\u306b\u30ab\u30c3\u30c8\u3059\u308b\u52a0\u5de5\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <p>\u6ce2\u5f62\u306e\u305a\u308c\u306b\u3088\u308a\u3001\u30eb\u30fc\u30d7\u306e\u77ac\u9593\u306b\u30ce\u30a4\u30ba\u97f3\u304c\u751f\u3058\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// 1.5 \u79d2\uff5e44.5 \u79d2\u306e\u533a\u9593\u3092\u30eb\u30fc\u30d7\nconst Audio audio{ U\"example/test.mp3\", Arg::loopBegin = 1.5s, Arg::loopEnd = 44.5s };\naudio.play();\nwhile (System::Update())\n{\nClearPrint();\n// \u30eb\u30fc\u30d7\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\nPrint &lt;&lt; audio.isLoop();\n// \u30eb\u30fc\u30d7\u56de\u6570\nPrint &lt;&lt; audio.loopCount();\n// \u66f2\u5168\u4f53\nPrint &lt;&lt; U\"all: {:.1f} sec ({} samples)\"_fmt(audio.lengthSec(), audio.samples());\n// \u518d\u751f\u4f4d\u7f6e\nPrint &lt;&lt; U\"play: {:.1f} sec ({} samples)\"_fmt(audio.posSec(), audio.posSample());\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#3717-\u30df\u30ad\u30b7\u30f3\u30b0\u30d0\u30b9\u3068\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa","title":"37.17 \u30df\u30ad\u30b7\u30f3\u30b0\u30d0\u30b9\u3068\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa","text":"<p>\u30aa\u30fc\u30c7\u30a3\u30aa\u3092 BGM, \u74b0\u5883\u97f3\u3001\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u30dc\u30a4\u30b9\u306a\u3069\u306e\u30b0\u30eb\u30fc\u30d7\u306b\u5206\u985e\u3057\u3001\u30b0\u30eb\u30fc\u30d7\u3054\u3068\u306b\u97f3\u91cf\u306a\u3069\u3092\u5236\u5fa1\u3057\u305f\u3044\u5834\u5408\u3001\u30df\u30ad\u30b7\u30f3\u30b0\u30d0\u30b9 \u304c\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u306f MixBus0 \uff5e MixBus3 \u306e 4 \u3064\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u3044\u305a\u308c\u304b\u306e\u30df\u30ad\u30b7\u30f3\u30b0\u30d0\u30b9\u3092\u901a\u308a\u3001\u30df\u30ad\u30b7\u30f3\u30b0\u30d0\u30b9\u3092\u901a\u904e\u3057\u305f\u3059\u3079\u3066\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u901a\u3063\u3066\u518d\u751f\u3055\u308c\u307e\u3059\u3002</p> <p></p> <p>\u500b\u3005\u306e\u30df\u30ad\u30b7\u30f3\u30b0\u30d0\u30b9\u3067\u306f\u6b21\u306e\u3088\u3046\u306a\u64cd\u4f5c\u304c\u3067\u304d\u307e\u3059\u3002 - \u97f3\u91cf\u306e\u8abf\u6574 - \u518d\u751f\u4e2d\u306e\u6ce2\u5f62\u30b5\u30f3\u30d7\u30eb\u306e\u53d6\u5f97 - \u518d\u751f\u4e2d\u306e\u6ce2\u5f62\u306e FFT \u306e\u7d50\u679c\u53d6\u5f97 - \u30aa\u30fc\u30c7\u30a3\u30aa\u30d5\u30a3\u30eb\u30bf\u306e\u9069\u7528\uff08\u6b21\u7bc0\u3067\u8aac\u660e\uff09</p> <p>\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa\u3067\u306f\u6b21\u306e\u3088\u3046\u306a\u64cd\u4f5c\u304c\u3067\u304d\u307e\u3059\u3002 - \u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u4e00\u6589\u505c\u6b62\u30fb\u518d\u958b - \u97f3\u91cf\u306e\u8abf\u6574 - \u518d\u751f\u4e2d\u306e\u6ce2\u5f62\u30b5\u30f3\u30d7\u30eb\u306e\u53d6\u5f97 - \u518d\u751f\u4e2d\u306e\u6ce2\u5f62\u306e FFT \u306e\u7d50\u679c\u53d6\u5f97</p> <p>\u6700\u7d42\u7684\u306b\u51fa\u529b\u3055\u308c\u308b\u97f3\u91cf\u306f\u3001 <code>Audio</code> \u3067\u8a2d\u5b9a\u3055\u308c\u305f\u97f3\u91cf \u00d7 \u30df\u30ad\u30b7\u30f3\u30b0\u30d0\u30b9\u306e\u97f3\u91cf \u00d7 \u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u97f3\u91cf \u3067\u3059\u3002</p> <p><code>Audio</code> \u3092\u3069\u306e\u30df\u30ad\u30b7\u30f3\u30b0\u30d0\u30b9\u3067\u518d\u751f\u3059\u308b\u304b\u3092\u6307\u5b9a\u3059\u308b\u306b\u306f\u3001<code>.play()</code> \u307e\u305f\u306f <code>.playOneShot()</code> \u306e\u5f15\u6570\u306b <code>MixBus0</code> \uff5e <code>MixBus3</code> \u3092\u6307\u5b9a\u3057\u307e\u3059\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f <code>MixBus0</code>\uff09\u3002</p> <p>\u30df\u30ad\u30b7\u30f3\u30b0\u30d0\u30b9\u306e\u97f3\u91cf\u3092\u8abf\u6574\u3059\u308b\u306b\u306f <code>GlobalAudio::BusSetVolume(busIndex, volume)</code>, <code>GlobalAudio::BusFadeVolume(busIndex, volume, duration)</code> \u3092\u547c\u3073\u307e\u3059\u3002</p> <p>\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u97f3\u91cf\u3092\u8abf\u6574\u3059\u308b\u306b\u306f <code>GlobalAudio::SetVolume(volume)</code>, <code>GlobalAudio::FadeVolume(volume, duration)</code> \u3092\u547c\u3073\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30d4\u30a2\u30ce\u306e C4 (\u30c9) \u306e\u97f3\nconst Audio pianoC{ GMInstrument::Piano1, PianoKey::C4, 0.5s };\n// \u30d4\u30a2\u30ce\u306e D4 (\u30ec) \u306e\u97f3\nconst Audio pianoD{ GMInstrument::Piano1, PianoKey::D4, 0.5s };\n// \u30d4\u30a2\u30ce\u306e E4 (\u30df) \u306e\u97f3\nconst Audio pianoE{ GMInstrument::Piano1, PianoKey::E4, 0.5s };\ndouble globalVolume = 1.0, mixBus0Volume = 1.0, mixBus1Volume = 1.0;\nwhile (System::Update())\n{\nif (SimpleGUI::Slider(U\"Global Vol\", globalVolume, Vec2{ 20, 20 }, 120, 200))\n{\n// \u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u97f3\u91cf\u3092\u5909\u66f4\nGlobalAudio::SetVolume(globalVolume);\n}\nif (SimpleGUI::Slider(U\"Bus0 Vol\", mixBus0Volume, Vec2{ 20, 60 }, 120, 120))\n{\n// MixBus0 \u306e\u97f3\u91cf\u3092\u5909\u66f4\nGlobalAudio::BusSetVolume(MixBus0, mixBus0Volume);\n}\nif (SimpleGUI::Slider(U\"Bus1 Vol\", mixBus1Volume, Vec2{ 300, 60 }, 120, 120))\n{\n// MixBus1 \u306e\u97f3\u91cf\u3092\u5909\u66f4\nGlobalAudio::BusSetVolume(MixBus1, mixBus1Volume);\n}\nif (SimpleGUI::Button(U\"C Bus0\", Vec2{ 20, 100 }))\n{\npianoC.playOneShot(MixBus0, 0.5);\n}\nif (SimpleGUI::Button(U\"D Bus0\", Vec2{ 20, 140 }))\n{\npianoD.playOneShot(MixBus0, 0.5);\n}\nif (SimpleGUI::Button(U\"E Bus0\", Vec2{ 20, 180 }))\n{\npianoE.playOneShot(MixBus0, 0.5);\n}\nif (SimpleGUI::Button(U\"C Bus1\", Vec2{ 300, 100 }))\n{\npianoC.playOneShot(MixBus1, 0.5);\n}\nif (SimpleGUI::Button(U\"D Bus1\", Vec2{ 300, 140 }))\n{\npianoD.playOneShot(MixBus1, 0.5);\n}\nif (SimpleGUI::Button(U\"E Bus1\", Vec2{ 300, 180 }))\n{\npianoE.playOneShot(MixBus1, 0.5);\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#3718-\u30d4\u30c3\u30c1\u30b7\u30d5\u30c8","title":"37.18 \u30d4\u30c3\u30c1\u30b7\u30d5\u30c8","text":"<p>\u30d4\u30c3\u30c1\u30b7\u30d5\u30c8\u3068\u306f\u3001\u518d\u751f\u30b9\u30d4\u30fc\u30c9\u3092\u5909\u3048\u305a\u306b\u97f3\u306e\u9ad8\u3055\u3092\u5909\u3048\u308b\u3053\u3068\u3067\u3059\u3002\u30df\u30ad\u30b7\u30f3\u30b0\u30d0\u30b9\u306b\u306f\u3001\u30d4\u30c3\u30c1\u30b7\u30d5\u30c8\u30d5\u30a3\u30eb\u30bf\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p><code>GlobalAudio::BusSetPitchShiftFilter(mixbus, index, pitchShift)</code> \u3067\u3001\u30df\u30ad\u30b7\u30f3\u30b0\u30d0\u30b9\u306e <code>index</code> \u756a\u76ee\u306e\u30d5\u30a3\u30eb\u30bf\u306b\u30d4\u30c3\u30c1\u30b7\u30d5\u30c8\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002<code>pitchShift</code> \u306f 0.0 \u304c\u30d4\u30c3\u30c1\u3092\u5909\u3048\u306a\u3044\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u300212.0 \u304c 1 \u30aa\u30af\u30bf\u30fc\u30d6\u4e0a\u3052\u308b\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002-12.0 \u304c 1 \u30aa\u30af\u30bf\u30fc\u30d6\u4e0b\u3052\u308b\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067 Audio \u3092\u4f5c\u6210\u3059\u308b\nconst Audio audio{ U\"example/test.mp3\" };\n// \u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u518d\u751f\u3059\u308b\naudio.play();\n// \u30d4\u30c3\u30c1\u30b7\u30d5\u30c8\u306e\u91cf\ndouble pitchShift = 0.0;\nwhile (System::Update())\n{\nif (SimpleGUI::Slider(U\"pitchShift: {:.2f}\"_fmt(pitchShift), pitchShift, -12.0, 12.0, Vec2{ 40, 40 }, 160, 300))\n{\n// MixBus0 \u306e 0 \u756a\u76ee\u306e\u30d5\u30a3\u30eb\u30bf\u306b\u30d4\u30c3\u30c1\u30b7\u30d5\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\nGlobalAudio::BusSetPitchShiftFilter(MixBus0, 0, pitchShift);\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#3719-\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u6ce2\u5f62\u3092\u53d6\u5f97\u3059\u308b","title":"37.19 \u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u6ce2\u5f62\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3067\u306a\u3044\u30aa\u30fc\u30c7\u30a3\u30aa\u304b\u3089\u306f\u3001<code>.getSamples(channel)</code> \u3067\u30aa\u30fc\u30c7\u30a3\u30aa\u5168\u4f53\u306e\u6ce2\u5f62\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002<code>channel</code> \u306f\u30010 \u304c\u5de6\u30c1\u30e3\u30f3\u30cd\u30eb\u30011 \u304c\u53f3\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u8868\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u6ce2\u5f62\u306e\u5148\u982d\u306e\u30dd\u30a4\u30f3\u30bf <code>const float*</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Audio audio{ U\"example/test.mp3\" };\naudio.play();\nconst float* pSamples = audio.getSamples(0);\nLineString lines(800);\nwhile (System::Update())\n{\nconst int64 posSample = audio.posSample();\n// \u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e\u304b\u3089 800 \u30b5\u30f3\u30d7\u30eb\u5206\u306e\u6ce2\u5f62\u3092\u53d6\u5f97\u3059\u308b\nfor (int64 i = posSample; i &lt; (posSample + 800); ++i)\n{\nif (i &lt; audio.samples())\n{\nlines[i - posSample].set((i - posSample), (300 + pSamples[i] * 200));\n}\nelse\n{\nlines[i - posSample].set((i - posSample), 300);\n}\n}\n// \u6ce2\u5f62\u3092\u63cf\u753b\u3059\u308b\nlines.draw(2);\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#3720-\u518d\u751f\u3055\u308c\u3066\u3044\u308b\u76f4\u8fd1\u306e\u6ce2\u5f62\u3092\u53d6\u5f97\u3059\u308b","title":"37.20 \u518d\u751f\u3055\u308c\u3066\u3044\u308b\u76f4\u8fd1\u306e\u6ce2\u5f62\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u30df\u30ad\u30b7\u30f3\u30b0\u30d0\u30b9\u3092\u901a\u904e\u3057\u305f\u76f4\u8fd1 256 \u30b5\u30f3\u30d7\u30eb\u306e\u6ce2\u5f62\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u7b49\u306e\u6709\u7121\u306b\u304b\u304b\u308f\u3089\u305a\u3001\u305d\u306e\u30df\u30ad\u30b7\u30f3\u30b0\u30d0\u30b9\u3092\u901a\u3057\u3066\u518d\u751f\u3055\u308c\u308b\u3059\u3079\u3066\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u5408\u6210\u6ce2\u5f62\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002</p> \u95a2\u6570 \u53d6\u5f97\u5148 <code>GlobalAudio::GetSamples()</code> \u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa <code>GlobalAudio::BusGetSamples(mixbus)</code> \u30df\u30ad\u30b7\u30f3\u30b0\u30d0\u30b9 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst Audio audio1{ U\"example/test.mp3\" };\nconst Audio audio2{ GMInstrument::Trumpet, PianoKey::E4, 0.5s };\naudio1.play();\nLineString lines(256);\nArray&lt;float&gt; samples;\nwhile (System::Update())\n{\nif (KeySpace.down())\n{\naudio2.playOneShot();\n}\n// \u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u901a\u904e\u3057\u305f\u76f4\u8fd1 256 \u30b5\u30f3\u30d7\u30eb\u5206\u306e\u6ce2\u5f62\u3092\u53d6\u5f97\u3059\u308b\nGlobalAudio::GetSamples(samples);\nfor (size_t i = 0; i &lt; samples.size(); ++i)\n{\nlines[i].set((i * 800.0 / 256.0), (300 + samples[i] * 200));\n}\n// \u6ce2\u5f62\u3092\u63cf\u753b\u3059\u308b\nlines.draw(2);\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#3721-\u30aa\u30fc\u30c7\u30a3\u30aa\u30d5\u30a3\u30eb\u30bf","title":"37.21 \u30aa\u30fc\u30c7\u30a3\u30aa\u30d5\u30a3\u30eb\u30bf","text":"<p>1 \u3064\u306e\u30df\u30ad\u30b7\u30f3\u30b0\u30d0\u30b9\u306b\u306f\u6700\u5927 8 \u3064\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u30d5\u30a3\u30eb\u30bf\u3092\u8a2d\u5b9a\u3057\u3001\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u518d\u751f\u4e2d\u306b\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u306e\u97f3\u58f0\u6ce2\u5f62\u52a0\u5de5\u304c\u3067\u304d\u307e\u3059\u3002</p> \u95a2\u6570\uff08\u5f15\u6570\u306f\u7701\u7565) \u8aac\u660e <code>GlobalAudio::BusClearFilter()</code> \u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30d5\u30a3\u30eb\u30bf\u3092\u30aa\u30d5\u306b\u3057\u307e\u3059 <code>GlobalAudio::BusSetLowPassFilter()</code> \u30ed\u30fc\u30d1\u30b9\u30d5\u30a3\u30eb\u30bf\u3092\u8a2d\u5b9a\u3057\u307e\u3059 <code>GlobalAudio::BusSetHighPassFilter()</code> \u30cf\u30a4\u30d1\u30b9\u30d5\u30a3\u30eb\u30bf\u3092\u8a2d\u5b9a\u3057\u307e\u3059 <code>GlobalAudio::BusSetEchoFilter()</code> \u30a8\u30b3\u30fc\u30d5\u30a3\u30eb\u30bf\u3092\u8a2d\u5b9a\u3057\u307e\u3059 <code>GlobalAudio::BusSetReverbFilter()</code> \u30ea\u30d0\u30fc\u30d6\u30d5\u30a3\u30eb\u30bf\u3092\u8a2d\u5b9a\u3057\u307e\u3059 <code>GlobalAudio::BusSetPitchShiftFilter()</code> \u30d4\u30c3\u30c1\u30b7\u30d5\u30c8\u30d5\u30a3\u30eb\u30bf\u3092\u8a2d\u5b9a\u3057\u307e\u3059 <p>Web \u7248\u3067\u306f\u3001\u30d4\u30c3\u30c1\u30b7\u30d5\u30c8\u30d5\u30a3\u30eb\u30bf\u3092\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002<code>GlobalAudio::SupportsPitchShift()</code> \u3092\u4f7f\u3046\u3068\u3001\u73fe\u5728\u306e\u5b9f\u884c\u74b0\u5883\u3067\u30d4\u30c3\u30c1\u30b7\u30d5\u30c8\u30d5\u30a3\u30eb\u30bf\u3092\u5229\u7528\u3067\u304d\u308b\u304b\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <p>\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u3001\u30aa\u30fc\u30c7\u30a3\u30aa\u30d5\u30a3\u30eb\u30bf\u6a5f\u80fd\u306e\u30c7\u30e2\u3067\u3059\u3002\u300cOpen audio file\u300d\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u30d1\u30bd\u30b3\u30f3\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u30aa\u30fc\u30c7\u30a3\u30aa\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u307e\u3059\u3002\u8a73\u3057\u304f\u306f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 46. \u30d5\u30a1\u30a4\u30eb\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(1280, 720);\nAudio audio;\ndouble posSec = 0.0;\ndouble volume = 1.0;\ndouble pan = 0.0;\ndouble speed = 1.0;\nbool loop = false;\nArray&lt;float&gt; busSamples;\nArray&lt;float&gt; globalSamples;\nFFTResult busFFT;\nFFTResult globalFFT;\nLineString lines(256, Vec2{ 0, 0 });\nbool pitch = false;\ndouble pitchShift = 0.0;\nbool lpf = false;\ndouble lpfCutoffFrequency = 800.0;\ndouble lpfResonance = 0.5;\ndouble lpfWet = 1.0;\nbool hpf = false;\ndouble hpfCutoffFrequency = 800.0;\ndouble hpfResonance = 0.5;\ndouble hpfWet = 1.0;\nbool echo = false;\ndouble delay = 0.1;\ndouble decay = 0.5;\ndouble echoWet = 0.5;\nbool reverb = false;\nbool freeze = false;\ndouble roomSize = 0.5;\ndouble damp = 0.0;\ndouble width = 0.5;\ndouble reverbWet = 0.5;\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"GlobalAudio::GetActiveVoiceCount(): \" &lt;&lt; GlobalAudio::GetActiveVoiceCount();\nPrint &lt;&lt; U\"isEmpty : \" &lt;&lt; audio.isEmpty();\nPrint &lt;&lt; U\"isStreaming : \" &lt;&lt; audio.isStreaming();\nPrint &lt;&lt; U\"sampleRate : \" &lt;&lt; audio.sampleRate();\nPrint &lt;&lt; U\"samples : \" &lt;&lt; audio.samples();\nPrint &lt;&lt; U\"lengthSec : \" &lt;&lt; audio.lengthSec();\nPrint &lt;&lt; U\"posSample : \" &lt;&lt; audio.posSample();\nPrint &lt;&lt; U\"posSec : \" &lt;&lt; (posSec = audio.posSec());\nPrint &lt;&lt; U\"isActive : \" &lt;&lt; audio.isActive();\nPrint &lt;&lt; U\"isPlaying : \" &lt;&lt; audio.isPlaying();\nPrint &lt;&lt; U\"isPaused : \" &lt;&lt; audio.isPaused();\nPrint &lt;&lt; U\"samplesPlayed : \" &lt;&lt; audio.samplesPlayed();\nPrint &lt;&lt; U\"isLoop : \" &lt;&lt; (loop = audio.isLoop());\nPrint &lt;&lt; U\"getLoopTimingtLoop : \" &lt;&lt; audio.getLoopTiming().beginPos &lt;&lt; U\", \" &lt;&lt; audio.getLoopTiming().endPos;\nPrint &lt;&lt; U\"loopCount : \" &lt;&lt; audio.loopCount();\nPrint &lt;&lt; U\"getVolume : \" &lt;&lt; (volume = audio.getVolume());\nPrint &lt;&lt; U\"getPan : \" &lt;&lt; (pan = audio.getPan());\nPrint &lt;&lt; U\"getSpeed : \" &lt;&lt; (speed = audio.getSpeed());\nif (SimpleGUI::Button(U\"Open audio file\", Vec2{ 60, 560 }))\n{\naudio.stop(0.5s);\naudio = Dialog::OpenAudio(Audio::Stream);\n}\n{\nGlobalAudio::BusGetSamples(MixBus0, busSamples);\nGlobalAudio::BusGetFFT(MixBus0, busFFT);\nfor (auto&amp;&amp; [i, s] : Indexed(busSamples))\n{\nlines[i].set((300.0 + i), (200.0 - s * 100.0));\n}\nif (busSamples)\n{\nlines.draw(2, Palette::Orange);\n}\nfor (auto&amp;&amp; [i, s] : Indexed(busFFT.buffer))\n{\nRectF{ Arg::bottomLeft(300 + i, 300), 1, (s * 4) }.draw();\n}\n}\n{\nGlobalAudio::GetSamples(globalSamples);\nGlobalAudio::GetFFT(globalFFT);\nfor (auto&amp;&amp; [i, s] : Indexed(globalSamples))\n{\nlines[i].set((300.0 + i), (550.0 - s * 100.0));\n}\nif (globalSamples)\n{\nlines.draw(2, Palette::Orange);\n}\nfor (auto&amp;&amp; [i, s] : Indexed(globalFFT.buffer))\n{\nRectF{ Arg::bottomLeft(300 + i, 650), 1, (s * 4) }.draw();\n}\n}\nif (SimpleGUI::Button(U\"Play\", Vec2{ 600, 20 }, 80, !audio.isPlaying()))\n{\naudio.play();\n}\nif (SimpleGUI::Button(U\"Pause\", Vec2{ 690, 20 }, 80, (audio.isPlaying() &amp;&amp; !audio.isPaused())))\n{\naudio.pause();\n}\nif (SimpleGUI::Button(U\"Stop\", Vec2{ 780, 20 }, 80, (audio.isPlaying() || audio.isPaused())))\n{\naudio.stop();\n}\nif (SimpleGUI::Button(U\"Play in 2s\", Vec2{ 870, 20 }, 120, !audio.isPlaying()))\n{\naudio.play(2s);\n}\nif (SimpleGUI::Button(U\"Pause in 2s\", Vec2{ 1000, 20 }, 120, (audio.isPlaying() &amp;&amp; !audio.isPaused())))\n{\naudio.pause(2s);\n}\nif (SimpleGUI::Button(U\"Stop in 2s\", Vec2{ 1130, 20 }, 120, (audio.isPlaying() || audio.isPaused())))\n{\naudio.stop(2s);\n}\nif (SimpleGUI::Slider(U\"{:.1f} / {:.1f}\"_fmt(posSec, audio.lengthSec()), posSec, 0.0, audio.lengthSec(), Vec2{ 600, 60 }, 160, 360))\n{\nif (MouseL.down() || !Cursor::DeltaF().isZero()) // \u30b7\u30fc\u30af\u306e\u9023\u7d9a\uff08\u30ce\u30a4\u30ba\u306e\u539f\u56e0\uff09\u3092\u9632\u3050\n{\naudio.seekTime(posSec);\n}\n}\nif (SimpleGUI::CheckBox(loop, U\"Loop\", Vec2{ 1130, 60 }))\n{\naudio.setLoop(loop);\n}\nif (SimpleGUI::Slider(U\"volume: {:.2f}\"_fmt(volume), volume, Vec2{ 600, 110 }, 140, 130))\n{\naudio.setVolume(volume);\n}\nif (SimpleGUI::Button(U\"0.0 in 2s\", Vec2{ 880, 110 }, 110, audio.isActive()))\n{\naudio.fadeVolume(0.0, 2s);\n}\nif (SimpleGUI::Button(U\"0.5 in 2s\", Vec2{ 1000, 110 }, 110, audio.isActive()))\n{\naudio.fadeVolume(0.5, 2s);\n}\nif (SimpleGUI::Button(U\"1.0 in 2s\", Vec2{ 1120, 110 }, 110, audio.isActive()))\n{\naudio.fadeVolume(1.0, 2s);\n}\nif (SimpleGUI::Slider(U\"pan: {:.2f}\"_fmt(pan), pan, -1.0, 1.0, Vec2{ 600, 150 }, 140, 130))\n{\naudio.setPan(pan);\n}\nif (SimpleGUI::Button(U\"-1.0 in 2s\", Vec2{ 880, 150 }, 110, audio.isActive()))\n{\naudio.fadePan(-1.0, 2s);\n}\nif (SimpleGUI::Button(U\"0.0 in 2s\", Vec2{ 1000, 150 }, 110, audio.isActive()))\n{\naudio.fadePan(0.0, 2s);\n}\nif (SimpleGUI::Button(U\"1.0 in 2s\", Vec2{ 1120, 150 }, 110, audio.isActive()))\n{\naudio.fadePan(1.0, 2s);\n}\nif (SimpleGUI::Slider(U\"speed: {:.3f}\"_fmt(speed), speed, 0.0, 4.0, Vec2{ 600, 190 }, 140, 130))\n{\naudio.setSpeed(speed);\n}\nif (SimpleGUI::Button(U\"0.8 in 2s\", Vec2{ 880, 190 }, 110, audio.isActive()))\n{\naudio.fadeSpeed(0.8, 2s);\n}\nif (SimpleGUI::Button(U\"1.0 in 2s\", Vec2{ 1000, 190 }, 110, audio.isActive()))\n{\naudio.fadeSpeed(1.0, 2s);\n}\nif (SimpleGUI::Button(U\"1.2 in 2s\", Vec2{ 1120, 190 }, 110, audio.isActive()))\n{\naudio.fadeSpeed(1.2, 2s);\n}\nbool updatePitch = false;\nbool updateLPF = false;\nbool updateHPF = false;\nbool updateEcho = false;\nbool updateReverb = false;\nif (SimpleGUI::CheckBox(pitch, U\"Pitch\", Vec2{ 600, 240 }, 120, GlobalAudio::SupportsPitchShift()))\n{\nif (pitch)\n{\nupdatePitch = true;\n}\nelse\n{\nGlobalAudio::BusClearFilter(MixBus0, 0);\n}\n}\nupdatePitch |= SimpleGUI::Slider(U\"pitchShift: {:.2f}\"_fmt(pitchShift), pitchShift, -12.0, 12.0, Vec2{ 720, 240 }, 160, 300);\nif (SimpleGUI::CheckBox(lpf, U\"LPF\", Vec2{ 600, 280 }, 120))\n{\nif (lpf)\n{\nupdateLPF = true;\n}\nelse\n{\nGlobalAudio::BusClearFilter(MixBus0, 1);\n}\n}\nupdateLPF |= SimpleGUI::Slider(U\"cutoffFrequency: {:.0f}\"_fmt(lpfCutoffFrequency), lpfCutoffFrequency, 10, 4000, Vec2{ 720, 280 }, 220, 240);\nupdateLPF |= SimpleGUI::Slider(U\"resonance: {:.2f}\"_fmt(lpfResonance), lpfResonance, 0.1, 8.0, Vec2{ 720, 310 }, 220, 240);\nupdateLPF |= SimpleGUI::Slider(U\"wet: {:.2f}\"_fmt(lpfWet), lpfWet, Vec2{ 720, 340 }, 220, 240);\nif (SimpleGUI::CheckBox(hpf, U\"HPF\", Vec2{ 600, 380 }, 120))\n{\nif (hpf)\n{\nupdateHPF = true;\n}\nelse\n{\nGlobalAudio::BusClearFilter(MixBus0, 2);\n}\n}\nupdateHPF |= SimpleGUI::Slider(U\"cutoffFrequency: {:.0f}\"_fmt(hpfCutoffFrequency), hpfCutoffFrequency, 10, 4000, Vec2{ 720, 380 }, 220, 240);\nupdateHPF |= SimpleGUI::Slider(U\"resonance: {:.2f}\"_fmt(hpfResonance), hpfResonance, 0.1, 8.0, Vec2{ 720, 410 }, 220, 240);\nupdateHPF |= SimpleGUI::Slider(U\"wet: {:.2f}\"_fmt(hpfWet), hpfWet, Vec2{ 720, 440 }, 220, 240);\nif (SimpleGUI::CheckBox(echo, U\"Echo\", Vec2{ 600, 480 }, 120))\n{\nif (echo)\n{\nupdateEcho = true;\n}\nelse\n{\nGlobalAudio::BusClearFilter(MixBus0, 3);\n}\n}\nupdateEcho |= SimpleGUI::Slider(U\"delay: {:.2f}\"_fmt(delay), delay, Vec2{ 720, 480 }, 220, 240);\nupdateEcho |= SimpleGUI::Slider(U\"decay: {:.2f}\"_fmt(decay), decay, Vec2{ 720, 510 }, 220, 240);\nupdateEcho |= SimpleGUI::Slider(U\"wet: {:.2f}\"_fmt(echoWet), echoWet, Vec2{ 720, 540 }, 220, 240);\nif (SimpleGUI::CheckBox(reverb, U\"Reverb\", Vec2{ 600, 580 }, 120))\n{\nif (reverb)\n{\nupdateReverb = true;\n}\nelse\n{\nGlobalAudio::BusClearFilter(MixBus0, 4);\n}\n}\nupdateReverb |= SimpleGUI::CheckBox(freeze, U\"freeze\", Vec2{ 720, 580 }, 110);\nupdateReverb |= SimpleGUI::Slider(U\"roomSize: {:.2f}\"_fmt(roomSize), roomSize, 0.001, 1.0, { 830, 580 }, 150, 200);\nupdateReverb |= SimpleGUI::Slider(U\"damp: {:.2f}\"_fmt(damp), damp, Vec2{ 720, 610 }, 220, 240);\nupdateReverb |= SimpleGUI::Slider(U\"width: {:.2f}\"_fmt(width), width, Vec2{ 720, 640 }, 220, 240);\nupdateReverb |= SimpleGUI::Slider(U\"wet: {:.2f}\"_fmt(reverbWet), reverbWet, Vec2{ 720, 670 }, 220, 240);\nif (pitch &amp;&amp; updatePitch)\n{\nGlobalAudio::BusSetPitchShiftFilter(MixBus0, 0, pitchShift);\n}\nif (lpf &amp;&amp; updateLPF)\n{\nGlobalAudio::BusSetLowPassFilter(MixBus0, 1, lpfCutoffFrequency, lpfResonance, lpfWet);\n}\nif (hpf &amp;&amp; updateHPF)\n{\nGlobalAudio::BusSetHighPassFilter(MixBus0, 2, hpfCutoffFrequency, hpfResonance, hpfWet);\n}\nif (echo &amp;&amp; updateEcho)\n{\nGlobalAudio::BusSetEchoFilter(MixBus0, 3, delay, decay, echoWet);\n}\nif (reverb &amp;&amp; updateReverb)\n{\nGlobalAudio::BusSetReverbFilter(MixBus0, 4, freeze, roomSize, damp, width, reverbWet);\n}\n}\n// \u518d\u751f\u4e2d\u306e\u97f3\u58f0\u304c\u3042\u308c\u3070\u3001\u30d5\u30a7\u30fc\u30c9\u30a2\u30a6\u30c8\u3055\u305b\u3066\u304b\u3089\u7d42\u4e86\nif (GlobalAudio::GetActiveVoiceCount())\n{\nGlobalAudio::FadeVolume(0.0, 0.5s);\nSystem::Sleep(0.5s);\n}\n}\n</code></pre>"},{"location":"tutorial3/audio/#3722-\u30aa\u30fc\u30c7\u30a3\u30aa\u30b0\u30eb\u30fc\u30d7","title":"37.22 \u30aa\u30fc\u30c7\u30a3\u30aa\u30b0\u30eb\u30fc\u30d7","text":"<p>\u30aa\u30fc\u30c7\u30a3\u30aa\u30b0\u30eb\u30fc\u30d7\u3092\u4f7f\u3046\u3068\u3001\u8907\u6570\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u5b8c\u5168\u306b\u540c\u671f\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u518d\u751f\u3067\u304d\u307e\u3059\u3002 \u8a73\u3057\u3044\u30b5\u30f3\u30d7\u30eb\u3068\u30b5\u30f3\u30d7\u30eb\u7528\u306e\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u306f Siv3D-Sample | BGM \u30af\u30ed\u30b9\u30d5\u30a7\u30fc\u30c9  \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"tutorial3/audio/#3723-\u6ce2\u5f62\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u66f8\u304d\u8fbc\u307f","title":"37.23 \u6ce2\u5f62\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u66f8\u304d\u8fbc\u307f","text":"<p><code>IAudioStream</code> \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3001\u6ce2\u5f62\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u66f8\u304d\u8fbc\u307f\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p><code>void getAudio(float* left, float* right, const size_t samplesToWrite) override</code> \u306f\u3001\u6ce2\u5f62\u306e\u66f8\u304d\u8fbc\u307f\u3092\u884c\u3046\u305f\u3081\u306e\u95a2\u6570\u3067\u3059\u3002<code>left</code> \u3068 <code>right</code> \u306f\u3001\u305d\u308c\u305e\u308c\u5de6\u53f3\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u6ce2\u5f62\u3092\u66f8\u304d\u8fbc\u3080\u305f\u3081\u306e\u30d0\u30c3\u30d5\u30a1\u3067\u3001\u66f8\u304d\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308b\u30b5\u30f3\u30d7\u30eb\u6570\u304c <code>samplesToWrite</code> \u306b\u3088\u3063\u3066\u6e21\u3055\u308c\u307e\u3059\u3002\u518d\u751f\u3092\u7d42\u4e86\u3059\u308b\u5834\u5408 <code>bool hasEnded() override</code> \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066 <code>true</code> \u3092\u8fd4\u3057\u307e\u3059\u3002\u5148\u982d\u3078\u306e\u5dfb\u304d\u623b\u3057\u304c\u884c\u308f\u308c\u308b\u5834\u5408\u306b <code>void rewind() override</code> \u304c\u547c\u3070\u308c\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nclass MyAudioStream : public IAudioStream\n{\npublic:\nvoid setFrequency(int32 frequency)\n{\nm_oldFrequency = m_frequency.load();\nm_frequency.store(frequency);\n}\nprivate:\nsize_t m_pos = 0;\nstd::atomic&lt;int32&gt; m_oldFrequency = 440;\nstd::atomic&lt;int32&gt; m_frequency = 440;\nvoid getAudio(float* left, float* right, const size_t samplesToWrite) override\n{\nconst int32 oldFrequency = m_oldFrequency;\nconst int32 frequency = m_frequency;\nconst float blend = (1.0f / samplesToWrite);\nfor (size_t i = 0; i &lt; samplesToWrite; ++i)\n{\nconst float t0 = (2_piF * oldFrequency * (static_cast&lt;float&gt;(m_pos) / Wave::DefaultSampleRate));\nconst float t1 = (2_piF * frequency * (static_cast&lt;float&gt;(m_pos) / Wave::DefaultSampleRate));\nconst float a = (Math::Lerp(std::sin(t0), std::sin(t1), (blend * i))) * 0.5f;\n*left++ = *right++ = a;\n++m_pos;\n}\nm_oldFrequency = frequency;\nm_pos %= Math::LCM(frequency, Wave::DefaultSampleRate);\n}\nbool hasEnded() override\n{\nreturn false;\n}\nvoid rewind() override\n{\nm_pos = 0;\n}\n};\nvoid Main()\n{\nstd::shared_ptr&lt;MyAudioStream&gt; audioStream = std::make_shared&lt;MyAudioStream&gt;();\nAudio audio{ audioStream };\naudio.play();\ndouble frequency = 440.0;\nwhile (System::Update())\n{\nif (SimpleGUI::Slider(U\"{}Hz\"_fmt(static_cast&lt;int32&gt;(frequency)), frequency, 220.0, 880.0, Vec2{ 40, 40 }, 120, 200))\n{\naudioStream-&gt;setFrequency(static_cast&lt;int32&gt;(frequency));\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/binary-file/","title":"45. \u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb","text":"<p>\u30d0\u30a4\u30ca\u30ea\u5f62\u5f0f\u3067\u30c7\u30fc\u30bf\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3001\u8aad\u307f\u8fbc\u3080\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | \u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb </p>"},{"location":"tutorial3/binary-file/#451-xxxxxxxxxxxxx","title":"45.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/binary-file/#452-xxxxxxxxxxxxxx","title":"45.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/binary-file/#453-xxxxxxxxxxxxx","title":"45.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/binary-file/#454-xxxxxxxxxxxxxx","title":"45.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/binary-file/#455-xxxxxxxxxxxxx","title":"45.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/binary-file/#456-xxxxxxxxxxxxxx","title":"45.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/binary-file/#457-xxxxxxxxxxxxx","title":"45.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/binary-file/#458-xxxxxxxxxxxxxx","title":"45.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/binary-file/#459-xxxxxxxxxxxxx","title":"45.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/binary-file/#4510-xxxxxxxxxxxxxx","title":"45.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/binary-file/#4511-xxxxxxxxxxxxxx","title":"45.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/binary-file/#4512-xxxxxxxxxxxxxx","title":"45.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/binary-file/#4513-xxxxxxxxxxxxxx","title":"45.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/binary-file/#4514-xxxxxxxxxxxxxx","title":"45.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/config-file/","title":"44. \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb","text":"<p>CSV, INI, JSON, TOML, XML \u306a\u3069\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u66f8\u304d\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb </p>"},{"location":"tutorial3/config-file/#441-xxxxxxxxxxxxx","title":"44.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/config-file/#442-xxxxxxxxxxxxxx","title":"44.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/config-file/#443-xxxxxxxxxxxxx","title":"44.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/config-file/#444-xxxxxxxxxxxxxx","title":"44.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/config-file/#445-xxxxxxxxxxxxx","title":"44.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/config-file/#446-xxxxxxxxxxxxxx","title":"44.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/config-file/#447-xxxxxxxxxxxxx","title":"44.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/config-file/#448-xxxxxxxxxxxxxx","title":"44.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/config-file/#449-xxxxxxxxxxxxx","title":"44.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/config-file/#4410-xxxxxxxxxxxxxx","title":"44.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/config-file/#4411-xxxxxxxxxxxxxx","title":"44.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/config-file/#4412-xxxxxxxxxxxxxx","title":"44.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/config-file/#4413-xxxxxxxxxxxxxx","title":"44.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/config-file/#4414-xxxxxxxxxxxxxx","title":"44.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/dragdrop/","title":"47. \u30c9\u30e9\u30c3\u30b0 &amp; \u30c9\u30ed\u30c3\u30d7","text":"<p>\u30c9\u30e9\u30c3\u30b0&amp;\u30c9\u30ed\u30c3\u30d7\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | \u30c9\u30e9\u30c3\u30b0&amp;\u30c9\u30ed\u30c3\u30d7 </p>"},{"location":"tutorial3/dragdrop/#471-xxxxxxxxxxxxx","title":"47.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/dragdrop/#472-xxxxxxxxxxxxxx","title":"47.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/dragdrop/#473-xxxxxxxxxxxxx","title":"47.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/dragdrop/#474-xxxxxxxxxxxxxx","title":"47.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/dragdrop/#475-xxxxxxxxxxxxx","title":"47.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/dragdrop/#476-xxxxxxxxxxxxxx","title":"47.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/dragdrop/#477-xxxxxxxxxxxxx","title":"47.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/dragdrop/#478-xxxxxxxxxxxxxx","title":"47.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/dragdrop/#479-xxxxxxxxxxxxx","title":"47.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/dragdrop/#4710-xxxxxxxxxxxxxx","title":"47.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/dragdrop/#4711-xxxxxxxxxxxxxx","title":"47.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/dragdrop/#4712-xxxxxxxxxxxxxx","title":"47.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/dragdrop/#4713-xxxxxxxxxxxxxx","title":"47.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/dragdrop/#4714-xxxxxxxxxxxxxx","title":"47.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/effect/","title":"40. \u30a8\u30d5\u30a7\u30af\u30c8","text":"<p>\u3061\u3087\u3063\u3068\u3057\u305f\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3084\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u6f14\u51fa\u306b\u4fbf\u5229\u306a <code>Effect</code> \u30af\u30e9\u30b9\u306e\u4f7f\u3044\u65b9\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial3/effect/#401-effect-\u306e\u57fa\u672c","title":"40.1 Effect \u306e\u57fa\u672c","text":"<p>\u30a8\u30d5\u30a7\u30af\u30c8\u6a5f\u80fd\u3092\u4f7f\u3046\u306b\u306f\u3001\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u7ba1\u7406\u3059\u308b <code>Effect</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001<code>Effect::add&lt;EffectType&gt;()</code> \u3067\u500b\u3005\u306e\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8ffd\u52a0\u3057\u3066\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u767a\u751f\u3055\u305b\u307e\u3059\u3002\u3053\u3053\u3067\u3044\u3046 <code>EffectType</code> \u306f\u3001<code>IEffect</code> \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3067\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u306b\u5fc5\u8981\u306a\u5b9f\u88c5\u306f <code>bool update(double t) override</code> \u30e1\u30f3\u30d0\u95a2\u6570\u3067\u3059\u3002</p> <p>\u3053\u306e\u95a2\u6570\u306f\u3001\u30a8\u30d5\u30a7\u30af\u30c8\u304c\u767a\u751f\u3057\u3066\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593 <code>t</code> \u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u308c\u306b\u5fdc\u3058\u305f\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u63cf\u753b\u3092\u884c\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u623b\u308a\u5024\u3068\u3057\u3066\u3001\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u3082\u7d99\u7d9a\u3055\u305b\u308b\u304b\u3092 <code>bool</code> \u5024\u3067\u8fd4\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070 <code>return (t &lt; 3.0);</code> \u3068\u3059\u308c\u3070\u3001\u30a8\u30d5\u30a7\u30af\u30c8\u306f 3 \u79d2\u9593\u7d99\u7d9a\u3057\u3066\u304b\u3089\u7d42\u4e86\u3057\u307e\u3059\u3002</p> <p><code>Effect</code> \u306f\u3001\u6642\u9593\u30d9\u30fc\u30b9\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u7c21\u5358\u306b\u4f5c\u308c\u308b\u305f\u3081\u3001\u30b2\u30fc\u30e0\u306e\u6f14\u51fa\u306b\u91cd\u5b9d\u3057\u307e\u3059\u3002\u6b21\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u30af\u30ea\u30c3\u30af\u3057\u305f\u5834\u6240\u306b\u3001\u6642\u9593\u3068\u3068\u3082\u306b\u5927\u304d\u304f\u306a\u308b\u8f2a\u3092\u767a\u751f\u3055\u305b\u308b\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u5b9f\u88c5\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u3053\u306e\u30a8\u30d5\u30a7\u30af\u30c8\u306f 1 \u79d2\u9593\u7d99\u7d9a\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nstruct RingEffect : IEffect\n{\nVec2 m_pos;\nColorF m_color;\n// \u3053\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u5f15\u6570\u304c\u3001Effect::add&lt;RingEffect&gt;() \u306e\u5f15\u6570\u306b\u306a\u308b\nexplicit RingEffect(const Vec2&amp; pos)\n: m_pos{ pos }\n, m_color{ RandomColorF() } {}\nbool update(double t) override\n{\n// \u6642\u9593\u306b\u5fdc\u3058\u3066\u5927\u304d\u304f\u306a\u308b\u8f2a\u3092\u63cf\u304f\nCircle{ m_pos, (t * 100) }.drawFrame(4, m_color);\n// 1 \u79d2\u672a\u6e80\u306a\u3089\u7d99\u7d9a\u3059\u308b\nreturn (t &lt; 1.0);\n}\n};\nvoid Main()\n{\nEffect effect;\nwhile (System::Update())\n{\nClearPrint();\n// \u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u6570\nPrint &lt;&lt; U\"Active effects: {}\"_fmt(effect.num_effects());\nif (MouseL.down())\n{\n// \u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\neffect.add&lt;RingEffect&gt;(Cursor::Pos());\n}\n// \u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u30d7\u30ed\u30b0\u30e9\u30e0 IEffect::update() \u3092\u5b9f\u884c\u3059\u308b\neffect.update();\n}\n}\n</code></pre>"},{"location":"tutorial3/effect/#402-\u30e9\u30e0\u30c0\u5f0f\u3067\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u5b9f\u88c5\u3059\u308b","title":"40.2 \u30e9\u30e0\u30c0\u5f0f\u3067\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u5b9f\u88c5\u3059\u308b","text":"<p><code>IEffect</code> \u306e\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u4ee3\u308f\u308a\u306b\u3001\u5f15\u6570\u304c <code>double</code>, \u623b\u308a\u5024\u304c <code>bool</code> \u578b\u306e\u30e9\u30e0\u30c0\u5f0f\u3067\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u6570\u884c\u3067\u66f8\u3051\u308b\u5358\u7d14\u306a\u30a8\u30d5\u30a7\u30af\u30c8\u3067\u3001\u308f\u3056\u308f\u3056\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u306e\u304c\u9762\u5012\u306a\u5834\u5408\u306f\u3053\u306e\u65b9\u6cd5\u304c\u4fbf\u5229\u3067\u3059\u3002</p> <p>40.1 \u3068\u540c\u3058\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30e9\u30e0\u30c0\u5f0f\u3067\u66f8\u304f\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nEffect effect;\nwhile (System::Update())\n{\nClearPrint();\n// \u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u6570\nPrint &lt;&lt; U\"Active effects: {}\"_fmt(effect.num_effects());\nif (MouseL.down())\n{\n// \u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\neffect.add([pos = Cursor::Pos(), color = RandomColorF()](double t)\n{\n// \u6642\u9593\u306b\u5fdc\u3058\u3066\u5927\u304d\u304f\u306a\u308b\u8f2a\nCircle{ pos, (t * 100) }.drawFrame(4, color);\n// 1 \u79d2\u672a\u6e80\u306a\u3089\u7d99\u7d9a\u3059\u308b\nreturn (t &lt; 1.0);\n});\n}\n// \u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u30d7\u30ed\u30b0\u30e9\u30e0 IEffect::update() \u3092\u5b9f\u884c\u3059\u308b\neffect.update();\n}\n}\n</code></pre>"},{"location":"tutorial3/effect/#403-\u30a4\u30fc\u30b8\u30f3\u30b0\u3092\u30a8\u30d5\u30a7\u30af\u30c8\u3067\u4f7f\u3046","title":"40.3 \u30a4\u30fc\u30b8\u30f3\u30b0\u3092\u30a8\u30d5\u30a7\u30af\u30c8\u3067\u4f7f\u3046","text":"<p>\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 18 \u7ae0\u3067\u5b66\u3093\u3060\u30a4\u30fc\u30b8\u30f3\u30b0\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u3088\u308a\u6d17\u7df4\u3055\u308c\u305f\u52d5\u304d\u3092\u4f5c\u308c\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nstruct RingEffect : IEffect\n{\nVec2 m_pos;\nColorF m_color;\nexplicit RingEffect(const Vec2&amp; pos)\n: m_pos{ pos }\n, m_color{ RandomColorF() } {}\nbool update(double t) override\n{\n// \u30a4\u30fc\u30b8\u30f3\u30b0\nconst double e = EaseOutExpo(t);\nCircle{ m_pos, (e * 100) }.drawFrame((20.0 * (1.0 - e)), m_color);\nreturn (t &lt; 1.0);\n}\n};\nvoid Main()\n{\nEffect effect;\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"Active effects: {}\"_fmt(effect.num_effects());\nif (MouseL.down())\n{\neffect.add&lt;RingEffect&gt;(Cursor::Pos());\n}\neffect.update();\n}\n}\n</code></pre>"},{"location":"tutorial3/effect/#404-\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u4e00\u6642\u505c\u6b62\u3068\u901f\u5ea6\u5909\u66f4\u6d88\u53bb","title":"40.4 \u30a8\u30d5\u30a7\u30af\u30c8\u306e\u4e00\u6642\u505c\u6b62\u3068\u901f\u5ea6\u5909\u66f4\u3001\u6d88\u53bb","text":"<p><code>Effect</code> \u306e <code>.pause()</code> \u3067\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u66f4\u65b0\u3092\u4e00\u6642\u505c\u6b62\u3001<code>.resume()</code> \u518d\u958b\u3001<code>.setSpeed(double)</code> \u3067\u30b9\u30d4\u30fc\u30c9\u306e\u5909\u66f4\u3001<code>.clear()</code> \u3067\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u3059\u3079\u3066\u6d88\u53bb\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nstruct RingEffect : IEffect\n{\nVec2 m_pos;\nexplicit RingEffect(const Vec2&amp; pos)\n: m_pos{ pos } {}\nbool update(double t) override\n{\nCircle{ m_pos, (t * 100) }.drawFrame(4);\nreturn (t &lt; 1.0);\n}\n};\nvoid Main()\n{\nEffect effect;\n// \u51fa\u73fe\u9593\u9694\uff08\u79d2\uff09\nconstexpr double SpawnInterval = 0.15;\n// \u84c4\u7a4d\u3055\u308c\u305f\u6642\u9593\uff08\u79d2\uff09\ndouble accumulatedTime = 0.0;\nwhile (System::Update())\n{\nClearPrint();\nPrint &lt;&lt; U\"Active effects: {}\"_fmt(effect.num_effects());\nPrint &lt;&lt; U\"speed: {}\"_fmt(effect.getSpeed());\nif (not effect.isPaused())\n{\naccumulatedTime += (Scene::DeltaTime() * effect.getSpeed());\n}\n// \u84c4\u7a4d\u6642\u9593\u304c\u51fa\u73fe\u9593\u9694\u3092\u8d85\u3048\u305f\u3089\nif (SpawnInterval &lt;= accumulatedTime)\n{\naccumulatedTime -= SpawnInterval;\neffect.add&lt;RingEffect&gt;(Cursor::Pos());\n}\neffect.update();\nif (effect.isPaused())\n{\nif (SimpleGUI::Button(U\"Resume\", Vec2{ 600, 20 }, 100))\n{\n// \u30a8\u30d5\u30a7\u30af\u30c8\u306e\u66f4\u65b0\u3092\u518d\u958b\u3059\u308b\neffect.resume();\n}\n}\nelse\n{\nif (SimpleGUI::Button(U\"Pause\", Vec2{ 600, 20 }, 100))\n{\n// \u30a8\u30d5\u30a7\u30af\u30c8\u306e\u66f4\u65b0\u3092\u4e00\u6642\u505c\u6b62\u3059\u308b\neffect.pause();\n}\n}\nif (SimpleGUI::Button(U\"x2.0\", Vec2{ 600, 60 }, 100))\n{\n// 2.0 \u500d\u901f\u306b\u3059\u308b\neffect.setSpeed(2.0);\n}\nif (SimpleGUI::Button(U\"x1.0\", Vec2{ 600, 100 }, 100))\n{\n// 1.0 \u500d\u901f\u306b\u3059\u308b\neffect.setSpeed(1.0);\n}\nif (SimpleGUI::Button(U\"x0.5\", Vec2{ 600, 140 }, 100))\n{\n// 0.5 \u500d\u901f\u306b\u3059\u308b\neffect.setSpeed(0.5);\n}\nif (SimpleGUI::Button(U\"Clear\", Vec2{ 600, 180 }, 100))\n{\n// \u767a\u751f\u4e2d\u306e\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u3059\u3079\u3066\u6d88\u53bb\u3059\u308b\neffect.clear();\n}\n}\n}\n</code></pre> <p>\u3053\u306e\u7ae0\u3067\u306f\u6271\u3044\u307e\u305b\u3093\u304c\u3001\u3088\u308a\u5927\u91cf\u306e\u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u3092\u52b9\u7387\u7684\u306b\u5236\u5fa1\u3057\u305f\u3044\u5834\u5408\u306f\u3001<code>ParticleSystem2D</code> \u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002</p>"},{"location":"tutorial3/effect/#405-\u30b5\u30f3\u30d7\u30eb\u4e0a\u6607\u3059\u308b\u6587\u5b57","title":"40.5 \uff08\u30b5\u30f3\u30d7\u30eb\uff09\u4e0a\u6607\u3059\u308b\u6587\u5b57","text":"<p>\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u3063\u305f\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u4f8b\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nstruct ScoreEffect : IEffect\n{\nVec2 m_start;\nint32 m_score;\nFont m_font;\nScoreEffect(const Vec2&amp; start, int32 score, const Font&amp; font)\n: m_start{ start }\n, m_score{ score }\n, m_font{ font } {}\nbool update(double t) override\n{\nconst HSV color{ (180 - m_score * 1.8), 1.0 - (t * 2.0) };\nm_font(m_score).drawAt(m_start.movedBy(0, t * -120), color);\nreturn (t &lt; 0.5);\n}\n};\nvoid Main()\n{\nconst Font font{ FontMethod::MSDF, 48, Typeface::Heavy };\nEffect effect;\nwhile (System::Update())\n{\nif (MouseL.down())\n{\neffect.add&lt;ScoreEffect&gt;(Cursor::Pos(), Random(0, 100), font);\n}\neffect.update();\n}\n}\n</code></pre>"},{"location":"tutorial3/effect/#406-\u30b5\u30f3\u30d7\u30eb\u98db\u3073\u6563\u308b\u7834\u7247","title":"40.6 \uff08\u30b5\u30f3\u30d7\u30eb\uff09\u98db\u3073\u6563\u308b\u7834\u7247","text":"<p>\u4e00\u3064\u306e\u30a8\u30d5\u30a7\u30af\u30c8\u3067\u8907\u6570\u306e\u56f3\u5f62\u3092\u63cf\u304f\u4f8b\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nstruct Particle\n{\nVec2 start;\nVec2 velocity;\n};\nstruct Spark : IEffect\n{\nArray&lt;Particle&gt; m_particles;\nexplicit Spark(const Vec2&amp; start)\n: m_particles(50)\n{\nfor (auto&amp; particle : m_particles)\n{\nparticle.start = start + RandomVec2(10.0);\nparticle.velocity = RandomVec2(1.0) * Random(80.0);\n}\n}\nbool update(double t) override\n{\nfor (const auto&amp; particle : m_particles)\n{\nconst Vec2 pos = particle.start\n+ particle.velocity * t + 0.5 * t * t * Vec2{ 0, 240 };\nTriangle{ pos, 16.0, (pos.x * 5_deg) }.draw(HSV{ pos.y - 40, (1.0 - t) });\n}\nreturn (t &lt; 1.0);\n}\n};\nvoid Main()\n{\nEffect effect;\nwhile (System::Update())\n{\nif (MouseL.down())\n{\neffect.add&lt;Spark&gt;(Cursor::Pos());\n}\neffect.update();\n}\n}\n</code></pre>"},{"location":"tutorial3/effect/#407-\u30b5\u30f3\u30d7\u30eb\u98db\u3073\u6563\u308b\u661f","title":"40.7 \uff08\u30b5\u30f3\u30d7\u30eb\uff09\u98db\u3073\u6563\u308b\u661f","text":"<p>\u8907\u96d1\u306a\u5236\u5fa1\u3092\u884c\u3046\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u4f8b\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nstruct StarEffect : IEffect\n{\nstatic constexpr Vec2 Gravity{ 0, 160 };\nstruct Star\n{\nVec2 start;\nVec2 velocity;\nColorF color;\n};\nArray&lt;Star&gt; m_stars;\nStarEffect(const Vec2&amp; pos, double baseHue)\n{\nfor (int32 i = 0; i &lt; 6; ++i)\n{\nconst Vec2 velocity = RandomVec2(Circle{ 60 });\nStar star{\n.start = (pos + velocity),\n.velocity = velocity,\n.color = HSV{ baseHue + Random(-20.0, 20.0) },\n};\nm_stars &lt;&lt; star;\n}\n}\nbool update(double t) override\n{\nt /= 0.4;\nfor (auto&amp; star : m_stars)\n{\nconst Vec2 pos = star.start\n+ star.velocity * t + 0.5 * t * t * Gravity;\nconst double angle = (pos.x * 3_deg);\nShape2D::Star((30 * (1.0 - t)), pos, angle)\n.draw(star.color);\n}\nreturn (t &lt; 1.0);\n}\n};\nvoid Main()\n{\nEffect effect;\nCircle circle{ Scene::Center(), 30 };\ndouble baseHue = 180.0;\nwhile (System::Update())\n{\nif (circle.mouseOver())\n{\nCursor::RequestStyle(CursorStyle::Hand);\n}\nif (circle.leftClicked())\n{\neffect.add&lt;StarEffect&gt;(Cursor::PosF(), baseHue);\ncircle.center = RandomVec2(Scene::Rect().stretched(-80));\nbaseHue = Random(0.0, 360.0);\n}\ncircle.draw(HSV{ baseHue });\neffect.update();\n}\n}\n</code></pre>"},{"location":"tutorial3/effect/#408-\u30b5\u30f3\u30d7\u30eb\u6ce1\u306e\u3088\u3046\u306a\u30a8\u30d5\u30a7\u30af\u30c8","title":"40.8 \uff08\u30b5\u30f3\u30d7\u30eb\uff09\u6ce1\u306e\u3088\u3046\u306a\u30a8\u30d5\u30a7\u30af\u30c8","text":"<p>\u6642\u9593\u5dee\u3067\u56f3\u5f62\u3092\u767b\u5834\u3055\u305b\u308b\u3001\u9ad8\u5ea6\u306a\u5236\u5fa1\u3092\u884c\u3046\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u4f8b\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nstruct BubbleEffect : IEffect\n{\nstruct Bubble\n{\nVec2 offset;\ndouble startTime;\ndouble scale;\nColorF color;\n};\nVec2 m_pos;\nArray&lt;Bubble&gt; m_bubbles;\nBubbleEffect(const Vec2&amp; pos, double baseHue)\n: m_pos{ pos }\n{\nfor (int32 i = 0; i &lt; 8; ++i)\n{\nBubble bubble{\n.offset = RandomVec2(Circle{30}),\n.startTime = Random(-0.3, 0.1), // \u767b\u5834\u306e\u6642\u9593\u5dee\n.scale = Random(0.1, 1.2),\n.color = HSV{ baseHue + Random(-30.0, 30.0) }\n};\nm_bubbles &lt;&lt; bubble;\n}\n}\nbool update(double t) override\n{\nfor (const auto&amp; bubble : m_bubbles)\n{\nconst double t2 = (bubble.startTime + t);\nif (not InRange(t2, 0.0, 1.0))\n{\ncontinue;\n}\nconst double e = EaseOutExpo(t2);\nCircle{ (m_pos + bubble.offset + (bubble.offset * 4 * t)), (e * 40 * bubble.scale) }\n.draw(ColorF{ bubble.color, 0.15 })\n.drawFrame((30.0 * (1.0 - e) * bubble.scale), bubble.color);\n}\nreturn (t &lt; 1.3);\n}\n};\nvoid Main()\n{\nEffect effect;\nwhile (System::Update())\n{\nif (MouseL.down())\n{\neffect.add&lt;BubbleEffect&gt;(Cursor::PosF(), Random(0.0, 360.0));\n}\n{\nconst ScopedRenderStates2D blend{ BlendState::Additive };\neffect.update();\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/effect/#409-\u30b5\u30f3\u30d7\u30eb\u30af\u30ea\u30c3\u30af\u6642\u306e\u30a8\u30d5\u30a7\u30af\u30c8","title":"40.9 \uff08\u30b5\u30f3\u30d7\u30eb\uff09\u30af\u30ea\u30c3\u30af\u6642\u306e\u30a8\u30d5\u30a7\u30af\u30c8","text":"<p>1 \u3064\u306e\u30a8\u30d5\u30a7\u30af\u30c8\u3067\u305f\u304f\u3055\u3093\u306e\u63cf\u753b\u3092\u884c\u3046\u4f8b\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nstruct TouchEffect : IEffect\n{\nstruct Particle\n{\nVec2 velocity;\nVec2 start;\ndouble r;\ndouble angle;\nbool cw;\nColorF color;\n};\nstruct Star\n{\nVec2 velocity;\nVec2 start;\ndouble angle;\ndouble scale;\nColorF color;\n};\nVec2 m_pos;\nArray&lt;Particle&gt; m_particles;\nArray&lt;Star&gt; m_stars;\nexplicit TouchEffect(const Vec2&amp; pos)\n: m_pos{ pos }\n{\nfor (int32 i = 0; i &lt; 200; ++i)\n{\nconst Vec2 velocoty = RandomVec2(28.0);\nParticle particle{\n.velocity = velocoty,\n.start = velocoty,\n.r = Random(6.0, 12.0),\n.angle = Random(360_deg),\n.cw = RandomBool(),\n.color = HSV{ Random(50.0, 70.0), 0.4, 1.0 },\n};\nm_particles &lt;&lt; particle;\n}\nfor (int32 i = 0; i &lt; 8; ++i)\n{\nconst Vec2 velocoty = RandomVec2(28.0);\nStar star{\n.velocity = velocoty,\n.start = (velocoty + RandomVec2(2.0)),\n.angle = Random(360_deg),\n.scale = Random(0.6, 1.4),\n.color = HSV{ Random(50.0, 70.0), 0.4, 1.0 },\n};\nm_stars &lt;&lt; star;\n}\n}\nbool update(double t) override\n{\nt /= 0.45;\nconst double r = (30 + t * 30);\nconst ColorF outer = HSV{ 180, 0.8, 1.0, 0.0 };\nconst ColorF inner = HSV{ 180, 0.8, 1.0, (0.5 * (1.0 - t)) };\nCircle{ m_pos, r }\n.drawFrame(10, 0, outer, inner)\n.drawFrame(0, 10, inner, outer);\nfor (const auto&amp; particle : m_particles)\n{\nconst Vec2 pos = m_pos\n+ particle.start\n+ Circular(particle.r, particle.angle + t * 120_deg * (particle.cw ? 1 : -1))\n+ (particle.velocity * t - 0.5 * t * t * particle.velocity);\nconst double rOuter = (1.0 * (1.0 - t) * 2);\nconst double rInner = (0.8 * (1.0 - t) * 2);\nShape2D::NStar(2, rOuter, rInner, pos, particle.angle)\n.draw(particle.color);\n}\nfor (const auto&amp; star : m_stars)\n{\nconst Vec2 pos = m_pos\n+ star.start\n+ (star.velocity * t - 0.5 * t * t * star.velocity);\nconst double rOuter = (12 * (1.0 - t) * star.scale);\nconst double rInner = (4 * (1.0 - t) * star.scale);\nconst double angle = (star.angle + t * 90_deg);\nShape2D::NStar(4, rOuter, rInner, pos, angle)\n.draw(star.color);\n}\nreturn (t &lt; 1.0);\n}\n};\nvoid Main()\n{\nEffect effect;\nwhile (System::Update())\n{\nif (MouseL.down())\n{\neffect.add&lt;TouchEffect&gt;(Cursor::PosF());\n}\n{\nconst ScopedRenderStates2D blend{ BlendState::Additive };\neffect.update();\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/effect/#4010-\u30b5\u30f3\u30d7\u30eb\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u518d\u5e30","title":"40.10 \uff08\u30b5\u30f3\u30d7\u30eb\uff09\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u518d\u5e30","text":"<p>\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u4e2d\u3067\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u4f8b\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\n// \u91cd\u529b\u52a0\u901f\u5ea6\nconstexpr Vec2 Gravity{ 0, 240 };\n// \u706b\u82b1\u306e\u72b6\u614b\nstruct Fire\n{\n// \u521d\u901f\nVec2 v0;\n// \u8272\u76f8\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\ndouble hueOffset;\n// \u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\ndouble scale;\n// \u7834\u88c2\u3059\u308b\u307e\u3067\u306e\u6642\u9593\ndouble nextFireSec;\n// \u7834\u88c2\u3057\u3066\u5b50\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u305f\u304b\nbool hasChild = false;\n};\n// \u706b\u82b1\u30a8\u30d5\u30a7\u30af\u30c8\nstruct Firework : IEffect\n{\n// \u706b\u82b1\u306e\u500b\u6570\nstatic constexpr int32 FireCount = 12;\n// \u5faa\u74b0\u53c2\u7167\u3092\u907f\u3051\u308b\u305f\u3081\u3001IEffect \u306e\u4e2d\u3067 Effect \u3092\u6301\u3064\u5834\u5408\u3001\u53c2\u7167\u307e\u305f\u306f\u30dd\u30a4\u30f3\u30bf\u306b\u3059\u308b\u3053\u3068\nconst Effect&amp; m_parent;\n// \u82b1\u706b\u306e\u4e2d\u5fc3\u5ea7\u6a19\nVec2 m_center;\n// \u706b\u306e\u72b6\u614b\nstd::array&lt;Fire, FireCount&gt; m_fires;\n// \u4f55\u4e16\u4ee3\u76ee\uff1f [0, 1, 2]\nint32 m_n;\nFirework(const Effect&amp; parent, const Vec2&amp; center, int32 n, const Vec2&amp; v0)\n: m_parent{ parent }\n, m_center{ center }\n, m_n{ n }\n{\nfor (auto i : step(FireCount))\n{\nconst double angle = (i * 30_deg + Random(-10_deg, 10_deg));\nconst double speed = (60.0 - m_n * 15) * Random(0.9, 1.1) * (IsEven(i) ? 0.5 : 1.0);\nm_fires[i].v0 = Circular{ speed, angle } + v0;\nm_fires[i].hueOffset = Random(-10.0, 10.0) + (IsEven(i) ? 15 : 0);\nm_fires[i].scale = Random(0.8, 1.2);\nm_fires[i].nextFireSec = Random(0.7, 1.0);\n}\n}\nbool update(double t) override\n{\nfor (const auto&amp; fire : m_fires)\n{\nconst Vec2 pos = m_center + fire.v0 * t + 0.5 * t * t * Gravity;\npos.asCircle((10 - (m_n * 3)) * ((1.5 - t) / 1.5) * fire.scale)\n.draw(HSV{ 10 + m_n * 120.0 + fire.hueOffset, 0.6, 1.0 - m_n * 0.2 });\n}\nif (m_n &lt; 2) // 0, 1 \u4e16\u4ee3\u76ee\u306a\u3089\n{\nfor (auto&amp; fire : m_fires)\n{\nif (!fire.hasChild &amp;&amp; (fire.nextFireSec &lt;= t))\n{\n// \u5b50\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u4f5c\u6210\nconst Vec2 pos = m_center + fire.v0 * t + 0.5 * t * t * Gravity;\nm_parent.add&lt;Firework&gt;(m_parent, pos, (m_n + 1), fire.v0 + (t * Gravity));\nfire.hasChild = true;\n}\n}\n}\nreturn (t &lt; 1.5);\n}\n};\n// \u6253\u3061\u4e0a\u3052\u30a8\u30d5\u30a7\u30af\u30c8\nstruct FirstFirework : IEffect\n{\n// \u5faa\u74b0\u53c2\u7167\u3092\u907f\u3051\u308b\u305f\u3081\u3001IEffect \u306e\u4e2d\u3067 Effect \u3092\u6301\u3064\u5834\u5408\u3001\u53c2\u7167\u307e\u305f\u306f\u30dd\u30a4\u30f3\u30bf\u306b\u3059\u308b\u3053\u3068\nconst Effect&amp; m_parent;\n// \u6253\u3061\u4e0a\u3052\u4f4d\u7f6e\nVec2 m_start;\n// \u6253\u3061\u4e0a\u3052\u521d\u901f\nVec2 m_v0;\nFirstFirework(const Effect&amp; parent, const Vec2&amp; start, const Vec2&amp; v0)\n: m_parent{ parent }\n, m_start{ start }\n, m_v0{ v0 } {}\nbool update(double t) override\n{\nconst Vec2 pos = m_start + m_v0 * t + 0.5 * t * t * Gravity;\nCircle{ pos, 6 }.draw();\nLine{ m_start, pos }.draw(LineStyle::RoundCap, 8, ColorF{ 0.0 }, ColorF{ 1.0 - (t / 0.6) });\nif (t &lt; 0.6)\n{\nreturn true;\n}\nelse\n{\n// \u7d42\u4e86\u9593\u969b\u306b\u5b50\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u4f5c\u6210\nconst Vec2 velocity = m_v0 + t * Gravity;\nm_parent.add&lt;Firework&gt;(m_parent, pos, 0, velocity);\nreturn false;\n}\n}\n};\nvoid Main()\n{\nEffect effect;\nwhile (System::Update())\n{\nScene::Rect().draw(Arg::top(0.0), Arg::bottom(0.2, 0.1, 0.4));\nif (MouseL.down())\n{\neffect.add&lt;FirstFirework&gt;(effect, Cursor::Pos(), Vec2{ 0, -400 });\n}\n{\nconst ScopedRenderStates2D blend{ BlendState::Additive };\neffect.update();\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/file-dialog/","title":"46. \u30d5\u30a1\u30a4\u30eb\u30c0\u30a4\u30a2\u30ed\u30b0","text":"<p>\u30d5\u30a1\u30a4\u30eb\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u958b\u3044\u3066\u753b\u50cf\u3084\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u8aad\u307f\u8fbc\u3093\u3060\u308a\u3001\u30aa\u30fc\u30d7\u30f3\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3084\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u4fdd\u5b58\u540d\u3092\u6c7a\u3081\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | \u30d5\u30a1\u30a4\u30eb\u30c0\u30a4\u30a2\u30ed\u30b0 </p>"},{"location":"tutorial3/file-dialog/#461-xxxxxxxxxxxxx","title":"46.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/file-dialog/#462-xxxxxxxxxxxxxx","title":"46.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/file-dialog/#463-xxxxxxxxxxxxx","title":"46.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/file-dialog/#464-xxxxxxxxxxxxxx","title":"46.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/file-dialog/#465-xxxxxxxxxxxxx","title":"46.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/file-dialog/#466-xxxxxxxxxxxxxx","title":"46.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/file-dialog/#467-xxxxxxxxxxxxx","title":"46.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/file-dialog/#468-xxxxxxxxxxxxxx","title":"46.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/file-dialog/#469-xxxxxxxxxxxxx","title":"46.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/file-dialog/#4610-xxxxxxxxxxxxxx","title":"46.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/file-dialog/#4611-xxxxxxxxxxxxxx","title":"46.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/file-dialog/#4612-xxxxxxxxxxxxxx","title":"46.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/file-dialog/#4613-xxxxxxxxxxxxxx","title":"46.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/file-dialog/#4614-xxxxxxxxxxxxxx","title":"46.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/filesystem/","title":"42. \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0","text":"<p>\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u60c5\u5831\u53d6\u5f97\u304a\u3088\u3073\u64cd\u4f5c\u306b\u95a2\u3059\u308b\u6a5f\u80fd\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial3/filesystem/#421-\u30d1\u30b9\u3092\u8868\u3059\u578b","title":"42.1 \u30d1\u30b9\u3092\u8868\u3059\u578b","text":"<p>\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d1\u30b9\u3092 Siv3D \u306e\u30b3\u30fc\u30c9\u3067\u8868\u73fe\u3059\u308b\u3068\u304d\u306f\u3001<code>String</code> \u578b\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\uff08\u5225\u540d\uff09\u3067\u3042\u308b <code>FilePath</code> \u3092\u4f7f\u3046\u3068\u610f\u56f3\u304c\u660e\u78ba\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// String \u3088\u308a\u3082 FilePath \u306e\u307b\u3046\u304c\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3067\u3042\u308b\u3053\u3068\u304c\u660e\u78ba\nconst FilePath path = U\"example/windmill.png\";\nconst Texture texture{ path };\nwhile (System::Update())\n{\ntexture.draw();\n}\n}\n</code></pre> <p>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9\u306f\u3001\u672b\u5c3e\u306b <code>/</code> \u3092\u4ed8\u3051\u3066\u8868\u73fe\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst FilePath videoDirectory = U\"example/video/\";\nconst VideoTexture videoTexture{ videoDirectory + U\"river.mp4\" };\nwhile (System::Update())\n{\nvideoTexture.advance();\nvideoTexture.scaled(0.5).draw();\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#422-\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8abf\u3079\u308b","title":"42.2 \u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8abf\u3079\u308b","text":"<p>\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3059\u308b\u304b\u8abf\u3079\u308b\u306b\u306f <code>FileSystem::Exists(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8abf\u3079\u308b\u306b\u306f <code>FileSystem::IsFile(path)</code>, \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8abf\u3079\u308b\u306b\u306f <code>FileSystem::IsDirectory(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> \u95a2\u6570 \u8aac\u660e <code>FileSystem::Exists(path)</code> <code>path</code> \u3067\u793a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8fd4\u3057\u307e\u3059\u3002 <code>FileSystem::IsFile(path)</code> <code>path</code> \u3067\u793a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8fd4\u3057\u307e\u3059\u3002 <code>FileSystem::IsDirectory(path)</code> <code>path</code> \u3067\u793a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8fd4\u3057\u307e\u3059\u3002 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3059\u308b\u304b\nPrint &lt;&lt; FileSystem::Exists(U\"example/windmill.png\");\nPrint &lt;&lt; FileSystem::Exists(U\"example/video/\");\nPrint &lt;&lt; FileSystem::Exists(U\"aaa/bbb.txt\");\nPrint &lt;&lt; FileSystem::Exists(U\"\");\nPrint &lt;&lt; U\"----\";\n// \u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308b\u304b\nPrint &lt;&lt; FileSystem::IsFile(U\"example/windmill.png\");\nPrint &lt;&lt; FileSystem::IsFile(U\"example/video/\");\nPrint &lt;&lt; FileSystem::IsFile(U\"aaa/bbb.txt\");\nPrint &lt;&lt; FileSystem::IsFile(U\"\");\nPrint &lt;&lt; U\"----\";\n// \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3059\u308b\u304b\nPrint &lt;&lt; FileSystem::IsDirectory(U\"example/windmill.png\");\nPrint &lt;&lt; FileSystem::IsDirectory(U\"example/video/\");\nPrint &lt;&lt; FileSystem::IsDirectory(U\"aaa/bbb.txt\");\nPrint &lt;&lt; FileSystem::IsDirectory(U\"\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#423-\u7d76\u5bfe\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b","title":"42.3 \u7d76\u5bfe\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u30d1\u30b9\u3092\u7d76\u5bfe\u30d1\u30b9\u306b\u5909\u63db\u3059\u308b\u306b\u306f <code>FileSystem::Fullpath(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u7d76\u5bfe\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\nPrint &lt;&lt; FileSystem::FullPath(U\"example/windmill.png\");\nPrint &lt;&lt; FileSystem::FullPath(U\"example/video/\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#424-\u76f8\u5bfe\u30d1\u30b9\u306b\u5909\u63db\u3059\u308b","title":"42.4 \u76f8\u5bfe\u30d1\u30b9\u306b\u5909\u63db\u3059\u308b","text":"<p>\u30d1\u30b9\u3092\u3001\u73fe\u5728\u306e\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u306b\u5909\u63db\u3059\u308b\u306b\u306f <code>FileSystem::RelativePath(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u7d76\u5bfe\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\nconst FilePath fullpath1 = FileSystem::FullPath(U\"example/windmill.png\");\nconst FilePath fullpath2 = FileSystem::FullPath(U\"example/video/\");\n// \u76f8\u5bfe\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\nPrint &lt;&lt; FileSystem::RelativePath(fullpath1);\nPrint &lt;&lt; FileSystem::RelativePath(fullpath2);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#425-\u30d5\u30a1\u30a4\u30eb\u306e\u540d\u524d\u90e8\u5206\u3084\u62e1\u5f35\u5b50\u3092\u53d6\u5f97\u3059\u308b","title":"42.5 \u30d5\u30a1\u30a4\u30eb\u306e\u540d\u524d\u90e8\u5206\u3084\u62e1\u5f35\u5b50\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u304b\u3089\u3001\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u90e8\u5206\u3092\u542b\u307e\u305a\u306b\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u90e8\u5206\u3060\u3051\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f <code>FileSystem::FileName(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u62e1\u5f35\u5b50\u3092\u9664\u3044\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f <code>FileSystem::BaseName(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u306e\u62e1\u5f35\u5b50 (.\u3092\u542b\u307e\u306a\u3044) \u3092\u5c0f\u6587\u5b57\u3067\u53d6\u5f97\u3059\u308b\u306b\u306f <code>FileSystem::Extension(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u30d1\u30b9\u304c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u3042\u308b\u5834\u5408\u3001\u3044\u305a\u308c\u306e\u95a2\u6570\u3067\u3082\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u304c\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u3042\u308b\u3068\u898b\u306a\u3055\u308c\u307e\u3059\u3002</p> \u95a2\u6570 \u8aac\u660e <code>FileSystem::FileName(path)</code> <code>path</code> \u3067\u793a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u304b\u3089\u3001\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u90e8\u5206\u3092\u9664\u3044\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u90e8\u5206\u3092\u8fd4\u3057\u307e\u3059\u3002 <code>FileSystem::BaseName(path)</code> <code>path</code> \u3067\u793a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u304b\u3089\u3001\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u90e8\u5206\u3068\u62e1\u5f35\u5b50\u3092\u9664\u3044\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u90e8\u5206\u3092\u8fd4\u3057\u307e\u3059\u3002 <code>FileSystem::Extension(path)</code> <code>path</code> \u3067\u793a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u304b\u3089\u3001\u62e1\u5f35\u5b50\u3092\u5c0f\u6587\u5b57\u3067\u8fd4\u3057\u307e\u3059\u3002 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst FilePath path1 = U\"example/windmill.png\";\nconst FilePath path2 = U\"example/video/\";\n// \u30d5\u30a1\u30a4\u30eb\u540d\u3092\u53d6\u5f97\u3059\u308b\nPrint &lt;&lt; FileSystem::FileName(path1);\nPrint &lt;&lt; FileSystem::FileName(path2);\nPrint &lt;&lt; U\"----\";\n// \u62e1\u5f35\u5b50\u3092\u9664\u3044\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u53d6\u5f97\u3059\u308b\nPrint &lt;&lt; FileSystem::BaseName(path1);\nPrint &lt;&lt; FileSystem::BaseName(path2);\nPrint &lt;&lt; U\"----\";\n// \u62e1\u5f35\u5b50\u3092\u5c0f\u6587\u5b57\u3067\u53d6\u5f97\u3059\u308b\nPrint &lt;&lt; FileSystem::Extension(path1);\nPrint &lt;&lt; FileSystem::Extension(path2);\nPrint &lt;&lt; U\"----\";\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#426-\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b","title":"42.6 \u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u3042\u308b\u30d1\u30b9\u306e\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001<code>FileSystem::ParentPath(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b\nPrint &lt;&lt; FileSystem::ParentPath(U\"example/windmill.png\");\nPrint &lt;&lt; FileSystem::ParentPath(U\"example/video/river.mp4\");\nPrint &lt;&lt; FileSystem::ParentPath(U\"example/video/\");\nPrint &lt;&lt; FileSystem::ParentPath(U\"./\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#427-\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b","title":"42.7 \u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u73fe\u5728\u306e\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001<code>FileSystem::CurrentDirectory()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b\nPrint &lt;&lt; FileSystem::CurrentDirectory();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#428-\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b","title":"42.8 \u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u73fe\u5728\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001<code>FileSystem::ModulePath()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\nPrint &lt;&lt; FileSystem::ModulePath();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#429-\u8d77\u52d5\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b","title":"42.9 \u8d77\u52d5\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u8d77\u52d5\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u8d77\u52d5\u3055\u308c\u305f\u3068\u304d\u306e\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u3059\u3002\u901a\u5e38\u306f\u3001\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u3059\u304c\u3001\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u8d77\u52d5\u3055\u308c\u305f\u5834\u5408\u3084\u3001\u62e1\u5f35\u5b50\u306e\u95a2\u9023\u4ed8\u3051\u3067\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8d77\u52d5\u3055\u308c\u305f\u5834\u5408\u306a\u3069\u306b\u3001\u7570\u306a\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u8d77\u52d5\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001<code>FileSystem::InitialDirectory()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u8d77\u52d5\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b\nPrint &lt;&lt; FileSystem::InitialDirectory();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#4210-\u7279\u6b8a\u30d5\u30a9\u30eb\u30c0\u306e\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b","title":"42.10 \u7279\u6b8a\u30d5\u30a9\u30eb\u30c0\u306e\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u3084\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306a\u3069\u3001\u7279\u6b8a\u306a\u7528\u9014\u306e\u30d5\u30a9\u30eb\u30c0\u306e\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001<code>FileSystem::GetFolderPath(SpecialFolder)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u7a7a\u306e\u6587\u5b57\u5217\u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p>\u7279\u6b8a\u30d5\u30a9\u30eb\u30c0\u306e\u7a2e\u985e\u3092\u6307\u3059 <code>SpecialFolder</code> \u306f\u6b21\u306e\u5024\u304c\u3042\u308a\u307e\u3059\u3002</p> \u5024 \u8aac\u660e <code>SpecialFolder::Desktop</code> \u30c7\u30b9\u30af\u30c8\u30c3\u30d7 <code>SpecialFolder::Documents</code> \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 <code>SpecialFolder::LocalAppData</code> \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30ad\u30e3\u30c3\u30b7\u30e5 <code>SpecialFolder::Pictures</code> \u30d4\u30af\u30c1\u30e3\u30fc <code>SpecialFolder::Music</code> \u30df\u30e5\u30fc\u30b8\u30c3\u30af <code>SpecialFolder::Videos</code> \u30d3\u30c7\u30aa <code>SpecialFolder::Caches</code> \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30ad\u30e3\u30c3\u30b7\u30e5 (<code>LocalAppData</code> \u3068\u540c\u3058) <code>SpecialFolder::Movies</code> \u30d3\u30c7\u30aa (<code>Videos</code> \u3068\u540c\u3058) <code>SpecialFolder::SystemFonts</code> \u30b7\u30b9\u30c6\u30e0\u30d5\u30a9\u30f3\u30c8 <code>SpecialFolder::LocalFonts</code> \u30ed\u30fc\u30ab\u30eb\u30d5\u30a9\u30f3\u30c8 <code>SpecialFolder::UserFonts</code> \u30e6\u30fc\u30b6\u30d5\u30a9\u30f3\u30c8 <code>SpecialFolder::UserProfile</code> \u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb <code>SpecialFolder::ProgramFiles</code> \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nPrint &lt;&lt; U\"Desktop: \" &lt;&lt; FileSystem::GetFolderPath(SpecialFolder::Desktop);\nPrint &lt;&lt; U\"Documents: \" &lt;&lt; FileSystem::GetFolderPath(SpecialFolder::Documents);\nPrint &lt;&lt; U\"LocalAppData: \" &lt;&lt; FileSystem::GetFolderPath(SpecialFolder::LocalAppData);\nPrint &lt;&lt; U\"Pictures: \" &lt;&lt; FileSystem::GetFolderPath(SpecialFolder::Pictures);\nPrint &lt;&lt; U\"Music: \" &lt;&lt; FileSystem::GetFolderPath(SpecialFolder::Music);\nPrint &lt;&lt; U\"Videos: \" &lt;&lt; FileSystem::GetFolderPath(SpecialFolder::Videos);\nPrint &lt;&lt; U\"SystemFonts: \" &lt;&lt; FileSystem::GetFolderPath(SpecialFolder::SystemFonts);\nPrint &lt;&lt; U\"LocalFonts: \" &lt;&lt; FileSystem::GetFolderPath(SpecialFolder::LocalFonts);\nPrint &lt;&lt; U\"UserFonts: \" &lt;&lt; FileSystem::GetFolderPath(SpecialFolder::UserFonts);\nPrint &lt;&lt; U\"UserProfile: \" &lt;&lt; FileSystem::GetFolderPath(SpecialFolder::UserProfile);\nPrint &lt;&lt; U\"ProgramFiles: \" &lt;&lt; FileSystem::GetFolderPath(SpecialFolder::ProgramFiles);\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#4211-\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u306e\u4fdd\u5b58\u306b\u4f7f\u3048\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b","title":"42.11 \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u306e\u4fdd\u5b58\u306b\u4f7f\u3048\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u306e\u4fdd\u5b58\u7528\u306b\u4f7f\u3048\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001<code>FileSystem::TempDirectory()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u306e\u4fdd\u5b58\u306b\u4f7f\u3048\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b\nPrint &lt;&lt; FileSystem::TemporaryDirectoryPath();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#4212-\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u7528\u306b\u4f7f\u3048\u308b\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b","title":"42.12 \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u7528\u306b\u4f7f\u3048\u308b\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u3001\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u7528\u306b\u4f7f\u3048\u308b\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001<code>FileSystem::UniqueFilePath(directory)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u62e1\u5f35\u5b50\u306f <code>.tmp</code> \u3067\u3001\u3053\u308c\u3067\u8fd4\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3068\u540c\u540d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>\u5f15\u6570\u3092\u7701\u7565\u3057\u305f\u5834\u5408\u306f\u300142.11 \u3067\u8aac\u660e\u3057\u305f\u3001\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u306e\u4fdd\u5b58\u7528\u306b\u4f7f\u3048\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// example \u30d5\u30a9\u30eb\u30c0\u5185\u3067\u3001\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u7528\u306b\u4f7f\u3048\u308b\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\nconst FilePath tempPath1 = FileSystem::UniqueFilePath(U\"example/\");\nPrint &lt;&lt; tempPath1;\n// \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u7528\u306b\u4f7f\u3048\u308b\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\nconst FilePath tempPath2 = FileSystem::UniqueFilePath();\nPrint &lt;&lt; tempPath2;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#4213-\u30d1\u30b9\u3092\u7d50\u5408\u3059\u308b","title":"42.13 \u30d1\u30b9\u3092\u7d50\u5408\u3059\u308b","text":"<p>\u30e6\u30fc\u30b6\u306b\u3088\u308b\u5165\u529b\u3084\u3001\u5916\u90e8\u304b\u3089\u306e\u5165\u529b\u3067\u306f\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9\u306e\u672b\u5c3e\u306b <code>/</code> \u304c\u4ed8\u3044\u3066\u3044\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u30d1\u30b9\u3092\u7d50\u5408\u3059\u308b\u306b\u306f\u3001<code>FileSystem::PathAppend(a, b)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30d1\u30b9\u3092\u7d50\u5408\u3059\u308b\nPrint &lt;&lt; FileSystem::PathAppend(U\"example/\", U\"windmill.png\");\nPrint &lt;&lt; FileSystem::PathAppend(U\"example\", U\"windmill.png\");\nPrint &lt;&lt; U\"----\";\nPrint &lt;&lt; FileSystem::PathAppend(U\"example/\", U\"\");\nPrint &lt;&lt; FileSystem::PathAppend(U\"example\", U\"\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#4214-\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b","title":"42.14 \u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f <code>FileSystem::FileSize(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u304a\u3088\u3073\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f <code>FileSystem::Size(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> \u95a2\u6570 \u8aac\u660e <code>FileSystem::FileSize(path)</code> \u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30a4\u30ba\u3092\u30d0\u30a4\u30c8\u5358\u4f4d\u3067\u8fd4\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u304b\u3001\u7a7a\u3067\u3042\u308b\u5834\u5408\u306f 0 \u3092\u8fd4\u3057\u307e\u3059\u3002 <code>FileSystem::Size(path)</code> \u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30b5\u30a4\u30ba\u3092\u30d0\u30a4\u30c8\u5358\u4f4d\u3067\u8fd4\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3057\u306a\u3044\u304b\u3001\u7a7a\u3067\u3042\u308b\u5834\u5408\u306f 0 \u3092\u8fd4\u3057\u307e\u3059\u3002 <p><code>FormatDataSize(int64)</code> \u3092\u4f7f\u3046\u3068\u3001\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\u3092\u30012 \u9032\u63a5\u982d\u8f9e\u3092\u7528\u3044\u305f\u898b\u3084\u3059\u3044\u5f62\u5f0f\u306e\u6587\u5b57\u5217\u306b\u5909\u63db\u3067\u304d\u307e\u3059\uff08\u4f8b: <code>120KiB</code>\uff09\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b\nPrint &lt;&lt; FileSystem::FileSize(U\"example/windmill.png\");\nPrint &lt;&lt; FormatDataSize(FileSystem::FileSize(U\"example/windmill.png\"));\n// \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b\nPrint &lt;&lt; FileSystem::Size(U\"example/\");\nPrint &lt;&lt; FormatDataSize(FileSystem::Size(U\"example/\"));\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#4215-\u30d5\u30a1\u30a4\u30eb\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u53d6\u5f97\u3059\u308b","title":"42.15 \u30d5\u30a1\u30a4\u30eb\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\u65e5\u6642\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f <code>FileSystem::CreationTime(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u306e\u6700\u7d42\u66f4\u65b0\u65e5\u6642\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f <code>FileSystem::WriteTime(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u306e\u6700\u7d42\u30a2\u30af\u30bb\u30b9\u65e5\u6642\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f <code>FileSystem::AccessTime(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u623b\u308a\u5024\u306f <code>Optional&lt;DateTime&gt;</code> \u3067\u3001\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3084\u53d6\u5f97\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306f <code>none</code> \u304c\u8fd4\u3055\u308c\u307e\u3059\u3002</p> \u95a2\u6570 \u8aac\u660e <code>FileSystem::CreationTime(path)</code> \u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\u65e5\u6642\u3092\u8fd4\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001<code>none</code> \u3092\u8fd4\u3057\u307e\u3059\u3002 <code>FileSystem::WriteTime(path)</code> \u30d5\u30a1\u30a4\u30eb\u306e\u6700\u7d42\u66f4\u65b0\u65e5\u6642\u3092\u8fd4\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001<code>none</code> \u3092\u8fd4\u3057\u307e\u3059\u3002 <code>FileSystem::AccessTime(path)</code> \u30d5\u30a1\u30a4\u30eb\u306e\u6700\u7d42\u30a2\u30af\u30bb\u30b9\u65e5\u6642\u3092\u8fd4\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001<code>none</code> \u3092\u8fd4\u3057\u307e\u3059\u3002 <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nconst FilePath path = U\"example/windmill.png\";\n// \u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\u65e5\u6642\u3092\u53d6\u5f97\u3059\u308b\nif (const auto time = FileSystem::CreationTime(path))\n{\nPrint &lt;&lt; U\"CreationTime: \" &lt;&lt; *time;\n}\n// \u30d5\u30a1\u30a4\u30eb\u306e\u6700\u7d42\u66f4\u65b0\u65e5\u6642\u3092\u53d6\u5f97\u3059\u308b\nif (const auto time = FileSystem::WriteTime(path))\n{\nPrint &lt;&lt; U\"LastWriteTime: \" &lt;&lt; *time;\n}\n// \u30d5\u30a1\u30a4\u30eb\u306e\u30a2\u30af\u30bb\u30b9\u6700\u7d42\u65e5\u6642\u3092\u53d6\u5f97\u3059\u308b\nif (const auto time = FileSystem::AccessTime(path))\n{\nPrint &lt;&lt; U\"LastAccessTime: \" &lt;&lt; *time;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#4216-\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b","title":"42.16 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\uff08\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff09\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f <code>FileSystem::DirectoryContents(path, recursive)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u623b\u308a\u5024\u306f <code>Array&lt;FilePath&gt;</code> \u3067\u3059\u3002</p>"},{"location":"tutorial3/filesystem/#42161-\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u518d\u5e30\u7684\u306b\u691c\u7d22\u3059\u308b","title":"42.16.1 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\uff08\u518d\u5e30\u7684\u306b\u691c\u7d22\u3059\u308b\uff09","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\nconst Array&lt;FilePath&gt; paths = FileSystem::DirectoryContents(U\"example/\");\n// \u5185\u5bb9\u304c\u591a\u3044\u305f\u3081\u3001Print \u3067\u306f\u306a\u304f Console \u3067\u51fa\u529b\u3059\u308b\nfor (const auto&amp; path : paths)\n{\nConsole &lt;&lt; path;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#42162-\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u518d\u5e30\u7684\u306b\u691c\u7d22\u3057\u306a\u3044","title":"42.16.2 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\uff08\u518d\u5e30\u7684\u306b\u691c\u7d22\u3057\u306a\u3044\uff09","text":"<p>\u7b2c 2 \u5f15\u6570\u306f\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u518d\u5e30\u7684\u306b\u691c\u7d22\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f <code>Recursive::Yes</code> \u3067\u3059\u304c\u3001\u518d\u5e30\u7684\u306b\u691c\u7d22\u3057\u306a\u3044\u5834\u5408\u306f <code>Recursive::No</code> \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u518d\u5e30\u7684\u306b\u691c\u7d22\u3057\u306a\u3044\u5834\u5408\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u306b\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\u306f\u53d6\u5f97\u3055\u308c\u307e\u305b\u3093\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\uff08\u518d\u5e30\u7684\u306b\u306f\u53d6\u5f97\u3057\u306a\u3044\uff09\nconst Array&lt;FilePath&gt; paths = FileSystem::DirectoryContents(U\"example/\", Recursive::No);\n// \u5185\u5bb9\u304c\u591a\u3044\u305f\u3081\u3001Print \u3067\u306f\u306a\u304f Console \u3067\u51fa\u529b\u3059\u308b\nfor (const auto&amp; path : paths)\n{\nConsole &lt;&lt; path;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#42163-\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u542b\u307e\u308c\u308b-png-\u30d5\u30a1\u30a4\u30eb\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b","title":"42.16.3 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u542b\u307e\u308c\u308b .png \u30d5\u30a1\u30a4\u30eb\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b","text":"<p>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\u4e00\u89a7\u3092\u53d6\u5f97\u3057\u305f\u5f8c\u3001<code>Array::filter()</code> \u3092\u4f7f\u3063\u3066\u3001\u6761\u4ef6\u306b\u5408\u3046\u30d1\u30b9\u306e\u307f\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u4e0b\u8a18\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u3001<code>example</code> \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u542b\u307e\u308c\u308b <code>.png</code> \u30d5\u30a1\u30a4\u30eb\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u306e\u62e1\u5f35\u5b50\u304c png \u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\nbool IsPngFile(const FilePath&amp; path)\n{\nreturn (FileSystem::Extension(path) == U\"png\");\n}\nvoid Main()\n{\n// \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\uff08\u518d\u5e30\u7684\u306b\u306f\u53d6\u5f97\u3057\u306a\u3044\uff09\nconst Array&lt;FilePath&gt; paths = FileSystem::DirectoryContents(U\"example/\");\n// png \u30d5\u30a1\u30a4\u30eb\u306e\u307f\u3092\u62bd\u51fa\u3059\u308b\nconst Array&lt;FilePath&gt; pngFiles = paths.filter(IsPngFile);\n// \u5185\u5bb9\u304c\u591a\u3044\u305f\u3081\u3001Print \u3067\u306f\u306a\u304f Console \u3067\u51fa\u529b\u3059\u308b\nfor (const auto&amp; pngFile : pngFiles)\n{\nConsole &lt;&lt; pngFile;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#4217-\u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u3042\u308b\u304b\u3092\u8abf\u3079\u308b","title":"42.17 \u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u3042\u308b\u304b\u3092\u8abf\u3079\u308b","text":"<p>\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u7a7a\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308b\u306b\u306f\u3001<code>FileSystem::IsEmptyDirectory(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u7a7a\u3067\u3042\u308b\u304b\u3092\u8abf\u3079\u308b\nPrint &lt;&lt; FileSystem::IsEmptyDirectory(U\"example/\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#4218-\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b","title":"42.18 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b","text":""},{"location":"tutorial3/filesystem/#42181-\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u3092\u6307\u5b9a\u3057\u3066\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b","title":"42.18.1 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u3092\u6307\u5b9a\u3057\u3066\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b","text":"<p>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001<code>FileSystem::CreateDirectories(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306f\u3001\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\u305d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4f5c\u6210\u306b\u6210\u529f\u3057\u305f\u304b\u3001\u3059\u3067\u306b\u540c\u540d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3059\u308b\u5834\u5408 <code>true</code>, \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f <code>false</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30c7\u30a3\u30ec\u30af\u30c8\u30ea test1/ \u3092\u4f5c\u6210\u3059\u308b\nPrint &lt;&lt; FileSystem::CreateDirectories(U\"test1/\");\n// \u30c7\u30a3\u30ec\u30af\u30c8\u30ea test2/aaa/bbb/ \u3092\u4f5c\u6210\u3059\u308b\nPrint &lt;&lt; FileSystem::CreateDirectories(U\"test2/aaa/bbb/\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#42182-\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u3066\u305d\u306e\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u307e\u3067\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b","title":"42.18.2 \u30d1\u30b9\u3092\u6307\u5b9a\u3057\u3066\u3001\u305d\u306e\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u307e\u3067\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b","text":"<p>\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u3066\u3001\u305d\u306e\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u307e\u3067\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001<code>FileSystem::CreateParentDirectories(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306f\u3001\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\u305d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4f5c\u6210\u306b\u6210\u529f\u3057\u305f\u304b\u3001\u3059\u3067\u306b\u540c\u540d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3059\u308b\u5834\u5408 <code>true</code>, \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f <code>false</code> \u3092\u8fd4\u3057\u307e\u3059\u3002\u30d1\u30b9\u306e\u3046\u3061\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u964d\u306e\u90e8\u5206\uff08\u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\uff09\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002</p> <p><code>FileSystem::CreateParentDirectories(U\"aaa/bbb/ccc.txt\")</code> \u306f\u3001<code>FileSystem::CreateDirectories(U\"aaa/bbb/\")</code> \u3068\u540c\u3058\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// test3/a.txt \u306e\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\nPrint &lt;&lt; FileSystem::CreateParentDirectories(U\"test3/a.txt\");\n// test4/aaa/bbb/ccc/ \u306e\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\nPrint &lt;&lt; FileSystem::CreateParentDirectories(U\"test4/aaa/bbb/ccc/\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#4219-\u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30b3\u30d4\u30fc\u3059\u308b","title":"42.19 \u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30b3\u30d4\u30fc\u3059\u308b","text":"<p>\u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30b3\u30d4\u30fc\u3059\u308b\u5834\u5408\u306f <code>FileSystem::Copy(src, dst)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002<code>src</code> \u306b\u306f\u30b3\u30d4\u30fc\u5143\u306e\u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d1\u30b9\u3092\u3001<code>dst</code> \u306b\u306f\u30b3\u30d4\u30fc\u5148\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30b3\u30d4\u30fc\u306b\u6210\u529f\u3057\u305f\u5834\u5408\u306f <code>true</code>\u3001\u5931\u6557\u3057\u305f\u5834\u5408\u306f <code>false</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30d4\u30fc\u3059\u308b\nPrint &lt;&lt; FileSystem::Copy(U\"example/windmill.png\", U\"image.png\");\n// \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30b3\u30d4\u30fc\u3059\u308b\nPrint &lt;&lt; FileSystem::Copy(U\"example/video/\", U\"test5/\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#4220-\u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u524a\u9664\u3059\u308b","title":"42.20 \u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u524a\u9664\u3059\u308b","text":"<p>\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u524a\u9664\u3059\u308b\u5834\u5408\u306f <code>FileSystem::Remove(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002<code>path</code> \u306b\u306f\u524a\u9664\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u524a\u9664\u306b\u6210\u529f\u3057\u305f\u5834\u5408\u306f <code>true</code>\u3001\u5931\u6557\u3057\u305f\u5834\u5408\u306f <code>false</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p>\u7b2c 2 \u5f15\u6570\u3067 <code>AllowUndo::Yes</code> \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u53ef\u80fd\u306a\u5834\u5408\u3001\u30d5\u30a1\u30a4\u30eb\u306f\u30b4\u30df\u7bb1\u306b\u9001\u3089\u308c\u3001\u3042\u3068\u3067\u624b\u52d5\u3067\u5fa9\u5143\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30b3\u30d4\u30fc\u3059\u308b\nFileSystem::Copy(U\"example/windmill.png\", U\"image.png\");\nFileSystem::Copy(U\"example/video/\", U\"test5/\");\n// \u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3059\u308b\nPrint &lt;&lt; FileSystem::Remove(U\"image.png\");\n// \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u524a\u9664\u3059\u308b\nPrint &lt;&lt; FileSystem::Remove(U\"test5/\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#4221-\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\u3060\u3051\u3092\u524a\u9664\u3059\u308b","title":"42.21 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\u3060\u3051\u3092\u524a\u9664\u3059\u308b","text":"<p>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\u3060\u3051\u3092\u524a\u9664\u3057\u3001\u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6b8b\u3059\u5834\u5408\u306f <code>FileSystem::RemoveContents(path)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p>\u7b2c 2 \u5f15\u6570\u3067 <code>AllowUndo::Yes</code> \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u53ef\u80fd\u306a\u5834\u5408\u3001\u30d5\u30a1\u30a4\u30eb\u306f\u30b4\u30df\u7bb1\u306b\u9001\u3089\u308c\u3001\u3042\u3068\u3067\u624b\u52d5\u3067\u5fa9\u5143\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30b3\u30d4\u30fc\u3059\u308b\nFileSystem::Copy(U\"example/video/\", U\"test5/\");\n// \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u8eab\u3060\u3051\u3092\u524a\u9664\u3059\u308b\nPrint &lt;&lt; FileSystem::RemoveContents(U\"test5/\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#4222-\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30ea\u30cd\u30fc\u30e0\u3059\u308b","title":"42.22 \u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30ea\u30cd\u30fc\u30e0\u3059\u308b","text":"<p>\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30ea\u30cd\u30fc\u30e0\u3059\u308b\u5834\u5408\u306f <code>FileSystem::Rename(src, dst)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002<code>src</code> \u306b\u306f\u30ea\u30cd\u30fc\u30e0\u5143\u306e\u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d1\u30b9\u3092\u3001<code>dst</code> \u306b\u306f\u30ea\u30cd\u30fc\u30e0\u5148\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30ea\u30cd\u30fc\u30e0\u306b\u6210\u529f\u3057\u305f\u5834\u5408\u306f <code>true</code>\u3001\u5931\u6557\u3057\u305f\u5834\u5408\u306f <code>false</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30b3\u30d4\u30fc\u3059\u308b\nFileSystem::Copy(U\"example/windmill.png\", U\"image.png\");\nFileSystem::Copy(U\"example/video/\", U\"test5/\");\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30ea\u30cd\u30fc\u30e0\u3059\u308b\nPrint &lt;&lt; FileSystem::Rename(U\"image.png\", U\"image2.png\");\n// \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30ea\u30cd\u30fc\u30e0\u3059\u308b\nPrint &lt;&lt; FileSystem::Rename(U\"test5/\", U\"test5-2/\");\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#4223-\u30d5\u30a1\u30a4\u30eb\u306e\u5909\u66f4\u3092\u691c\u77e5\u3059\u308b","title":"42.23 \u30d5\u30a1\u30a4\u30eb\u306e\u5909\u66f4\u3092\u691c\u77e5\u3059\u308b","text":"<p><code>DirectoryWatcher</code> \u3092\u4f7f\u3046\u3068\u3001\u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3067\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u5909\u66f4\u30a4\u30d9\u30f3\u30c8\u3092\u691c\u77e5\u3067\u304d\u307e\u3059\u3002\u30e6\u30fc\u30b6\u304c\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3057\u305f\u3068\u304d\u306b\u81ea\u52d5\u3067\u30ea\u30ed\u30fc\u30c9\u3059\u308b\u4ed5\u7d44\u307f\u306e\u5b9f\u88c5\u306a\u3069\u306b\u4f7f\u3048\u307e\u3059\u3002</p> <p><code>DirectoryWatcher watcher{ directory };</code> \u3067\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea <code>directory</code> \u5185\u3067\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u5909\u66f4\u3092\u691c\u77e5\u3059\u308b <code>DirectoryWatcher</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <p><code>DirectoryWatcher</code> \u306e\u30e1\u30f3\u30d0\u95a2\u6570 <code>.retrieveChanges()</code> \u3067\u3001\u5909\u66f4\u5c65\u6b74\u306e\u4e00\u89a7\u3092\u53e4\u3044\u9806\u306b\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u4e00\u5ea6\u53d6\u5f97\u3057\u305f\u5909\u66f4\u5c65\u6b74\u306f\u524a\u9664\u3055\u308c\u307e\u3059\u3002</p> <p>\u5909\u66f4\u5c65\u6b74\u306f <code>Array&lt;FileChange&gt;</code> \u3068\u3057\u3066\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002<code>FileChange</code> \u306f\u3001\u5909\u66f4\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9 <code>.path</code> \u3068\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u64cd\u4f5c\u3092\u8868\u3059 <code>.action</code> \u3092\u30e1\u30f3\u30d0\u5909\u6570\u3068\u3057\u3066\u6301\u3061\u307e\u3059\u3002</p> <p>\u30d5\u30a1\u30a4\u30eb\u306e\u64cd\u4f5c\u306b\u306f\u6b21\u306e\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002</p> \u30d5\u30a1\u30a4\u30eb\u306e\u64cd\u4f5c \u8aac\u660e <code>FileAction::Added</code> \u30d5\u30a1\u30a4\u30eb\u304c\u8ffd\u52a0\u3055\u308c\u305f <code>FileAction::Removed</code> \u30d5\u30a1\u30a4\u30eb\u304c\u524a\u9664\u3055\u308c\u305f <code>FileAction::Modified</code> \u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u304c\u5909\u66f4\u3055\u308c\u305f <code>FileAction::Unknown</code> \u4e0d\u660e\u306a\u30a2\u30af\u30b7\u30e7\u30f3"},{"location":"tutorial3/filesystem/#42231-\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3067\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u691c\u77e5\u3059\u308b","title":"42.23.1 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3067\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u691c\u77e5\u3059\u308b","text":"<p>\u691c\u77e5\u304c\u4e0d\u8981\u306b\u306a\u3063\u305f\u5834\u5408\u306f\u3001\u7a7a\u306e <code>DirectoryWatcher</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4ee3\u5165\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30c6\u30b9\u30c8\u7528\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\nFileSystem::CreateDirectories(U\"test7/\");\n// test7/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3067\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u76e3\u8996\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\nDirectoryWatcher watcher{ U\"test7/\" };\nwhile (System::Update())\n{\n// \u7d76\u5bfe\u30d1\u30b9\u3068\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u5185\u5bb9\u3092\u53d6\u5f97\u3059\u308b\nfor (auto&amp;&amp; [path, action] : watcher.retrieveChanges())\n{\nif (action == FileAction::Added)\n{\nPrint &lt;&lt; U\"Added:\";\n}\nelse if (action == FileAction::Removed)\n{\nPrint &lt;&lt; U\"Removed:\";\n}\nelse if (action == FileAction::Modified)\n{\nPrint &lt;&lt; U\"Modified:\";\n}\nif (action == FileAction::Unknown)\n{\nPrint &lt;&lt; U\"Unknown:\";\n}\nPrint &lt;&lt; path;\n}\nif (SimpleGUI::Button(U\"stop\", Vec2{ 680, 40 }, 80, watcher.isOpen()))\n{\nwatcher = DirectoryWatcher{};\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/filesystem/#42232-\u7279\u5b9a\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0\u3092\u691c\u77e5\u3059\u308b","title":"42.23.2 \u7279\u5b9a\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0\u3092\u691c\u77e5\u3059\u308b","text":"<p>\u4e00\u822c\u306b\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u304c\u66f4\u65b0\u3055\u308c\u305f\u3068\u304d\u306f\u3001\u6b21\u306e\u3044\u305a\u308c\u304b\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u307e\u3059\u3002</p> <ul> <li>Removed \u2192 Added</li> <li>Modified</li> </ul> <p>\u3057\u305f\u304c\u3063\u3066\u3001\u7279\u5b9a\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0\u3092\u53d6\u308a\u3053\u307c\u3057\u306a\u304f\u691c\u51fa\u3059\u308b\u306b\u306f\u3001<code>Added</code> \u3068 <code>Modified</code> \u3092\u76e3\u8996\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\u306b\u4f7f\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4ed5\u69d8\u306b\u3088\u3063\u3066\u306f\u30011 \u56de\u306e\u4fdd\u5b58\u3067\u8907\u6570\u56de\u306e <code>Modified</code> \u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f <code>test8/</code> \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306e <code>test.txt</code> \u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0\u3092\u691c\u51fa\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30c6\u30b9\u30c8\u7528\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\nFileSystem::CreateDirectories(U\"test8/\");\n// \u66f4\u65b0\u3092\u691c\u51fa\u3057\u305f\u3044\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\nconst FilePath filePath = U\"test8/test.txt\";\n// \u66f4\u65b0\u3092\u691c\u51fa\u3057\u305f\u3044\u30d5\u30a1\u30a4\u30eb\u306e\u7d76\u5bfe\u30d1\u30b9\nconst FilePath fullPath = FileSystem::FullPath(filePath);\n// \u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\nconst FilePath parentDirectory = FileSystem::ParentPath(filePath);\n// \u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u76e3\u8996\u3059\u308b DirectoryWatcher \u3092\u4f5c\u6210\u3059\u308b\nDirectoryWatcher watcher{ parentDirectory };\nwhile (System::Update())\n{\nfor (auto&amp;&amp; [path, action] : watcher.retrieveChanges())\n{\n// \u66f4\u65b0\u3092\u691c\u51fa\u3057\u305f\u3044\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3068\u4e00\u81f4\u3059\u308b\u304b\nif (path == fullPath)\n{\n// \u8ffd\u52a0\u307e\u305f\u306f\u66f4\u65b0\u3055\u308c\u305f\nif ((action == FileAction::Added) || (action == FileAction::Modified))\n{\nPrint &lt;&lt; U\"updated!\";\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/gamepad/","title":"52. \u30b2\u30fc\u30e0\u30d1\u30c3\u30c9","text":"<p>\u30b2\u30fc\u30e0\u30d1\u30c3\u30c9\u306e\u5165\u529b\u3092\u6271\u3046\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | \u30b2\u30fc\u30e0\u30d1\u30c3\u30c9\u5165\u529b </p>"},{"location":"tutorial3/gamepad/#521-xxxxxxxxxxxxx","title":"52.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/gamepad/#522-xxxxxxxxxxxxxx","title":"52.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/gamepad/#523-xxxxxxxxxxxxx","title":"52.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/gamepad/#524-xxxxxxxxxxxxxx","title":"52.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/gamepad/#525-xxxxxxxxxxxxx","title":"52.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/gamepad/#526-xxxxxxxxxxxxxx","title":"52.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/gamepad/#527-xxxxxxxxxxxxx","title":"52.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/gamepad/#528-xxxxxxxxxxxxxx","title":"52.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/gamepad/#529-xxxxxxxxxxxxx","title":"52.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/gamepad/#5210-xxxxxxxxxxxxxx","title":"52.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/gamepad/#5211-xxxxxxxxxxxxxx","title":"52.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/gamepad/#5212-xxxxxxxxxxxxxx","title":"52.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/gamepad/#5213-xxxxxxxxxxxxxx","title":"52.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/gamepad/#5214-xxxxxxxxxxxxxx","title":"52.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/geometry2d/","title":"57. \u9ad8\u5ea6\u306a\u56f3\u5f62\u51e6\u7406","text":"<p>2D \u56f3\u5f62\u306e\u9ad8\u5ea6\u306a\u6a5f\u80fd\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial3/geometry2d/#571-xxxxxxxxxxxxx","title":"57.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/geometry2d/#572-xxxxxxxxxxxxxx","title":"57.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/geometry2d/#573-xxxxxxxxxxxxx","title":"57.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/geometry2d/#574-xxxxxxxxxxxxxx","title":"57.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/geometry2d/#575-xxxxxxxxxxxxx","title":"57.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/geometry2d/#576-xxxxxxxxxxxxxx","title":"57.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/geometry2d/#577-xxxxxxxxxxxxx","title":"57.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/geometry2d/#578-xxxxxxxxxxxxxx","title":"57.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/geometry2d/#579-xxxxxxxxxxxxx","title":"57.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/geometry2d/#5710-xxxxxxxxxxxxxx","title":"57.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/geometry2d/#5711-xxxxxxxxxxxxxx","title":"57.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/geometry2d/#5712-xxxxxxxxxxxxxx","title":"57.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/geometry2d/#5713-xxxxxxxxxxxxxx","title":"57.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/geometry2d/#5714-xxxxxxxxxxxxxx","title":"57.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/http-client/","title":"50. HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8","text":"<p>\u30d5\u30a1\u30a4\u30eb\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306a\u3069\u306e HTTP \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u884c\u3046\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8 </p>"},{"location":"tutorial3/http-client/#501-xxxxxxxxxxxxx","title":"50.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/http-client/#502-xxxxxxxxxxxxxx","title":"50.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/http-client/#503-xxxxxxxxxxxxx","title":"50.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/http-client/#504-xxxxxxxxxxxxxx","title":"50.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/http-client/#505-xxxxxxxxxxxxx","title":"50.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/http-client/#506-xxxxxxxxxxxxxx","title":"50.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/http-client/#507-xxxxxxxxxxxxx","title":"50.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/http-client/#508-xxxxxxxxxxxxxx","title":"50.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/http-client/#509-xxxxxxxxxxxxx","title":"50.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/http-client/#5010-xxxxxxxxxxxxxx","title":"50.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/http-client/#5011-xxxxxxxxxxxxxx","title":"50.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/http-client/#5012-xxxxxxxxxxxxxx","title":"50.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/http-client/#5013-xxxxxxxxxxxxxx","title":"50.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/http-client/#5014-xxxxxxxxxxxxxx","title":"50.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/image/","title":"53. \u753b\u50cf\u7de8\u96c6","text":"<p>\u753b\u50cf\u7de8\u96c6\u3068\u3001\u305d\u306e\u7d50\u679c\u3092\u30b7\u30fc\u30f3\u306b\u8868\u793a\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | \u753b\u50cf\u51e6\u7406 </p>"},{"location":"tutorial3/image/#531-xxxxxxxxxxxxx","title":"53.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/image/#532-xxxxxxxxxxxxxx","title":"53.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/image/#533-xxxxxxxxxxxxx","title":"53.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/image/#534-xxxxxxxxxxxxxx","title":"53.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/image/#535-xxxxxxxxxxxxx","title":"53.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/image/#536-xxxxxxxxxxxxxx","title":"53.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/image/#537-xxxxxxxxxxxxx","title":"53.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/image/#538-xxxxxxxxxxxxxx","title":"53.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/image/#539-xxxxxxxxxxxxx","title":"53.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/image/#5310-xxxxxxxxxxxxxx","title":"53.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/image/#5311-xxxxxxxxxxxxxx","title":"53.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/image/#5312-xxxxxxxxxxxxxx","title":"53.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/image/#5313-xxxxxxxxxxxxxx","title":"53.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/image/#5314-xxxxxxxxxxxxxx","title":"53.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/messagebox/","title":"48. \u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9","text":"<p>\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial3/messagebox/#481-xxxxxxxxxxxxx","title":"48.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/messagebox/#482-xxxxxxxxxxxxxx","title":"48.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/messagebox/#483-xxxxxxxxxxxxx","title":"48.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/messagebox/#484-xxxxxxxxxxxxxx","title":"48.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/messagebox/#485-xxxxxxxxxxxxx","title":"48.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/messagebox/#486-xxxxxxxxxxxxxx","title":"48.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/messagebox/#487-xxxxxxxxxxxxx","title":"48.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/messagebox/#488-xxxxxxxxxxxxxx","title":"48.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/messagebox/#489-xxxxxxxxxxxxx","title":"48.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/messagebox/#4810-xxxxxxxxxxxxxx","title":"48.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/messagebox/#4811-xxxxxxxxxxxxxx","title":"48.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/messagebox/#4812-xxxxxxxxxxxxxx","title":"48.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/messagebox/#4813-xxxxxxxxxxxxxx","title":"48.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/messagebox/#4814-xxxxxxxxxxxxxx","title":"48.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/microphone/","title":"55. \u30de\u30a4\u30af\u5165\u529b","text":"<p>\u30d1\u30bd\u30b3\u30f3\u306b\u5185\u8535\u30fb\u63a5\u7d9a\u3055\u308c\u305f\u30de\u30a4\u30af\u304b\u3089\u97f3\u58f0\u6ce2\u5f62\u3092\u53d6\u5f97\u3057\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u6d3b\u7528\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | \u30de\u30a4\u30af\u3084 Web \u30ab\u30e1\u30e9\u3092\u4f7f\u3046 </p>"},{"location":"tutorial3/microphone/#551-xxxxxxxxxxxxx","title":"55.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/microphone/#552-xxxxxxxxxxxxxx","title":"55.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/microphone/#553-xxxxxxxxxxxxx","title":"55.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/microphone/#554-xxxxxxxxxxxxxx","title":"55.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/microphone/#555-xxxxxxxxxxxxx","title":"55.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/microphone/#556-xxxxxxxxxxxxxx","title":"55.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/microphone/#557-xxxxxxxxxxxxx","title":"55.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/microphone/#558-xxxxxxxxxxxxxx","title":"55.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/microphone/#559-xxxxxxxxxxxxx","title":"55.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/microphone/#5510-xxxxxxxxxxxxxx","title":"55.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/microphone/#5511-xxxxxxxxxxxxxx","title":"55.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/microphone/#5512-xxxxxxxxxxxxxx","title":"55.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/microphone/#5513-xxxxxxxxxxxxxx","title":"55.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/microphone/#5514-xxxxxxxxxxxxxx","title":"55.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/openai/","title":"59. OpenAI API","text":"<p>OpenAI API \u3068\u9023\u643a\u3059\u308b\u751f\u6210 AI \u306e\u6a5f\u80fd\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial3/openai/#591-openai-api-\u306e\u6982\u8981","title":"59.1 OpenAI API \u306e\u6982\u8981","text":""},{"location":"tutorial3/openai/#5911-openai-api-\u3068\u306f","title":"59.1.1 OpenAI API \u3068\u306f","text":"<p>OpenAI API \u306f\u3001OpenAI \u304c\u63d0\u4f9b\u3059\u308b AI \u751f\u6210\u30e2\u30c7\u30eb\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306e API \u3067\u3059\u3002OpenAI API \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001AI \u751f\u6210\u30e2\u30c7\u30eb\u3092\u7c21\u5358\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"tutorial3/openai/#5912-\u5229\u7528\u306e\u6d41\u308c","title":"59.1.2 \u5229\u7528\u306e\u6d41\u308c","text":"<p>OpenAI API \u306e\u5229\u7528\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002</p> <ol> <li>\u30c7\u30fc\u30bf + API \u30ad\u30fc\u304b\u3089\u306a\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092 OpenAI \u30b5\u30fc\u30d0\u306b\u9001\u308b\u3002</li> <li>OpenAI \u30b5\u30fc\u30d0\u304c JSON \u3067\u7d50\u679c\u3092\u8fd4\u7b54\u3059\u308b\uff08\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u6642\u9593\u304c\u304b\u304b\u308b\uff09</li> <li>\u8fd4\u3055\u308c\u305f JSON \u304b\u3089\u5fc5\u8981\u306a\u90e8\u5206\u3092\u62bd\u51fa\u3059\u308b</li> </ol> <p>Siv3D \u3067\u306f <code>OpenAI::\uff5e</code> \u306b\u7528\u610f\u3055\u308c\u305f\u95a2\u6570\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u4e00\u9023\u306e\u51e6\u7406\u3092\u7c21\u5358\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"tutorial3/openai/#5913-siv3d-\u3067\u5229\u7528\u3067\u304d\u308b-openai-api","title":"59.1.3 Siv3D \u3067\u5229\u7528\u3067\u304d\u308b OpenAI API","text":"<ul> <li>Chat: \u4e00\u9023\u306e\u4f1a\u8a71\u306b\u7d9a\u304f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u56de\u7b54\u3059\u308b</li> <li>Image: \u82f1\u8a9e\u3067\u306e\u8aac\u660e\u306b\u57fa\u3065\u3044\u305f\u753b\u50cf\u3092\u8fd4\u3059</li> <li>Embedding: \u5358\u8a9e\u3084\u6587\u7ae0\u3092\u610f\u5473\u306b\u57fa\u3065\u3044\u305f\u57cb\u3081\u8fbc\u307f\u30d9\u30af\u30c8\u30eb\u306b\u5909\u63db\u3059\u308b</li> </ul>"},{"location":"tutorial3/openai/#5914-openai-api-\u306e\u5229\u7528\u6599\u91d1","title":"59.1.4 OpenAI API \u306e\u5229\u7528\u6599\u91d1","text":"<p>OpenAI \u304c\u8fd4\u7b54\u3059\u308b\u3068\u304d\u3001\u5165\u51fa\u529b\u306e\u30c8\u30fc\u30af\u30f3\u6570\u306b\u5fdc\u3058\u3066\u3001API \u306e\u5229\u7528\u6599\u91d1\u304c\u767a\u751f\u3057\u307e\u3059\u3002\u8a73\u3057\u304f\u306f OpenAI | Pricing  \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>API \u306e\u5229\u7528\u6599\u91d1\u304c\u9ad8\u984d\u306b\u306a\u308b\u3053\u3068\u304c\u5fc3\u914d\u306a\u5834\u5408\u306f\u3001Usage limits\uff08\u6bce\u6708\u306e\u4e0a\u9650\uff09\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u6bce\u6708 120 \u30c9\u30eb\u3067\u3059\u3002</p>"},{"location":"tutorial3/openai/#592-\u6e96\u5099--openai-api-\u30ad\u30fc\u306e\u767a\u884c\u3068\u7ba1\u7406","title":"59.2 \u6e96\u5099 | OpenAI API \u30ad\u30fc\u306e\u767a\u884c\u3068\u7ba1\u7406","text":""},{"location":"tutorial3/openai/#5921-openai-api-\u30ad\u30fc\u306e\u767a\u884c","title":"59.2.1 OpenAI API \u30ad\u30fc\u306e\u767a\u884c","text":"<p>OpenAI \u306e API \u30ad\u30fc\u306f\u3001\"sk-\" \u3067\u59cb\u307e\u308b\u6570\u5341\u6587\u5b57\u306e\u6587\u5b57\u5217\u3067\u3059\u3002</p> <p>OpenAI \u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u30b5\u30a4\u30f3\u30a4\u30f3\u3057\u3001\u652f\u6255\u3044\u624b\u6bb5\u306e\u767b\u9332\u3092\u6e08\u307e\u305b\u305f\u72b6\u614b\u3067 https://platform.openai.com/account/api-keys  \u306e\u300cCreate new secret key\u300d\u304b\u3089 OpenAI API \u30ad\u30fc\u3092\u767a\u884c\u3067\u304d\u307e\u3059\uff08\u4e00\u5ea6\u3057\u304b\u8868\u793a\u3055\u308c\u307e\u305b\u3093\uff09\u3002</p>"},{"location":"tutorial3/openai/#5922-api-\u30ad\u30fc\u3092\u5b89\u5168\u306b\u4fdd\u5b58\u3059\u308b","title":"59.2.2 API \u30ad\u30fc\u3092\u5b89\u5168\u306b\u4fdd\u5b58\u3059\u308b","text":"<p>\u30b3\u30fc\u30c9\u3092\u30b3\u30df\u30c3\u30c8\u30fb\u516c\u958b\u3057\u305f\u3068\u304d\u306b API \u30ad\u30fc\u304c\u6d41\u51fa\u3057\u306a\u3044\u3088\u3046\u3001\u958b\u767a\u4e2d\u306f API \u30ad\u30fc\u3092\u74b0\u5883\u5909\u6570\u306b\u4fdd\u5b58\u3057\u3001\u74b0\u5883\u5909\u6570\u3092\u8aad\u307f\u53d6\u308b\u30b3\u30fc\u30c9\u3067 API \u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>// \u74b0\u5883\u5909\u6570 \"MY_OPENAI_API_KEY\" \u304b\u3089 API \u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\nconst String API_KEY = EnvironmentVariable::Get(U\"MY_OPENAI_API_KEY\");\n</code></pre>"},{"location":"tutorial3/openai/#5923-\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u65b9\u6cd5","title":"59.2.3 \u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u65b9\u6cd5","text":"Windows \u3067\u306e\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u65b9\u6cd5 <p>\u30b7\u30b9\u30c6\u30e0\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304b\u3089\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002</p> <p></p> <p>\u30e6\u30fc\u30b6\u30fc\u74b0\u5883\u5909\u6570\u306b \"MY_OPENAI_API_KEY\" \u3068\u3044\u3046\u540d\u524d\u3067 API \u30ad\u30fc\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30b7\u30b9\u30c6\u30e0\u306b\u5b8c\u5168\u306b\u9069\u7528\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001\u518d\u8d77\u52d5\u304c\u5fc5\u8981\u306a\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002</p> <p></p> macOS \u3067\u306e\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u65b9\u6cd5 <p>\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u6b21\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u3092\u5165\u529b\u3057\u307e\u3059\u3002</p> <p><code>launchctl setenv &lt;\u74b0\u5883\u5909\u6570\u306e\u30ad\u30fc&gt; \"&lt;\u74b0\u5883\u5909\u6570\u306e\u5024&gt;\"</code></p> <pre><code>launchctl setenv MY_OPENAI_API_KEY \"sk-12345689abcdefghi...\"\n</code></pre> <p>\u518d\u8d77\u52d5\u3059\u308b\u3068\u8a2d\u5b9a\u306f\u5931\u308f\u308c\u307e\u3059\u3002</p>"},{"location":"tutorial3/openai/#5924-\u74b0\u5883\u5909\u6570\u304c\u8a2d\u5b9a\u3055\u308c\u305f\u304b\u306e\u78ba\u8a8d","title":"59.2.4 \u74b0\u5883\u5909\u6570\u304c\u8a2d\u5b9a\u3055\u308c\u305f\u304b\u306e\u78ba\u8a8d","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u74b0\u5883\u5909\u6570\u304b\u3089 API \u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\nconst String API_KEY = EnvironmentVariable::Get(U\"MY_OPENAI_API_KEY\");\n// API \u30ad\u30fc\u3092\u8868\u793a\u3059\u308b\nPrint &lt;&lt; API_KEY;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/openai/#593-chat-\u306e\u57fa\u672c","title":"59.3 Chat \u306e\u57fa\u672c","text":"<p><code>OpenAI::Chat::Complete()</code> \u306f\u3001OpenAI \u306e Chat API \u3092\u5229\u7528\u3057\u3066\u3001\u4e00\u9023\u306e\u4f1a\u8a71\u306b\u7d9a\u304f\u56de\u7b54\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u3067\u3059\u3002OpenAI \u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3063\u3066\u304f\u308b\u307e\u3067\u95a2\u6570\u306f\u5236\u5fa1\u3092\u8fd4\u3055\u306a\u3044\uff08\u5f85\u3061\u304c\u767a\u751f\u3059\u308b\uff09\u70b9\u306b\u6ce8\u610f\u3057\u307e\u3059\u3002\u5f85\u3063\u3066\u3044\u308b\u9593\u306b\u5225\u306e\u3053\u3068\u3092\u3057\u305f\u3044\u5834\u5408\u306f 59.5 \u3067\u6271\u3046\u975e\u540c\u671f\u7248\u306e\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u74b0\u5883\u5909\u6570\u304b\u3089 API \u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\nconst String API_KEY = EnvironmentVariable::Get(U\"MY_OPENAI_API_KEY\");\n// \u56de\u7b54\u3092 String \u3067\u5f97\u308b\nconst String answer = OpenAI::Chat::Complete(API_KEY, U\"\u65e5\u672c\u3067\u4e00\u756a\u9ad8\u3044\u5c71\u306f\uff1f\");\nPrint &lt;&lt; answer;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/openai/#594-\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u304b\u3089\u306e\u5165\u529b\u3092-chat-\u306b\u9001\u308b","title":"59.4 \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u304b\u3089\u306e\u5165\u529b\u3092 Chat \u306b\u9001\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u74b0\u5883\u5909\u6570\u304b\u3089 API \u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\nconst String API_KEY = EnvironmentVariable::Get(U\"MY_OPENAI_API_KEY\");\n// \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306e\u4e2d\u8eab\nTextEditState textEditState;\n// \u56de\u7b54\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570\nString answer;\nwhile (System::Update())\n{\n// \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3059\u308b\nSimpleGUI::TextBox(textEditState, Vec2{ 40, 40 }, 600);\nif (SimpleGUI::Button(U\"\u9001\u4fe1\", Vec2{ 660, 40 }, 80,\n(not textEditState.text.isEmpty()))) // \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u304c\u7a7a\u3067\u306a\u3044\u3068\u304d\u3060\u3051\u30dc\u30bf\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b\n{\n// \u8cea\u554f\u6587\nconst String input = textEditState.text;\n// \u56de\u7b54\u6587\nanswer = OpenAI::Chat::Complete(API_KEY, input);\n}\n// \u56de\u7b54\u304c\u3042\u308b\u5834\u5408\nif (answer)\n{\nfont(answer).draw(20, Rect{ 40, 100, 720, 600 }, ColorF{ 0.11 });\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/openai/#595-\u975e\u540c\u671f\u3067-chat-\u306e\u56de\u7b54\u3092\u53d6\u5f97\u3059\u308b","title":"59.5 \u975e\u540c\u671f\u3067 Chat \u306e\u56de\u7b54\u3092\u53d6\u5f97\u3059\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u74b0\u5883\u5909\u6570\u304b\u3089 API \u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\nconst String API_KEY = EnvironmentVariable::Get(U\"MY_OPENAI_API_KEY\");\n// \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306e\u4e2d\u8eab\nTextEditState textEditState;\n// \u975e\u540c\u671f\u30bf\u30b9\u30af\nAsyncHTTPTask task;\n// \u56de\u7b54\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570\nString answer;\nwhile (System::Update())\n{\n// \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3059\u308b\nSimpleGUI::TextBox(textEditState, Vec2{ 40, 40 }, 600);\nif (SimpleGUI::Button(U\"\u9001\u4fe1\", Vec2{ 660, 40 }, 80,\n((not textEditState.text.isEmpty()) // \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u304c\u7a7a\u3067\u306a\u304f\n&amp;&amp; (not task.isDownloading())))) // \u30bf\u30b9\u30af\u306e\u5b9f\u884c\u4e2d\u3067\u306a\u3044\u3068\u304d\u3060\u3051\u30dc\u30bf\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b\n{\n// \u524d\u56de\u306e\u56de\u7b54\u3092\u6d88\u53bb\u3059\u308b\nanswer.clear();\n// \u8cea\u554f\u6587\nconst String input = textEditState.text;\n// \u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3059\u308b\ntask = OpenAI::Chat::CompleteAsync(API_KEY, input);\n}\n// ChatGPT \u306e\u5fdc\u7b54\u3092\u5f85\u3064\u9593\u306f\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u753b\u9762\u3092\u8868\u793a\u3059\u308b\nif (task.isDownloading())\n{\nCircle{ Scene::Center(), 50 }.drawArc((Scene::Time() * 120_deg), 300_deg, 4, 4);\n}\n// \u975e\u540c\u671f\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u3001\u6b63\u5e38\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u3042\u308b\u5834\u5408\nif (task.isReady() &amp;&amp; task.getResponse().isOK())\n{\n// \u975e\u540c\u671f\u51e6\u7406\u306e\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\nanswer = OpenAI::Chat::GetContent(task.getAsJSON());\n}\n// \u56de\u7b54\u304c\u3042\u308b\u5834\u5408\nif (answer)\n{\nfont(answer).draw(20, Rect{ 40, 100, 720, 600 }, ColorF{ 0.25 });\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/openai/#596-\u5165\u529b-ui-\u306e\u5de5\u592b","title":"59.6 \u5165\u529b UI \u306e\u5de5\u592b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u74b0\u5883\u5909\u6570\u304b\u3089 API \u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\nconst String API_KEY = EnvironmentVariable::Get(U\"MY_OPENAI_API_KEY\");\n// \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306e\u4e2d\u8eab\nTextEditState textEditState;\n// \u975e\u540c\u671f\u30bf\u30b9\u30af\nAsyncHTTPTask task;\n// \u56de\u7b54\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570\nString answer;\nwhile (System::Update())\n{\n// \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3059\u308b\nSimpleGUI::TextBox(textEditState, Vec2{ 40, 40 }, 240);\nif (SimpleGUI::Button(U\"\u306b\u767b\u5834\u3059\u308b\u6575\u30e2\u30f3\u30b9\u30bf\u30fc\u3092\u751f\u6210\", Vec2{ 300, 40 }, 360,\n((not textEditState.text.isEmpty()) // \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u304c\u7a7a\u3067\u306a\u304f\n&amp;&amp; (not task.isDownloading())))) // \u30bf\u30b9\u30af\u306e\u5b9f\u884c\u4e2d\u3067\u306a\u3044\u3068\u304d\u3060\u3051\u30dc\u30bf\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b\n{\n// \u524d\u56de\u306e\u56de\u7b54\u3092\u6d88\u53bb\u3059\u308b\nanswer.clear();\n// \u8cea\u554f\u6587\nconst String input = (U\"RPG \u30b2\u30fc\u30e0\u3067\" + textEditState.text + U\"\u306b\u767b\u5834\u3059\u308b\u6575\u30e2\u30f3\u30b9\u30bf\u30fc\u3092 1 \u7a2e\u985e\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002\");\n// \u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3059\u308b\ntask = OpenAI::Chat::CompleteAsync(API_KEY, input);\n}\n// ChatGPT \u306e\u5fdc\u7b54\u3092\u5f85\u3064\u9593\u306f\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u753b\u9762\u3092\u8868\u793a\u3059\u308b\nif (task.isDownloading())\n{\nCircle{ Scene::Center(), 50 }.drawArc((Scene::Time() * 120_deg), 300_deg, 4, 4);\n}\n// \u975e\u540c\u671f\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u3001\u6b63\u5e38\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u3042\u308b\u5834\u5408\nif (task.isReady() &amp;&amp; task.getResponse().isOK())\n{\n// \u975e\u540c\u671f\u51e6\u7406\u306e\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\nanswer = OpenAI::Chat::GetContent(task.getAsJSON());\n}\n// \u56de\u7b54\u304c\u3042\u308b\u5834\u5408\nif (answer)\n{\nfont(answer).draw(20, Rect{ 40, 100, 720, 600 }, ColorF{ 0.25 });\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/openai/#597-\u56de\u7b54\u3092-json-\u5f62\u5f0f\u3067\u5f97\u308b","title":"59.7 \u56de\u7b54\u3092 JSON \u5f62\u5f0f\u3067\u5f97\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\n// \u74b0\u5883\u5909\u6570\u304b\u3089 API \u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\nconst String API_KEY = EnvironmentVariable::Get(U\"MY_OPENAI_API_KEY\");\n// \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306e\u4e2d\u8eab\nTextEditState textEditState;\n// \u975e\u540c\u671f\u30bf\u30b9\u30af\nAsyncHTTPTask task;\n// \u56de\u7b54\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570\nString answer;\nwhile (System::Update())\n{\n// \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3059\u308b\nSimpleGUI::TextBox(textEditState, Vec2{ 40, 40 }, 240);\nif (SimpleGUI::Button(U\"\u306b\u767b\u5834\u3059\u308b\u6575\u30e2\u30f3\u30b9\u30bf\u30fc\u3092\u751f\u6210\", Vec2{ 300, 40 }, 360,\n((not textEditState.text.isEmpty()) // \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u304c\u7a7a\u3067\u306a\u304f\n&amp;&amp; (not task.isDownloading())))) // \u30bf\u30b9\u30af\u306e\u5b9f\u884c\u4e2d\u3067\u306a\u3044\u3068\u304d\u3060\u3051\u30dc\u30bf\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b\n{\n// \u524d\u56de\u306e\u56de\u7b54\u3092\u6d88\u53bb\u3059\u308b\nanswer.clear();\n// \u8cea\u554f\u6587\nString input = (U\"RPG \u30b2\u30fc\u30e0\u3067\" + textEditState.text + U\"\u306b\u767b\u5834\u3059\u308b\u6575\u30e2\u30f3\u30b9\u30bf\u30fc\u3092 1 \u7a2e\u985e\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002\\n\");\ninput += U\"\u51fa\u529b\u306f\u6b21\u306e\u3088\u3046\u306a JSON \u5f62\u5f0f\u3067\u3001\u65e5\u672c\u8a9e\u3067\u51fa\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u56de\u7b54\u306b JSON \u30c7\u30fc\u30bf\u4ee5\u5916\u3092\u542b\u307e\u306a\u3044\u3067\u4e0b\u3055\u3044\u3002\\n\";\ninput += UR\"({ \"name\": \"\u6575\u306e\u540d\u524d\", \"desc\" : \"\u8aac\u660e\" })\"; // UR\"()\" \u306f\u751f\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb https://cpprefjp.github.io/lang/cpp11/raw_string_literals.html\n// \u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3059\u308b\ntask = OpenAI::Chat::CompleteAsync(API_KEY, input);\n}\n// ChatGPT \u306e\u5fdc\u7b54\u3092\u5f85\u3064\u9593\u306f\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u753b\u9762\u3092\u8868\u793a\u3059\u308b\nif (task.isDownloading())\n{\nCircle{ Scene::Center(), 50 }.drawArc((Scene::Time() * 120_deg), 300_deg, 4, 4);\n}\n// \u975e\u540c\u671f\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u3001\u6b63\u5e38\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u3042\u308b\u5834\u5408\nif (task.isReady() &amp;&amp; task.getResponse().isOK())\n{\n// \u975e\u540c\u671f\u51e6\u7406\u306e\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\nanswer = OpenAI::Chat::GetContent(task.getAsJSON());\n}\n// \u56de\u7b54\u304c\u3042\u308b\u5834\u5408\nif (answer)\n{\nfont(answer).draw(20, Rect{ 40, 100, 720, 600 }, ColorF{ 0.25 });\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/openai/#598-\u8907\u6570\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u306a\u308b\u4f1a\u8a71\u304b\u3089\u56de\u7b54\u3092\u5f97\u308b","title":"59.8 \u8907\u6570\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u306a\u308b\u4f1a\u8a71\u304b\u3089\u56de\u7b54\u3092\u5f97\u308b","text":"<p>role \u3068 message \u3092\u30da\u30a2\u306b\u3057\u305f <code>Array&lt;std::pair&lt;String, String&gt;&gt;</code> \u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u8907\u6570\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u306a\u308b\u4f1a\u8a71\u306b\u5bfe\u3057\u3066\u56de\u7b54\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> role \u8aac\u660e system \u524d\u63d0\u6761\u4ef6\u3084\u5f79\u5272\u306a\u3069\u3092 AI \u306b\u6307\u793a user \u30e6\u30fc\u30b6\u306e\u767a\u8a00 assistant AI \u306e\u767a\u8a00 <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u74b0\u5883\u5909\u6570\u304b\u3089 API \u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\nconst String API_KEY = EnvironmentVariable::Get(U\"MY_OPENAI_API_KEY\");\nPrint &lt;&lt; OpenAI::Chat::Complete(API_KEY, {\n{ U\"system\", U\"\u56de\u7b54\u306f\u3067\u304d\u308b\u9650\u308a\u7c21\u6f54\u306b\u3057\u3066\u3001\u672b\u5c3e\u306b\uff01\u3092\u4ed8\u3051\u3066\u304f\u3060\u3055\u3044\u3002\" },\n{ U\"user\", U\"\u767d\u3044\u98df\u3079\u7269\u306f\uff1f\" },\n{ U\"assistant\", U\"\u8c46\u8150\uff01\" },\n{ U\"user\", U\"\u3067\u306f\u9ed2\u3044\u306e\u306f\uff1f\" } });\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/openai/#599-\u30d7\u30ed\u30f3\u30d7\u30c8\u304b\u3089\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u540c\u671f","title":"59.9 \u30d7\u30ed\u30f3\u30d7\u30c8\u304b\u3089\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\uff08\u540c\u671f\uff09","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nWindow::Resize(512, 512);\nconst String API_KEY = EnvironmentVariable::Get(U\"MY_OPENAI_API_KEY\");\nconst Texture texture{ OpenAI::Image::Create(API_KEY,\nU\"There are tall mountains in the distance. The sky is clear.\",\nOpenAI::ImageSize512) };\nwhile (System::Update())\n{\ntexture.draw();\n}\n}\n</code></pre>"},{"location":"tutorial3/openai/#5910-\u30d7\u30ed\u30f3\u30d7\u30c8\u304b\u3089\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u975e\u540c\u671f","title":"59.10 \u30d7\u30ed\u30f3\u30d7\u30c8\u304b\u3089\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\uff08\u975e\u540c\u671f\uff09","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst String API_KEY = EnvironmentVariable::Get(U\"MY_OPENAI_API_KEY\");\nArray&lt;Texture&gt; textures;\nAsyncTask task = OpenAI::Image::CreateAsync(API_KEY, U\"Mount Fuji has erupted, and volcanic ash is falling on Tokyo.\", 4, OpenAI::ImageSize256);\nwhile (System::Update())\n{\nif (task.isValid())\n{\nCircle{ Scene::Center(), 50 }.drawArc(Scene::Time() * 120_deg, 300_deg, 4, 4);\n}\nif (task.isReady())\n{\nfor (const auto&amp; image : task.get())\n{\ntextures &lt;&lt; Texture{ image };\n}\n}\nfor (size_t i = 0; i &lt; textures.size(); ++i)\n{\nconst double x = (i % 2) * 256.0;\nconst double y = (i / 2) * 256.0;\ntextures[i].draw(x, y);\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/openai/#5911-embedding-\u3092\u7528\u3044\u3066\u985e\u4f3c\u3059\u308b\u6587\u7ae0\u3092\u691c\u7d22\u3059\u308b","title":"59.11 Embedding \u3092\u7528\u3044\u3066\u985e\u4f3c\u3059\u308b\u6587\u7ae0\u3092\u691c\u7d22\u3059\u308b","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nstruct Text\n{\nString text;\nArray&lt;float&gt; embedding;\nfloat cosineSimilarity = 0.0f;\n};\nbool Init(const String API_KEY, Array&lt;Text&gt;&amp; texts)\n{\nfor (auto&amp; text : texts)\n{\nString error;\n// OpenAI Embeddings API \u3067\u6587\u7ae0\u306e\u57cb\u3081\u8fbc\u307f\u30d9\u30af\u30c8\u30eb\u3092\u53d6\u5f97\ntext.embedding = OpenAI::Embedding::Create(API_KEY, text.text, error);\nif (not text.embedding)\n{\nPrint &lt;&lt; error;\nreturn false;\n}\n}\nreturn true;\n}\nvoid Main()\n{\nWindow::Resize(1280, 720);\nScene::SetBackground(ColorF{ 0.92 });\nconst String API_KEY = EnvironmentVariable::Get(U\"MY_OPENAI_API_KEY\");\nconst Font font{ FontMethod::MSDF, 48, Typeface::Bold };\nArray&lt;Text&gt; texts =\n{\n{ U\"\u516c\u5712\u3002\u5e02\u8857\u5730\u306a\u3069\u306b\u8a2d\u3051\u3089\u308c\u305f\u516c\u5171\u65bd\u8a2d\u3068\u3057\u3066\u306e\u5ead\u5712\u3084\u904a\u5712\u5730\u3002\" },\n{ U\"\u5929\u6c17\u3002\u3042\u308b\u5834\u6240\u306e\u3001\u3042\u308b\u6642\u523b\u306e\u6c17\u8c61\u72b6\u614b\u3002\u6c17\u6e29\u30fb\u6e7f\u5ea6\u30fb\u98a8\u30fb\u96f2\u91cf\u306a\u3069\u3092\u7dcf\u5408\u3057\u305f\u72b6\u614b\u3002\" },\n{ U\"\u4f1a\u8b70\u3002\u95a2\u4fc2\u8005\u304c\u96c6\u307e\u3063\u3066\u76f8\u8ac7\u3092\u3057\u3001\u7269\u4e8b\u3092\u6c7a\u5b9a\u3059\u308b\u3053\u3068\u3002\" },\n{ U\"\u6c34\u6cf3\u3002\u30b9\u30dd\u30fc\u30c4\u3084\u5a2f\u697d\u3068\u3057\u3066\u6c34\u4e2d\u3092\u6cf3\u3050\u3053\u3068\u3002\" },\n{ U\"\u5bff\u53f8\u3002\u9162\u98ef\u306b\u751f\u9bae\u9b5a\u4ecb\u306e\u5207\u308a\u8eab\u3092\u4e57\u305b\u305f\u6599\u7406\u3002\" },\n{ U\"\u643a\u5e2f\u96fb\u8a71\u3002\u7121\u7dda\u3092\u7528\u3044\u3066\u9577\u8ddd\u96e2\u901a\u4fe1\u306e\u3067\u304d\u308b\u5c0f\u578b\u306e\u79fb\u52d5\u96fb\u8a71\u3002\" },\n{ U\"\u533b\u8005\u3002\u75c5\u4eba\u306e\u8a3a\u5bdf\u30fb\u6cbb\u7642\u3092\u8077\u696d\u3068\u3059\u308b\u4eba\u3002\" },\n{ U\"\u96fb\u8eca\u3002\u99c6\u52d5\u7528\u96fb\u52d5\u6a5f\u3092\u88c5\u7f6e\u3057\u3001\u67b6\u7dda\u3042\u308b\u3044\u306f\u8ecc\u9053\u304b\u3089\u5f97\u308b\u96fb\u6c17\u3092\u52d5\u529b\u6e90\u3068\u3057\u3066\u8d70\u884c\u3059\u308b\u9244\u9053\u8eca\u4e21\u3002\" },\n{ U\"\u68ee\u6797\u3002\u6a39\u6728\u3001\u7279\u306b\u9ad8\u6728\u304c\u7fa4\u751f\u3057\u3066\u5927\u304d\u306a\u9762\u7a4d\u3092\u5360\u3081\u3066\u3044\u308b\u6240\u3002\" },\n{ U\"\u706b\u66dc\u65e5\u3002\u6708\u66dc\u65e5\u3068\u6c34\u66dc\u65e5\u306e\u9593\u306b\u3042\u308b\u9031\u306e1\u65e5\u3002\" },\n{ U\"\u5927\u4f7f\u9928\u3002\u7279\u547d\u5168\u6a29\u5927\u4f7f\u304c\u99d0\u5728\u56fd\u306b\u304a\u3044\u3066\u516c\u52d9\u3092\u57f7\u884c\u3059\u308b\u516c\u9928\u3002\" },\n{ U\"\u7a83\u76d7\u3002\u4eba\u306e\u7269\u3092\u306c\u3059\u3080\u3053\u3068\u3002\u307e\u305f\u3001\u305d\u306e\u4eba\u3002\" },\n{ U\"\u5730\u9707\u3002\u5730\u7403\u5185\u90e8\u306e\u6025\u6fc0\u306a\u5909\u52d5\u306b\u3088\u308b\u632f\u52d5\u304c\u56db\u65b9\u306b\u4f1d\u308f\u308a\u5927\u5730\u304c\u63fa\u308c\u308b\u73fe\u8c61\u3002\" },\n{ U\"\u624b\u7d19\u3002\u7528\u4e8b\u306a\u3069\u3092\u8a18\u3057\u3066\u3001\u4eba\u306b\u9001\u308b\u6587\u66f8\u3002\" },\n{ U\"\u7761\u7720\u3002\u306d\u3080\u308b\u3053\u3068\u3002\u306d\u3080\u308a\u3002\" },\n};\nAsyncTask initTask = Async(Init, String{ API_KEY }, std::ref(texts));\nTextEditState textEditState;\nfloat maxCosineSimilarity = 0.0f, minCosineSimilarity = 1.0f;\nAsyncHTTPTask task;\nwhile (System::Update())\n{\nif (initTask.isValid())\n{\nCircle{ Scene::Center(), 40 }.drawArc(Scene::Time() * 90_deg, 270_deg, 5);\nfont(U\"\u30c6\u30ad\u30b9\u30c8\u306e\u57cb\u3081\u8fbc\u307f\u30d9\u30af\u30c8\u30eb\u3092\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\u4e8b\u524d\u306b\u8a08\u7b97\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u5b9f\u884c\u6642\u306e\u51e6\u7406\u3092\u7701\u7565\u3067\u304d\u307e\u3059\u3002\").drawAt(22, Scene::Center().movedBy(0, 100), ColorF{ 0.11 });\nif (initTask.isReady())\n{\nif (not initTask.get())\n{\nPrint &lt;&lt; U\"\u57cb\u3081\u8fbc\u307f\u30d9\u30af\u30c8\u30eb\u306e\u8a08\u7b97\u306b\u5931\u6557\u3002\";\n}\n}\ncontinue;\n}\nSimpleGUI::TextBox(textEditState, Vec2{ 40, 40 }, 1000);\nif (SimpleGUI::Button(U\"\u691c\u7d22\", Vec2{ 1060, 40 }, 80, (not textEditState.text.isEmpty()) &amp;&amp; (not task.isDownloading())))\n{\ntask = OpenAI::Embedding::CreateAsync(API_KEY, textEditState.text);\n}\nif (task.isReady() &amp;&amp; task.getResponse().isOK())\n{\nconst Array&lt;float&gt; inputEmbedding = OpenAI::Embedding::GetVector(task.getAsJSON());\nmaxCosineSimilarity = 0.0f; minCosineSimilarity = 1.0f;\nfor (auto&amp; text : texts)\n{\ntext.cosineSimilarity = OpenAI::Embedding::CosineSimilarity(inputEmbedding, text.embedding);\nmaxCosineSimilarity = Max(maxCosineSimilarity, text.cosineSimilarity);\nminCosineSimilarity = Min(minCosineSimilarity, text.cosineSimilarity);\n}\n}\nif (not task.isDownloading())\n{\nfor (int32 i = 0; i &lt; texts.size(); ++i)\n{\nconst float cosineSimilarity = texts[i].cosineSimilarity;\nconst Rect rect{ 40, (100 + i * 38), 1180, 36 };\n// \u6700\u3082\u985e\u4f3c\u5ea6\u304c\u9ad8\u3044\u3082\u306e\u3092\u5f37\u8abf\u8868\u793a\nrect.draw((cosineSimilarity == maxCosineSimilarity) ? ColorF{ 1.0, 1.0, 0.75 } : ColorF{ 1.0 });\n// \u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u3092 0.0 \uff5e 1.0 \u306b\u5909\u63db\nconst double t = Math::Map(cosineSimilarity, minCosineSimilarity, maxCosineSimilarity, 0.0, 1.0);\nRectF{ rect.pos, (50 * t), rect.h }.stretched(0, -2).draw(Colormap01F(t, ColormapType::Turbo));\n// \u6587\u7ae0\u3068\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u3092\u8868\u793a\nfont(texts[i].text).draw(22, Arg::leftCenter = rect.leftCenter().movedBy(80, 0), ColorF{ 0.11 });\nfont(cosineSimilarity).draw(18, Arg::leftCenter = rect.leftCenter().movedBy(1080, 0), ColorF{ 0.11 });\n}\n}\n}\nif (initTask.isValid())\n{\ninitTask.wait();\n}\n}\n</code></pre>"},{"location":"tutorial3/profiler/","title":"58. \u30d7\u30ed\u30d5\u30a1\u30a4\u30e9\u3068\u6700\u9069\u5316","text":"<p>\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u3084\u6700\u9069\u5316\u306e\u305f\u3081\u306e\u6a5f\u80fd\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial3/profiler/#581-xxxxxxxxxxxxx","title":"58.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/profiler/#582-xxxxxxxxxxxxxx","title":"58.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/profiler/#583-xxxxxxxxxxxxx","title":"58.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/profiler/#584-xxxxxxxxxxxxxx","title":"58.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/profiler/#585-xxxxxxxxxxxxx","title":"58.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/profiler/#586-xxxxxxxxxxxxxx","title":"58.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/profiler/#587-xxxxxxxxxxxxx","title":"58.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/profiler/#588-xxxxxxxxxxxxxx","title":"58.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/profiler/#589-xxxxxxxxxxxxx","title":"58.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/profiler/#5810-xxxxxxxxxxxxxx","title":"58.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/profiler/#5811-xxxxxxxxxxxxxx","title":"58.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/profiler/#5812-xxxxxxxxxxxxxx","title":"58.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/profiler/#5813-xxxxxxxxxxxxxx","title":"58.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/profiler/#5814-xxxxxxxxxxxxxx","title":"58.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/release/","title":"60. \u30a2\u30d7\u30ea\u306e\u516c\u958b","text":"<p>\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u914d\u5e03\u3059\u308b\u305f\u3081\u306e\u624b\u9806\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | \u30a2\u30d7\u30ea\u306e\u516c\u958b </p>"},{"location":"tutorial3/release/#601-xxxxxxxxxxxxx","title":"60.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/release/#602-xxxxxxxxxxxxxx","title":"60.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/release/#603-xxxxxxxxxxxxxx","title":"60.3 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/release/#604-xxxxxxxxxxxxxx","title":"60.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/release/#605-xxxxxxxxxxxxxx","title":"60.5 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/release/#606-xxxxxxxxxxxxxx","title":"60.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/release/#607-xxxxxxxxxxxxxx","title":"60.7 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/release/#608-xxxxxxxxxxxxxx","title":"60.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/release/#609-xxxxxxxxxxxxxx","title":"60.9 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/release/#6010-xxxxxxxxxxxxxx","title":"60.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/release/#6011-xxxxxxxxxxxxxx","title":"60.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/render-texture/","title":"41. \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3","text":"<p>\u56f3\u5f62\u3084\u30c6\u30af\u30b9\u30c1\u30e3\u3001\u30d5\u30a9\u30f3\u30c8\u306e\u63cf\u753b\u5148\u3092\u30b7\u30fc\u30f3\u3067\u306f\u306a\u304f\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial3/render-texture/#411-\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u57fa\u672c","title":"41.1 \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u57fa\u672c","text":"<p>\u3053\u308c\u307e\u3067\u3001\u56f3\u5f62\u3084\u30c6\u30af\u30b9\u30c1\u30e3\u3001\u30d5\u30a9\u30f3\u30c8\u306e\u63cf\u753b\u306f\u30b7\u30fc\u30f3\u306b\u5bfe\u3057\u3066\u884c\u308f\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u6a5f\u80fd\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u7528\u610f\u3057\u305f\u5225\u306e\u30c6\u30af\u30b9\u30c1\u30e3\uff08\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\uff09\u306b\u5bfe\u3057\u3066\u63cf\u753b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u306b\u518d\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u3088\u308a\u9ad8\u5ea6\u3067\u8907\u96d1\u306a\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u51e6\u7406\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002</p> <p><code>RenderTexture</code> \u3092\u4f5c\u6210\u3057\u3001<code>ScopedRenderTarget2D</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u6e21\u3059\u3068\u3001<code>ScopedRenderTarget2D</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30b3\u30fc\u30d7\u304c\u6709\u52b9\u306a\u9593\u3001\u56f3\u5f62\u3084\u30c6\u30af\u30b9\u30c1\u30e3\u3001\u30d5\u30a9\u30f3\u30c8\u304c\u305d\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u63cf\u753b\u3055\u308c\u307e\u3059\uff08\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\uff08\u63cf\u753b\u5148\uff09\u306e\u5909\u66f4\uff09\u3002\u63cf\u753b\u5148\u306b\u306a\u3063\u305f\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u3001\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u89e3\u9664\u3055\u308c\u305f\u3042\u3068\u306b\u3001\u901a\u5e38\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u3088\u3046\u306b\u63cf\u753b\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<code>RenderTexture</code> \u306f <code>Texture</code> \u3068\u540c\u3058\u63cf\u753b\u7cfb\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6301\u3061\u307e\u3059\u3002</p> <p><code>RenderTexture</code> \u306e\u4f5c\u6210\u306b\u306f\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u305f\u3081\u3001\u6bce\u30d5\u30ec\u30fc\u30e0\u65b0\u3057\u304f\u4f5c\u6210\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u4e8b\u524d\u306b\u4f5c\u6210\u3057\u3066\u304a\u304d\u3001\u4f7f\u3044\u56de\u3059\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>\u56f3\u5f62\u3084\u30c6\u30af\u30b9\u30c1\u30e3\u3001\u30d5\u30a9\u30f3\u30c8\u306e <code>.draw()</code> \u306b\u3088\u308b\u63cf\u753b\u306f\u3001\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 53. \u3067\u5b66\u3076 <code>Image</code> \u3078\u306e\u66f8\u304d\u8fbc\u307f (<code>.paint()</code> \u3084 <code>.overwrite()</code>) \u3068\u7570\u306a\u308a\u3001GPU \u4e0a\u3067\u5b9f\u884c\u3055\u308c\u308b\u305f\u3081\u9ad8\u901f\u3067\u3059\u3002\u30ec\u30f3\u30c0\u30fc\u30b9\u30c6\u30fc\u30c8\u3082\u9069\u7528\u3055\u308c\u308b\u305f\u3081\u3001\u901a\u5e38\u306e\u30b7\u30fc\u30f3\u3078\u306e\u63cf\u753b\u3068\u540c\u69d8\u306b\u67d4\u8edf\u306a\u63cf\u753b\u304c\u3067\u304d\u307e\u3059\u3002</p> <p><code>RenderTexture</code> \u306f <code>.clear(color)</code> \u306b\u3088\u3063\u3066\u3001\u5185\u5bb9\u3092\u6307\u5b9a\u3057\u305f\u8272\u306b\u30af\u30ea\u30a2\u3067\u304d\u307e\u3059\u3002\u30af\u30ea\u30a2\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u305d\u308c\u307e\u3067\u63cf\u3044\u305f\u5185\u5bb9\u304c\u6b8b\u308a\u7d9a\u3051\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture emoji{ U\"\ud83d\udc08\"_emoji };\n// 200x200 \u306e\u30b5\u30a4\u30ba\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\u3002\u521d\u671f\u72b6\u614b\u306f\u767d\u8272\nconst RenderTexture renderTexture{ Size{ 200, 200 }, Palette::White };\nwhile (System::Update())\n{\n// \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u767d\u8272\u3067\u30af\u30ea\u30a2\u3059\u308b\nrenderTexture.clear(Palette::White);\n{\n// \u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 renderTexture \u306b\u5909\u66f4\u3059\u308b\nconst ScopedRenderTarget2D target{ renderTexture };\nCircle{ 200, 200, 160 }.draw(ColorF{ 0.8, 0.9, 1.0 });\nemoji.rotated(Scene::Time() * 30_deg).drawAt(100, 100);\n} // \u3053\u3053\u3067 target \u306e\u30b9\u30b3\u30fc\u30d7\u304c\u7d42\u4e86\u3057\u3001\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u30b7\u30fc\u30f3\u306b\u623b\u308b\n// \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b\nrenderTexture.draw(0, 0);\nrenderTexture.draw(200, 200);\nrenderTexture.draw(400, 400);\n}\n}\n</code></pre> <p><code>RenderTexture</code> \u306e <code>.clear()</code> \u306f\u81ea\u8eab\u306e\u53c2\u7167\u3092\u8fd4\u3059\u305f\u3081\u3001\u30af\u30ea\u30a2\u3068 <code>ScopedRenderTarget2D</code> \u3078\u306e\u8a2d\u5b9a\u3092 1 \u884c\u306b\u77ed\u304f\u307e\u3068\u3081\u3066\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture emoji{ U\"\ud83d\udc08\"_emoji };\n// 200x200 \u306e\u30b5\u30a4\u30ba\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\u3002\u521d\u671f\u72b6\u614b\u306f\u767d\u8272\nconst RenderTexture renderTexture{ 200, 200, Palette::White };\nwhile (System::Update())\n{\n{\n// renderTexture \u3092\u30af\u30ea\u30a2\u3057\u3001\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 renderTexture \u306b\u5909\u66f4\u3059\u308b\nconst ScopedRenderTarget2D target{ renderTexture.clear(Palette::White) };\nCircle{ 200, 200, 160 }.draw(ColorF{ 0.8, 0.9, 1.0 });\nemoji.rotated(Scene::Time() * 30_deg).drawAt(100, 100);\n}\nrenderTexture.draw(0, 0);\nrenderTexture.draw(200, 200);\nrenderTexture.draw(400, 400);\n}\n}\n</code></pre>"},{"location":"tutorial3/render-texture/#412-\u30af\u30ea\u30a2\u3092\u3057\u306a\u3044\u4f7f\u3044\u65b9","title":"41.2 \u30af\u30ea\u30a2\u3092\u3057\u306a\u3044\u4f7f\u3044\u65b9","text":"<p>\u63cf\u753b\u5185\u5bb9\u304c\u5909\u308f\u3089\u306a\u3044\u5834\u5408\u3001\u63cf\u753b\u30b3\u30b9\u30c8\u306e\u524a\u6e1b\u306e\u305f\u3081\u306b <code>RenderTexture</code> \u306e\u30af\u30ea\u30a2\u304a\u3088\u3073 <code>RenderTexture</code> \u3078\u306e\u63cf\u753b\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u4e0b\u8a18\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u6700\u521d\u306e\u30d5\u30ec\u30fc\u30e0\u3067 <code>RenderTexture</code> \u306b\u63cf\u753b\u3092\u884c\u3044\u3001\u4ee5\u964d\u306f <code>RenderTexture</code> \u3092\u63cf\u753b\u3059\u308b\u3053\u3068\u3067\u3001\u6bce\u30d5\u30ec\u30fc\u30e0\u306e\u63cf\u753b\u30b3\u30b9\u30c8\u3092\u524a\u6e1b\u3057\u3066\u3044\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture emoji{ U\"\ud83d\udd25\"_emoji };\n// 200x200 \u306e\u30b5\u30a4\u30ba\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\u3002\u521d\u671f\u72b6\u614b\u306f\u767d\u8272\nconst RenderTexture renderTexture{ Size{ 400, 400 }, Palette::White };\n{\n// \u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 renderTexture \u306b\u5909\u66f4\u3059\u308b\nconst ScopedRenderTarget2D target{ renderTexture };\nfor (int32 i = 0; i &lt; 30; ++i)\n{\nemoji.drawAt(RandomVec2(Rect{ 0, 0, 400, 400 }));\n}\n}\nwhile (System::Update())\n{\n// \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b\nrenderTexture.draw(0, 0);\nrenderTexture.draw(400, 200);\n}\n}\n</code></pre>"},{"location":"tutorial3/render-texture/#413-\u900f\u904e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3078\u306e\u66f8\u304d\u8fbc\u307f","title":"41.3 \u900f\u904e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3078\u306e\u66f8\u304d\u8fbc\u307f","text":"<p>\u521d\u671f\u72b6\u614b\u304c\u900f\u904e\u8272\u306e <code>RenderTexture</code> \u306b\u5bfe\u3057\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d6\u30ec\u30f3\u30c9\u30b9\u30c6\u30fc\u30c8\u3067\u63cf\u753b\u3092\u884c\u3046\u3068\u3001<code>RenderTexture</code> \u306e\u5185\u5bb9\u306e RGB \u6210\u5206\u306f\u66f4\u65b0\u3055\u308c\u307e\u3059\u304c\u30a2\u30eb\u30d5\u30a1\u6210\u5206\u306f\u66f4\u65b0\u3055\u308c\u307e\u305b\u3093\u3002\u3064\u307e\u308a\u5168\u4f53\u304c\u900f\u904e\u72b6\u614b\u306a\u306e\u3067\u3001\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3057\u3066\u3082\u4f55\u3082\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8 });\nconst int32 cellSize = 20;\nconst Texture emoji{ U\"\ud83d\udd25\"_emoji };\n// 400x400 \u306e\u30b5\u30a4\u30ba\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\u3002\u521d\u671f\u72b6\u614b\u306f ColorF{ 0.5, 0.0 }\nconst RenderTexture renderTexture{ Size{ 400, 400 }, ColorF{ 0.5, 0.0 } };\n{\n// \u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 renderTexture \u306b\u5909\u66f4\u3059\u308b\nconst ScopedRenderTarget2D target{ renderTexture };\nfor (int32 i = 0; i &lt; 30; ++i)\n{\n// \u3053\u306e\u63cf\u753b\u306f\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30a2\u30eb\u30d5\u30a1\u6210\u5206\u3092\u66f4\u65b0\u3057\u306a\u3044\nemoji.drawAt(RandomVec2(Rect{ 0, 0, 400, 400 }));\n}\n}\nwhile (System::Update())\n{\nfor (int32 y = 0; y &lt; (Scene::Height() / cellSize); ++y)\n{\nfor (int32 x = 0; x &lt; (Scene::Width() / cellSize); ++x)\n{\nif (IsEven(y + x))\n{\nRect{ (x * cellSize), (y * cellSize), cellSize }.draw(ColorF{ 0.75 });\n}\n}\n}\n// \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b\nrenderTexture.draw(0, 0);\n}\n}\n</code></pre> <p>\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u306b\u306f\u3001\u30d6\u30ec\u30f3\u30c9\u30b9\u30c6\u30fc\u30c8\u3092\u300c\u63cf\u753b\u3055\u308c\u305f\u6700\u5927\u306e\u30a2\u30eb\u30d5\u30a1\u6210\u5206\u3092\u4fdd\u6301\u3059\u308b\u300d\u8a2d\u5b9a\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001<code>RenderTexture</code> \u306e\u30a2\u30eb\u30d5\u30a1\u6210\u5206\u304c\u66f4\u65b0\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\n// \u63cf\u753b\u3055\u308c\u305f\u6700\u5927\u306e\u30a2\u30eb\u30d5\u30a1\u6210\u5206\u3092\u4fdd\u6301\u3059\u308b\u30d6\u30ec\u30f3\u30c9\u30b9\u30c6\u30fc\u30c8\u3092\u4f5c\u6210\u3059\u308b\nBlendState MakeBlendState()\n{\nBlendState blendState = BlendState::Default2D;\nblendState.srcAlpha = Blend::SrcAlpha;\nblendState.dstAlpha = Blend::DestAlpha;\nblendState.opAlpha = BlendOp::Max;\nreturn blendState;\n}\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.8 });\nconst int32 cellSize = 20;\nconst Texture emoji{ U\"\ud83d\udd25\"_emoji };\n// 400x400 \u306e\u30b5\u30a4\u30ba\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\u3002\u521d\u671f\u72b6\u614b\u306f ColorF{ 0.5, 0.0 }\nconst RenderTexture renderTexture{ Size{ 400, 400 }, ColorF{ 0.5, 0.0 } };\n{\n// \u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 renderTexture \u306b\u5909\u66f4\u3059\u308b\nconst ScopedRenderTarget2D target{ renderTexture };\n// \u63cf\u753b\u3055\u308c\u305f\u6700\u5927\u306e\u30a2\u30eb\u30d5\u30a1\u6210\u5206\u3092\u4fdd\u6301\u3059\u308b\u30d6\u30ec\u30f3\u30c9\u30b9\u30c6\u30fc\u30c8\nconst ScopedRenderStates2D blend{ MakeBlendState() };\nfor (int32 i = 0; i &lt; 30; ++i)\n{\n// \u3053\u306e\u63cf\u753b\u306f\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30a2\u30eb\u30d5\u30a1\u6210\u5206\u3092\u66f4\u65b0\u3059\u308b\nemoji.drawAt(RandomVec2(Rect{ 0, 0, 400, 400 }));\n}\n}\nwhile (System::Update())\n{\nfor (int32 y = 0; y &lt; (Scene::Height() / cellSize); ++y)\n{\nfor (int32 x = 0; x &lt; (Scene::Width() / cellSize); ++x)\n{\nif (IsEven(y + x))\n{\nRect{ (x * cellSize), (y * cellSize), cellSize }.draw(ColorF{ 0.75 });\n}\n}\n}\n// \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b\nrenderTexture.draw(0, 0);\n}\n}\n</code></pre>"},{"location":"tutorial3/render-texture/#414-\u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3","title":"41.4 \u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30fb\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3","text":"<p><code>RenderTexture</code> \u3078\u306e\u63cf\u753b\u3067\u306f\u3001\u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30fb\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b7\u30f3\u30b0\u304c\u9069\u7528\u3055\u308c\u305a\u3001\u659c\u3081\u306e\u7dda\u3092\u542b\u3080\u3088\u3046\u306a\u56f3\u5f62\u3092\u63cf\u753b\u3057\u305f\u969b\u306b\u30b8\u30e3\u30ae\u30fc\u304c\u751f\u3058\u307e\u3059\u3002\u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30fb\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b7\u30f3\u30b0\u3092\u9069\u7528\u3057\u305f\u3044\u5834\u5408\u306f <code>MSRenderTexture</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> \u63cf\u753b\u5bfe\u8c61 \u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30fb\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b7\u30f3\u30b0 \u901a\u5e38\u306e\u30b7\u30fc\u30f3 \u6709\u52b9 <code>RenderTexture</code> \u7121\u52b9 <code>MSRenderTexture</code> \u6709\u52b9 <p><code>MSRenderTexture</code> \u3092\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u8a2d\u5b9a\u3059\u308b\u65b9\u6cd5\u306f <code>RenderTexture</code> \u3068\u540c\u69d8\u3067\u3059\u304c\u3001\u305d\u306e\u63cf\u753b\u7d50\u679c\u3092\u4f7f\u3046\u969b\u306b\u306f\u4e0b\u8a18\u306e 2 \u3064\u306e\u8ffd\u52a0\u306e\u624b\u9806\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002</p> <ol> <li><code>Graphics2D::Flush()</code> \u3092\u547c\u3073\u3001\u305d\u306e\u6642\u70b9\u307e\u3067\u306e 2D \u63cf\u753b\u51e6\u7406\u3092\u3059\u3079\u3066\u5b9f\u884c\uff08\u30d5\u30e9\u30c3\u30b7\u30e5\uff09\u3057\u3066 <code>MSRenderTexture</code> \u306e\u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30fb\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u5bfe\u3059\u308b\u63cf\u753b\u5185\u5bb9\u3092\u78ba\u5b9f\u306b\u66f8\u304d\u8fbc\u3080</li> <li><code>MSRenderTexture</code> \u306e <code>.resolve()</code> \u306b\u3088\u3063\u3066\u3001<code>MSRenderTexture</code> \u5185\u306e\u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30fb\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u3001\u63cf\u753b\u3067\u4f7f\u7528\u53ef\u80fd\u306a\u901a\u5e38\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u5909\u63db\uff08\u30ea\u30be\u30eb\u30d6\uff09\u3059\u308b</li> </ol> <p>\u3053\u306e\u624b\u9806\u304c\u5fc5\u8981\u306a\u7406\u7531\u306f\u3001Siv3D \u306b\u304a\u3051\u308b <code>.draw()</code> \u306f\u300c\u4e88\u7d04\u300d\u3067\u3001<code>.resolve()</code> \u306f\u300c\u5373\u6642\u5b9f\u884c\u300d\u3067\u3042\u308a\u3001<code>Graphics2D::Flush()</code> \u3092\u884c\u308f\u306a\u3044\u3068\u3001\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u4f55\u3082\u63cf\u304b\u308c\u3066\u3044\u306a\u3044\u72b6\u614b\u3067 <code>resolve()</code> \u304c\u5b9f\u884c\u3055\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3067\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\nconst RenderTexture renderTexture{ 200, 200, Palette::White };\n// \u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30fb\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\nconst MSRenderTexture msRenderTexture{ 200, 200, Palette::White };\nwhile (System::Update())\n{\n// \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\n{\nconst ScopedRenderTarget2D target{ renderTexture.clear(Palette::Black) };\nRect{ Arg::center(100, 100), 80 }\n.rotated(Scene::Time() * 30_deg).draw();\n}\nrenderTexture.draw(100, 0);\n// \u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30fb\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\n{\nconst ScopedRenderTarget2D target{ msRenderTexture.clear(Palette::Black) };\nRect{ Arg::center(100, 100), 80 }\n.rotated(Scene::Time() * 30_deg).draw();\n}\n// 2D \u63cf\u753b\u3092\u30d5\u30e9\u30c3\u30b7\u30e5\u3059\u308b\nGraphics2D::Flush();\n// \u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30fb\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u30ea\u30be\u30eb\u30d6\u3059\u308b\nmsRenderTexture.resolve();\nmsRenderTexture.draw(400, 0);\n}\n}\n</code></pre>"},{"location":"tutorial3/render-texture/#415-rendertexture-\u306b\u5bfe\u3059\u308b\u4fbf\u5229\u306a\u64cd\u4f5c","title":"41.5 RenderTexture \u306b\u5bfe\u3059\u308b\u4fbf\u5229\u306a\u64cd\u4f5c","text":"<p><code>RenderTexture</code> \u3092\u4f7f\u3063\u305f\u3001\u6b21\u306e\u3088\u3046\u306a\u9ad8\u901f\u306a\u753b\u50cf\u51e6\u7406\u6a5f\u80fd\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"tutorial3/render-texture/#void-shaderdownsampleconst-textureregion-from-const-rendertexture-to","title":"void Shader::Downsample(const TextureRegion&amp; from, const RenderTexture&amp; to);","text":"<ul> <li><code>from</code>: \u5165\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> <li><code>to</code>: \u51fa\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> </ul> <p><code>from</code> \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5185\u5bb9\u3092\u62e1\u5927\u7e2e\u5c0f\u3057\u3066 <code>to</code> \u306b\u63cf\u753b\u3057\u307e\u3059\u3002<code>from</code> \u3068 <code>to</code> \u306f\u3068\u3082\u306b\u6709\u52b9\u306a\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u3001\u4e92\u3044\u306b\u7570\u306a\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"tutorial3/render-texture/#void-shadergaussianblurconst-textureregion-from-const-rendertexture-internalbuffer-const-rendertexture-to","title":"void Shader::GaussianBlur(const TextureRegion&amp; from, const RenderTexture&amp; internalBuffer, const RenderTexture&amp; to);","text":"<ul> <li><code>from</code>: \u5165\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> <li><code>internalBuffer</code>: \u4e2d\u9593\u30c6\u30af\u30b9\u30c1\u30e3</li> <li><code>to</code>: \u51fa\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> </ul> <p><code>from</code> \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u7e26\u65b9\u5411\u3068\u6a2a\u65b9\u5411\u306e\u30ac\u30a6\u30b9\u30d6\u30e9\u30fc\u3092\u304b\u3051\u3066 <code>to</code> \u306b\u63cf\u753b\u3057\u307e\u3059\u3002<code>from</code>, <code>internalBuffer</code>, <code>to</code> \u306f\u3044\u305a\u308c\u3082\u6709\u52b9\u306a\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u3001\u9818\u57df\u306e\u30b5\u30a4\u30ba\u304c\u540c\u3058\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002<code>from</code> \u3068 <code>to</code> \u306f\u540c\u3058\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u3067\u304d\u307e\u3059\u3002</p> <p>1 \u56de\u306e\u30ac\u30a6\u30b9\u30d6\u30e9\u30fc\u51e6\u7406\u3067\u5f97\u3089\u308c\u308b\u52b9\u679c\u306f\u305d\u308c\u307b\u3069\u5927\u304d\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u5927\u304d\u306a\u307c\u304b\u3057\u52b9\u679c\u3092\u5f97\u308b\u306b\u306f\u3001\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30eb\u3057\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u30ac\u30a6\u30b9\u30d6\u30e9\u30fc\u3092\u304b\u3051\u305f\u3042\u3068\u3001\u305d\u308c\u3092\u5143\u306e\u30b5\u30a4\u30ba\u3067\u62e1\u5927\u63cf\u753b\u3059\u308b\u65b9\u6cd5\u304c\u6709\u52b9\u3067\u3059\u3002</p>"},{"location":"tutorial3/render-texture/#void-shadercopyconst-textureregion-from-const-rendertexture-to","title":"void Shader::Copy(const TextureRegion&amp; from, const RenderTexture&amp; to);","text":"<ul> <li><code>from</code>: \u5165\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> <li><code>to</code>: \u51fa\u529b\u30c6\u30af\u30b9\u30c1\u30e3</li> </ul> <p><code>from</code> \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5185\u5bb9\u3092 <code>to</code> \u306b\u63cf\u753b\u3057\u307e\u3059\u3002<code>from</code> \u3068 <code>to</code> \u306f\u3068\u3082\u306b\u6709\u52b9\u306a\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u3001\u4e92\u3044\u306b\u7570\u306a\u308a\u3001\u9818\u57df\u306e\u30b5\u30a4\u30ba\u304c\u540c\u3058\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002</p> <p>\u901a\u5e38\u306f <code>Texture</code> \u578b\u3084 <code>TextureRegion</code> \u578b\u306e\u5909\u6570\u3078\u306e\u4ee3\u5165\u3067\u9593\u306b\u5408\u3046\u305f\u3081 <code>Shader::Copy()</code> \u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u306f\u7279\u6b8a\u306a\u30b1\u30fc\u30b9\u3067\u3059\u3002\u4f8b\u3048\u3070\u5927\u304d\u3044\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u304b\u3089\u4e00\u90e8\u306e\u9818\u57df\u3060\u3051\u3092\u5207\u308a\u51fa\u3057\u3066\u4f7f\u3046\u5834\u5408\u3001<code>Shader::Copy()</code> \u306e\u5b9f\u884c\u5f8c\u306b\u5927\u304d\u3044\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u7834\u68c4\u3059\u308b\u3053\u3068\u3067\u3001\u6d88\u8cbb\u30e1\u30e2\u30ea\u3092\u7bc0\u7d04\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"tutorial3/render-texture/#4151-\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30eb","title":"41.5.1 \u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30eb","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture texture{ U\"example/windmill.png\" };\n// \u7e26\u3001\u6a2a\u304c 4 \u5206\u306e 1 \u30b5\u30a4\u30ba\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\nconst RenderTexture renderTexture{ texture.size() / 4 };\n// \u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30eb\u3092\u5b9f\u884c\u3059\u308b\nShader::Downsample(texture, renderTexture);\nwhile (System::Update())\n{\nrenderTexture.draw();\n}\n}\n</code></pre> \u753b\u50cf\u306e\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30eb\u306e\u5225\u306e\u65b9\u6cd5 <p><code>Image</code> \u3092\u4f7f\u3063\u305f\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30eb\u3082\u53ef\u80fd\u3067\u3059\u3002\u9ad8\u54c1\u8cea\u306a\u7d50\u679c\u3092\u5f97\u3089\u308c\u307e\u3059\u304c\u3001CPU \u3067\u51e6\u7406\u3059\u308b\u305f\u3081 <code>RenderTexture</code> \u3092\u4f7f\u3063\u305f\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30eb\u3088\u308a\u3082\u6642\u9593\u304c\u304b\u304b\u308a\u3001\u6bce\u30d5\u30ec\u30fc\u30e0\u306e\u5b9f\u884c\u306a\u3069\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u51e6\u7406\u306b\u306f\u5411\u304d\u307e\u305b\u3093\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// \u5143\u753b\u50cf\u304b\u3089\u7e26\u3001\u6a2a\u3092 4 \u5206\u306e 1 \u30b5\u30a4\u30ba\u306b\u3057\u3066\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\nconst Texture texture{ Image{ U\"example/windmill.png\" }.scaled(0.25) };\nwhile (System::Update())\n{\ntexture.draw();\n}\n}\n</code></pre>"},{"location":"tutorial3/render-texture/#4152-\u30ac\u30a6\u30b9\u307c\u304b\u3057","title":"41.5.2 \u30ac\u30a6\u30b9\u307c\u304b\u3057","text":"<pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture texture{ U\"example/windmill.png\" };\nconst RenderTexture internalTexture{ texture.size() };\nconst RenderTexture renderTexture{ texture.size() };\nShader::GaussianBlur(texture, internalTexture, renderTexture);\nwhile (System::Update())\n{\nrenderTexture.draw();\n}\n}\n</code></pre>"},{"location":"tutorial3/render-texture/#416-\u5f37\u3044\u30ac\u30a6\u30b9\u307c\u304b\u3057","title":"41.6 \u5f37\u3044\u30ac\u30a6\u30b9\u307c\u304b\u3057","text":"<p>\u30ac\u30a6\u30b9\u307c\u304b\u3057\u3092\u91cd\u306d\u3066\u9069\u7528\u3059\u308b\u3088\u308a\u3082\u3001\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30eb\u3057\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u30ac\u30a6\u30b9\u307c\u304b\u3057\u3092\u304b\u3051\u305f\u3042\u3068\u5143\u306e\u30b5\u30a4\u30ba\u3067\u62e1\u5927\u63cf\u753b\u3059\u308b\u307b\u3046\u304c\u3001\u3088\u308a\u4f4e\u3044\u30b3\u30b9\u30c8\u3067\u5927\u304d\u306a\u307c\u304b\u3057\u52b9\u679c\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059 (3), (4)\u3002\u307e\u305f\u3001\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30eb\u524d\u306b\u30ac\u30a6\u30b9\u307c\u304b\u3057\u3092\u304b\u3051\u308b\u3068\u3001\u30b3\u30b9\u30c8\u306f\u5897\u3048\u307e\u3059\u304c\u3001\u307c\u304b\u3057\u306e\u54c1\u8cea\u304c\u5411\u4e0a\u3057\u307e\u3059 (5)\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\n// (0) \u30aa\u30ea\u30b8\u30ca\u30eb\nconst Texture original{ U\"example/windmill.png\" };\n// (1) \u30ac\u30a6\u30b9\u307c\u304b\u3057 1 \u56de\nconst RenderTexture blur1{ original.size() };\nconst RenderTexture internalTexture{ original.size() };\nShader::GaussianBlur(original, internalTexture, blur1);\n// (2) \u30ac\u30a6\u30b9\u307c\u304b\u3057 2 \u56de\nconst RenderTexture blur2{ original.size() };\nShader::GaussianBlur(blur1, internalTexture, blur2);\n// (3) 1/2 \u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30eb + \u30ac\u30a6\u30b9\u307c\u304b\u3057 1 \u56de\nconst RenderTexture downsample2{ original.size() / 2 };\nconst RenderTexture internalTexture2{ original.size() / 2 };\nShader::Downsample(original, downsample2);\nShader::GaussianBlur(downsample2, internalTexture2, downsample2);\n// (4) 1/4 \u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30eb + \u30ac\u30a6\u30b9\u307c\u304b\u3057 1 \u56de\nconst RenderTexture downsample4{ original.size() / 4 };\nconst RenderTexture internalTexture4{ original.size() / 4 };\nShader::Downsample(original, downsample4);\nShader::GaussianBlur(downsample4, internalTexture4, downsample4);\n// (5) \u30ac\u30a6\u30b9\u307c\u304b\u3057 + 1/2 \u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30eb + \u30ac\u30a6\u30b9\u307c\u304b\u3057 + 1/2 \u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30eb + \u30ac\u30a6\u30b9\u307c\u304b\u3057\nconst RenderTexture downsampleB2{ original.size() / 2 };\nconst RenderTexture downsampleB4{ original.size() / 4 };\nShader::Downsample(blur1, downsampleB2);\nShader::GaussianBlur(downsampleB2, internalTexture2, downsampleB2);\nShader::Downsample(downsampleB2, downsampleB4);\nShader::GaussianBlur(downsampleB4, internalTexture4, downsampleB4);\nsize_t index = 0;\nwhile (System::Update())\n{\nif (index == 0)\n{\noriginal.draw(40, 40);\n}\nelse if (index == 1)\n{\nblur1.draw(40, 40);\n}\nelse if (index == 2)\n{\nblur2.draw(40, 40);\n}\nelse if (index == 3)\n{\ndownsample2.scaled(2.0).draw(40, 40);\n}\nelse if (index == 4)\n{\ndownsample4.scaled(4.0).draw(40, 40);\n}\nelse if (index == 5)\n{\ndownsampleB4.scaled(4.0).draw(40, 40);\n}\nSimpleGUI::RadioButtons(index, { U\"original\", U\"1x blur\", U\"2x blur\", U\"1/2 scale + 1x blur\", U\"1/4 scale + 1x blur\", U\"1x + 1/2 + 1x + 1/2 + 1x\" }, Vec2{ 530, 40 });\n}\n}\n</code></pre>"},{"location":"tutorial3/render-texture/#417-\u6307\u5b9a\u9818\u57df\u306b\u30ac\u30a6\u30b9\u307c\u304b\u3057\u3092\u304b\u3051\u308b","title":"41.7 \u6307\u5b9a\u9818\u57df\u306b\u30ac\u30a6\u30b9\u307c\u304b\u3057\u3092\u304b\u3051\u308b","text":"<p>\u307c\u304b\u3057\u305f\u80cc\u666f\u304c\u900f\u904e\u3059\u308b\u3088\u3046\u306a\u52b9\u679c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u3001\u30b7\u30fc\u30f3\u5168\u4f53\u3092\u307c\u304b\u3057\u305f\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u7528\u610f\u3057\u3066\u3001\u305d\u306e\u4e00\u90e8\u3092\u5207\u308a\u51fa\u3057\u3066\u63cf\u753b\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u306a\u304a\u3001\u4e0b\u8a18\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u30b7\u30fc\u30f3\u5168\u4f53\u3092\u307c\u304b\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u307c\u304b\u3059\u9818\u57df\u304c\u56fa\u5b9a\u3067\u3042\u308b\u5834\u5408\u3001\u6700\u5c0f\u9650\u306e\u9818\u57df\u3060\u3051\u306b\u307c\u304b\u3057\u3092\u304b\u3051\u308b\u3053\u3068\u3067\u3001\u3088\u308a\u9ad8\u901f\u306b\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\n// \u30b7\u30fc\u30f3\u5168\u4f53\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u3046\u3061\u4e00\u90e8\u9818\u57df\u306e UV \u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\nRectF CalculateUVRect(const Size&amp; scenceSize, const RectF&amp; region)\n{\nreturn{ (region.pos / scenceSize), (region.size / scenceSize) };\n}\nvoid Main()\n{\n// \u30b7\u30fc\u30f3\u30b5\u30a4\u30ba\nconst Size sceneSize{ 1280, 720 };\n// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u30ea\u30b5\u30a4\u30ba\u3059\u308b\nWindow::Resize(sceneSize);\n// bay.jpg \u306f 2560x1440 \u306a\u306e\u3067\u30b5\u30a4\u30ba\u3092\u5c0f\u3055\u304f\u3057\u3066\u30ed\u30fc\u30c9\u3059\u308b\nconst Texture texture{ Image{ U\"example/bay.jpg\" }.scale(1280, 720) };\nconst Texture emoji1{ U\"\ud83d\udea2\"_emoji };\nconst Texture emoji2{ U\"\ud83d\udc1f\"_emoji };\n// \u30e1\u30a4\u30f3\u63cf\u753b\u7528\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\nconst MSRenderTexture msRenderTexture{ sceneSize };\n// \u30ac\u30a6\u30b9\u307c\u304b\u3057\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\nconst RenderTexture internalTexture{ sceneSize };\nconst RenderTexture blur1{ sceneSize };\nconst RenderTexture blur4{ sceneSize / 4 };\nconst RenderTexture internalTexture4{ sceneSize / 4 };\nwhile (System::Update())\n{\n// \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3084\u7d75\u6587\u5b57\u3092\u63cf\u753b\u3059\u308b\n{\nconst ScopedRenderTarget2D target{ msRenderTexture.clear(ColorF{ 0.6, 0.8, 0.7 })};\ntexture.draw();\nemoji1.drawAt(Vec2{ (640 + Periodic::Sine1_1(4s) * 300.0), (200.0 + Periodic::Sine1_1(3s) * 100.0) });\nemoji2.drawAt(Vec2{ (640 + Periodic::Sine1_1(5s) * 300.0), (500.0 + Periodic::Sine1_1(2s) * 100.0) });\n}\n// \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u30ea\u30be\u30eb\u30d6\u3059\u308b\n{\n// 2D \u63cf\u753b\u3092\u30d5\u30e9\u30c3\u30b7\u30e5\u3059\u308b\nGraphics2D::Flush();\n// \u30de\u30eb\u30c1\u30b5\u30f3\u30d7\u30eb\u30fb\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u30ea\u30be\u30eb\u30d6\u3059\u308b\nmsRenderTexture.resolve();\n}\n// \u307c\u304b\u3057\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u7528\u610f\u3059\u308b\n{\nShader::GaussianBlur(msRenderTexture, internalTexture, blur1);\nShader::Downsample(blur1, blur4);\nShader::GaussianBlur(blur4, internalTexture4, blur4);\n}\n// \u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u30b7\u30fc\u30f3\u306b\u63cf\u753b\u3059\u308b\nmsRenderTexture.draw();\n// \u30df\u30cb\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u63cf\u753b\u9818\u57df\nconst RoundRect miniWindow{ Arg::center = Cursor::Pos(), 480, 360 , 24 };\n// \u30df\u30cb\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u307c\u304b\u3057\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u6307\u5b9a\u9818\u57df\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u63cf\u753b\u3059\u308b\nminiWindow(blur4.uv(CalculateUVRect(sceneSize, miniWindow.rect))).draw();\n// \u30df\u30cb\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u63cf\u753b\u3059\u308b\nminiWindow.draw(ColorF{ 1.0, 0.7 });\n}\n}\n</code></pre>"},{"location":"tutorial3/render-texture/#418-\u4efb\u610f\u5f62\u72b6\u306e\u30b7\u30e3\u30c9\u30a6","title":"41.8 \u4efb\u610f\u5f62\u72b6\u306e\u30b7\u30e3\u30c9\u30a6","text":"<p>\u30b7\u30e3\u30c9\u30a6\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u7528\u610f\u3057\u3066\u3001\u305d\u308c\u3092\u307c\u304b\u3057\u305f\u3082\u306e\u3092\u63cf\u753b\u3059\u308b\u3053\u3068\u3067\u3001\u4efb\u610f\u5f62\u72b6\u306e\u30b7\u30e3\u30c9\u30a6\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002</p> <p>\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\u3092 <code>ColorF{ 1.0, 0.0 }</code> \u3067\u30af\u30ea\u30a2\u3057\u3066\u304b\u3089\u3001\u30d6\u30ec\u30f3\u30c9\u30b9\u30c6\u30fc\u30c8 <code>BlendState::MaxAlpha</code> \u3092\u9069\u7528\u3057\u3066\u63cf\u304d\u8fbc\u307f\u3092\u3059\u308b\u3068\u3001RGB \u5024\u306f\u7121\u8996\u3055\u308c\u3001\u63cf\u753b\u3055\u308c\u305f\u6700\u5927\u306e\u30a2\u30eb\u30d5\u30a1\u5024\u3092\u4fdd\u6301\u3059\u308b\u3088\u3046\u306b\u3067\u304d\u307e\u3059\u3002\u8272\u306e\u4ed8\u3044\u305f\u7d75\u6587\u5b57\u306e RGB \u6210\u5206\u3092\u7121\u8996\u3057\u3067\u304d\u308b\u305f\u3081\u3001\u5f71\u7528\u306e\u5f62\u72b6\u3060\u3051\u3092\u63cf\u304d\u305f\u3044\u3068\u304d\u306b\u6700\u9069\u3067\u3059\u3002</p> <p>\u4e0b\u8a18\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u3001\u30de\u30a6\u30b9\u3092\u5de6\u30af\u30ea\u30c3\u30af\u3057\u3066\u3044\u308b\u9593\u306f\u3001\u307c\u304b\u3057\u6e08\u307f\u306e\u5f71\u30c6\u30af\u30b9\u30c1\u30e3 <code>blur4</code> \u306e\u307f\u3092\u53ef\u8996\u5316\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Texture emoji{ U\"\ud83d\udc08\"_emoji };\n// \u5f71\u7528\u306e\u30ec\u30f3\u30c0\u30fc\u30c6\u30af\u30b9\u30c1\u30e3\nconst RenderTexture shadowTexture{ Scene::Size(), ColorF{ 1.0, 0.0 } };\nconst RenderTexture blur4{ shadowTexture.size() / 4 };\nconst RenderTexture internal4{ shadowTexture.size() / 4 };\nwhile (System::Update())\n{\nconst double angle = (Scene::Time() * 10_deg);\n// \u5f71\u306e\u5f62\u72b6\u3092\u63cf\u304f\n{\nconst ScopedRenderTarget2D target{ shadowTexture.clear(ColorF{ 1.0, 0.0 }) };\n// RGB \u5024\u306f\u7121\u8996\u3057\u3066\u3001\u63cf\u753b\u3055\u308c\u305f\u6700\u5927\u306e\u30a2\u30eb\u30d5\u30a1\u5024\u3092\u4fdd\u6301\u3059\u308b\u30d6\u30ec\u30f3\u30c9\u30b9\u30c6\u30fc\u30c8\u3092\u9069\u7528\u3059\u308b\nconst ScopedRenderStates2D blend{ BlendState::MaxAlpha };\n// \u5f71\u3092\u53f3\u4e0b\u65b9\u5411\u306b\u843d\u3068\u3059\u305f\u3081\u3001\u63cf\u753b\u4f4d\u7f6e\u3092\u305a\u3089\u3059\nconst Transformer2D transform{ Mat3x2::Translate(2, 2) };\nShape2D::Hexagon(100, Vec2{ 200, 200 }).draw();\nShape2D::Star(120, Vec2{ 400, 400 }, angle).draw();\nShape2D::RectBalloon(Rect{ 500, 103, 200, 100 }, Vec2{ 480, 240 }).drawFrame(10);\nemoji.rotated(angle).drawAt(600, 500);\n}\n// shadowTexture \u3092\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0 + \u30ac\u30a6\u30b9\u307c\u304b\u3057\n{\nShader::Downsample(shadowTexture, blur4);\nShader::GaussianBlur(blur4, internal4, blur4);\n}\n// \u307c\u304b\u3057\u305f\u5f71\u3092\u63cf\u304f\nblur4.resized(Scene::Size()).draw(ColorF{ 0.0, 0.5 });\n// \u901a\u5e38\u306e\u5f62\u72b6\u3092\u63cf\u304f\nif (not MouseL.pressed())\n{\nShape2D::Hexagon(100, Vec2{ 200, 200 }).draw();\nShape2D::Star(120, Vec2{ 400, 400 }, angle).draw(Palette::Yellow);\nShape2D::RectBalloon(Rect{ 500, 100, 200, 100 }, Vec2{ 480, 240 })\n.drawFrame(10, Palette::Seagreen);\nemoji.rotated(angle).drawAt(600, 500);\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/render-texture/#419-\u30a2\u30a4\u30b3\u30f3\u306e\u30b7\u30e3\u30c9\u30a6","title":"41.9 \u30a2\u30a4\u30b3\u30f3\u306e\u30b7\u30e3\u30c9\u30a6","text":"<p>41.8 \u3092\u5fdc\u7528\u3057\u3066\u3001\u30b7\u30e3\u30c9\u30a6\u4ed8\u304d\u306e\u30a2\u30a4\u30b3\u30f3\u30c6\u30af\u30b9\u30c1\u30e3\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nclass IconWithShadow\n{\npublic:\nIconWithShadow() = default;\nexplicit IconWithShadow(const Texture&amp; texture)\n: m_texture{ texture }\n, m_shadowTexture{ m_texture.size()/2, ColorF{ 1.0, 0.0 } }\n{\nRenderTexture m_internalTexture{ m_texture.size() / 2 };\n// \u5f71\u7528\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u7528\u610f\u3059\u308b\n{\nconst ScopedRenderTarget2D target{ m_shadowTexture };\n// RGB \u5024\u306f\u7121\u8996\u3057\u3066\u3001\u63cf\u753b\u3055\u308c\u305f\u6700\u5927\u306e\u30a2\u30eb\u30d5\u30a1\u5024\u3092\u4fdd\u6301\u3059\u308b\u30d6\u30ec\u30f3\u30c9\u30b9\u30c6\u30fc\u30c8\u3092\u9069\u7528\u3059\u308b\nconst ScopedRenderStates2D blend{ BlendState::MaxAlpha };\n// \u307c\u304b\u3057\u306e\u306f\u307f\u51fa\u3057\u3092\u9632\u3050\u305f\u3081\u3001\u7e2e\u5c0f\u3057\u3066\u63cf\u753b\u3059\u308b\nm_texture.scaled(0.3).drawAt(m_shadowTexture.size() * 0.5);\n}\n// \u30ac\u30a6\u30b9\u307c\u304b\u3057\u3092\u884c\u3046\nShader::GaussianBlur(m_shadowTexture, m_internalTexture, m_shadowTexture);\n}\n// \u30a2\u30a4\u30b3\u30f3\u3092\u63cf\u753b\u3059\u308b\nvoid drawIconAt(const Vec2&amp; center, const ColorF&amp; color = ColorF{ 1.0 }) const\n{\nm_texture.drawAt(center, color);\n}\n// \u5f71\u3092\u63cf\u753b\u3059\u308b\nvoid drawShadowAt(const Vec2&amp; center, const ColorF&amp; shadowColor = ColorF{ 0.0, 0.5 }) const\n{\n// \u7e2e\u5c0f\u5206\u3088\u308a\u5c11\u3057\u5927\u304d\u3081\u306b\u63cf\u753b\u3059\u308b\nm_shadowTexture.scaled(3.6).drawAt(center, shadowColor);\n}\n// \u5f71\u3068\u30a2\u30a4\u30b3\u30f3\u3092\u63cf\u753b\u3059\u308b\nvoid drawWithShadowAt(const Vec2&amp; center, const ColorF&amp; color = ColorF{ 1.0 }, const ColorF&amp; shadowColor = ColorF{ 0.0, 0.5 }) const\n{\ndrawShadowAt(center, shadowColor);\ndrawIconAt(center, color);\n}\nprivate:\nTexture m_texture;\nRenderTexture m_shadowTexture;\n};\nvoid Main()\n{\nScene::SetBackground(ColorF{ 0.6, 0.8, 0.7 });\nconst Array&lt;IconWithShadow&gt; icons =\n{\nIconWithShadow{ Texture{ 0xF064C_icon, 80 } },\nIconWithShadow{ Texture{ 0xF0493_icon, 80 } },\nIconWithShadow{ Texture{ 0xF100D_icon, 80 } },\nIconWithShadow{ Texture{ 0xF06ED_icon, 80 } },\nIconWithShadow{ Texture{ 0xF01F0_icon, 80 } },\nIconWithShadow{ Texture{ 0xF034E_icon, 80 } },\nIconWithShadow{ Texture{ 0xF1C6A_icon, 80 } },\n};\nbool showShadow = true;\nbool showIcon = true;\nwhile (System::Update())\n{\nif (showShadow)\n{\nfor (size_t i = 0; i &lt; icons.size(); ++i)\n{\nicons[i].drawShadowAt(Vec2{ (100 + i * 100), 200 });\n}\nfor (size_t i = 0; i &lt; icons.size(); ++i)\n{\nicons[i].drawShadowAt(Vec2{ (100 + i * 100), 340 });\n}\nfor (size_t i = 0; i &lt; icons.size(); ++i)\n{\nicons[i].drawShadowAt(Vec2{ (100 + i * 100), 480 }, HSV{ (i * 25.0), 0.3, 1.0 });\n}\n}\nif (showIcon)\n{\nfor (size_t i = 0; i &lt; icons.size(); ++i)\n{\nicons[i].drawIconAt(Vec2{ (100 + i * 100), 200 });\n}\nfor (size_t i = 0; i &lt; icons.size(); ++i)\n{\nicons[i].drawIconAt(Vec2{ (100 + i * 100), 340 }, HSV{ (i * 25.0), 0.3, 1.0 });\n}\nfor (size_t i = 0; i &lt; icons.size(); ++i)\n{\nicons[i].drawIconAt(Vec2{ (100 + i * 100), 480 }, HSV{ (i * 25.0), 0.3, 1.0 });\n}\n}\nSimpleGUI::CheckBox(showShadow, U\"show shadow\", Vec2{ 560, 40 }, 200);\nSimpleGUI::CheckBox(showIcon, U\"show icon\", Vec2{ 560, 80 }, 200);\n}\n}\n</code></pre>"},{"location":"tutorial3/render-texture/#4110-2d-\u30e9\u30a4\u30c8\u30d6\u30eb\u30fc\u30e0","title":"41.10 2D \u30e9\u30a4\u30c8\u30d6\u30eb\u30fc\u30e0","text":"<p>\u30ac\u30a6\u30b9\u307c\u304b\u3057\u306e\u7d50\u679c\u3092\u52a0\u7b97\u30d6\u30ec\u30f3\u30c9\u3067\u63cf\u753b\u3059\u308b\u3053\u3068\u3067\u3001\u30e9\u30a4\u30c8\u30d6\u30eb\u30fc\u30e0\u306e\u8868\u73fe\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002</p> <p></p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid DrawScene(const Texture&amp; emoji)\n{\nCircle{ 680, 40, 20 }.draw();\nRect{ Arg::center(680, 110), 30 }.draw();\nTriangle{ 680, 180, 40 }.draw();\nCircle{ 740, 40, 20 }.draw(HSV{ 0 });\nRect{ Arg::center(740, 110), 30 }.draw(HSV{ 120 });\nTriangle{ 740, 180, 40 }.draw(HSV{ 240 });\nCircle{ 50, 200, 300 }.drawFrame(4);\nCircle{ 550, 450, 200 }.drawFrame(4);\nfor (auto i : step(12))\n{\nconst double angle = (i * 30_deg + Scene::Time() * 5_deg);\nconst Vec2 pos = OffsetCircular{ Scene::Center(), 200, angle };\nCircle{ pos, 8 }.draw(HSV{ i * 30 });\n}\nemoji.drawAt(400, 300);\n}\nvoid Main()\n{\nconst Size sceneSize{ 800, 600 };\nconst Texture emoji{ U\"\ud83d\udc08\"_emoji };\n// \u30d6\u30eb\u30fc\u30e0\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\nconst RenderTexture blur1{ sceneSize };\nconst RenderTexture internal1{ sceneSize };\nconst RenderTexture blur4{ sceneSize / 4 };\nconst RenderTexture internal4{ sceneSize / 4 };\nconst RenderTexture blur8{ sceneSize / 8 };\nconst RenderTexture internal8{ sceneSize / 8 };\n// 3 \u7a2e\u985e\u306e\u307c\u304b\u3057\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5bc4\u4e0e\u5ea6\ndouble a1 = 0.0, a4 = 0.0, a8 = 0.0;\nwhile (System::Update())\n{\n// \u901a\u5e38\u306e\u30b7\u30fc\u30f3\u63cf\u753b\n{\nDrawScene(emoji);\n}\n// \u30d6\u30eb\u30fc\u30e0\u7528\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u7528\u610f\u3059\u308b\n{\n// \u30b7\u30fc\u30f3\u3092\u63cf\u304f\n{\n// \u30d6\u30eb\u30fc\u30e0\u7528\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u3059\u308b\nconst ScopedRenderTarget2D target{ blur1.clear(ColorF{ 0.0 }) };\n// \u30b7\u30fc\u30f3\u3092\u63cf\u304f\nDrawScene(emoji);\n} // blur1 \u306e\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u89e3\u9664\u3055\u308c\u308b\n// (1) blur1: 1x blur\nShader::GaussianBlur(blur1, internal1, blur1);\n// (2) blur4: 1x blur + 1/4 scale + 1x blur \nShader::Downsample(blur1, blur4);\nShader::GaussianBlur(blur4, internal4, blur4);\n// (3) blur8: 1x blur + 1/4 scale + 1x blur + 1/2 scale + 1x blur\nShader::Downsample(blur4, blur8);\nShader::GaussianBlur(blur8, internal8, blur8);\n}\n{\nconst ScopedRenderStates2D blend{ BlendState::Additive };\nif (a1)\n{\nblur1.resized(sceneSize).draw(ColorF{ a1 });\n}\nif (a4)\n{\nblur4.resized(sceneSize).draw(ColorF{ a4 });\n}\nif (a8)\n{\nblur8.resized(sceneSize).draw(ColorF{ a8 });\n}\n}\nSimpleGUI::Slider(U\"a1: {:.1f}\"_fmt(a1), a1, 0.0, 4.0, Vec2{ 40, 40 });\nSimpleGUI::Slider(U\"a4: {:.1f}\"_fmt(a4), a4, 0.0, 4.0, Vec2{ 40, 80 });\nSimpleGUI::Slider(U\"a8: {:.1f}\"_fmt(a8), a8, 0.0, 4.0, Vec2{ 40, 120 });\nif (SimpleGUI::Button(U\"0, 0, 0\", Vec2{ 40, 160 }))\n{\na1 = a4 = a8 = 0.0;\n}\nif (SimpleGUI::Button(U\"0, 0, 1\", Vec2{ 40, 200 }))\n{\na1 = a4 = 0.0;\na8 = 1.0;\n}\nif (SimpleGUI::Button(U\"0, 1, 1\", Vec2{ 40, 240 }))\n{\na1 = 0.0;\na8 = a4 = 1.0;\n}\nif (SimpleGUI::Button(U\"1, 1, 1\", Vec2{ 40, 280 }))\n{\na1 = a4 = a8 = 1.0;\n}\n}\n}\n</code></pre>"},{"location":"tutorial3/resource-file/","title":"49. \u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306b\u753b\u50cf\u3084\u97f3\u58f0\u306a\u3069\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u57cb\u3081\u8fbc\u307f\u3001\u305d\u308c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u8aad\u307f\u8fbc\u3080\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | \u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u57cb\u3081\u8fbc\u307f </p>"},{"location":"tutorial3/resource-file/#491-xxxxxxxxxxxxx","title":"49.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/resource-file/#492-xxxxxxxxxxxxxx","title":"49.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/resource-file/#493-xxxxxxxxxxxxx","title":"49.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/resource-file/#494-xxxxxxxxxxxxxx","title":"49.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/resource-file/#495-xxxxxxxxxxxxx","title":"49.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/resource-file/#496-xxxxxxxxxxxxxx","title":"49.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/resource-file/#497-xxxxxxxxxxxxx","title":"49.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/resource-file/#498-xxxxxxxxxxxxxx","title":"49.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/resource-file/#499-xxxxxxxxxxxxx","title":"49.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/resource-file/#4910-xxxxxxxxxxxxxx","title":"49.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/resource-file/#4911-xxxxxxxxxxxxxx","title":"49.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/resource-file/#4912-xxxxxxxxxxxxxx","title":"49.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/resource-file/#4913-xxxxxxxxxxxxxx","title":"49.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/resource-file/#4914-xxxxxxxxxxxxxx","title":"49.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/scene-manager/","title":"51. \u30b7\u30fc\u30f3\u7ba1\u7406","text":"<p>\u30b2\u30fc\u30e0\u3084\u30a2\u30d7\u30ea\u306b\u304a\u3051\u308b\u30b7\u30fc\u30f3\u9077\u79fb\u3092\u7c21\u5358\u306b\u5b9f\u88c5\u3059\u308b\u300c\u30b7\u30fc\u30f3\u7ba1\u7406\u300d\u306e\u6a5f\u80fd\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | \u30b7\u30fc\u30f3\u7ba1\u7406 </p>"},{"location":"tutorial3/scene-manager/#511-xxxxxxxxxxxxx","title":"51.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/scene-manager/#512-xxxxxxxxxxxxxx","title":"51.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/scene-manager/#513-xxxxxxxxxxxxx","title":"51.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/scene-manager/#514-xxxxxxxxxxxxxx","title":"51.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/scene-manager/#515-xxxxxxxxxxxxx","title":"51.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/scene-manager/#516-xxxxxxxxxxxxxx","title":"51.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/scene-manager/#517-xxxxxxxxxxxxx","title":"51.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/scene-manager/#518-xxxxxxxxxxxxxx","title":"51.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/scene-manager/#519-xxxxxxxxxxxxx","title":"51.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/scene-manager/#5110-xxxxxxxxxxxxxx","title":"51.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/scene-manager/#5111-xxxxxxxxxxxxxx","title":"51.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/scene-manager/#5112-xxxxxxxxxxxxxx","title":"51.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/scene-manager/#5113-xxxxxxxxxxxxxx","title":"51.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/scene-manager/#5114-xxxxxxxxxxxxxx","title":"51.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/text-file/","title":"43. \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb","text":"<p>\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u8aad\u307f\u8fbc\u3093\u3060\u308a\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u6587\u5b57\u5217\u3092\u66f8\u304d\u8fbc\u3093\u3060\u308a\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u5c02\u7528\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3046</p> <p>JSON, INI, CSV, XML, TOML \u306a\u3069\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3044\u305f\u3044\u5834\u5408\u306f\u3001\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 44 \u7ae0\u3067\u5b66\u3076\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u5c02\u7528\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002</p>"},{"location":"tutorial3/text-file/#431-\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b","title":"43.1 \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b","text":"<p><code>TextReader \u5909\u6570\u540d{ U\"\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\" };</code> \u3067\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u53d6\u308a\u5c02\u7528\u3067\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u306f\u3001\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u30d5\u30a9\u30eb\u30c0\uff08\u958b\u767a\u4e2d\u306f <code>App</code> \u30d5\u30a9\u30eb\u30c0\uff09\u3092\u57fa\u6e96\u3068\u3059\u308b\u76f8\u5bfe\u30d1\u30b9\u304b\u3001\u7d76\u5bfe\u30d1\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p>Siv3D \u3067\u5bfe\u5fdc\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002</p> <ul> <li>UTF-8</li> <li>UTF-8\uff08BOM \u3042\u308a\uff09</li> <li>UTF-16LE</li> <li>UTF-16BE</li> </ul> <p>\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u305f\u304b\u3092\u8abf\u3079\u308b\u306b\u306f\u3001<code>if (reader.isOpen())</code> \u3084 <code>if (reader)</code>, <code>if (not reader)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p>\u30aa\u30fc\u30d7\u30f3\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30af\u30ed\u30fc\u30ba\u3055\u308c\u308b\u305f\u3081\u3001\u660e\u793a\u7684\u306b\u30af\u30ed\u30fc\u30ba\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\nTextReader reader{ U\"example/txt/en.txt\" };\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u306a\u304b\u3063\u305f\u3089\nif (not reader)\n{\n// \u4f8b\u5916\u3092\u6295\u3052\u3066\u7d42\u4e86\u3059\u308b\nthrow Error{ U\"Failed to open `en.txt`\" };\n}\nwhile (System::Update())\n{\n}\n// reader \u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u81ea\u52d5\u7684\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u30af\u30ed\u30fc\u30ba\u3055\u308c\u308b\n}\n</code></pre>"},{"location":"tutorial3/text-file/#432-\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089-1-\u884c\u305a\u3064\u8aad\u307f\u8fbc\u3080","title":"43.2 \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089 1 \u884c\u305a\u3064\u8aad\u307f\u8fbc\u3080","text":"<p>\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30aa\u30fc\u30d7\u30f3\u76f4\u5f8c\u306f\u3001\u8aad\u307f\u8fbc\u307f\u4f4d\u7f6e\u304c\u30d5\u30a1\u30a4\u30eb\u306e\u5148\u982d\u306b\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002<code>.readLine()</code> \u306b <code>String</code> \u578b\u306e\u5909\u6570\u3092\u53c2\u7167\u3067\u6e21\u3059\u3068\u3001\u8aad\u307f\u8fbc\u307f\u4f4d\u7f6e\u304b\u3089\u6b21\u306e\u6539\u884c\u307e\u305f\u306f\u30d5\u30a1\u30a4\u30eb\u7d42\u7aef\u307e\u3067\u3092\u8aad\u307f\u8fbc\u3093\u3060\u5185\u5bb9\u3092\u305d\u306e\u5909\u6570\u306b\u683c\u7d0d\u3057\u3001\u8aad\u307f\u8fbc\u307f\u4f4d\u7f6e\u3092\u305d\u306e\u76f4\u5f8c\u307e\u3067\u9032\u3081\u3066 <code>true</code> \u3092\u8fd4\u3057\u307e\u3059\u3002\u8aad\u307f\u8fbc\u3093\u3060\u6587\u5b57\u5217\u306b\u306f\u6539\u884c\u6587\u5b57\u306f\u542b\u307e\u308c\u307e\u305b\u3093\u3002\u8aad\u307f\u8fbc\u307f\u4f4d\u7f6e\u304c\u3059\u3067\u306b\u30d5\u30a1\u30a4\u30eb\u306e\u7d42\u7aef\u306b\u3042\u3063\u3066\u3001\u3053\u308c\u4ee5\u4e0a\u8aad\u307f\u8fbc\u3081\u306a\u3044\u3068\u304d\u306b\u306f\u3001\u7a7a\u306e\u6587\u5b57\u5217\u3092\u683c\u7d0d\u3057 <code>false</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p>\u4f8b\u3048\u3070\u6b21\u306e\u3088\u3046\u306a\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u5834\u5408\u30011 \u56de\u76ee\u306e <code>.readLine()</code> \u3067\u306f <code>abc</code>, 2 \u56de\u76ee\u306e <code>.readLine()</code> \u3067\u306f <code>defg</code>, 3 \u56de\u76ee\u306e <code>.readLine()</code> \u3067\u306f\u7a7a\u306e\u6587\u5b57\u5217\u30014 \u56de\u76ee\u306e <code>.readLine()</code> \u3067\u306f <code>hijklmn</code> \u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002\u305d\u308c\u4ee5\u964d\u306e <code>.readLine()</code> \u306f\u7a7a\u306e\u6587\u5b57\u5217\u3068\u306a\u308a <code>false</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <pre><code>abc\ndefg\n\nhijklmn\n</code></pre> <code>.readLine()</code> \u306e\u547c\u3073\u51fa\u3057 <code>.readLine()</code> \u306e\u623b\u308a\u5024 <code>String</code> \u578b\u306e\u5909\u6570\u306e\u5185\u5bb9 1 \u56de\u76ee <code>true</code> <code>abc</code> 2 \u56de\u76ee <code>true</code> <code>defg</code> 3 \u56de\u76ee <code>true</code> \u7a7a\u306e\u6587\u5b57\u5217 4 \u56de\u76ee <code>true</code> <code>hijklmn</code> 5 \u56de\u76ee\u4ee5\u964d <code>false</code> \u7a7a\u306e\u6587\u5b57\u5217 <p><code>.readLine()</code> \u306f\u3001\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306b <code>while</code> \u30eb\u30fc\u30d7\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\nTextReader reader{ U\"example/txt/en.txt\" };\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u306a\u304b\u3063\u305f\u3089\nif (not reader)\n{\n// \u4f8b\u5916\u3092\u6295\u3052\u3066\u7d42\u4e86\u3059\u308b\nthrow Error{ U\"Failed to open `en.txt`\" };\n}\n// \u884c\u306e\u5185\u5bb9\u3092\u8aad\u307f\u8fbc\u3080\u5909\u6570\nString line;\n// \u884c\u6570\u306e\u30ab\u30a6\u30f3\u30c8\nsize_t count = 0;\n// \u7d42\u7aef\u306b\u9054\u3059\u308b\u307e\u3067 1 \u884c\u305a\u3064\u8aad\u307f\u8fbc\u3080\nwhile (reader.readLine(line))\n{\nPrint &lt;&lt; ++count;\nPrint &lt;&lt; line;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/text-file/#433-\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u4e00\u5ea6\u306b\u5168\u90e8\u8aad\u307f\u8fbc\u3080","title":"43.3 \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u4e00\u5ea6\u306b\u5168\u90e8\u8aad\u307f\u8fbc\u3080","text":"<p>\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u5168\u90e8\u3092\u3001\u4e00\u5ea6\u306b\u5168\u90e8 <code>String</code> \u3068\u3057\u3066\u53d6\u5f97\u3059\u308b\u306b\u306f <code>.readAll()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u975e\u5e38\u306b\u5927\u304d\u3044\u30b5\u30a4\u30ba\uff08\u6570 MB \u4ee5\u4e0a\uff09\u306e\u30d5\u30a1\u30a4\u30eb\u3092 <code>.readAll()</code> \u3067\u8aad\u307f\u8fbc\u3080\u3068\u3001\u95a2\u6570\u304c\u5236\u5fa1\u3092\u8fd4\u3059\u307e\u3067\u306e\u6642\u9593\u304c\u9577\u304f\u306a\u308b\u3053\u3068\u304c\u3042\u308b\u305f\u3081\u3001\u3042\u3089\u304b\u3058\u3081\u30b5\u30a4\u30ba\u304c\u5c0f\u3055\u3044\u3068\u308f\u304b\u3063\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3057\u3066\u4f7f\u3046\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\nTextReader reader{ U\"example/txt/en.txt\" };\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u306a\u304b\u3063\u305f\u3089\nif (not reader)\n{\n// \u4f8b\u5916\u3092\u6295\u3052\u3066\u7d42\u4e86\u3059\u308b\nthrow Error{ U\"Failed to open `en.txt`\" };\n}\n// \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u3059\u3079\u3066\u8aad\u307f\u8fbc\u3080\nconst String text = reader.readAll();\nPrint &lt;&lt; text;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/text-file/#434-\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u30af\u30ed\u30fc\u30ba\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u5236\u5fa1\u3059\u308b","title":"43.4 \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u30fb\u30af\u30ed\u30fc\u30ba\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u5236\u5fa1\u3059\u308b","text":"<p>\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001<code>.open()</code> \u3067\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u307e\u3059\u3002\u30aa\u30fc\u30d7\u30f3\u306b\u6210\u529f\u3057\u305f\u5834\u5408\u306f <code>true</code>, \u5931\u6557\u3057\u305f\u5834\u5408\u306f <code>false</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nTextReader reader;\n// en.txt \u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\nif (not reader.open(U\"example/txt/en.txt\"))\n{\nthrow Error{ U\"Failed to open `en.txt`\" };\n}\nwhile (System::Update())\n{\n}\n// reader \u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u81ea\u52d5\u7684\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u30af\u30ed\u30fc\u30ba\u3055\u308c\u308b\n}\n</code></pre> <p>\u30d5\u30a1\u30a4\u30eb\u304c\u65e2\u306b\u30aa\u30fc\u30d7\u30f3\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001<code>.open()</code> \u306f\u73fe\u5728\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30af\u30ed\u30fc\u30ba\u3057\u3066\u304b\u3089\u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// en.txt \u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\nTextReader reader{ U\"example/txt/en.txt\" };\n// en.txt \u3092\u30af\u30ed\u30fc\u30ba\u3057\u3066 jp.txt \u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\nif (not reader.open(U\"example/txt/jp.txt\"))\n{\nthrow Error{ U\"Failed to open `jp.txt`\" };\n}\nwhile (System::Update())\n{\n}\n// reader \u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u81ea\u52d5\u7684\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u30af\u30ed\u30fc\u30ba\u3055\u308c\u308b\n}\n</code></pre> <p>\u30d5\u30a1\u30a4\u30eb\u306e\u30af\u30ed\u30fc\u30ba\u306f\u3001\u901a\u5e38 <code>TextReader</code> \u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u884c\u308f\u308c\u307e\u3059\u304c\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u8aad\u307f\u8fbc\u3093\u3060\u3042\u3068\u306b\u305d\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3057\u305f\u308a\u3001\u5225\u306e\u5185\u5bb9\u3092\u6539\u3081\u3066\u66f8\u304d\u8fbc\u3093\u3060\u308a\u3059\u308b\u5834\u5408\u306b\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u304c\u30aa\u30fc\u30d7\u30f3\u3055\u308c\u305f\u307e\u307e\u3067\u306f\u64cd\u4f5c\u304c\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u76f4\u3061\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u30af\u30ed\u30fc\u30ba\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u3001<code>.close()</code> \u3067\u30d5\u30a1\u30a4\u30eb\u3092\u660e\u793a\u7684\u306b\u30af\u30ed\u30fc\u30ba\u3057\u307e\u3059\u3002</p> <p>\u30d5\u30a1\u30a4\u30eb\u304c\u3059\u3067\u306b\u30af\u30ed\u30fc\u30ba\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001<code>.close()</code> \u3084\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u4f55\u3082\u3057\u307e\u305b\u3093\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\nTextReader reader{ U\"example/txt/en.txt\" };\nPrint &lt;&lt; reader.isOpen();\n// \u30d5\u30a1\u30a4\u30eb\u3092\u660e\u793a\u7684\u306b\u30af\u30ed\u30fc\u30ba\u3059\u308b\nreader.close();\nPrint &lt;&lt; reader.isOpen();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/text-file/#435-\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u6570\u5024\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080","title":"43.5 \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u6570\u5024\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080","text":"<p><code>.readLine()</code> \u3068\u3001\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 27 \u7ae0\u3067\u5b66\u3093\u3060\u30d1\u30fc\u30b9\u95a2\u6570\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u6570\u5024\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"tutorial3/text-file/#4351-\u5404\u884c\u306b-1-\u3064\u306e\u6570\u5024\u304c\u3042\u308b\u5834\u5408","title":"43.5.1 \u5404\u884c\u306b 1 \u3064\u306e\u6570\u5024\u304c\u3042\u308b\u5834\u5408","text":"test1.txt<pre><code>123\n456\n789\n</code></pre> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nTextReader reader{ U\"test1.txt\" };\nif (not reader)\n{\nthrow Error{ U\"Failed to open a file\" };\n}\n// \u6570\u5024\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\nArray&lt;int32&gt; values;\nString line;\n// 1 \u884c\u305a\u3064\u8aad\u307f\u8fbc\u3080\nwhile (reader.readLine(line))\n{\n// \u8aad\u307f\u8fbc\u3093\u3060\u6587\u5b57\u5217\u3092\u6570\u5024\u306b\u5909\u63db\u3057\u3066\u914d\u5217\u306b\u8ffd\u52a0\u3059\u308b\nvalues &lt;&lt; Parse&lt;int32&gt;(line);\n}\nPrint &lt;&lt; values;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/text-file/#4352-\u5404\u884c\u306b-1-\u3064\u306e\u6570\u5024\u304c\u3042\u308b\u5834\u5408\u6539\u826f\u7248","title":"43.5.2 \u5404\u884c\u306b 1 \u3064\u306e\u6570\u5024\u304c\u3042\u308b\u5834\u5408\uff08\u6539\u826f\u7248\uff09","text":"<p>43.5.1 \u3067\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u9014\u4e2d\u306b\u7a7a\u767d\u884c\u304c\u542b\u307e\u308c\u3066\u3044\u305f\u308a\u3001\u672b\u5c3e\u304c 2 \u3064\u4ee5\u4e0a\u306e\u6539\u884c\u3067\u7d42\u308f\u308b\u5834\u5408\u306b\u7a7a\u306e\u6587\u5b57\u5217\u3092\u6570\u5024\u306b\u5909\u63db\u3057\u3088\u3046\u3068\u3057\u3066\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\u3053\u308c\u3092\u56de\u907f\u3059\u308b\u306b\u306f\u3001<code>.readLine()</code> \u3067\u8aad\u307f\u8fbc\u3093\u3060\u6587\u5b57\u5217\u304c\u7a7a\u306e\u6587\u5b57\u5217\u306e\u5834\u5408\u306b\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\nTextReader reader{ U\"test1.txt\" };\nif (not reader)\n{\nthrow Error{ U\"Failed to open a file\" };\n}\n// \u6570\u5024\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\nArray&lt;int32&gt; values;\nString line;\n// 1 \u884c\u305a\u3064\u8aad\u307f\u8fbc\u3080\nwhile (reader.readLine(line))\n{\n// \u7a7a\u306e\u6587\u5b57\u5217\u3060\u3063\u305f\u5834\u5408\u306f\u30b9\u30ad\u30c3\u30d7\u3059\u308b\nif (not line)\n{\ncontinue;\n}\n// \u8aad\u307f\u8fbc\u3093\u3060\u6587\u5b57\u5217\u3092\u6570\u5024\u306b\u5909\u63db\u3057\u3066\u914d\u5217\u306b\u8ffd\u52a0\u3059\u308b\nvalues &lt;&lt; Parse&lt;int32&gt;(line);\n}\nPrint &lt;&lt; values;\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/text-file/#4353-\u5404\u884c\u306b\u8907\u6570\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308b\u5834\u5408","title":"43.5.3 \u5404\u884c\u306b\u8907\u6570\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308b\u5834\u5408","text":"<p>1 \u884c\u306b\u8907\u6570\u306e\u60c5\u5831\u3092\u542b\u3080\u5834\u5408\u306f\u3001<code>String</code> \u306e\u30e1\u30f3\u30d0\u95a2\u6570 <code>.split(ch)</code> \u3092\u4f7f\u3063\u3066\u30011 \u884c\u3092\u8907\u6570\u306e\u6587\u5b57\u5217\u306b\u5206\u5272\u3057\u307e\u3059\u3002<code>.split(ch)</code> \u306f\u3001<code>ch</code> \u3092\u533a\u5207\u308a\u6587\u5b57\u3068\u3057\u3066\u5206\u5272\u3057\u305f\u6587\u5b57\u5217\u3092 <code>Array&lt;String&gt;</code> \u3068\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002</p> <p>\u4f8b\u3048\u3070 <code>U\"123,456,789\"</code> \u3092 <code>U','</code> \u3067\u5206\u5272\u3057\u305f\u5834\u5408\u3084\u3001<code>U\"123 456 789\"</code> \u3092 <code>U' '</code> \u3067\u5206\u5272\u3057\u305f\u5834\u5408\u306f\u3001<code>Array&lt;String&gt;{ U\"123\", U\"456\", U\"789\" }</code> \u304c\u5f97\u3089\u308c\u307e\u3059\u3002</p> test2.txt<pre><code>Alice 111 222\nBob 333 444\nCarol 555 666\n</code></pre> <pre><code># include &lt;Siv3D.hpp&gt;\nstruct Player\n{\nString name;\nint32 id;\nint32 score;\n};\nvoid Main()\n{\nTextReader reader{ U\"test2.txt\" };\nif (not reader)\n{\nthrow Error{ U\"Failed to open a file\" };\n}\n// \u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\nArray&lt;Player&gt; players;\nString line;\n// 1 \u884c\u305a\u3064\u8aad\u307f\u8fbc\u3080\nwhile (reader.readLine(line))\n{\n// \u7a7a\u306e\u6587\u5b57\u5217\u3060\u3063\u305f\u5834\u5408\u306f\u30b9\u30ad\u30c3\u30d7\u3059\u308b\nif (not line)\n{\ncontinue;\n}\n// \u7a7a\u767d\u6587\u5b57\u3067\u5206\u5272\u3059\u308b\nconst Array&lt;String&gt; items = line.split(U' ');\n// \u60f3\u5b9a\u3057\u305f\u8981\u7d20\u6570\u3067\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u30a8\u30e9\u30fc\u3092\u6295\u3052\u308b\nif (items.size() != 3)\n{\nthrow Error{ U\"Invalid format\" };\n}\n// \u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3059\u308b\nplayers &lt;&lt; Player{ items[0], Parse&lt;int32&gt;(items[1]), Parse&lt;int32&gt;(items[2]) };\n}\n// \u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\nfor (const auto&amp; player : players)\n{\nPrint &lt;&lt; U\"{} (ID {}): {}\"_fmt(player.name, player.id, player.score);\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/text-file/#4354-\u5404\u884c\u306b\u8907\u6570\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308b\u5834\u5408\u6539\u826f\u7248","title":"43.5.4 \u5404\u884c\u306b\u8907\u6570\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308b\u5834\u5408\uff08\u6539\u826f\u7248\uff09","text":"<p>43.5.3 \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5bfe\u3057\u3066\u3001</p> <ul> <li>\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u304c\u7d42\u308f\u3063\u305f\u3089\u3059\u3050\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u30af\u30ed\u30fc\u30ba\u3059\u308b</li> <li>\u30c7\u30fc\u30bf\u306e\u7570\u5e38\u306b\u5bfe\u5fdc\u3059\u308b</li> </ul> <p>\u3068\u3044\u3063\u305f\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u3066\u95a2\u6570\u5316\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\u3053\u308c\u3092\u5b9f\u88c5\u3057\u305f\u3082\u306e\u304c\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nstruct Player\n{\nString name;\nint32 id;\nint32 score;\n};\nbool LoadPlayers(const FilePath&amp; path, Array&lt;Player&gt;&amp; players)\n{\n// \u4e00\u65e6\u30af\u30ea\u30a2\u3059\u308b\nplayers.clear();\nTextReader reader{ path };\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u5931\u6557\nif (not reader)\n{\nreturn false;\n}\nString line;\nwhile (reader.readLine(line))\n{\n// \u7a7a\u767d\u884c\u306f\u30b9\u30ad\u30c3\u30d7\u3059\u308b\nif (not line)\n{\ncontinue;\n}\n// \u7a7a\u767d\u3067\u5206\u5272\u3059\u308b\nconst Array&lt;String&gt; items = line.split(U' ');\n// \u60f3\u5b9a\u3057\u305f\u8981\u7d20\u6570\u3067\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u5931\u6557\nif (items.size() != 3)\n{\nplayers.clear();\nreturn false;\n}\n// \u30d1\u30fc\u30b9\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306f\u5931\u6557\ntry\n{\nplayers &lt;&lt; Player{ items[0], Parse&lt;int32&gt;(items[1]), Parse&lt;int32&gt;(items[2]) };\n}\ncatch (const ParseError&amp;)\n{\nplayers.clear();\nreturn false;\n}\n}\nreturn true;\n}\nvoid Main()\n{\n// \u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\nArray&lt;Player&gt; players;\n// \u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\nif (not LoadPlayers(U\"test2.txt\", players))\n{\nthrow Error{ U\"Failed to load players\" };\n}\n// \u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\nfor (const auto&amp; player : players)\n{\nPrint &lt;&lt; U\"{} (ID {}): {}\"_fmt(player.name, player.id, player.score);\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/text-file/#436-\u66f8\u304d\u8fbc\u307f\u7528\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b","title":"43.6 \u66f8\u304d\u8fbc\u307f\u7528\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b","text":"<p><code>TextWriter \u5909\u6570\u540d{ U\"\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\" };</code> \u3067\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u8fbc\u307f\u5c02\u7528\u3067\u30aa\u30fc\u30d7\u30f3\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u306f\u3001\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u30d5\u30a9\u30eb\u30c0\uff08\u958b\u767a\u4e2d\u306f <code>App</code> \u30d5\u30a9\u30eb\u30c0\uff09\u3092\u57fa\u6e96\u3068\u3059\u308b\u76f8\u5bfe\u30d1\u30b9\u304b\u3001\u7d76\u5bfe\u30d1\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p>\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u65b0\u3057\u304f\u7a7a\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3082\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002</p> <p>\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u305f\u304b\u3092\u8abf\u3079\u308b\u306b\u306f\u3001<code>if (writer.isOpen())</code> \u3084 <code>if (writer)</code>, <code>if (not writer)</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p>\u30aa\u30fc\u30d7\u30f3\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30af\u30ed\u30fc\u30ba\u3055\u308c\u308b\u305f\u3081\u3001\u660e\u793a\u7684\u306b\u30af\u30ed\u30fc\u30ba\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u30fb\u30af\u30ed\u30fc\u30ba\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u5236\u5fa1\u3057\u305f\u3044\u5834\u5408\u306f\u3001<code>TextReader</code> \u3068\u540c\u3058\u3088\u3046\u306b\u3001<code>.open()</code> \u3092\u4f7f\u3063\u3066\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3, <code>.close()</code> \u3092\u4f7f\u3063\u3066\u30d5\u30a1\u30a4\u30eb\u3092\u30af\u30ed\u30fc\u30ba\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u66f8\u304d\u8fbc\u307f\u7528\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\nTextWriter writer{ U\"test3.txt\" };\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u306a\u304b\u3063\u305f\u3089\nif (not writer)\n{\n// \u4f8b\u5916\u3092\u6295\u3052\u3066\u7d42\u4e86\u3059\u308b\nthrow Error{ U\"Failed to open `test3.txt`\" };\n}\nwhile (System::Update())\n{\n}\n// writer \u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u81ea\u52d5\u7684\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u30af\u30ed\u30fc\u30ba\u3055\u308c\u308b\n}\n</code></pre>"},{"location":"tutorial3/text-file/#437-\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3080","title":"43.7 \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3080","text":"<p><code>TextWriter</code> \u3092\u4f7f\u3063\u3066\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u6587\u5b57\u5217\u3092\u66f8\u304d\u8fbc\u3080\u306b\u306f\u3001\u6b21\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li><code>Print</code> \u306e\u3088\u3046\u306b <code>&lt;&lt;</code> \u3092\u4f7f\u3063\u3066\u66f8\u304d\u8fbc\u3080</li> <li><code>.write(s)</code> \u3092\u4f7f\u3063\u3066\u66f8\u304d\u8fbc\u3080</li> <li><code>.writeln(s)</code> \u3092\u4f7f\u3063\u3066\u66f8\u304d\u8fbc\u3080</li> </ul> <p>\u66f8\u304d\u8fbc\u3080\u5024\u306f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u53ef\u80fd\u3067\u3042\u308c\u3070\u81ea\u52d5\u7684\u306b\u6587\u5b57\u5217\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002<code>&lt;&lt;</code> \u307e\u305f\u306f <code>.writeln()</code> \u3067\u66f8\u304d\u8fbc\u3093\u3060\u5834\u5408\u3001\u66f8\u304d\u8fbc\u307f\u306e\u6700\u5f8c\u306b\u306f\u6539\u884c\uff08<code>\"\\r\\n\"</code>\uff09\u304c\u81ea\u52d5\u3067\u633f\u5165\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u3092\u907f\u3051\u305f\u3044\u5834\u5408\u306f <code>.write()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002<code>.writeln(U\"Siv3D\")</code> \u306f <code>.write(U\"Siv3D\\r\\n\")</code> \u3068\u540c\u3058\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u66f8\u304d\u8fbc\u307f\u7528\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\nTextWriter writer{ U\"test3.txt\" };\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u306a\u304b\u3063\u305f\u3089\nif (not writer)\n{\n// \u4f8b\u5916\u3092\u6295\u3052\u3066\u7d42\u4e86\u3059\u308b\nthrow Error{ U\"Failed to open `test3.txt`\" };\n}\n// \u6587\u7ae0\u3092 1 \u884c\u66f8\u304d\u8fbc\u3080\nwriter &lt;&lt; U\"Hello, Siv3D!\";\n// \u5024\u3084\u6587\u5b57\u3092\u30001 \u884c\u66f8\u304d\u8fbc\u3080\nwriter &lt;&lt; 123 &lt;&lt; U\", \" &lt;&lt; 456 &lt;&lt; U\", \" &lt;&lt; Point{ 10, 20 };\n// 1 \u6587\u5b57\u66f8\u304d\u8fbc\u3093\u3067\u6539\u884c\u3059\u308b\nwriter.writeln(-3333);\nwriter.writeln(1.234);\nwriter.writeln(U\"C++\");\n// \u5024\u3092\u66f8\u304d\u8fbc\u3080\uff08\u6539\u884c\u7121\u3057\uff09\nwriter.write(777);\nwriter.write(U\", \");\nwriter.write(888);\nwhile (System::Update())\n{\n}\n}\n</code></pre> \u66f8\u304d\u8fbc\u307f\u7d50\u679c<pre><code>Hello, Siv3D!\n123, 456, (10, 20)\n-3333\n1.234\nC++\n777, 888\n</code></pre>"},{"location":"tutorial3/text-file/#438-\u65e2\u5b58\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u8ffd\u52a0\u3067\u66f8\u304d\u8fbc\u3080","title":"43.8 \u65e2\u5b58\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u8ffd\u52a0\u3067\u66f8\u304d\u8fbc\u3080","text":"<p>\u65e2\u5b58\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u672b\u5c3e\u306b\u8ffd\u52a0\u3059\u308b\u5f62\u3067\u66f8\u304d\u8fbc\u307f\u3092\u884c\u3044\u305f\u3044\u5834\u5408\u306f\u3001\u30aa\u30fc\u30d7\u30f3\u6642\u306b\u30d5\u30a1\u30a4\u30eb\u30aa\u30fc\u30d7\u30f3\u30e2\u30fc\u30c9\u3068\u3057\u3066 <code>OpenMode::Append</code> (\u8ffd\u52a0\u30e2\u30fc\u30c9) \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u540c\u540d\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u65b0\u3057\u3044\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002</p> <p>\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u305f\u3073\u3001<code>test4.txt</code> \u306b <code>Hello, Siv3D!</code> \u3068\u73fe\u5728\u6642\u523b\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u66f8\u304d\u8fbc\u307f\u7528\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u300c\u8ffd\u52a0\u30e2\u30fc\u30c9\u300d\u3067\u30aa\u30fc\u30d7\u30f3\u3059\u308b\nTextWriter writer{ U\"test4.txt\", OpenMode::Append };\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u306a\u304b\u3063\u305f\u3089\nif (not writer)\n{\n// \u4f8b\u5916\u3092\u6295\u3052\u3066\u7d42\u4e86\u3059\u308b\nthrow Error{ U\"Failed to open `test4.txt`\" };\n}\n// \u6587\u7ae0\u3092\u3068\u73fe\u5728\u6642\u523b\u3092\u66f8\u304d\u8fbc\u3080\nwriter &lt;&lt; U\"Hello, Siv3D!\";\nwriter &lt;&lt; DateTime::Now();\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/text-file/#439-\u30b9\u30b3\u30fc\u30d7\u306b\u3088\u308b\u5236\u5fa1","title":"43.9 \u30b9\u30b3\u30fc\u30d7\u306b\u3088\u308b\u5236\u5fa1","text":"<p>\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u3001<code>TextWriter</code> \u306b\u3088\u3063\u3066\u30aa\u30fc\u30d7\u30f3\u3057\u305f\u30d5\u30a1\u30a4\u30eb <code>test5.txt</code> \u3092\u30af\u30ed\u30fc\u30ba\u305b\u305a\u306b <code>TextReader</code> \u3067\u30aa\u30fc\u30d7\u30f3\u3057\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u3001\u30aa\u30fc\u30d7\u30f3\u306b\u5931\u6557\u3057\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u66f8\u304d\u8fbc\u307f\u7528\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\nTextWriter writer{ U\"test5.txt\" };\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u306a\u304b\u3063\u305f\u3089\nif (not writer)\n{\nPrint &lt;&lt; U\"Error 1\";\n}\nwriter &lt;&lt; U\"Hello, Siv3D!\";\nwriter &lt;&lt; DateTime::Now();\n// TextWriter \u3067\u30aa\u30fc\u30d7\u30f3\u4e2d\u3067\u3042\u308b\u305f\u3081\u3001\u30aa\u30fc\u30d7\u30f3\u306b\u5931\u6557\u3059\u308b\nTextReader reader{ U\"test5.txt\" };\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u306a\u304b\u3063\u305f\u3089\nif (not reader)\n{\nPrint &lt;&lt; U\"Error 2\";\n}\nconst String text = reader.readAll();\nPrint &lt;&lt; text;\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p>\u6b21\u306e\u3088\u3046\u306b\u30d5\u30a1\u30a4\u30eb\u306e\u30aa\u30fc\u30d7\u30f3\u3068\u30af\u30ed\u30fc\u30ba\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u5236\u5fa1\u3092\u884c\u3046\u4e8b\u3067\u3001\u554f\u984c\u3092\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// \u66f8\u304d\u8fbc\u307f\u7528\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\nTextWriter writer{ U\"test5.txt\" };\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u306a\u304b\u3063\u305f\u3089\nif (not writer)\n{\nPrint &lt;&lt; U\"Error 1\";\n}\nwriter &lt;&lt; U\"Hello, Siv3D!\";\nwriter &lt;&lt; DateTime::Now();\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30af\u30ed\u30fc\u30ba\u3059\u308b\nwriter.close();\n// \u8aad\u307f\u8fbc\u307f\u7528\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\nTextReader reader{ U\"test5.txt\" };\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u306a\u304b\u3063\u305f\u3089\nif (not reader)\n{\nPrint &lt;&lt; U\"Error 2\";\n}\nconst String text = reader.readAll();\nPrint &lt;&lt; text;\nwhile (System::Update())\n{\n}\n}\n</code></pre> <p>\u4e0a\u8a18\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306b\u3001\u540c\u3058\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u3059 <code>TextWriter</code> \u3084 <code>TextReader</code> \u3092\u540c\u4e00\u30b9\u30b3\u30fc\u30d7\u5185\u306b\u6df7\u5728\u3055\u305b\u308b\u3068\u3001\u30b3\u30fc\u30c9\u304c\u8907\u96d1\u306b\u306a\u308a\u3001\u9593\u9055\u3044\u3084\u3059\u3044\u3067\u3059\u3002</p> <p>\u305d\u3053\u3067\u3001<code>{ }</code> \u3067\u30b9\u30b3\u30fc\u30d7\u3092\u4f5c\u308a\u3001\u305d\u306e\u4e2d\u306b\u9650\u5b9a\u3057\u3066 <code>TextWriter</code> \u3084 <code>TextReader</code> \u306e\u5909\u6570\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u306e\u30aa\u30fc\u30d7\u30f3\u3068\u30af\u30ed\u30fc\u30ba\u306e\u671f\u9593\u3092\u30b9\u30b3\u30fc\u30d7\u306e\u7bc4\u56f2\u3068\u4e00\u81f4\u3055\u305b\u308b\u3053\u3068\u3067\u3001\u30b3\u30fc\u30c9\u306e\u53ef\u8aad\u6027\u304c\u5411\u4e0a\u3057\u307e\u3059\u3002\u30b9\u30b3\u30fc\u30d7\u306e\u5916\u3067\u306f\u5909\u6570\u304c\u7834\u68c4\u3055\u308c\u308b\u305f\u3081\u3001\u30af\u30ed\u30fc\u30ba\u3057\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3057\u3066\u64cd\u4f5c\u3092\u884c\u3046\u3053\u3068\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n{\n// \u66f8\u304d\u8fbc\u307f\u7528\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\nTextWriter writer{ U\"test5.txt\" };\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u306a\u304b\u3063\u305f\u3089\nif (not writer)\n{\nPrint &lt;&lt; U\"Error 1\";\n}\nwriter &lt;&lt; U\"Hello, Siv3D!\";\nwriter &lt;&lt; DateTime::Now();\n}\n{\n// \u8aad\u307f\u8fbc\u307f\u7528\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\nTextReader reader{ U\"test5.txt\" };\n// \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u306a\u304b\u3063\u305f\u3089\nif (not reader)\n{\nPrint &lt;&lt; U\"Error 2\";\n}\nconst String text = reader.readAll();\nPrint &lt;&lt; text;\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/text-file/#4310-\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u6307\u5b9a\u3057\u305f\u66f8\u304d\u8fbc\u307f","title":"43.10 \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u6307\u5b9a\u3057\u305f\u66f8\u304d\u8fbc\u307f","text":"<p><code>TextWriter</code> \u3067\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u65b0\u898f\u4f5c\u6210\u3059\u308b\u969b\u306b\u3001\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001BOM \u4ed8\u304d\u306e UTF-8 \u304c\u4f7f\u308f\u308c\u307e\u3059\u3002</p> \u5b9a\u6570 \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0 <code>TextEncoding::UTF8_NO_BOM</code> BOM \u306a\u3057\u306e UTF-8 <code>TextEncoding::UTF8_WITH_BOM</code> BOM \u4ed8\u304d\u306e UTF-8 <code>TextEncoding::UTF16LE</code> BOM \u4ed8\u304d\u306e UTF-16 (LE) <code>TextEncoding::UTF16BE</code> BOM \u4ed8\u304d\u306e UTF-16 (BE) <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// BOM \u4ed8\u304d UTF-8\n{\nTextWriter writer{ U\"test-utf8bom.txt\" };\nwriter.write(U\"Siv3D\");\n}\n// BOM \u306a\u3057 UTF-8\n{\nTextWriter writer{ U\"test-utf8.txt\", TextEncoding::UTF8_NO_BOM };\nwriter.write(U\"Siv3D\");\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/text-file/#4311-\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u51fa\u3057","title":"43.11 \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u51fa\u3057","text":"<p><code>TextWriter</code> \u3092\u4f7f\u3063\u3066\u3001HTML \u3084 XML, JSON, INI, CSV \u306a\u3069\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3088\u3063\u3066\u66f8\u304d\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>Info</p> <p>CSV, INI, JSON, HTML \u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u51fa\u3057\u306b\u95a2\u3057\u3066\u306f\u3001\u5c02\u7528\u306e\u30af\u30e9\u30b9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u8a73\u3057\u304f\u306f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb 44 \u7ae0\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt;\nvoid Main()\n{\n// CSV \u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u51fa\u3059\n{\nTextWriter writer{ U\"test.csv\" };\nwriter.writeln(U\"name,id,score\");\nwriter.writeln(U\"Alice,1,100\");\nwriter.writeln(U\"Bob,2,80\");\nwriter.writeln(U\"Carol,3,60\");\n}\n// HTML \u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u51fa\u3059\n{\nTextWriter writer{ U\"test.html\" };\nwriter.writeln(U\"&lt;html&gt;\");\nwriter.writeln(U\"&lt;head&gt;\");\nwriter.writeln(U\"&lt;title&gt;Test&lt;/title&gt;\");\nwriter.writeln(U\"&lt;/head&gt;\");\nwriter.writeln(U\"&lt;body&gt;\");\nwriter.writeln(U\"&lt;h1&gt;Hello, Siv3D!&lt;/h1&gt;\");\nwriter.writeln(U\"&lt;/body&gt;\");\nwriter.writeln(U\"&lt;/html&gt;\");\n}\nwhile (System::Update())\n{\n}\n}\n</code></pre>"},{"location":"tutorial3/wave/","title":"54. \u97f3\u58f0\u6ce2\u5f62","text":"<p>\u97f3\u58f0\u6ce2\u5f62\u306e\u7de8\u96c6\u3068\u3001\u305d\u306e\u7d50\u679c\u3092\u518d\u751f\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"tutorial3/wave/#541-xxxxxxxxxxxxx","title":"54.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/wave/#542-xxxxxxxxxxxxxx","title":"54.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/wave/#543-xxxxxxxxxxxxx","title":"54.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/wave/#544-xxxxxxxxxxxxxx","title":"54.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/wave/#545-xxxxxxxxxxxxx","title":"54.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/wave/#546-xxxxxxxxxxxxxx","title":"54.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/wave/#547-xxxxxxxxxxxxx","title":"54.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/wave/#548-xxxxxxxxxxxxxx","title":"54.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/wave/#549-xxxxxxxxxxxxx","title":"54.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/wave/#5410-xxxxxxxxxxxxxx","title":"54.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/wave/#5411-xxxxxxxxxxxxxx","title":"54.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/wave/#5412-xxxxxxxxxxxxxx","title":"54.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/wave/#5413-xxxxxxxxxxxxxx","title":"54.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/wave/#5414-xxxxxxxxxxxxxx","title":"54.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/webcam/","title":"56. Web \u30ab\u30e1\u30e9","text":"<p>\u30d1\u30bd\u30b3\u30f3\u306b\u5185\u8535\u30fb\u63a5\u7d9a\u3055\u308c\u305f Web \u30ab\u30e1\u30e9\u304b\u3089\u6620\u50cf\u3092\u53d6\u5f97\u3057\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u6d3b\u7528\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | \u30de\u30a4\u30af\u3084 Web \u30ab\u30e1\u30e9\u3092\u4f7f\u3046 </p>"},{"location":"tutorial3/webcam/#561-xxxxxxxxxxxxx","title":"56.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/webcam/#562-xxxxxxxxxxxxxx","title":"56.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/webcam/#563-xxxxxxxxxxxxx","title":"56.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/webcam/#564-xxxxxxxxxxxxxx","title":"56.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/webcam/#565-xxxxxxxxxxxxx","title":"56.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/webcam/#566-xxxxxxxxxxxxxx","title":"56.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/webcam/#567-xxxxxxxxxxxxx","title":"56.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/webcam/#568-xxxxxxxxxxxxxx","title":"56.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/webcam/#569-xxxxxxxxxxxxx","title":"56.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial3/webcam/#5610-xxxxxxxxxxxxxx","title":"56.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/webcam/#5611-xxxxxxxxxxxxxx","title":"56.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/webcam/#5612-xxxxxxxxxxxxxx","title":"56.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/webcam/#5613-xxxxxxxxxxxxxx","title":"56.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial3/webcam/#5614-xxxxxxxxxxxxxx","title":"56.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial4/2d-shader/","title":"61. 2D \u30ab\u30b9\u30bf\u30e0\u30b7\u30a7\u30fc\u30c0","text":"<p>2D \u63cf\u753b\u306b\u304a\u3044\u3066\u3001\u30ab\u30b9\u30bf\u30e0\u30b7\u30a7\u30fc\u30c0\u3092\u4f7f\u3063\u3066\u9ad8\u5ea6\u306a\u63cf\u753b\u3092\u884c\u3046\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p> <p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 |  </p>"},{"location":"tutorial4/2d-shader/#611-xxxxxxxxxxxxx","title":"61.1 xxxxxxxxxxxxx","text":""},{"location":"tutorial4/2d-shader/#612-xxxxxxxxxxxxxx","title":"61.2 xxxxxxxxxxxxxx","text":""},{"location":"tutorial4/2d-shader/#613-xxxxxxxxxxxxx","title":"61.3 xxxxxxxxxxxxx","text":""},{"location":"tutorial4/2d-shader/#614-xxxxxxxxxxxxxx","title":"61.4 xxxxxxxxxxxxxx","text":""},{"location":"tutorial4/2d-shader/#615-xxxxxxxxxxxxx","title":"61.5 xxxxxxxxxxxxx","text":""},{"location":"tutorial4/2d-shader/#616-xxxxxxxxxxxxxx","title":"61.6 xxxxxxxxxxxxxx","text":""},{"location":"tutorial4/2d-shader/#617-xxxxxxxxxxxxx","title":"61.7 xxxxxxxxxxxxx","text":""},{"location":"tutorial4/2d-shader/#618-xxxxxxxxxxxxxx","title":"61.8 xxxxxxxxxxxxxx","text":""},{"location":"tutorial4/2d-shader/#619-xxxxxxxxxxxxx","title":"61.9 xxxxxxxxxxxxx","text":""},{"location":"tutorial4/2d-shader/#6110-xxxxxxxxxxxxxx","title":"61.10 xxxxxxxxxxxxxx","text":""},{"location":"tutorial4/2d-shader/#6111-xxxxxxxxxxxxxx","title":"61.11 xxxxxxxxxxxxxx","text":""},{"location":"tutorial4/2d-shader/#6112-xxxxxxxxxxxxxx","title":"61.12 xxxxxxxxxxxxxx","text":""},{"location":"tutorial4/2d-shader/#6113-xxxxxxxxxxxxxx","title":"61.13 xxxxxxxxxxxxxx","text":""},{"location":"tutorial4/2d-shader/#6114-xxxxxxxxxxxxxx","title":"61.14 xxxxxxxxxxxxxx","text":""},{"location":"tutorial4/3d-intersection/","title":"64. 3D Intersection Detection","text":"<p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | 3D \u306e\u4ea4\u5dee\u5224\u5b9a </p>"},{"location":"tutorial4/3d-shape-advanced/","title":"63. Drawing Advanced 3D Shapes","text":"<p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | 3D \u5f62\u72b6\u3092\u63cf\u304f\uff08\u767a\u5c55\uff09 </p>"},{"location":"tutorial4/3d-shape/","title":"62. Drawing 3D Shapes","text":"<p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | 3D \u5f62\u72b6\u3092\u63cf\u304f </p>"},{"location":"tutorial4/multiplayer/","title":"66. Multiplayer","text":"<p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u52c9\u5f37\u4f1a \u7279\u8a2d\u30da\u30fc\u30b8 | 5. \u30c1\u30e3\u30c3\u30c8 </p>"},{"location":"tutorial4/tcp/","title":"65. TCP Communication","text":"<p>Info</p> <p>\u6e96\u5099\u4e2d\u3067\u3059\u3002\u4ee5\u524d\u306e\u8a18\u4e8b\u3092\u4e0b\u8a18\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Siv3D \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 | TCP \u901a\u4fe1 </p>"}]}